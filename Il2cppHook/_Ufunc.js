(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./list"), require("./text");

},{"./list":2,"./text":3}],2:[function(require,module,exports){
"use strict";

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../utils/common");

var t = t => ((t = (0, e.PTR2NativePtr)(t)).isNull(), "");

},{"../utils/common":502}],4:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, s, l) {
  var a, n = arguments.length, r = n < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, s) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, s, l); else for (var i = e.length - 1; i >= 0; i--) (a = e[i]) && (r = (n < 3 ? a(r) : n > 3 ? a(t, s, r) : a(t, s)) || r);
  return n > 3 && r && Object.defineProperty(t, s, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.find_method = exports.show_gc_instance = exports.get_gc_instance = exports.HookerBase = void 0;

const t = require("../bridge/fix/il2cppM"), s = require("../utils/formart"), l = require("./enum"), a = require("decorator-cache-getter"), n = require("../utils/alloc"), r = require("./valueResolve");

class i {
  constructor() {}
  static get _list_assemblies() {
    return Il2Cpp.Domain.assemblies;
  }
  static get _list_assemblies_names() {
    return i._list_assemblies.map((e => e.name));
  }
  static get _list_images() {
    return i._list_assemblies.map((e => e.image));
  }
  static get _list_images_pointers() {
    return i._list_images.map((e => e.handle));
  }
  static get _list_images_names() {
    return i._list_assemblies.map((e => e.image.name.split(".dll")[0]));
  }
  static getMapImagesCacheMap=new Map;
  static getMapImages() {
    return 0 != i.getMapImagesCacheMap.size || i._list_images_names.forEach(((e, t) => i.getMapImagesCacheMap.set(e, i._list_images_pointers[t]))), 
    i.getMapImagesCacheMap;
  }
  static get _list_classes() {
    return Il2Cpp.Domain.assemblies.map((e => e.image)).flatMap((e => e.classes));
  }
  static showImages(e = "", t = !0) {
    s.formartClass.printTitile("List Images { assembly -> image -> classCount -> imageName }"), 
    i._list_images.filter((t => "" == e || -1 != t.name.indexOf(e))).sort(((e, s) => t ? e.name.toLowerCase().charAt(0) > s.name.toLowerCase().charAt(0) ? 1 : -1 : 0)).forEach((e => {
      LOGD(`[*] ${e.assembly.handle} -> ${e.handle}\t${e.classCount}\t${e.assembly.name}`);
    })), "" == e && (LOGO(getLine(28)), LOGE(`  List ${i._list_images.length} Images`)), 
    LOGO(getLine(85));
  }
  static showClasses(e, t = "", a = "") {
    let n;
    try {
      if ("string" == typeof e) n = e.startsWith("0x") ? new Il2Cpp.Image(ptr(e.trim())) : Il2Cpp.Domain.assembly(e).image; else {
        if ("number" != typeof e) throw null == arguments[0] ? new Error("imageOrName can not be null") : new Error("imageOrName must be string or number");
        if ("arm64" == Process.arch && e.toString().length > 15) throw new Error("\nNot support parameter typed number at arm64\n\n\tUse b('0x...') instead\n");
        n = new Il2Cpp.Image(ptr(e));
      }
      if (n.handle.equals(1)) throw new Error("image handle can not be null");
    } catch (e) {
      return void LOGE(e);
    }
    let r = new Map, i = 0, o = 0;
    for (let e = 0; e < n.classes.length; e++) {
      let t = "[*] " + n.classes[e].namespace;
      null == r.get(t) && r.set(t, new Array), r.get(t)?.push(n.classes[e]);
    }
    LOG(`\n Current -> ${n.name} @ ${n.handle}\n`, l.LogColor.C104);
    let c = s.formartClass.printTitileA("List Classes { namespace {classPtr->filedsCount->methodsCount->enumClass->className} }", l.LogColor.C90);
    for (let e of r.keys()) {
      let s = e;
      if (null != s) {
        let e = r.get(s);
        if (-1 == s.toLowerCase().indexOf(t.toLowerCase())) continue;
        ++i, LOGD(`\n${s}`), e?.forEach((e => {
          -1 != e.name.toLowerCase().indexOf(a.toLowerCase()) && (++o, LOGD(`\t[-] ${e.handle} (F:${e.fields.length}/M:${e.methods.length}/E:${Number(e.isEnum)})\t${e.name}`));
        }));
      }
    }
    LOGO("\n" + getLine(28)), "" == t && "" == a ? LOGE(`List ${n.classCount} Classes | Group by ${i} NameSpaces`) : LOGE(`ALl ${n.classCount} Classes | List ${o} Classes | Group by ${i} NameSpaces`), 
    LOGO(getLine(c));
  }
  static checkType(e) {
    let t;
    if (e instanceof NativePointer) t = new Il2Cpp.Class(e); else if ("string" == typeof e) t = e.startsWith("0x") ? new Il2Cpp.Class(ptr(e.trim())) : new Il2Cpp.Class(findClass(e)); else {
      if ("number" != typeof e) throw "mPtr must be string or number or NativePointer";
      t = new Il2Cpp.Class(ptr(e));
    }
    if (t.handle.equals(ptr(0))) throw "klass handle can not be null";
    return t;
  }
  static showMethods(e, l = !1) {
    let a = i.inputCheck(e);
    if (0 != a.methods.length) if (newLine(), s.formartClass.printTitile(`Found ${a.methods.length} Methods ${a.isEnum ? "(enum) " : ""} in class: ${a.name} @ ${a.handle}`), 
    l) {
      let e = 0;
      a.methods.forEach((s => {
        LOGD(`\n[*] ${s.handle} ---\x3e ${s.virtualAddress} ---\x3e ${s.relativeVirtualAddress}`);
        let l = `\t${(0, t.getMethodDesFromMethodInfo)(s)}`;
        LOGD(l), e = Math.max(e, l.length);
        let a = -1;
        s.parameters.map((e => `\t\t---\x3e args[${++a}]\t${e.type.handle}  <-  ${e.type.name}`)).forEach(LOGZ), 
        LOGZ(`\t\t---\x3e retval\t${s.returnType.class.handle}  <-  ${s.returnType.class.name}`);
      })), newLine(), LOGO(getLine(e));
    } else a.methods.filter((e => !e.virtualAddress.isNull())).forEach((e => {
      LOGD(`[*] ${e.handle} ---\x3e ${e.virtualAddress} ---\x3e ${e.relativeVirtualAddress}\t|  ${(0, 
      t.getMethodDesFromMethodInfo)(e)}`);
    })), newLine(), a.methods.filter((e => e.virtualAddress.isNull())).forEach((e => {
      LOGZ(`[*] ${e.handle}\t|  ${(0, t.getMethodDesFromMethodInfo)(e)}`);
    })), newLine();
  }
  static showFields(e) {
    let t = i.inputCheck(e);
    if (0 == t.fields.length) return LOGZ(`\n${t.toString()}`), void LOGE(`\n[!] ${t.assemblyName}.${t.namespace}.${t.name} @ ${t.handle} has no fields\n`);
    s.formartClass.printTitile(`Found ${t.fields.length} Fields ${t.isEnum ? "(enum) " : ""}in class: ${t.name} (${t.handle})`), 
    t.fields.forEach((e => LOGD(`[*] ${e.handle} ${e.type.name} ${e.toString()} [type:${e.type.class.handle}]`))), 
    newLine();
  }
  static inputCheck(e) {
    let t;
    if (e instanceof NativePointer) t = i.checkType(e); else if ("string" == typeof e) t = i.checkType(e.trim()); else {
      if ("number" != typeof e) throw "mPtr must be string('0x...') or NativePointer";
      if ("arm64" == Process.arch && e.toString().length > 15) throw new Error("\nNot support parameter typed number at arm64\n\n\tUse _FunctionName('0x...') instead\n");
      t = i.checkType(ptr(e));
    }
    return t;
  }
  static map_cache_class=new Map;
  static findClass(e, t = [ "Assembly-CSharp", "MaxSdk.Scripts", "mscorlib" ], s = !0) {
    if (null == e) throw "Search name can not be null or undefined";
    if ("string" != typeof e) throw "findClass need a string value";
    if (s) {
      let t = i.map_cache_class.get(e);
      if (null != t) return t.handle;
    }
    let l = Il2Cpp.Domain.assemblies;
    for (let e = 0; e < l.length; e++) if (t.includes(l[e].name)) {
      let t = a(l[e].image.classes);
      if (null != t) return t.handle;
    }
    for (let e = 0; e < l.length; e++) if (!t.includes(l[e].name)) {
      let t = a(l[e].image.classes);
      if (null != t) return t.handle;
    }
    function a(t) {
      for (let s = 0; s < t.length; s++) if (t[s].name == e) return i.map_cache_class.set(e, t[s]), 
      t[s];
    }
    return ptr(0);
  }
  static findMethodNew(e, t, s, l = -1, a = [], n = !0) {
    let r;
    if (null != arguments[3] && "number" == typeof arguments[3]) try {
      r = Il2Cpp.Domain.assembly(e).image.class(t).method(s, l), 0 != a.length && (r = r?.overload(...a));
    } catch {
      throw new Error(`findMethod failed: Not Found ${s}(argCount:${l}) in ${t}`);
    } else if (null != arguments[1]) r = new Il2Cpp.Class(findClass(arguments[1])).method(arguments[0], arguments[2]); else if (null != arguments[0] && null == arguments[1]) for (let e = 0; e < i._list_classes.length; e++) for (let t = 0; t < i._list_classes[e].methods.length; t++) if (i._list_classes[e].methods[t] == arguments[0]) {
      r = i._list_classes[e].methods[t];
      break;
    }
    if (null == r) throw new Error("Method not found");
    if (!n) return r;
    showMethodInfo(r.handle);
  }
  static findMethodsyncCacheMap=new Map;
  static findMethodSync(e, s, a, r = -1, o = !0, c = !0) {
    if (null == e || null == s || null == a) return ptr(0);
    const p = Il2Cpp.module.base;
    let d = e + "." + s + "." + a + "." + r;
    if (o) {
      let e = i.findMethodsyncCacheMap.get(d);
      if (null != e) return e;
    }
    let h = Il2Cpp.Domain.assembly(e).image.handle, m = Il2Cpp.Api._classFromName(h, (0, 
    n.allocCStr)(e), (0, n.allocCStr)(s));
    if (m.isNull()) for (let e = 0; e < Il2Cpp.Api._imageGetClassCount(h); e++) {
      let t = new Il2Cpp.Class(Il2Cpp.Api._imageGetClass(h, e));
      if (t.name == s) {
        m = t.handle;
        break;
      }
    }
    if (m.isNull()) return ptr(0);
    let u = Il2Cpp.Api._classGetMethodFromName(m, (0, n.allocCStr)(a), r);
    if (u.isNull()) return ptr(0);
    if (null != arguments[5] && 2 != arguments[5]) return u;
    if (null != arguments[5] && 2 == arguments[5]) return u.readPointer().sub(p);
    if (i.findMethodsyncCacheMap.set(d, u.readPointer()), o) return o ? u.readPointer() : u.readPointer().sub(p);
    let f = new Il2Cpp.Method(u), g = f.parameterCount, C = new Array, _ = new Array;
    for (let e = 0; e < g; e++) {
      let t = f.parameters[e], s = t.type.class.handle, l = t.type.class.name;
      C.push(l + " " + t.name), _.push(l + " " + s);
    }
    let L = (0, t.getMethodModifier)(u) + f.returnType.name + " " + f.name + " (" + C + ")\t";
    LOGO(getLine(85)), LOG(e + "." + s + "\t" + L, l.LogColor.RED), LOGO(getLine(30));
    LOG("Il2CppImage\t----\x3e\t" + h), LOG("Il2CppClass\t----\x3e\t" + m), LOG("MethodInfo\t----\x3e\t" + u), 
    LOGD("MethodPointer\t----\x3e\t" + u.readPointer() + "\t===>\t" + u.readPointer().sub(p)), 
    LOGO(getLine(85));
  }
  static MethodToShow(e) {
    "string" == typeof e && (String(e).startsWith("0x") || String(e).startsWith("0X")) && (e = new Il2Cpp.Method(ptr(e))), 
    "number" == typeof e && (e = new Il2Cpp.Method(ptr(e)));
    let s = (0, t.getMethodDesFromMethodInfo)(e), l = e.class.namespace, a = `${`${0 == l.length ? "" : l + "."}${e.class.name}`}\t${s}`, n = a.length + 16;
    LOGW(getLine(n, "-")), LOGE(a), LOGW(getLine(n / 2, "-")), LOGZ("Il2CppImage\t----\x3e\t" + e.class.image.handle), 
    LOGZ("Il2CppClass\t----\x3e\t" + e.class.handle), LOGZ("MethodInfo\t----\x3e\t" + e.handle), 
    LOGD("MethodPointer\t----\x3e\t" + e.virtualAddress + "\t===>\t" + (e.virtualAddress.isNull() ? ptr(0) : e.relativeVirtualAddress)), 
    LOGW(getLine(n, "-"));
  }
  static listFieldsFromCls(e, t) {
    if (null == e || null == e) return;
    "number" == typeof e && (e = ptr(e)), "number" == typeof t && (t = ptr(t));
    let s = new Il2Cpp.Class(e), a = s.fields.length;
    if (a <= 0) return;
    let r = s.isEnum;
    null == arguments[2] && LOGH("\nFound " + a + " Fields" + (r ? "(enum)" : "") + " in class: " + s.name + " (" + e + ")");
    let i = alloc(), o = null, c = 0, p = new Array, d = 0;
    for (;(o = Il2Cpp.Api._classGetFields(e, i)) && !o.isNull(); ) {
      let s = o.readPointer().readCString(), l = o.add(p_size).readPointer(), a = "0x" + o.add(3 * p_size).readInt().toString(16), n = Il2Cpp.Api._classFromType(l), i = new Il2Cpp.Class(n).name, m = h(l);
      m = m.substring(0, m.length - 1);
      let u = a + "\t" + m + "\t" + i + "\t" + n + "\t" + s + "\t" + (r && String(n) == String(e) ? d++ + "\t" : " ");
      if ("1" == arguments[2] && s == arguments[3]) return ptr(a);
      if ("2" == arguments[2] && s == arguments[3]) {
        return [ s, a, n, i, t.isNull() ? ptr(0) : t.add(ptr(a)), t.isNull() ? ptr(0) : t.add(ptr(a)).readPointer() ];
      }
      p.push(u), c = u.length < c ? c : u.length;
    }
    if (null != arguments[2]) return ptr(0);
    function h(e) {
      let t = e.add(p_size).readPointer(), s = "";
      switch (Number(t) & l.FieldAccess.FIELD_ATTRIBUTE_FIELD_ACCESS_MASK) {
       case l.FieldAccess.FIELD_ATTRIBUTE_PRIVATE:
        s += "private ";
        break;

       case l.FieldAccess.FIELD_ATTRIBUTE_PUBLIC:
        s += "public ";
        break;

       case l.FieldAccess.FIELD_ATTRIBUTE_FAMILY:
        s += "protected ";
        break;

       case l.FieldAccess.FIELD_ATTRIBUTE_ASSEMBLY:
       case l.FieldAccess.FIELD_ATTRIBUTE_FAM_AND_ASSEM:
        s += "internal ";
        break;

       case l.FieldAccess.FIELD_ATTRIBUTE_FAM_OR_ASSEM:
        s += "protected internal ";
      }
      return Number(t) & l.FieldAccess.FIELD_ATTRIBUTE_LITERAL ? s += "const " : (Number(t) & l.FieldAccess.FIELD_ATTRIBUTE_STATIC && (s += "static "), 
      Number(t) & l.FieldAccess.FIELD_ATTRIBUTE_INIT_ONLY && (s += "readonly ")), s;
    }
    LOGO("\n" + getLine(c + 5)), p.sort(((e, t) => parseInt(e.split("\t")[0]) - parseInt(t.split("\t")[0]))).forEach(((e, s) => {
      let a = e.split("\t"), r = a[2], i = String("[" + s + "]"), o = 3 == i.length ? " " : "", c = 1 == String(a[5]).length ? String(a[5] + " ") : String(a[5]);
      if (LOG(i + o + " " + a[0] + " " + a[1] + " " + a[2] + "(" + a[3] + ") " + c + " " + a[4], l.LogColor.C36), 
      "number" == typeof t && (t = ptr(t)), null != t && -1 == e.indexOf("static")) {
        let e = t.add(a[0]).readPointer(), s = void a[3];
        if ("Boolean" == r) {
          String(e).substr(0, 2), String(e).substr(String(e).length - 2, String(e).length).replace("x", "0"), 
          getLine(("arm" == Process.arch ? 10 : 14) - 2 - 2, ".");
        }
        LOG("\t" + s + "\n", l.LogColor.C90);
      } else if (-1 != e.indexOf("static")) {
        let e = Il2Cpp.Api._classGetFieldFromName(ptr(a[3]), (0, n.allocCStr)(a[4]));
        if (!e.isNull()) {
          let t = alloc();
          Il2Cpp.Api._fieldGetStaticValue(e, t);
          let s = t.readPointer();
          LOG("\t" + t + " ---\x3e " + s + " ---\x3e " + void a[3], l.LogColor.C90);
        }
        LOG("\n");
      }
    })), LOGO(getLine(c + 5));
  }
}

e([ a.cache ], i, "_list_assemblies", null), e([ a.cache ], i, "_list_assemblies_names", null), 
e([ a.cache ], i, "_list_images", null), e([ a.cache ], i, "_list_images_pointers", null), 
e([ a.cache ], i, "_list_images_names", null), e([ a.cache ], i, "_list_classes", null), 
exports.HookerBase = i;

const o = (e = "GameObject") => {
  let t;
  if (e instanceof NativePointer) {
    if (e.isNull()) throw new Error("inputClass can not be null");
    t = new Il2Cpp.Class(e);
  } else if (e instanceof Il2Cpp.Class) {
    if (e.isNull()) throw new Error("inputClass can not be null");
    t = e;
  } else {
    if ("string" != typeof e) throw new Error("inputClass type error");
    {
      let s = findClass(e);
      if (s.isNull()) throw new Error("If the class is not found, please pay attention to capitalization");
      t = new Il2Cpp.Class(s);
    }
  }
  return Il2Cpp.GC.choose(t);
};

exports.get_gc_instance = o;

const c = (e = "GameObject") => (0, exports.get_gc_instance)(e).forEach((e => {
  let t = (0, r.FakeCommonType)(e.class.type, e.handle);
  LOGD(`[*] ${e.handle}\t${t}`);
}));

exports.show_gc_instance = c, exports.find_method = i.findMethodSync, Reflect.set(globalThis, "Hooker", i), 
globalThis.i = i.showImages, globalThis.c = i.showClasses, globalThis.m = i.showMethods, 
globalThis.f = i.showFields, globalThis.F = i.listFieldsFromCls, globalThis.fc = i.findClass, 
globalThis.findClass = i.findClass, globalThis.findMethod = i.findMethodNew, globalThis.find_method = i.findMethodSync, 
globalThis.MethodToShow = i.MethodToShow, globalThis.af = e => B(findClass(e)), 
globalThis.aui = () => B("AUI"), globalThis.getGCInstance = exports.get_gc_instance, 
globalThis.showGCInstance = exports.show_gc_instance, Il2Cpp.perform((() => globalThis.soAddr = Il2Cpp.module.base));

},{"../bridge/fix/il2cppM":21,"../utils/alloc":498,"../utils/formart":505,"./enum":7,"./valueResolve":12,"decorator-cache-getter":513}],5:[function(require,module,exports){
"use strict";

var e = this && this.__importDefault || function(e) {
  return e && e.__esModule ? e : {
    default: e
  };
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Breaker = void 0;

const t = require("../bridge/fix/il2cppM"), a = require("../utils/common"), r = require("../utils/formart"), s = require("fastest-levenshtein"), n = e(require("./valueResolve")), l = require("./base"), i = [ "Assembly-CSharp", "MaxSdk.Scripts", "Game", "Zenject", "UniRx", "Purchasing.Common", "UnityEngine.Purchasing" ];

class o {
  static maxCallTimes=10;
  static detachTimes=500;
  static callTimesInline=0;
  static map_attachedMethodInfos=new Map;
  static map_methodInfo_callTimes=new Map;
  static array_methodInfo_detached=new Array;
  static array_methodValue_cache=new Array;
  static array_attach_failed=new Array;
  static addBreakPoint(e = "CommonClass", t = "") {
    if (e instanceof NativePointer) a(e); else if (e instanceof Il2Cpp.Class) a(e.handle); else if ("number" == typeof e) {
      if ("arm64" == Process.arch) throw new Error("Use '0x..' instead of number");
      a(ptr(e));
    } else if ("string" == typeof e) {
      if ("arm64" == Process.arch && e.trim().startsWith("0x")) return a(ptr(e));
      if ("CommonClass" == e || "JNI" == e || "Soon" == e) return function(e) {
        if ("CommonClass" == e) l.HookerBase._list_images.forEach((e => {
          i.includes(e.assembly.name) && (r.formartClass.printTitile("Found : ImageName: " + e.name + " at " + e.handle), 
          a(e.handle));
        })); else if ("JNI" == e) {
          let e = Il2Cpp.Domain.assembly("UnityEngine.AndroidJNIModule").image.class("UnityEngine.AndroidJNI");
          if (e.isNull()) throw new Error("can't find class UnityEngine.AndroidJNI");
          r.formartClass.printTitile("Found : ClassName: " + e.name + " at " + e.handle), 
          a(e.handle);
        } else a(Il2Cpp.Domain.assembly("Assembly-CSharp").image.handle), setTimeout((() => h("Update")), 3e3);
      }(e);
      if ("AUI" == e) return BF("Update");
      if (l.HookerBase._list_images_names.toString().includes(e)) l.HookerBase._list_images.forEach((t => {
        t.name.includes(e) && (r.formartClass.printTitile("Found : ImageName: " + e + " at " + t.handle), 
        a(t.handle));
      })); else {
        let t = findClass(e);
        if (t.isNull()) {
          let t = (0, s.closest)(e, l.HookerBase._list_images_names);
          LOGE(`You mean this ? ${t} @ ${Il2Cpp.Domain.assemblies.filter((e => e.name.includes))[0].handle}`);
        } else r.formartClass.printTitile("Found : ClassName: " + e + " at " + t), a(t);
      }
    }
    function a(e) {
      let a = o.map_attachedMethodInfos.size;
      if (e.isNull()) throw new Error("can't attach nullptr");
      if (l.HookerBase._list_images_pointers.map((e => Number(e))).includes(Number(e))) {
        let a = e;
        new Il2Cpp.Image(a).classes.filter((e => e.namespace.includes(t))).flatMap((e => e.methods)).forEach(o.attachMethod);
      } else {
        let t = e;
        new Il2Cpp.Class(t).methods.forEach(o.attachMethod);
      }
      LOGO(`${getLine(40, "-")}\n Attached ${o.map_attachedMethodInfos.size - a} methods / All ${o.map_attachedMethodInfos.size} methods\n${getLine(85, "-")}`);
    }
  }
  static attachMethod(e) {
    !function(e, a = "all") {
      if ("all" == a) (0, t.getMethodModifier)(e).includes("abstract") || e.virtualAddress.isNull() || o.attachMethodInfo(e); else {
        if (!(0, t.getMethodModifier)(e).includes(a)) return;
        e.virtualAddress.isNull() || o.attachMethodInfo(e);
      }
    }(e);
  }
  static attachMethodInfo(e, s = !1) {
    if (e.virtualAddress.isNull()) LOGE((0, t.methodToString)(e, !1, "[-]")); else if (!o.map_attachedMethodInfos.has(e)) try {
      let l = Interceptor.attach(e.virtualAddress, {
        onEnter: function(l) {
          if (o.needShowLOG(e, "onEnter")) {
            if (!s) {
              let t = `[${++o.callTimesInline}|${(0, a.TIME_SIMPLE)()}]`;
              return this.passValue = new n.default(t, e).setArgs(l), LOGD(this.passValue.toString());
            }
            {
              let s = new Array, i = (0, t.getMethodMaxArgNameLength)(e) + 1;
              if (this.passParameterNameMaxStr = getLine(i, " "), e.isStatic) for (let t = 0; t < e.parameterCount; ++t) {
                let a, o = `  arg${t}  | `;
                try {
                  a = r.formartClass.alignStr(`${e.parameters[t].name}`, i);
                } catch {
                  a = r.formartClass.alignStr(" ", i);
                }
                let c = `${a}\t---\x3e\t\t${r.formartClass.getPtrFormart(l[t])}\t\t`, h = `${e.parameters[t].type.name} (${e.parameters[t].type.class.handle})\t `, d = `${n.default.fakeValue(l[t], e.parameters[t].type, e)}`;
                s[s.length] = `${o}${c}${h}${d}`;
              } else {
                s[0] = `  inst\t|${this.passParameterNameMaxStr}\t\t\t${l[0]}\t\t[ ${n.default.fakeValue(l[0], new Il2Cpp.Type(ptr(1)), e)} ] ( ${e.class.handle} )`;
                for (let t = 1; t < e.parameterCount + 1; ++t) {
                  let a, o = `  arg${t}  | `;
                  try {
                    a = r.formartClass.alignStr(`${e.parameters[t - 1].name}`, i);
                  } catch {
                    a = r.formartClass.alignStr(" ", i);
                  }
                  let c = `${a}\t---\x3e\t\t${r.formartClass.getPtrFormart(l[t])}\t\t`, h = `${e.parameters[t - 1].type.name} (${e.parameters[t - 1].type.class.handle})`, d = `\t ${n.default.fakeValue(l[t], e.parameters[t - 1].type, e)}`;
                  s[s.length] = `${o}${c}${h}${d}`;
                }
              }
              this.content = s;
              let o = `${e.class.namespace}`, c = `${`${0 == o.length ? "" : o + "."}${e.class.name}`} | ${(0, 
              t.methodToString)(e, !0)}\t [${e.handle} -> ${e.virtualAddress} -> ${e.relativeVirtualAddress}] | ${(0, 
              a.TIME_SIMPLE)()}`;
              this.disp_title = c;
            }
          }
        },
        onLeave: function(t) {
          if (!o.needShowLOG(e, "onLeave")) return;
          if (s || null == this.passValue || o.array_methodValue_cache.push(this.passValue.setRetval(t)), 
          null == this.content || null == this.disp_title) return;
          let a = `${this.passParameterNameMaxStr}\t\t\t${r.formartClass.getPtrFormart(t)}\t\t`, l = `${e.returnType.name} (${e.returnType.class.handle})\t `, i = `${new n.default("", e).setRetval(t).resolve(-1)}`;
          this.content[this.content.length] = `  ret\t| ${a}${l}${i}`;
          let c = Math.max(...this.content.map((e => e.length)), this.disp_title.length) + 6;
          LOGO(`\n${getLine(c)}`), LOGD(this.disp_title), LOGO(getLine(this.disp_title.length / 3)), 
          this.content.forEach(LOGD), LOGO(getLine(c));
        }
      });
      LOGD((0, t.methodToString)(e, !1, "[+]")), o.map_attachedMethodInfos.set(e, l);
    } catch {
      !function(e) {
        if (LOGE((0, t.methodToString)(e, !1, "[-]")), "arm" == Process.arch) {
          let t = e.virtualAddress.readPointer();
          null != t && t.equals(3778019102) && a(t);
        } else if ("arm64" == Process.arch) {
          let t = e.virtualAddress.readPointer();
          null != t && t.equals(3221446614) && a(t);
        } else o.array_attach_failed.push(e), printCtx(e.relativeVirtualAddress, 1, 1, LogColor.WHITE, 1);
        function a(t, a = "\tMethod null implementation or attach by other intercepter") {
          LOGE(`\t${e.virtualAddress} -> ${t} -> ${t.toMatchPattern()} `), LOGE(a);
        }
      }(e);
    }
  }
  static needShowLOG=(e, t = "onEnter") => {
    if (e instanceof Il2Cpp.Method) {
      o.map_methodInfo_callTimes.has(e) || o.map_methodInfo_callTimes.set(e, 0);
      let a = o.map_methodInfo_callTimes.get(e);
      return null == a && (a = 0), a >= o.detachTimes && (o.map_attachedMethodInfos.get(e).detach(), 
      o.array_methodInfo_detached.push(e)), "onEnter" === t && o.map_methodInfo_callTimes.set(e, a + 1), 
      a < o.maxCallTimes;
    }
    throw new Error("method must be Il2Cpp.Method");
  };
  static breakWithArgs=(e, t = 4) => {
    e = checkPointer(e), A(e, ((a, r, s) => {
      LOGO(`\n${getLine(85)}`), LOGH(`Called from ${e} ---\x3e ${e.sub(soAddr)}\t|  LR : ${checkCtx(getPlatformCtx(r))}`);
      let n = String(a[0]);
      for (let e = 1; e < t; ++e) n += "\t" + a[e];
      LOGD(`Args\t---\x3e ${n}`);
    }), (e => LOGD(`Retval\t---\x3e ${e}`)));
  };
  static breakWithStack=e => {
    e = checkPointer(e), A(e, ((t, a, r) => {
      LOGO(`\n${getLine(65)}`), LOGH(`Called from ${e} ---\x3e ${e.sub(soAddr)}\t|  LR : ${checkCtx(getPlatformCtx(a))}\n`), 
      PrintStackTraceN(a), LOGO(`\n${getLine(65)}`);
    }));
  };
  static breakInline=(e, t) => {
    e = checkPointer(e), A(e, ((a, r, s) => {
      LOGO(`\n${getLine(65)}`), LOGH(`Called from ${e} ---\x3e ${e.sub(soAddr)}\t|  LR : ${checkCtx(getPlatformCtx(r))}\n`), 
      null == t ? LOGD(JSON.stringify(r)) : t(r);
    }));
  };
  static clearBreak=() => {
    d(), o.map_attachedMethodInfos.clear(), o.map_methodInfo_callTimes.clear(), o.array_methodInfo_detached = [];
  };
  static clearBreakAll=() => {
    o.clearBreak(), o.array_methodValue_cache = [], o.array_attach_failed = [];
  };
  static printDesertedMethods=(e = "") => {
    if (0 == o.map_methodInfo_callTimes.size) return;
    let t = `\n${getLine(20)} detached methods ${getLine(20)}`, a = 0;
    LOGM(`${t}`), o.map_methodInfo_callTimes.forEach(((t, s) => {
      if (t >= o.maxCallTimes && ("" == e || -1 != s.name.indexOf(e))) {
        let e = methodToArray(s), t = this.map_methodInfo_callTimes.get(s);
        ++a, LOGD(`[*] ${e[0]}  ---\x3e  ${e[1]}\t${r.formartClass.alignStr(e[2], 2 * p_size + 2)}\t${r.formartClass.alignStr(t, 4)}   | ${r.formartClass.alignStr(s.class.name, 16)} |  \t${e[3]}`);
      }
    })), LOGM(`${getLine(40)}`), LOGD(` ${o.map_attachedMethodInfos.size} attached / ${o.array_methodInfo_detached.length} detached / ${a} hidden`), 
    LOGM(getLine(t.length) + "\n");
  };
  static printHistoryLog=(e = "", t = 50, a = !1, r = !0) => {
    r && D(), "number" == typeof e && (t = e, e = "");
    let s = o.array_methodValue_cache.map((e => e.toString())).filter((t => t.includes(e))).slice(0, t);
    a && s.reverse(), s.forEach(LOGD);
  };
  static printHistoryNum=(e = 0, t = 100, a = !1) => {
    a && D(), o.array_methodValue_cache.slice(e, t).forEach(LOGD);
  };
}

exports.Breaker = o, globalThis.maxCallTimes = o.maxCallTimes, globalThis.D = o.clearBreak, 
globalThis.DD = o.clearBreakAll, globalThis.B = o.addBreakPoint, globalThis.h = o.printHistoryLog, 
globalThis.hn = o.printHistoryNum, globalThis.breakWithArgs = o.breakWithArgs, globalThis.breakWithStack = o.breakWithStack, 
globalThis.breakInline = o.breakInline, globalThis.printDesertedMethods = o.printDesertedMethods, 
globalThis.bt = e => b(AddressToMethod(e)), globalThis.BN = e => o.addBreakPoint("", e), 
globalThis.getPlatform = () => "linux" == Process.platform && 4 == Process.pageSize ? "arm" : "arm64", 
globalThis.getPlatformCtx = e => (getPlatform(), e), globalThis.b = e => {
  if ("number" == typeof e) if ("arm" == Process.arch) e = ptr(e); else {
    if ("arm64" == Process.arch && e.toString().length > 15) throw new Error("\nNot support parameter typed number at arm64\n\n\tUse b('0x...') instead\n");
    e = ptr(e);
  } else if ("string" == typeof e) {
    if (!(e = e.trim()).startsWith("0x")) throw new Error("Only support String format (like '0x...')");
    e = ptr(e);
  }
  try {
    if (e instanceof Il2Cpp.Method) return o.attachMethodInfo(e, !0);
    new Il2Cpp.Method(e).name, o.attachMethodInfo(new Il2Cpp.Method(e), !0);
  } catch (t) {
    o.breakWithArgs(e);
  }
}, globalThis.printCurrentMethods = (e = "", a = !1) => {
  let r = Date.now();
  new Promise((t => {
    let a = new Array;
    o.map_attachedMethodInfos.forEach(((e, t) => {
      a.push(t);
    })), "" != e && (a = a.filter((t => t.name.includes(e)))), t(a);
  })).then((e => {
    let a = e;
    return [ a.flatMap((e => e.relativeVirtualAddress)), a.flatMap((e => `${e.class.name}::${(0, 
    t.getMethodDesFromMethodInfo)(e)}`)) ];
  })).then((e => {
    let t = e;
    a ? LOGD(`\nvar arrayAddr : string[] = \n${JSON.stringify(t[0])}\n\nvar arrayName : string[] = \n${JSON.stringify(t[1])}\n`) : LOGD(`\nvar arrayAddr = \n${JSON.stringify(t[0])}\n\nvar arrayName = \n${JSON.stringify(t[1])}\n`);
  })).catch((e => {
    LOGE(e);
  })).finally((() => {
    LOGZ(`list ${o.map_attachedMethodInfos.size} methods in ${Date.now() - r} ms \n`);
  }));
}, globalThis.BM = e => {
  if ("string" != typeof e) throw new Error("\n\tclassName must be a string\n");
  let t = findClass(e);
  if (t.isNull()) throw new Error(`\n\tCan't find class ${e}\n`);
  new Il2Cpp.Class(t).methods.forEach((e => o.attachMethodInfo(e, !0)));
}, globalThis.BF = (e, t = !0) => {
  if ("string" != typeof e) throw new Error("\n\tfilterStr must be a string\n");
  DD(), l.HookerBase._list_images.forEach((a => {
    (t || i.includes(a.assembly.name)) && a.classes.flatMap((e => e.methods)).forEach((t => {
      -1 != t.name.indexOf(e) && o.attachMethodInfo(t, !1);
    }));
  }));
}, globalThis.getPlatformCtxWithArgV = (e, t) => {
  if (null != e.r0) switch (t) {
   case 0:
    return e.r0;

   case 1:
    return e.r1;

   case 2:
    return e.r2;

   case 3:
    return e.r3;

   case 4:
    return e.r4;

   case 5:
    return e.r5;

   case 6:
    return e.r6;

   case 7:
    return e.r7;

   case 8:
    return e.r8;

   case 9:
    return e.r9;

   case 10:
    return e.r10;

   case 11:
    return e.r11;

   case 12:
    return e.r12;

   case 13:
    return e.sp;

   case 14:
    return e.lr;

   case 15:
    return e.pc;

   default:
    throw new Error(`ARM32 -> argIndex ${t} is out of range`);
  } else switch (t) {
   case 0:
    return e.x0;

   case 1:
    return e.x1;

   case 2:
    return e.x2;

   case 3:
    return e.x3;

   case 4:
    return e.x4;

   case 5:
    return e.x5;

   case 6:
    return e.x6;

   case 7:
    return e.x7;

   case 8:
    return e.x8;

   case 9:
    return e.x9;

   case 10:
    return e.x10;

   case 11:
    return e.x11;

   case 12:
    return e.x12;

   case 13:
    return e.x13;

   case 14:
    return e.x14;

   case 15:
    return e.x15;

   case 16:
    return e.x16;

   case 17:
    return e.x17;

   case 18:
    return e.x18;

   case 19:
    return e.x19;

   case 20:
    return e.x20;

   case 21:
    return e.x21;

   case 22:
    return e.x22;

   case 23:
    return e.x23;

   case 24:
    return e.x24;

   case 25:
    return e.x25;

   case 26:
    return e.x26;

   case 27:
    return e.x27;

   case 28:
    return e.x28;

   case 29:
    return e.fp;

   case 30:
    return e.lr;

   case 31:
    return e.sp;

   case 32:
    return e.pc;

   default:
    throw new Error(`ARM64 -> argIndex ${t} is out of range`);
  }
};

},{"../bridge/fix/il2cppM":21,"../utils/common":502,"../utils/formart":505,"./base":4,"./valueResolve":12,"fastest-levenshtein":514}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.showParentClass = void 0, Reflect.set(globalThis, "Assembly", {});

const e = !0, l = [ "Assembly" ];

Il2Cpp.perform((() => {
  Il2Cpp.Domain.assemblies.forEach((async e => {
    let t = o(e.name);
    Reflect.set(Assembly, t, function(e) {
      if (0 == l.length) return !0;
      for (let s = 0; s < l.length; s++) if (-1 != e.name.indexOf(l[s])) return !0;
      return !1;
    }(e) ? s(e) : e);
  }));
}));

const s = e => {
  let l = {};
  return Reflect.set(l, "handle_assembly", e.handle), Reflect.set(l, "handle_image", e.image.handle), 
  Reflect.set(l, "hook", B.bind(null, e.image.handle)), Reflect.set(l, "show", c.bind(null, e.handle)), 
  e.image.classes.forEach((e => {
    let s = o(e.name);
    Reflect.set(l, s, t(e));
  })), l;
}, t = e => {
  let l = {};
  return Reflect.set(l, "handle", e.handle), Reflect.set(l, "hook", B.bind(null, e.handle)), 
  Reflect.set(l, "show", m.bind(null, e.handle)), Reflect.set(l, "parents", exports.showParentClass.bind(null, e.handle)), 
  e.methods.forEach((e => {
    let s = o(e.name);
    Reflect.set(l, s, n(e));
  })), l;
}, n = e => (Reflect.set(e, "handle", e.handle), Reflect.set(e, "show", showMethodInfo.bind(null, e.handle)), 
Reflect.set(e, "hook", b.bind(null, e.handle)), e), a = e => {
  let l = e instanceof Il2Cpp.Class ? e : new Il2Cpp.Class(checkCmdInput(e)), s = "";
  for (;null != l && !l.isNull(); ) s += `${l.name} (${l.handle}) -> `, l = l.parent;
  s = s.substring(0, s.length - 4), LOGD(`\n${s}\n`);
};

exports.showParentClass = a;

const o = e => e.replace(/\./g, "_").replace(/-/g, "_");

globalThis.showParentClass = exports.showParentClass;

},{}],7:[function(require,module,exports){
"use strict";

var _, T, e, E, t, A, a, I, p;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.ADS_TYPE = exports.LogColor = exports.FieldAccess = exports.il2cppTabledefs = exports.ArrKAY = exports.MapKAY = exports.GKEY = exports.EpFunc = exports.TYPE_STR = void 0, 
function(_) {
  _[_.U_STR = 0] = "U_STR", _[_.C_STR = 1] = "C_STR";
}(_ = exports.TYPE_STR || (exports.TYPE_STR = {})), function(_) {
  _[_.il2cpp_get_corlib = 0] = "il2cpp_get_corlib", _[_.il2cpp_domain_get = 1] = "il2cpp_domain_get", 
  _[_.il2cpp_domain_get_assemblies = 2] = "il2cpp_domain_get_assemblies", _[_.il2cpp_assembly_get_image = 3] = "il2cpp_assembly_get_image", 
  _[_.il2cpp_image_get_class_count = 4] = "il2cpp_image_get_class_count", _[_.il2cpp_image_get_class = 5] = "il2cpp_image_get_class", 
  _[_.il2cpp_class_get_methods = 6] = "il2cpp_class_get_methods", _[_.il2cpp_class_from_type = 7] = "il2cpp_class_from_type", 
  _[_.il2cpp_class_get_type = 8] = "il2cpp_class_get_type", _[_.il2cpp_class_from_system_type = 9] = "il2cpp_class_from_system_type", 
  _[_.il2cpp_class_from_name = 10] = "il2cpp_class_from_name", _[_.il2cpp_class_get_method_from_name = 11] = "il2cpp_class_get_method_from_name", 
  _[_.il2cpp_string_new = 12] = "il2cpp_string_new", _[_.il2cpp_type_get_name = 13] = "il2cpp_type_get_name", 
  _[_.il2cpp_type_get_class_or_element_class = 14] = "il2cpp_type_get_class_or_element_class", 
  _[_.il2cpp_class_get_field_from_name = 15] = "il2cpp_class_get_field_from_name", 
  _[_.il2cpp_class_num_fields = 16] = "il2cpp_class_num_fields", _[_.il2cpp_class_get_fields = 17] = "il2cpp_class_get_fields", 
  _[_.il2cpp_field_static_get_value = 18] = "il2cpp_field_static_get_value", _[_.il2cpp_field_static_set_value = 19] = "il2cpp_field_static_set_value", 
  _[_.getName = 20] = "getName", _[_.getLayer = 21] = "getLayer", _[_.getTransform = 22] = "getTransform", 
  _[_.getParent = 23] = "getParent", _[_.getChildCount = 24] = "getChildCount", _[_.getChild = 25] = "getChild", 
  _[_.get_pointerEnter = 26] = "get_pointerEnter", _[_.pthread_create = 27] = "pthread_create", 
  _[_.getpid = 28] = "getpid", _[_.gettid = 29] = "gettid", _[_.sleep = 30] = "sleep", 
  _[_.DecodeJObject = 31] = "DecodeJObject", _[_.GetDescriptor = 32] = "GetDescriptor", 
  _[_.ArtCurrent = 33] = "ArtCurrent", _[_.newThreadCallBack = 34] = "newThreadCallBack";
}(T = exports.EpFunc || (exports.EpFunc = {})), function(_) {
  _[_.soName = 0] = "soName", _[_.soAddr = 1] = "soAddr", _[_.p_size = 2] = "p_size", 
  _[_.lastTime = 3] = "lastTime", _[_.LogFlag = 4] = "LogFlag", _[_.count_method_times = 5] = "count_method_times", 
  _[_.maxCallTime = 6] = "maxCallTime", _[_.LshowLOG = 7] = "LshowLOG", _[_.newThreadDelay = 8] = "newThreadDelay", 
  _[_.frida_env = 9] = "frida_env";
}(e = exports.GKEY || (exports.GKEY = {})), function(_) {
  _[_.map_attach_listener = 0] = "map_attach_listener", _[_.map_find_class_cache = 1] = "map_find_class_cache", 
  _[_.map_find_method_cache = 2] = "map_find_method_cache", _[_.outFilterMap = 3] = "outFilterMap", 
  _[_.CommonCache = 4] = "CommonCache";
}(E = exports.MapKAY || (exports.MapKAY = {})), function(_) {
  _[_.arr_img_addr = 0] = "arr_img_addr", _[_.arr_img_names = 1] = "arr_img_names", 
  _[_.findClassCache = 2] = "findClassCache", _[_.arr_nop_addr = 3] = "arr_nop_addr", 
  _[_.arr_runtimeType = 4] = "arr_runtimeType", _[_.findMethodArray = 5] = "findMethodArray", 
  _[_.t_arrayAddr = 6] = "t_arrayAddr", _[_.filterClass = 7] = "filterClass", _[_.arrMethodInfo = 8] = "arrMethodInfo", 
  _[_.arrayAddr = 9] = "arrayAddr", _[_.arrayName = 10] = "arrayName";
}(t = exports.ArrKAY || (exports.ArrKAY = {})), function(_) {
  _[_.METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK = 7] = "METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK", 
  _[_.METHOD_ATTRIBUTE_COMPILER_CONTROLLED = 0] = "METHOD_ATTRIBUTE_COMPILER_CONTROLLED", 
  _[_.METHOD_ATTRIBUTE_PRIVATE = 1] = "METHOD_ATTRIBUTE_PRIVATE", _[_.METHOD_ATTRIBUTE_FAM_AND_ASSEM = 2] = "METHOD_ATTRIBUTE_FAM_AND_ASSEM", 
  _[_.METHOD_ATTRIBUTE_ASSEM = 3] = "METHOD_ATTRIBUTE_ASSEM", _[_.METHOD_ATTRIBUTE_FAMILY = 4] = "METHOD_ATTRIBUTE_FAMILY", 
  _[_.METHOD_ATTRIBUTE_FAM_OR_ASSEM = 5] = "METHOD_ATTRIBUTE_FAM_OR_ASSEM", _[_.METHOD_ATTRIBUTE_PUBLIC = 6] = "METHOD_ATTRIBUTE_PUBLIC", 
  _[_.METHOD_ATTRIBUTE_STATIC = 16] = "METHOD_ATTRIBUTE_STATIC", _[_.METHOD_ATTRIBUTE_FINAL = 32] = "METHOD_ATTRIBUTE_FINAL", 
  _[_.METHOD_ATTRIBUTE_VIRTUAL = 64] = "METHOD_ATTRIBUTE_VIRTUAL", _[_.METHOD_ATTRIBUTE_ABSTRACT = 1024] = "METHOD_ATTRIBUTE_ABSTRACT", 
  _[_.METHOD_ATTRIBUTE_PINVOKE_IMPL = 8192] = "METHOD_ATTRIBUTE_PINVOKE_IMPL", _[_.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK = 256] = "METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK", 
  _[_.METHOD_ATTRIBUTE_REUSE_SLOT = 0] = "METHOD_ATTRIBUTE_REUSE_SLOT", _[_.METHOD_ATTRIBUTE_NEW_SLOT = 256] = "METHOD_ATTRIBUTE_NEW_SLOT";
}(A = exports.il2cppTabledefs || (exports.il2cppTabledefs = {})), function(_) {
  _[_.FIELD_ATTRIBUTE_FIELD_ACCESS_MASK = 7] = "FIELD_ATTRIBUTE_FIELD_ACCESS_MASK", 
  _[_.FIELD_ATTRIBUTE_COMPILER_CONTROLLED = 0] = "FIELD_ATTRIBUTE_COMPILER_CONTROLLED", 
  _[_.FIELD_ATTRIBUTE_PRIVATE = 1] = "FIELD_ATTRIBUTE_PRIVATE", _[_.FIELD_ATTRIBUTE_FAM_AND_ASSEM = 2] = "FIELD_ATTRIBUTE_FAM_AND_ASSEM", 
  _[_.FIELD_ATTRIBUTE_ASSEMBLY = 3] = "FIELD_ATTRIBUTE_ASSEMBLY", _[_.FIELD_ATTRIBUTE_FAMILY = 4] = "FIELD_ATTRIBUTE_FAMILY", 
  _[_.FIELD_ATTRIBUTE_FAM_OR_ASSEM = 5] = "FIELD_ATTRIBUTE_FAM_OR_ASSEM", _[_.FIELD_ATTRIBUTE_PUBLIC = 6] = "FIELD_ATTRIBUTE_PUBLIC", 
  _[_.FIELD_ATTRIBUTE_STATIC = 16] = "FIELD_ATTRIBUTE_STATIC", _[_.FIELD_ATTRIBUTE_INIT_ONLY = 32] = "FIELD_ATTRIBUTE_INIT_ONLY", 
  _[_.FIELD_ATTRIBUTE_LITERAL = 64] = "FIELD_ATTRIBUTE_LITERAL", _[_.FIELD_ATTRIBUTE_NOT_SERIALIZED = 128] = "FIELD_ATTRIBUTE_NOT_SERIALIZED", 
  _[_.FIELD_ATTRIBUTE_SPECIAL_NAME = 512] = "FIELD_ATTRIBUTE_SPECIAL_NAME", _[_.FIELD_ATTRIBUTE_PINVOKE_IMPL = 8192] = "FIELD_ATTRIBUTE_PINVOKE_IMPL", 
  _[_.FIELD_ATTRIBUTE_RESERVED_MASK = 38144] = "FIELD_ATTRIBUTE_RESERVED_MASK", _[_.FIELD_ATTRIBUTE_RT_SPECIAL_NAME = 1024] = "FIELD_ATTRIBUTE_RT_SPECIAL_NAME", 
  _[_.FIELD_ATTRIBUTE_HAS_FIELD_MARSHAL = 4096] = "FIELD_ATTRIBUTE_HAS_FIELD_MARSHAL", 
  _[_.FIELD_ATTRIBUTE_HAS_DEFAULT = 32768] = "FIELD_ATTRIBUTE_HAS_DEFAULT", _[_.FIELD_ATTRIBUTE_HAS_FIELD_RVA = 256] = "FIELD_ATTRIBUTE_HAS_FIELD_RVA";
}(a = exports.FieldAccess || (exports.FieldAccess = {})), function(_) {
  _[_.WHITE = 0] = "WHITE", _[_.RED = 1] = "RED", _[_.YELLOW = 3] = "YELLOW", _[_.C31 = 31] = "C31", 
  _[_.C32 = 32] = "C32", _[_.C33 = 33] = "C33", _[_.C34 = 34] = "C34", _[_.C35 = 35] = "C35", 
  _[_.C36 = 36] = "C36", _[_.C41 = 41] = "C41", _[_.C42 = 42] = "C42", _[_.C43 = 43] = "C43", 
  _[_.C44 = 44] = "C44", _[_.C45 = 45] = "C45", _[_.C46 = 46] = "C46", _[_.C90 = 90] = "C90", 
  _[_.C91 = 91] = "C91", _[_.C92 = 92] = "C92", _[_.C93 = 93] = "C93", _[_.C94 = 94] = "C94", 
  _[_.C95 = 95] = "C95", _[_.C96 = 96] = "C96", _[_.C97 = 97] = "C97", _[_.C100 = 100] = "C100", 
  _[_.C101 = 101] = "C101", _[_.C102 = 102] = "C102", _[_.C103 = 103] = "C103", _[_.C104 = 104] = "C104", 
  _[_.C105 = 105] = "C105", _[_.C106 = 106] = "C106", _[_.C107 = 107] = "C107";
}(I = exports.LogColor || (exports.LogColor = {})), function(_) {
  _[_.IronSource = 0] = "IronSource", _[_.MaxSdkCallbacks = 1] = "MaxSdkCallbacks", 
  _[_.MoPubManager = 2] = "MoPubManager", _[_.TTPluginsGameObject = 3] = "TTPluginsGameObject";
}(p = exports.ADS_TYPE || (exports.ADS_TYPE = {})), NativePointer.prototype.callFunction = function(..._) {
  return ptr(1);
}, Object.defineProperty(NativePointer.prototype, "callFunction", {
  value: function(..._) {
    return ptr(2);
  }
});

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../utils/formart");

let t, r;

function s(e, t = !1) {
  1 == t ? LOGD(`\n[${++r}]\t${e.name}`) : LOGD(`\n[*]\t${e.name}`);
  let s = n(e.path), o = Math.round(e.size / 1024 / 1024 * 100) / 100, a = Math.round(s / 1024 / 1024 * 100) / 100, l = 0 == s ? "" : `| FILE: ${s} B ≈ ${a} MB `;
  LOGZ(`\t${e.base} - ${e.base.add(e.size)}  | MEM: ${ptr(e.size)} ( ${e.size} B = ${e.size / 1024} KB ≈ ${o} MB ) ${l}`), 
  LOGZ(`\t${e.path}\n`);
}

globalThis.protect = (e, t = 4096, r = "rwx") => {
  e = checkPointer(e).shr(12).shl(12), Memory.protect(e, t, r);
}, globalThis.watch = (e, t = 16) => {
  class r {
    operation;
    from;
    address;
    rangeIndex;
    pageIndex;
    pagesCompleted;
    pagesTotal;
    mdFrom;
    mdAddress;
    constructor(e) {
      this.operation = e.operation, this.from = e.from, this.address = e.address, this.rangeIndex = e.rangeIndex, 
      this.pageIndex = e.pageIndex, this.pagesCompleted = e.pagesCompleted, this.pagesTotal = e.pagesTotal, 
      this.mdAddress = Process.findModuleByAddress(this.address), this.mdFrom = Process.findModuleByAddress(this.from);
    }
    tostring() {
      return `\noperation:\t\t${this.operation}\nfrom:\t\t\t${this.from} { ${this.from.sub(this.mdFrom.base)} @ ${this.mdFrom.name} }\naddress:\t\t${this.address} { ${this.address.sub(this.mdAddress.base)} @ ${this.mdAddress.name} }\nrangeIndex:\t\t${this.rangeIndex}\npageIndex:\t\t${this.pageIndex}\npagesCompleted:\t\t${this.pagesCompleted}\npagesTotal:\t\t${this.pagesTotal}`;
    }
  }
  MemoryAccessMonitor.enable(new class {
    base;
    size;
    constructor(e, t) {
      this.base = checkPointer(e), this.size = t;
    }
  }(e, t), {
    onAccess: e => LOGD(new r(e).tostring())
  });
}, globalThis.watchDisabled = () => MemoryAccessMonitor.disable(), globalThis.sqliteTest = () => {
  var e, t, r, s;
  for (e = SqliteDatabase.open("/path/to/people.db").prepare("SELECT name, bio FROM people WHERE age = ?"), 
  console.log("People whose age is 42:"), e.bindInteger(1, 42); null !== (t = e.step()); ) r = t[0], 
  s = t[1], console.log("Name:", r), console.log("Bio:", s);
  e.reset();
}, globalThis.patchTest = (e, t = 1) => {
  Memory.patchCode(checkPointer(e), Process.pageSize * t, (e => {
    LOGD(e);
    let t = new ArmWriter(e);
    t.putLabel("start"), t.putNop(), t.putCallAddressWithArguments(Module.findExportByName("libil2cpp.so", "il2cpp_string_new"), [ "r10", 16 ]), 
    LOGD(t.base + " " + t.pc + " " + t.offset + " " + t.code), t.putBlxReg("lr"), t.putBCondLabel("eq", "start"), 
    t.flush();
  }));
}, globalThis.findInMemory = (e, t = !1) => {
  switch (e) {
   case "Dex1":
    o("54 61 70 20 54 6F 20 53 74 61 72 74", ((e, t, r) => {
      LOG('Found "DEX ' + e + " Address: " + t.toString() + "\n", LogColor.C36);
    }));
    break;

   case "Dex":
    o("64 65 78 0a 30 33 35 00", ((e, t, r) => {
      LOG('Found "DEX"' + e + " Address: " + t.toString() + "\n", LogColor.C36);
    }));
    break;

   case "PNG":
    Process.enumerateRanges("r--").forEach((e => {
      new Promise((t => {
        Memory.scan(e.base, e.size, "89 50 4E 47 0D 0A 1A 0A", {
          onMatch: function(e) {
            t(e);
          },
          onComplete: function() {}
        });
      })).then((t => {
        new Promise((t => {
          Memory.scan(e.base, e.size, "00 00 00 00 49 45 4E 44 AE 42 60 82", {
            onMatch: function(e) {
              return t(e), "stop";
            },
            onComplete: function() {}
          });
        })).then((e => [ t, e ])).then((e => {
          let t = e, r = t[1].sub(t[0]);
          e[3] = r, LOG("\n" + getLine(60) + "\n[*] Found PNG From " + e[0] + " To " + e[1] + "  size : " + r + "(" + r.toInt32() + ")", LogColor.C36);
          let s = n(t[0].add(4 * p_size).readPointer()).toInt32(), o = n(t[0].add(5 * p_size).readPointer()).toInt32(), a = t[0].add(6 * p_size).readU8(), l = t[0].add(6 * p_size + 1).readU8(), i = n(t[0].add(7 * p_size + 1).readPointer());
          return LOG("\t (" + s + " X " + o + ") \t" + a + " " + l + "\t" + i, LogColor.C36), 
          t;
        })).then((e => {
          let t = e, r = t[3].add(12).toInt32();
          if (r <= 0) return;
          Memory.protect(t[0], 65535, "rwx");
          let s = "/data/data/" + a() + "/" + e[0] + "_" + e[1] + ".png", n = new File(s, "wb"), o = e[0].readByteArray(r);
          0 != r && null != o && n.write(o), n.flush(), n.close(), LOGD("\tSave to\t\t===>\t" + s);
        })).catch((e => {
          LOGE(e);
        }));
      }));
    }));
    break;

   case "global-metadata.dat":
    o("AF 1B B1 FA 18", ((e, t, r) => {
      LOGE("\n" + getLine(80)), LOGD('Found "global-metadata.dat"' + e + " Address: " + t.toString() + "\n"), 
      seeHexA(t, 64, !0, LogColor.C33);
      let s = parseInt(t.toString(), 16) + 264, n = ptr(s).readInt(), o = parseInt(t.toString(), 16) + 268, l = n + ptr(o).readInt();
      if (LOGD("\nFile size\t===>\t" + l + "B (" + (l / 1024 / 1024).toFixed(2) + "MB)"), 
      l > 2097152) {
        let e = "/data/data/" + a() + "/global-metadata.dat", r = new File(e, "wb"), s = t.readByteArray(l);
        0 != l && null != s && r.write(s), r.flush(), r.close(), LOGD("Save to\t\t===>\t" + e);
      }
      LOGD(getLine(80));
    }));
    break;

   default:
    var r = Process.findModuleByName("libil2cpp.so");
    if (null == r) {
      LOGE("NOT FOUND Module : libil2cpp.so");
      break;
    }
    if (LOGW(JSON.stringify(m) + "\n"), t) {
      var s = Memory.scanSync(r.base, r.size, e);
      LOGD("onMatch result = \n" + JSON.stringify(s));
    } else Memory.scan(r.base, r.size, e, {
      onMatch: function(e, t) {
        return LOGD("[*] Found at " + e + " with size " + t), "stop";
      },
      onComplete: function() {
        LOGE("onComplete");
      }
    });
  }
  function n(e) {
    var t = "", r = String(e).split("0x")[1];
    for (let e = r.length - 1; e >= 0; e--) t += r.charAt(e);
    return ptr("0x" + t);
  }
  function o(e, t) {
    LOG("Start Find Pattern '" + e + "'\nWatting ......", LogColor.C96), Process.enumerateRanges("r--").forEach((r => {
      Memory.scan(r.base, r.size, e, {
        onMatch: function(r, s) {
          t(e, r, s);
        },
        onComplete: function() {}
      });
    }));
  }
  function a() {
    let e = "";
    return Java.perform((() => e = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext().getPackageName())), 
    e;
  }
}, globalThis.fridaInfo = () => {
  LOGD(`\n${getLine(40)}`), LOGD(`[*] Runtime : ${Script.runtime}`), LOGD(`[*] ThreadId : ${Process.getCurrentThreadId()}`), 
  LOGD(`[*] Process.id : ${Process.id}`), LOGD(`[*] Process.arch : ${Process.arch}`), 
  LOGD(`[*] Process.platform : ${Process.platform}`), LOGD(`[*] Process.pointerSize : ${Process.pointerSize}`), 
  LOGD(`[*] Process.pageSize : ${Process.pageSize}`), LOGD(`[*] Process.codeSigningPolicy : ${Process.codeSigningPolicy}`), 
  LOGD(`[*] Process.isDebuggerAttached : ${Process.isDebuggerAttached()}`), LOGD(`${getLine(40)}\n`);
}, globalThis.listThreads = (r = 20) => {
  t = 0;
  let s = Process.getCurrentThreadId();
  Process.enumerateThreads().sort(((e, t) => t.id - e.id)).slice(0, r).forEach((r => {
    let n = `${e.formartClass.alignStr(`[${++t}]`, 6)} ${r.id} ${r.state}`, o = r.context;
    s == r.id ? LOGE(n) : LOGD(n), LOGZ(`\tPC : ${o.pc}  ${checkCtx(o, "PC")}`), LOGZ(`\tLR : ${getPlatformCtx(o).lr}  ${checkCtx(o, "LR")}`);
  }));
}, globalThis.listModules = (e = "") => {
  r = 0, Process.enumerateModules().forEach((t => {
    t.name.includes(e) && s(t, !0);
  }));
}, globalThis.listModule = (t, r = 5) => {
  let n = Process.getModuleByName(t);
  if (null == n) return void LOGE("NOT FOUND Module : " + t);
  if (s(n, !1), "linker" == t) return;
  let o = n.enumerateRanges("");
  o.length > 0 && (LOGO(`\t[-] enumerateRanges ( ${o.length} )`), o.sort(((e, t) => e.base.compare(t.base))).forEach((t => {
    LOGZ(`\t\t${t.protection}\t${t.base} - ${t.base.add(t.size)} | ${e.formartClass.alignStr(String(ptr(t.size)), p_size + 8)} <- ${t.size}`);
  })), newLine());
  let a = n.enumerateImports();
  if (a.length > 0) {
    LOGO(`\t[-] enumerateImports ( ${a.length} )`);
    let t = [];
    a.sort(((e, t) => e.name.length - t.name.length)).slice(0, r).forEach((r => {
      let s = e.formartClass.alignStr(String(r.address), p_size + 8), n = "\t<---\t";
      try {
        let s = Process.findModuleByAddress(r.address), o = ` @ ${s.base}`;
        "function" != r.type && "variable" != r.type || (n += `${s.name} ${t.includes(s.name) ? e.formartClass.centerStr("...", o.length) : o}`), 
        t.push(s.name);
      } catch {
        n = "";
      }
      LOGZ(`\t\t${r.type}   ${s}  ${r.name} ${n}`);
    })), a.length > r && LOGZ("\t\t......\n");
  }
  let l = n.enumerateExports();
  l.length > 0 && (LOGO(`\t[-] enumerateExports ( ${l.length} )`), l.sort(((e, t) => e.name.length - t.name.length)).slice(0, r).forEach((t => {
    let r = e.formartClass.alignStr(String(t.address), p_size + 8);
    LOGZ(`\t\t${t.type}   ${r}  ${t.name}`);
  })), l.length > r && LOGZ("\t\t......\n"));
  let i = n.enumerateSymbols();
  i.length > 0 && (LOGO(`\t[-] enumerateSymbols ( ${i.length} )`), i.slice(0, r).forEach((e => {
    LOGZ(`\t\t${e.isGlobal}  ${e.type}  ${e.name}  ${e.address}`);
  })), i.length > r && LOGZ("\t\t......\n"));
}, globalThis.findExport = (e, t, r) => {
  if (null == r && (r = s), null == t) Process.enumerateModules().forEach((t => {
    t.enumerateExports().forEach((t => {
      -1 != t.name.indexOf(e) && r(t);
    }));
  })); else {
    let s = Process.findModuleByName(t);
    if (null == s) throw new Error("NOT FOUND Module : " + t);
    s.enumerateExports().forEach((t => {
      -1 != t.name.indexOf(e) && r(t);
    }));
  }
  function s(e) {
    try {
      let t = Process.findModuleByAddress(e.address);
      if (null == t) {
        let r = Process.findModuleByName("linker");
        r.enumerateExports().forEach((s => {
          s.address.equals(e.address) && s.name == e.name && (t = r);
        }));
      }
      let r = Process.findRangeByAddress(e.address);
      LOGD(`\n[*] ${e.type} -> address: ${e.address} ( ${e.address.sub(t.base)} ) | name: ${e.name}`), 
      LOGZ(`\t[-] base: ${t.base} | size: 0x${t.size.toString(16).padEnd(2 * p_size, " ")} <- module:  ${t.name}`), 
      LOGZ(`\t[-] base: ${r.base} | size: 0x${r.size.toString(16).padEnd(2 * p_size, " ")} <- range:   ${r.protection}`);
    } catch (t) {
      null == Process.findModuleByAddress(e.address) && LOGE("Module not found"), null == Process.findRangeByAddress(e.address) && LOGE("Range not found"), 
      LOGD(JSON.stringify(e));
    }
  }
  r == s && newLine();
}, globalThis.findImport = (e = "libc.so", t = "") => {
  let r = Process.findModuleByName(e);
  null != r ? (r.enumerateImports().forEach((e => {
    if (!e.name.includes(t)) return;
    let r = null == e || null == e.address ? "" : ` ( ${e.address.sub(Process.findModuleByAddress(e.address).base)} )`;
    LOGD(`\n[*] ${e.type} -> address: ${e.address}${r}  | name: ${e.name}`);
    let s = Process.findModuleByName(e.module)?.base;
    LOGZ(`\t${null == e.module ? "" : e.module + " ( " + s + " ) "} \t ${null == e.slot ? "" : e.slot}`);
  })), newLine()) : LOGE("NOT FOUND Module : " + e);
};

const n = e => {
  let t = callFunctionWithOutError(Module.findExportByName("libc.so", "fopen"), allocCStr(e), allocCStr("rwx"));
  if (t.isNull()) return 0;
  callFunctionWithOutError(Module.findExportByName("libc.so", "fseek"), t, 0, 2);
  let r = callFunctionRI(Module.findExportByName("libc.so", "ftell"), t);
  return callFunctionWithOutError(Module.findExportByName("libc.so", "fclose"), t), 
  r;
};

globalThis.StalkerTraceEvent = (t, r) => {
  let s = t;
  if (null == (t = checkPointer(t)) || t.isNull()) return;
  const n = Process.findModuleByAddress(t);
  if (null != n) {
    if (null != r && r.length > 0) for (let e = 0; e < r.length; e++) r[e] = checkPointer(r[e]);
    A(t, ((t, r, s) => {
      var n;
      newLine(), s.set("len", e.formartClass.printTitileA(`Enter ---\x3e arg0:${t[0]}  arg1:${t[1]}  arg2:${t[2]}  arg3:${t[3]} | ${Process.getCurrentThreadId()}`, LogColor.YELLOW)), 
      n = Process.getCurrentThreadId(), Stalker.follow(n, {
        events: {
          call: !0,
          ret: !1,
          exec: !1,
          block: !1,
          compile: !1
        },
        onReceive: function(e) {
          Stalker.parse(e, {
            annotate: !0,
            stringify: !1
          }).forEach((e => {
            let t = Process.findModuleByAddress(e[1]), r = Process.findModuleByAddress(e[2]);
            LOGD(`${e[0]} Times:${e[3]} ${e[1]}@${t?.name} ${e[2]}@${r?.name} `);
          }));
        }
      });
    }), ((e, t, r) => {
      LOGW(`${getLine(20)}\n Exit ---\x3e ret : ${e}\n${getLine(r.get("len"))}`), Process.getCurrentThreadId(), 
      Stalker.unfollow(), Stalker.garbageCollect();
    })), LOGD(`Stalker Attached : ${t} ( ${ptr(s)} ) from ${n.name} | ${Process.getCurrentThreadId()}`);
  } else LOGE(`Module not found { from ${t}}`);
}, globalThis.StalkerTracePath = (t, r) => {
  let s = t;
  if (null == (t = checkPointer(t)) || t.isNull()) return;
  const n = Process.findModuleByAddress(t);
  if (null != n) {
    if (null != r && r.length > 0) for (let e = 0; e < r.length; e++) r[e] = checkPointer(r[e]);
    A(t, ((t, s, o) => {
      newLine(), o.set("len", e.formartClass.printTitileA(`Enter ---\x3e arg0:${t[0]}  arg1:${t[1]}  arg2:${t[2]}  arg3:${t[3]} | ${Process.getCurrentThreadId()}`, LogColor.YELLOW)), 
      function(e) {
        let t = new ModuleMap((e => !!e.base.equals(n.base) || (Stalker.exclude(e), !1)));
        Stalker.follow(e, {
          transform: e => {
            let s = e.next(), o = t.has(s.address), a = ptr(s.address);
            null != r ? a > r[0] && r[1] > a && LOGD(`[*] ${s.address} ( ${a.sub(n.base)} ) ---\x3e ${s.mnemonic} ${s.opStr}`) : o && LOGD(`[*] ${s.address} ( ${a.sub(n.base)} ) ---\x3e ${s.mnemonic} ${s.opStr}`);
            do {
              e.keep();
            } while (null !== e.next());
          }
        });
      }(Process.getCurrentThreadId());
    }), ((e, t, r) => {
      LOGW(`${getLine(20)}\n Exit ---\x3e ret : ${e}\n${getLine(r.get("len"))}`), Process.getCurrentThreadId(), 
      Stalker.unfollow(), Stalker.garbageCollect(), LOGE("Stalker Exit : " + Process.getCurrentThreadId());
    })), LOGD(`Stalker Attached : ${t} ( ${ptr(s)} ) from ${n.name} | ${Process.getCurrentThreadId()}`);
  } else LOGE(`Module not found { from ${t}}`);
}, globalThis.cmdouleTest = () => {
  var e = new CModule('#include <stdio.h>void functionFromCModule(){   printf("Print from CModule\n");}');
  console.log(JSON.stringify(e));
  var t = e.functionFromCModule;
  new NativeFunction(t, "void", [])();
};

},{"../utils/formart":505}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.NOP_MAP = exports.NOP_ARRAY = exports.SET_ARRAY = exports.GET_ARRAY = exports.GET_MAP_VALUE = exports.SET_MAP_VALUE = exports.SET_MAP = exports.GET_MAP = exports.SET_G = exports.GET_GT = exports.GET_G = exports.GET_F = exports.SET_F_A = exports.SET_F = exports.SET_A = exports.GET_A = exports.newThreadCallBack = exports.p_size = exports.soName = void 0, 
exports.soName = "libil2cpp.so", exports.p_size = Process.pointerSize;

let e = () => {};

exports.newThreadCallBack = e;

let t = new Map;

const o = e => t.get(e);

exports.GET_A = o;

const r = (e, o) => t.set(e, o);

exports.SET_A = r;

let s = new Map;

function p(e, t) {
  s.set(e, t), (0, exports.SET_A)(e, t);
}

function _(e, t) {
  s.set(e, t), (0, exports.SET_A)(e, t);
}

function n(e) {
  return s.get(e);
}

exports.SET_F = p, exports.SET_F_A = _, exports.GET_F = n;

let x = new Map;

const T = e => x.get(e);

function A(e) {
  let t = x.get(e);
  return null == t && (t = 0), x.get(e);
}

function E(e, t) {
  return x.set(e, t);
}

function i(e) {
  if (x.get(e)) return x.get(e);
  {
    let t = new Map;
    return l(e, t), t;
  }
}

function l(e, t) {
  x.set(e, t);
}

function u(e, t, o) {
  l(e, i(e).set(t, o));
}

function c(e, t) {
  return i(e).get(t);
}

function G(e) {
  if (x.get(e)) return x.get(e);
  {
    let t = new Array;
    return P(e, t), t;
  }
}

function P(e, t) {
  x.set(e, t);
}

function S(e) {
  x.delete(e);
}

function a(e) {
  x.delete(e);
}

exports.GET_G = T, exports.GET_GT = A, exports.SET_G = E, exports.GET_MAP = i, exports.SET_MAP = l, 
exports.SET_MAP_VALUE = u, exports.GET_MAP_VALUE = c, exports.GET_ARRAY = G, exports.SET_ARRAY = P, 
exports.NOP_ARRAY = S, exports.NOP_MAP = a, globalThis.MAP_EXPORT_FUNCTIONS = s.forEach(((e, t) => {
  LOGD(`${t} => ${e}`);
})), globalThis.MAP_EXPORT_ADDRESS = t, globalThis.MAP_GLOABE_OBJ = x, globalThis.p_size = exports.p_size;

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./base"), require("./breaker"), require("./enum"), require("./extends"), 
require("./globle"), require("./info"), require("./valueResolve"), require("./dynamic");

},{"./base":4,"./breaker":5,"./dynamic":6,"./enum":7,"./extends":8,"./globle":9,"./info":11,"./valueResolve":12}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getClassFromMethodInfo = exports.showMethodInfo = void 0;

const e = require("../bridge/fix/il2cppM"), t = require("../bridge/fix/inflater"), s = require("../utils/formart");

function r(r) {
  let n;
  if (newLine(), "number" == typeof r) {
    if ("arm64" == Process.arch && String(r).toString().length > 15) throw new Error("\nNot support parameter typed number at arm64\n\n\tUse showMethodInfo('0x...') instead\n");
    r = ptr(r);
  } else if ("string" == typeof r) {
    if (!String(r).startsWith("0x")) throw new Error("\nNot a Pointer\n");
    r = ptr(r);
  } else r instanceof Il2Cpp.Method && (r = r.handle);
  n = new Il2Cpp.Method(r);
  let a = n.virtualAddress.isNull() ? "" : `& RP: ${n.relativeVirtualAddress}`, o = n.parameters.map((e => `${getLine(8, " ")}[-]${s.formartClass.alignStr(e.name)} | type: ${e.type.handle} | @ class:${e.type.class.handle} | ${e.type.name}`)).join("\n");
  if ("System.Void" != n.returnType.name && (o += `${0 == n.parameterCount ? "" : "\n"}${getLine(8, " ")}[-]${s.formartClass.alignStr("_RET_")} | type: ${n.returnType.handle} | @ class:${n.returnType.class.handle} | ${n.returnType.name}`), 
  LOGZ(`[-]${n.class.image.assembly.name} @ ${n.class.image.assembly.handle}`), LOGZ(`${getLine(2, " ")}[-]${n.class.image.name} @ ${n.class.image.handle} | C:${n.class.image.classCount}`), 
  LOGZ(`${getLine(4, " ")}[-]${n.class.name} @ ${n.class.handle} | M:${n.class.methods.length} | F:${n.class.fields.length} ${n.class.namespace.length > 0 ? `| N:${n.class.namespace}` : ""}`), 
  LOGD(`${getLine(6, " ")}[-]${(0, e.getMethodDesFromMethodInfo)(n)} @ MI:${n.handle} & MP: ${n.virtualAddress} ${a}`), 
  LOGZ(`${o}`), newLine(), n.virtualAddress.isNull()) {
    let s = (0, t.inflaterMethodLocal)(n, "Object"), r = `${(0, e.getMethodDesFromMethodInfo)(s)} @ MI:${s.handle} & MP: ${s.virtualAddress} & RP: ${s.relativeVirtualAddress}`;
    LOGZ(`Inflate Object ↓\n${r}\n`);
  }
}

exports.showMethodInfo = r;

const n = e => {
  if ("number" == typeof e) {
    if ("arm64" == Process.arch && String(e).toString().length > 15) throw new Error("\nNot support parameter typed number at arm64\n\n\tUse b('0x...') instead\n");
    e = ptr(e);
  } else if ("string" == typeof e) {
    if (!String(e).startsWith("0x")) throw new Error("\nNot a Pointer\n");
    e = ptr(String(e));
  }
  return new Il2Cpp.Method(e).class;
};

exports.getClassFromMethodInfo = n, globalThis.showMethodInfo = r, globalThis.methodToClass = e => (0, 
exports.getClassFromMethodInfo)(e).handle, globalThis.methodToClassShow = e => m(methodToClass(e));

},{"../bridge/fix/il2cppM":21,"../bridge/fix/inflater":23,"../utils/formart":505}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.FakeCommonType = void 0;

const e = require("../bridge/fix/enum"), t = require("../bridge/fix/il2cppM"), r = require("../expand/TypeExtends/mscorlibObj/Object/class"), s = require("../expand/TypeExtends/mscorlibObj/Object/export"), n = require("../expand/TypeExtends/mscorlibObj/ValueType/Color/class"), a = require("../utils/formart"), i = require("../utils/reader");

class o {
  cacheId="";
  method;
  args;
  retval=ptr(0);
  constructor(e, t) {
    this.cacheId = e, this.method = t, this.args = new Array(t.genericParameterCount);
  }
  getCacheId() {
    return this.cacheId;
  }
  setCacheId(e) {
    return this.cacheId = e, this;
  }
  getMethod() {
    return this.method;
  }
  setMethod(e) {
    return this.method = e, this.args = new Array(e.genericParameterCount), this;
  }
  setArg(e, t) {
    return this.args[e] = t, this;
  }
  setRetval(e) {
    return this.retval = e, this;
  }
  getArg(e) {
    return this.args[e];
  }
  getRetval() {
    return this.retval;
  }
  getArgs() {
    return this.args;
  }
  getArgsCount() {
    return this.method.parameterCount;
  }
  setArgs(e) {
    return null == e || e instanceof Array && (0 === e.length || e.length < this.method.parameterCount) || (this.args = e), 
    this;
  }
  static MapCacheStringWithOutValue=new Map;
  toString() {
    let e = o.MapCacheStringWithOutValue.get(this.cacheId);
    if (e) return e;
    let r = ` ${this.method.handle} -> ${this.method.relativeVirtualAddress} `, s = "", n = String(this.method.class.handle).length + 1;
    try {
      !this.method.isStatic && (s += "," + a.formartClass.alignStr(String(this.args[0]), n, " "));
    } catch {
      s += "  ", s += a.formartClass.getLine(n, " ");
    }
    let i = `${a.formartClass.alignStr(this.method.class.name, 18)}(${this.method.class.handle}${s.trim()})`, l = `===>  ${(0, 
    t.methodToString)(this.method, !0)}\t `, h = `${this.cacheId}\t${r}\t|  ${i}  ${l}`;
    return o.MapCacheStringWithOutValue.set(this.cacheId, h), h;
  }
  resolve(e) {
    if (e > this.method.parameterCount) throw new Error("index out of parameterCount range");
    let t = -1 == e ? this.retval : this.args[e], r = -1 == e ? this.method.returnType : this.method.parameters[e].type;
    return o.fakeValue(t, r, this.method);
  }
  static fakeValue=(t, r, s) => ("number" == typeof t && (t = ptr(t)), "number" == typeof s && (s = new Il2Cpp.Method(ptr(s))), 
  r.handle.equals(1) ? new Il2Cpp.Object(t).toString() : r.isNull() || s.isNull() ? "" : !t.isNull() || "System.Boolean" == r.name || s.class.isEnum || r.name.includes("Void") ? !s.class.isNull() && r.name.endsWith("[]") || !s.class.isNull() && r.name.includes("Dictionary") ? "" : !s.class.isNull() && s.class.isEnum ? `Enum : ${(0, 
  e.enumNumToName)(t.toInt32(), r.class.name)}` : l(r, t) : "NULL");
}

function l(e, t) {
  switch (e.name) {
   case "System.Void":
    return "";

   case "System.Boolean":
    return t.isNull() ? "False" : "True";

   case "System.Int32":
    return (0, i.readInt)(t).toString();

   case "System.UInt32":
    return (0, i.readUInt)(t).toString();

   case "System.Int64":
    return (0, i.readInt64)(t).toString();

   case "System.Single":
    return (0, i.readSingle)(t).toString();

   case "System.String":
    return (0, i.readU16)(t);

   case "System.Object":
    return (0, s.getObjName)(t);

   case "System.UnityEngine":
    return new r.UnityEngine_Object(t).get_name();

   case "UnityEngine.Color":
    return new n.UnityEngine_Color_Impl(t).toString();

   case "Vector2":
    return `${t.readFloat()} ${t.add(4).readFloat()}`;

   default:
    if (e.name.includes("System.Action")) return new mscorlib.Delegate(t).toString();
    try {
      return new Il2Cpp.Object(t).toString();
    } catch {
      return t.toString();
    }
  }
}

exports.FakeCommonType = l, exports.default = o;

},{"../bridge/fix/enum":19,"../bridge/fix/il2cppM":21,"../expand/TypeExtends/mscorlibObj/Object/class":303,"../expand/TypeExtends/mscorlibObj/Object/export":304,"../expand/TypeExtends/mscorlibObj/ValueType/Color/class":379,"../utils/formart":505,"../utils/reader":509}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./packer");

},{"./packer":14}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e extends Il2Cpp.Object {
  methods=[];
  fields=[];
  invoke(...e) {}
}

class s extends Il2Cpp.Object {
  methods=this.class.methods;
  fields=this.class.fields;
  pack() {
    return new Proxy(this.class, {
      get: (e, s) => (Reflect.set(e, "methods", this.methods), Reflect.set(e, "fields", this.fields), 
      Reflect.get(e, s))
    });
  }
}

function t(e) {
  return "number" == typeof e && (e = ptr(e)), new s(e).fields[12].value;
}

Reflect.set(globalThis, "pack", t);

},{}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), Reflect.defineProperty(Il2Cpp.Class, "prettyString", {
  value: function() {
    var e = Il2Cpp.Class.prototype;
    return "" + (e.isEnum ? "enum" : e.isValueType ? "struct" : e.isInterface ? "interface" : "class");
  }
});

},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

},{}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../base/enum"), e = require("../../java/info"), s = require("../../utils/formart"), r = require("./il2cppM");

class a {
  ins;
  current;
  size;
  title="";
  info;
  extra_class_Str="";
  infoColor=t.LogColor.C36;
  extra_MI=null;
  extra_Str="";
  extraColor=t.LogColor.C90;
  static countMethod=-1;
  static _preCache=new Set;
  static _filterIns=new Array("smull", "strd", "strh", "sbc", "teq");
  constructor(s) {
    this.ins = s, this.current = s.address, this.size = s.size, (0, e.cacheMethods)();
    let i = AddressToMethodNoException(this.current);
    if (i) {
      let t = i;
      this.title = `${t.class.image.assembly.name}.${t.class.name}.${(0, r.getMethodDesFromMethodInfo)(i)} | MI: ${t.handle} & MP: ${t.relativeVirtualAddress}`, 
      ++a.countMethod;
    }
    let n = s.toString();
    a._filterIns.forEach((t => {
      n.includes(t) && (n = `= ${s.address.readPointer().toString()}`);
    })), this.info = `${s.address} ${n}`, a._preCache.has(this.current.toString()) && (this.infoColor = t.LogColor.C32), 
    this.checkExtra();
  }
  setExtra(t) {
    this.extra_Str = t;
  }
  getExtra() {
    return this.extra_Str;
  }
  toString() {
    return `${this.info}${0 == this.extra_Str.length ? "" : "\n\t" + this.extra_Str}`;
  }
  checkExtra() {
    if ([ "bl", "blx", "b", "bx", "b.w", "blx.w", "bl.w", "bne", "beq" ].includes(this.ins.mnemonic)) {
      let t = ptr(this.ins.opStr.replace("#", ""));
      a._preCache.add(t.toString());
      let e = AddressToMethodNoException(t);
      if (e) {
        let t = e;
        this.extra_MI = t, this.extra_Str = `→ ${(0, r.getMethodDesFromMethodInfo)(t)} @ MI ${t.handle} | MP ${t.relativeVirtualAddress}`;
        let s = `${this.current} ( ${this.current.sub(Process.findModuleByAddress(this.current).base)} )`;
        this.extra_class_Str = `${s} | ${t.class.image.assembly.name}(${t.class.image.handle}).${t.class.name}(${t.class.handle})`;
      }
      let s = t.sub(this.ins.address).toInt32();
      Math.abs(s) < 4096 && (this.extra_Str = `${s > 0 ? "↓" : "↑"} ${s / p_size} ( ${ptr(s)} / ${s})`);
    }
  }
}

class i {
  start=ptr(0);
  end=ptr(0);
  extra=new Array;
  get getSubStart() {
    return this.start.sub(Process.findModuleByAddress(this.start).base);
  }
  get getSubEnd() {
    return this.end.sub(Process.findModuleByAddress(this.end).base).sub(p_size);
  }
  set addExtra(t) {
    this.extra.push(t);
  }
}

globalThis.showAsm = (e, r = 64, n = !0) => {
  a.countMethod = -1;
  let o, l = checkPointer(e), h = new i;
  h.start = l;
  let d = new Map;
  if (-1 == r) for (;;) try {
    o = Instruction.parse(l);
    let t = new a(o);
    if (a.countMethod > 0) {
      h.end = l;
      break;
    }
    c(l), d.set(o.address, t), l = o.next;
  } catch (t) {
    h.end = l;
    break;
  } else for (;r-- > 0; ) try {
    o = Instruction.parse(l), d.set(o.address, new a(o)), c(l), l = o.next, h.end = l;
  } catch (t) {
    h.end = l;
    break;
  }
  if (d.forEach(((e, r) => {
    e.title.length > 0 && s.formartClass.printTitile(e.title), n && (-1 != e.info.indexOf("= ") ? LOG(e.info, t.LogColor.C34) : LOG(e.info, e.infoColor)), 
    e.extra_Str.length > 0 && (n ? LOG(`\t${e.extra_Str}`, e.extraColor) : e.extra_Str.includes("→") && (LOG(`\t${e.extra_Str}`, t.LogColor.C36), 
    LOG(`\t\t@${e.extra_class_Str}\n`, e.extraColor), h.addExtra = e.extra_class_Str));
  })), !h.start.isNull()) {
    let t = 0 == h.extra.length ? "" : `| ${h.extra.length} methods`, e = `${h.start} - ${h.end}`, s = `${h.getSubStart} - ${h.getSubEnd}`;
    LOGO(`\nscan asm @ ${e} ( ${s} ) ${t}\n`);
  }
  function c(t) {
    t.toInt32() % 256 == 0 && LOGZ(`scan asm @ ${t}`);
  }
}, globalThis.showAsmSJ = t => LOGJSON(Instruction.parse(checkPointer(t))), globalThis.showAsmSP = t => showAsm(t, -1, !1);

},{"../../base/enum":7,"../../java/info":489,"../../utils/formart":505,"./il2cppM":21}],18:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../../base/globle"), t = require("../../utils/common");

var n;

!function(e) {
  e[e.version_old = 0] = "version_old", e[e.version_new = 1] = "version_new";
}(n || (n = {})), setImmediate((() => {}));

const o = t => {
  try {
    -1 != t.indexOf(e.soName) && r();
  } catch {}
};

function r() {
  try {
    Interceptor.attach(Module.findExportByName(e.soName, "il2cpp_init"), {
      onEnter(e) {},
      onLeave(e) {
        s();
      }
    });
  } catch (e) {}
}

var i = [], c = [];

function s() {
  i.length > 0 && c.length;
}

}).call(this)}).call(this,require("timers").setImmediate)

},{"../../base/globle":9,"../../utils/common":502,"timers":547}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.enumForEach = exports.enumNumToName = void 0;

const e = (e, t, r) => {
  let n = "Unknown";
  return (0, exports.enumForEach)(t, ((t, r, l) => {
    r.includes("value__") || Number(e) === Number(l) && (n = `${r} ( ${l} ) `);
  }), r), n;
};

exports.enumNumToName = e;

const t = (e, t, r) => {
  let n = ptr(0);
  if (n = null == r || null == r || r instanceof NativePointer && r.isNull() ? findClass(e) : r, 
  n.isNull()) throw new Error("Don't find class " + e);
  if (!new Il2Cpp.Class(n).isEnum) throw new Error("Not enum class");
  let l = alloc(), o = ptr(0);
  for (;(o = Il2Cpp.Api._classGetFields(n, l)) && !o.isNull(); ) {
    let e = o.readPointer().readCString(), r = alloc();
    try {
      Il2Cpp.Api._fieldGetStaticValue(o, r);
    } catch {}
    t(o, e, r.readPointer().toInt32());
  }
};

exports.enumForEach = t, globalThis.testCall = () => {
  LOGW((0, exports.enumNumToName)(2, "OperatingSystemFamily")), LOGD(mscorlib.Environment.GetEnvironmentVariableNames().toString()), 
  mscorlib.Environment.GetEnvironmentVariableNames().forEach(((e, t) => {
    LOGD(`${t} ${e}`);
  }));
};

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.setFunctionBool = exports.setFunctionValue = void 0;

const e = require("../../utils/checkP");

let t = (t, o = ptr(0), n = -1) => {
  let s = ptr(t);
  A((0, e.checkCmdInput)(t), ((e, t, s) => {
    -1 != n && (e[n] = o, LOGW(`setFunctionValue: Modify index: ${n} value: ${o}`));
  }), (e => {
    -1 == n && (LOGW(`setFunctionValue | ${s} | ret => { ${e} -> ${o} } `), e.replace(o));
  }));
};

exports.setFunctionValue = t;

const o = (e, t = !1) => (0, exports.setFunctionValue)(e, ptr(t ? 1 : 0));

exports.setFunctionBool = o, globalThis.setFunctionBool = exports.setFunctionBool, 
globalThis.setFunctionValue = exports.setFunctionValue;

},{"../../utils/checkP":501}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getMethodMaxArgNameLength = exports.methodToString = exports.methodToArray = exports.getMethodDesFromMethodInfo = exports.getModifier = exports.getMethodModifier = void 0;

const e = require("../../base/enum"), t = e => {
  let t;
  "number" == typeof e && (e = ptr(e)), t = e instanceof Il2Cpp.Method ? e : "number" == typeof e ? new Il2Cpp.Method(ptr(e)) : new Il2Cpp.Method(e);
  let r = t.flags;
  return (0, exports.getModifier)(r);
};

exports.getMethodModifier = t;

const r = t => {
  let r = "";
  switch (t & e.il2cppTabledefs.METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK) {
   case e.il2cppTabledefs.METHOD_ATTRIBUTE_PRIVATE:
    r += "private ";
    break;

   case e.il2cppTabledefs.METHOD_ATTRIBUTE_PUBLIC:
    r += "public ";
    break;

   case e.il2cppTabledefs.METHOD_ATTRIBUTE_FAMILY:
    r += "protected ";
    break;

   case e.il2cppTabledefs.METHOD_ATTRIBUTE_ASSEM:
   case e.il2cppTabledefs.METHOD_ATTRIBUTE_FAM_AND_ASSEM:
    r += "internal ";
    break;

   case e.il2cppTabledefs.METHOD_ATTRIBUTE_FAM_OR_ASSEM:
    r += "protected internal ";
  }
  return t & e.il2cppTabledefs.METHOD_ATTRIBUTE_STATIC && (r += "static "), t & e.il2cppTabledefs.METHOD_ATTRIBUTE_ABSTRACT ? (r += "abstract ", 
  (t & e.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == e.il2cppTabledefs.METHOD_ATTRIBUTE_REUSE_SLOT && (r += "override ")) : t & e.il2cppTabledefs.METHOD_ATTRIBUTE_FINAL ? (t & e.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == e.il2cppTabledefs.METHOD_ATTRIBUTE_REUSE_SLOT && (r += "sealed override ") : t & e.il2cppTabledefs.METHOD_ATTRIBUTE_VIRTUAL && ((t & e.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == e.il2cppTabledefs.METHOD_ATTRIBUTE_NEW_SLOT ? r += "virtual " : r += "override "), 
  t & e.il2cppTabledefs.METHOD_ATTRIBUTE_PINVOKE_IMPL && (r += "extern "), r;
};

exports.getModifier = r;

const T = e => {
  if ("number" == typeof e && (e = ptr(e)), null == e || e.isNull()) throw new Error("getMethodDesFromMethodPtr: methodPtr can't be null");
  let t = e instanceof Il2Cpp.Method ? e : new Il2Cpp.Method(e), r = "";
  if (r += (0, exports.getMethodModifier)(t), r += (t.returnType.name.includes(">") ? `${t.returnType.name}` : `${t.returnType.name.split(".").pop()}`) + " ", 
  r += t.name, r += "(", 0 != t.parameterCount) for (let e = 0; e < t.parameterCount; e++) {
    let T = t.parameters[e].type;
    r += "" + (T.name.includes(">") ? `${T.name}` : `${T.name.split(".").pop()}`), r += ` ${t.parameters[e].name}`, 
    e != t.parameterCount - 1 && (r += ", "), e == t.parameterCount - 1 && (r += ")");
  } else r += ")";
  return r;
};

exports.getMethodDesFromMethodInfo = T;

const o = new Map, p = e => {
  if (e instanceof NativePointer) return t(new Il2Cpp.Method(e));
  if ("number" == typeof e) return t(new Il2Cpp.Method(ptr(e)));
  if (e instanceof Il2Cpp.Method) return t(e);
  throw new Error("methodToArray: method unknown type");
  function t(e) {
    let t = o.get(e);
    if (null != t) return t;
    let r = [];
    return r.push(e.handle), r.push(e.virtualAddress), r.push(e.virtualAddress.isNull() ? ptr(0) : e.relativeVirtualAddress), 
    r.push((0, exports.getMethodDesFromMethodInfo)(e)), r.push(e.class.handle), r.push(e.class.name), 
    o.set(e, r), r;
  }
};

exports.methodToArray = p;

const s = (e, t = !1, r = "[*]") => {
  let T = (0, exports.methodToArray)(e);
  if (null == T) throw new Error("methodToString: methodToArray return undefined");
  if (t) return `${T[3]} ${e.name.includes("ctor") ? `   { class => ${T[5]}( ${T[4]} ) }` : ""}`;
  let o = `${r} `;
  return o += `${T[0]} ---\x3e `, o += `${T[1]} (${T[2]})`, o += (T[1].isNull() ? "\t\t\t" : "\t") + "|  ", 
  o += `${T[3]}`, e.name.includes(".ctor") && (o += `   { class => ${T[5]}( ${T[4]} ) } `), 
  o;
};

exports.methodToString = s;

const l = e => {
  let t = 0;
  return e.parameters.forEach((e => {
    e.name.length > t && (t = e.name.length);
  })), t;
};

exports.getMethodMaxArgNameLength = l, globalThis.methodToArray = exports.methodToArray;

},{"../../base/enum":7}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./apiFix"), require("./il2cppM"), require("./Il2cppC"), require("./parseFields"), 
require("./enum"), require("./functions"), require("./asmHelper"), require("./offsetManager"), 
require("./dlopen"), require("./inflater"), require("./memory"), require("./packer/include");

},{"./Il2cppC":15,"./apiFix":16,"./asmHelper":17,"./dlopen":18,"./enum":19,"./functions":20,"./il2cppM":21,"./inflater":23,"./memory":24,"./offsetManager":25,"./packer/include":26,"./parseFields":30}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.inflaterMethodLocal = void 0;

const e = (e, t) => {
  let o = ptr(0);
  o = t instanceof NativePointer ? ptr(checkCmdInput(t)) : findClass(t);
  let l = ptr(0);
  if (l = e instanceof NativePointer ? checkCmdInput(e) : "string" == typeof e ? ptr(e) : e instanceof Il2Cpp.Method ? e.handle : ptr(e), 
  l.isNull() || o.isNull()) throw new Error("method_pointer or class_pointer is null");
  let n = new Il2Cpp.Method(l), r = new Il2Cpp.Class(o);
  return n.inflate(r);
};

exports.inflaterMethodLocal = e, globalThis.inflaterMethod = (e, t) => {
  showMethodInfo((0, exports.inflaterMethodLocal)(e, t));
};

},{}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.scan = void 0;

const e = [ "/system/lib/", "/apex/" ];

var t, n = new Array;

!function(e) {
  e[e.INT = 1] = "INT", e[e.FLOAT = 2] = "FLOAT", e[e.Double = 3] = "Double", e[e.STRING = 4] = "STRING";
}(t || (t = {}));

const a = (e = 123456, a = t.INT) => {
  switch (a) {
   case t.INT:
    !function(e) {
      let t = new Array, a = function(e) {
        const t = new ArrayBuffer(4), n = new DataView(t);
        n.setUint32(0, e, !0);
        const a = [];
        for (let e = 0; e < t.byteLength; e++) a.push(n.getUint8(e).toString(16).toUpperCase().padStart(2, "0"));
        return a.join(" ");
      }(e);
      LOGW(a);
      let s = new MatchPattern(a);
      try {
        Process.enumerateRanges("rw-").forEach((n => {
          n.file && LOGZ(`${n.file.path}}`), LOGD(`Scanning ${n.base} - ${n.base.add(n.size)} (${n.size} bytes)`), 
          Memory.scanSync(n.base, n.size, s).forEach((n => {
            t.push(n.address), LOGW(`Found ${e} at ${n.address}`);
          }));
        }));
      } catch {}
      if (0 == n.length) n = t; else {
        let e = new Array;
        for (let a = 0; a < n.length; a++) for (let s = 0; s < t.length; s++) n[a].equals(t[s]) && e.push(n[a]);
        n = e;
      }
    }(e);
    break;

   case t.FLOAT:
    !function(e) {
      let t = new Array, a = function(e) {
        const t = new ArrayBuffer(4), n = new DataView(t);
        n.setFloat32(0, e, !0);
        const a = [];
        for (let e = 0; e < t.byteLength; e++) a.push(n.getUint8(e).toString(16).toUpperCase().padStart(2, "0"));
        return a.join(" ");
      }(e);
      LOGW(a);
      let s = new MatchPattern(a);
      try {
        Process.enumerateRanges("rw-").forEach((n => {
          n.file && LOGZ(`${n.file.path}}`), LOGD(`Scanning ${n.base} - ${n.base.add(n.size)} (${n.size} bytes)`), 
          Memory.scanSync(n.base, n.size, s).forEach((n => {
            t.push(n.address), LOGW(`Found ${e} at ${n.address}`);
          }));
        }));
      } catch {}
      if (0 == n.length) n = t; else {
        let e = new Array;
        for (let a = 0; a < n.length; a++) for (let s = 0; s < t.length; s++) n[a].equals(t[s]) && e.push(n[a]);
        n = e;
      }
    }(e);
    break;

   case t.Double:
    !function(e) {
      let t = new Array, a = function(e) {
        const t = new ArrayBuffer(8), n = new DataView(t);
        n.setFloat64(0, e, !0);
        const a = [];
        for (let e = 0; e < t.byteLength; e++) a.push(n.getUint8(e).toString(16).toUpperCase().padStart(2, "0"));
        return a.join(" ");
      }(e);
      LOGW(a);
      let s = new MatchPattern(a);
      try {
        Process.enumerateRanges("rw-").forEach((n => {
          n.file && LOGZ(`${n.file.path}}`), LOGD(`Scanning ${n.base} - ${n.base.add(n.size)} (${n.size} bytes)`), 
          Memory.scanSync(n.base, n.size, s).forEach((n => {
            t.push(n.address), LOGW(`Found ${e} at ${n.address}`);
          }));
        }));
      } catch {}
      if (0 == n.length) n = t; else {
        let e = new Array;
        for (let a = 0; a < n.length; a++) for (let s = 0; s < t.length; s++) n[a].equals(t[s]) && e.push(n[a]);
        n = e;
      }
    }(e);
    break;

   case t.STRING:
    break;

   default:
    throw new Error("Unknown type");
  }
  if (LOGD(`${n.length} results found`), n.length > 0 && n.length < 20 && LOGJSON(n), 
  1 == n.length) {
    let e = Process.findRangeByAddress(n[0]);
    LOGJSON(e, LogColor.RED);
  }
};

exports.scan = a, globalThis.scan = exports.scan;

},{}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.OffsetManager = void 0;

const s = require("../../utils/formart");

class t {
  static _instance;
  static getInstance() {
    return t._instance || (t._instance = new t), t._instance;
  }
  constructor() {}
  static _offsets=new Map;
  getOffset(s, e) {
    let f = s + "." + e, a = n(f);
    return -1 != a ? a : (this.addClass(s), n(f));
    function n(s) {
      if (t._offsets.has(s)) {
        let e = t._offsets.get(s);
        return null != e ? e : -1;
      }
      return -1;
    }
  }
  setOffset(s, e, f) {
    let a = s + "." + e;
    t._offsets.set(a, f);
  }
  addClass(s) {
    new Il2Cpp.Class(findClass(s)).fields.forEach((t => {
      this.setOffset(s, t.name, t.offset);
    }));
  }
  showCache(e = "") {
    t._offsets.forEach(((t, f) => {
      f.includes(e) && LOGD(`[*] ${s.formartClass.alignStr(ptr(t), 7)} <---   ${f}`);
    }));
  }
}

exports.OffsetManager = t, globalThis.showOffSets = s => t.getInstance().showCache(s), 
globalThis.getOffset = (s, e) => t.getInstance().getOffset(s, e);

},{"../../utils/formart":505}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./packArray"), require("./packList"), require("./packDictionary");

},{"./packArray":27,"./packDictionary":28,"./packList":29}],27:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.PackArray = void 0;

const t = require("../../../expand/TypeExtends/mscorlibObj/Object/Component/Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class");

class e {
  handle;
  Obj;
  constructor(t) {
    this.handle = t;
    try {
      this.Obj = new Il2Cpp.Object(t);
    } catch (t) {
      throw t;
    }
  }
  get length() {
    return this.get_Count();
  }
  get itemClass() {
    return 0 == this.length ? null : this.get_Item(0).class;
  }
  get_Count() {
    return this.Obj.method("System.Collections.Generic.ICollection`1.get_Count").invoke();
  }
  get_Item(t) {
    if (t >= this.get_Count()) throw new Error(`Index out of range: ${t} >= ${this.get_Count()}`);
    return this.Obj.method("System.Collections.Generic.IList`1.get_Item").invoke(t);
  }
  set_Item(t, e) {
    if (t >= this.get_Count()) throw new Error(`Index out of range: ${t} >= ${this.get_Count()}`);
    this.Obj.method("System.Collections.Generic.IList`1.set_Item").invoke(t, e);
  }
  IndexOf(t) {
    return this.Obj.method("System.Collections.Generic.IList`1.IndexOf").invoke(t);
  }
  RemoveAt(t) {
    if (t >= this.get_Count()) throw new Error(`Index out of range: ${t} >= ${this.get_Count()}`);
    return this.Obj.method("System.Collections.Generic.IList`1.RemoveAt").invoke(t);
  }
  forEach(t) {
    if (0 != this.length) for (let e = 0; e < this.get_Count(); e++) t(this.get_Item(e), e);
  }
  getComponent(e) {
    let r;
    return listScripts(e)?.forEach((e => {
      "Text" == e.class.name && (r = new t.Text(e.handle));
    })), r;
  }
  toArray() {
    let t = [];
    return this.forEach((e => t.push(e))), t;
  }
  toArrayStr() {
    let t = [];
    return this.forEach((e => t.push(e.toString()))), t;
  }
  toString() {
    return this.toArrayStr().toString();
  }
  show() {
    showArray(this.handle);
  }
}

exports.PackArray = e, globalThis.packArray = t => new e(checkCmdInput(t));

},{"../../../expand/TypeExtends/mscorlibObj/Object/Component/Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class":218}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.PackDictionary = void 0;

const e = require("./packArray"), t = require("./packList");

class r {
  handle;
  Obj;
  constructor(e) {
    this.handle = e;
    try {
      this.Obj = new Il2Cpp.Object(e);
    } catch (e) {
      throw e;
    }
  }
  get comparer() {
    return this.Obj.method("get_Comparer").invoke();
  }
  get entries() {
    return this.Obj.field("entries").value;
  }
  get buckets() {
    return this.Obj.field("buckets").value;
  }
  get length() {
    return this.get_Count();
  }
  get_Count() {
    return this.Obj.method("get_Count").invoke();
  }
  get_Keys() {
    return new e.PackArray(this.Obj.method("get_Keys").invoke().handle);
  }
  get_Entry() {
    return new e.PackArray(this.entries.handle);
  }
  get_buckets() {
    return new t.PackList(this.buckets.handle);
  }
  Add(e, t) {
    this.Obj.method("Add").invoke(e, t);
  }
  ContainsKey(e) {
    return 1 == this.Obj.method("ContainsKey").invoke(e).handle.readU8();
  }
  ContainsValue(e) {
    return 1 == this.Obj.method("ContainsValue").invoke(e).handle.readU8();
  }
  Clear() {
    this.Obj.method("Clear").invoke();
  }
}

exports.PackDictionary = r, globalThis.PackDictionary = e => new r(checkCmdInput(e));

},{"./packArray":27,"./packList":29}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.PackList = void 0;

class t {
  handle;
  object;
  class;
  _defaultCapacity;
  _emptyArray;
  _size;
  _items;
  _version;
  _syncRoot;
  constructor(t, e = !1) {
    this.handle = t;
    try {
      if (e && t.writePointer(findClass("Object")), this.object = new Il2Cpp.Object(t), 
      this.class = this.object.class, !e && !this.class.name.includes("List`")) throw new Error("Input mPtr is not a list");
      try {
        this._defaultCapacity = this.class.field("_defaultCapacity").value;
      } catch {
        this._defaultCapacity = this.class.field("DefaultCapacity").value;
      }
      try {
        this._emptyArray = this.class.field("_emptyArray").value;
      } catch {
        this._emptyArray = this.class.field("s_emptyArray").value;
      }
      this._items = this.class.field("_items").value, this._size = this.class.field("_size").value, 
      this._version = this.class.field("_version").value, this._syncRoot = this.class.field("_syncRoot").value;
    } catch (t) {
      throw t;
    }
  }
  toString() {
    let t = 0 == this.get_Count() ? "" : ` < '${this.get_Item().class.name}' > `;
    return `${this.handle} ---\x3e ${this.class.name} (${this.object.class.handle}${t} | ${this.get_Count()}/${this.get_Capacity()} )`;
  }
  toShow() {
    newLine(), LOGE(`${new mscorlib.Object(this.handle).toString()} @ ${this.handle}`), 
    LOGJSON(this);
  }
  forEach(t) {
    if (0 != this.get_Count()) for (let e = 0; e < this.get_Count(); e++) t(this.get_Item(e), e);
  }
  toArray() {
    const t = [];
    return this.forEach((e => t.push(e))), t;
  }
  toJsonString() {
    return JSON.stringify(this);
  }
  itemsToString() {
    return this.toArray().map((t => t.toString())).join(getLine(4, " "));
  }
  showList(t) {
    if (0 == this.get_Count()) throw new Error("List is empty");
    LOGZ(`\nList<${this.get_Item().class.name}> ( Count: ${this.get_Count()} / Capacity: ${this.get_Capacity()} )\n`);
    let e = 0, s = new Array;
    this.forEach((i => {
      let o = "-> ";
      if (null != t) {
        let e = t(i);
        o += e, s.push(e.toString().replace('"', "").replace('"', ""));
      }
      let r = lfss(i.handle).toString();
      r = r.length > 200 ? " " : " " + r + " ", LOGD(`[${++e}]  ${i.handle} -> ${i.toString()}${r}${null == t ? "" : o}`);
    })), 0 != s.length && (newLine(), LOGJSON(s));
  }
  get_Item(t = 0) {
    if (t > this.get_Count() - 1) throw new Error(`Index out of range: ${t}`);
    return this.object.method("get_Item").invoke(t);
  }
  set_Item(t = 0, e) {
    return this.object.method("set_Item").invoke(t, e);
  }
  get_Capacity() {
    return this.object.method("get_Capacity").invoke();
  }
  set_Capacity(t) {
    return this.object.method("set_Capacity").invoke(t);
  }
  get_Count() {
    return this.object.method("get_Count").invoke();
  }
  RemoveAt(t = 0) {
    return this.object.method("RemoveAt").invoke(t);
  }
  Add(t) {
    return this.object.method("Add").invoke(t);
  }
  Contains(t) {
    return this.object.method("Contains").invoke(t);
  }
  Clear() {
    return this.object.method("Clear").invoke();
  }
  Reverse() {
    return this.object.method("Reverse").invoke();
  }
  static localArray(t) {
    return t.add(2 * Process.pointerSize).readPointer();
  }
}

exports.PackList = t, globalThis.showList = (e, s) => {
  new t(checkCmdInput(e)).showList(s);
}, globalThis.packList = e => new t(checkCmdInput(e));

},{}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.FieldsParser = void 0;

const e = require("../../base/valueResolve"), t = require("../../utils/formart"), s = require("../../base/base"), r = require("./il2cppM"), l = require("./enum");

class i {
  mPtr;
  mClass;
  constructor(e, t = 0) {
    if ("number" == typeof e) this.mPtr = ptr(e); else if ("string" == typeof e) 0 == e.indexOf("0x") ? this.mPtr = ptr(e) : this.mPtr = findClass(e), 
    this.mPtr.isNull() && LOGE("FieldsParser : Class not found"); else {
      if (!(e instanceof NativePointer)) throw new Error("Input type is not support");
      this.mPtr = e;
    }
    if (null == t || 0 == t) try {
      this.mClass = new Il2Cpp.Object(this.mPtr).class, this.mClass.name;
    } catch {
      this.mPtr.isNull() ? this.mClass = Il2Cpp.Domain.assembly("mscorlib").image.class("System.Object") : this.mClass = new Il2Cpp.Class(this.mPtr), 
      this.mPtr = ptr(0);
    } else {
      let e;
      if ("number" == typeof t) e = ptr(t); else {
        if ("string" == typeof t) throw 0 == t.indexOf("0x") && (e = ptr(t)), new Error("Input string like '0x...' ");
        if ("object" != typeof t) throw new Error("Input type is not support");
        e = ptr(String(t));
      }
      this.mClass = new Il2Cpp.Class(e);
    }
  }
  fieldInstance(e) {
    return this.mPtr.isNull() ? null : this.mClass.field(e);
  }
  fieldValue(e) {
    if (this.mPtr.isNull()) return ptr(0);
    try {
      let t = this.fieldInstance(e);
      return null == t ? ptr(0) : t.isStatic ? a(t).readPointer() : this.mPtr.add(this.fieldOffset(e)).readPointer();
    } catch (e) {
      return ptr(0);
    }
  }
  fieldOffset(e) {
    let t = this.fieldInstance(e);
    return null == t ? -1 : t.offset;
  }
  toShow(e = !1) {
    if (this.mPtr.isNull()) return;
    newLine();
    let s = `Found ${this.mClass.fields.length} fields in class: ${this.mClass.name} (${this.mClass.handle})`;
    if (0 == this.mClass.fields.length ? LOGE(s) : LOGO(s), 0 == this.mClass.fields.length) return newLine();
    LOGO(getLine(50));
    let l = -1;
    this.mClass.fields.sort(((e, t) => e.offset - t.offset)).forEach((s => {
      let i = t.formartClass.alignStr(`[${++l}]`, 6), a = ptr(s.offset), o = (0, r.getModifier)(s.flags).trim(), f = `${s.type.class.name} (${s.type.class.handle})`, h = s.name;
      LOGD(`${i}  ${a} ${o} ${f}\t${h}`);
      let p = n(s, this.mPtr), m = this.mPtr.add(s.offset), u = m.readPointer(), d = "  ---\x3e  ";
      LOGZ(`\t${m}${d}${t.formartClass.alignStr(u)}${0 == String(p).length ? "" : d}${p}`), 
      e || newLine();
    })), LOGO(getLine(50));
  }
  toString() {
    if (this.mPtr.isNull()) return "";
    let e = new Map;
    return this.mClass.fields.sort(((e, t) => e.offset - t.offset)).forEach((t => {
      t.isStatic || e.set(t.name, this.mPtr.add(t.offset).readPointer());
    })), JSON.stringify([ ...e ]).replace(/\"/g, "'").replace(/,/g, ":");
  }
}

exports.FieldsParser = i;

const n = (t, s) => {
  if (t.handle.isNull()) return "";
  if (t.isStatic) return a(t).toString();
  if (t.type.class.isEnum) {
    let e = s.add(t.offset);
    return `Enum : ${(0, l.enumNumToName)(e.readPointer().toInt32(), t.type.class.name, t.type.class.handle)}`;
  }
  if (s.isNull()) return "";
  let r = s.add(t.offset).readPointer();
  return (0, e.FakeCommonType)(t.type, r);
};

function a(e) {
  try {
    let t = alloc();
    return Il2Cpp.Api._fieldGetStaticValue(e.handle, t), t;
  } catch (e) {
    return ptr(0);
  }
}

globalThis.lfss = (e, t = 0) => new i(e, t).toString(), globalThis.lfs = (e, t = 0) => new i(e, t).toShow(), 
globalThis.lfp = e => {
  let t = getTypeParent(e).reverse().map((e => {
    let t = new Il2Cpp.Class(e.handle);
    if (t.isAbstract) {
      let e = Il2Cpp.Image.corlib.class("System.Object");
      return new mscorlib.Type(t.inflate(e).type.handle);
    }
    return e;
  }));
  setTimeout((() => {
    t.reverse().forEach((t => new i(e, t.class).toShow(!0)));
  }), 200), showTypeParent(e);
}, globalThis.lft = (e, t, s) => new i(e, s).fieldInstance(t), globalThis.lfv = (e, t, s) => new i(e, s).fieldValue(t), 
globalThis.lfo = (e, t, s) => new i(e, s).fieldOffset(t), globalThis.lfvt = (e, t, s) => {
  try {
    return new i(e, s).fieldValue(t);
  } catch {
    return new NativePointer(0);
  }
}, globalThis.lms = e => s.HookerBase.showMethods(new Il2Cpp.Object(checkCmdInput(e)).class.handle);

},{"../../base/base":4,"../../base/valueResolve":12,"../../utils/formart":505,"./enum":19,"./il2cppM":21}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./expand/include"), require("./fix/include");

},{"./expand/include":13,"./fix/include":22}],32:[function(require,module,exports){
"use strict";

function t(t, e, n, o = -1, u, i) {
  try {
    return r(t, e, n, o, [], u, i);
  } catch (t) {
    return LOGE(t), ptr(0);
  }
}

function e(t, e, n, o = -1, u, i) {
  return r(t, e, n, o, [], u, i);
}

function r(t, e, r, n = -1, o, u, i) {
  let l = findMethod(t, e, r, n, o, !1);
  if (null == l) throw new Error(`method ${r} not found`);
  let p = l.virtualAddress;
  if (null == p) throw new Error("Could not find method");
  return new NativeFunction(p, u, i);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), Il2Cpp.Api.e = e, Il2Cpp.Api.t = t, Il2Cpp.Api.o = r;

},{}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../../../bridge/fix/il2cppM"), a = (e, a = ptr(0)) => {
  if (null == e) return;
  let l;
  LOGW(getLine(80)), l = a.isNull() ? new Il2Cpp.Class(findClass(e)) : new Il2Cpp.Class(a);
  let r = l.namespace.replace(".", "_") + "_" + l.name + "_Impl", s = l.parent?.namespace.replace(".", "_") + "_" + l.parent?.name + "_Impl";
  LOGD(`\nclass ${r} extends ${s} {\n`), l.fields.forEach((e => {
    let a = t(e.type.name.replace(".", "_"));
    LOGD(`\t${e.name}: ${a} = lfv(this.handle, "${e.name}") as unknown as ${a}`);
  })), LOGD("\n\tconstructor(handleOrWrapper: NativePointer) {"), LOGD("\t\t super(handleOrWrapper)"), 
  LOGD("\t}\n");
  let p = l.methods, i = new Array, m = new Set;
  p.forEach((a => {
    let r = a.parameters.map((e => e.name + ":" + e.type.name.replace(".", "_").replace("&", "").replace("[]", "_Array"))).join(", "), s = a.parameters.map((e => e.name)).join(", "), p = a.isStatic ? "static " : "", c = i.includes(a.name) ? `_${a.parameterCount}` : "", $ = a.name.includes("ctor") ? a.name.concat(`_${a.class.name}`) : a.name, o = a.returnType.name.replace(".", "_"), L = `\t${p}${$.replace(".", "_")}${c}(${r}): ${t(o)} {`;
    m.add(o), L = t(L);
    let O = a.isStatic ? "" : 0 == a.parameters.length ? "this.handle" : "this.handle , ", G = "_" + a.name.replace(".", "_"), d = `${n(e) ? "mscorlib" : "Il2Cpp"}.Api.${l.name}.${G}(${O}${s})`;
    "System.String" == a.returnType.name && (d = "readU16(" + d + ")");
    LOGD(`${L} \n ${`\t\treturn ${d}`} \n \t} \n`), m.add(a.returnType.name.replace(".", "_")), 
    i.push(a.name);
  })), LOGD("}\n"), m.forEach((e => {
    LOGD(`type ${e} = NativePointer`);
  })), newLine(), LOGD(`${n(e) ? "mscorlib" : "Il2Cpp"}.${e} = ${r}\n`), LOGD("declare global {"), 
  LOGD(`\tnamespace ${n(e) ? "mscorlib" : "Il2Cpp"}{`), LOGD(`\t\tclass ${e} extends ${r} { }`), 
  LOGD("\t}"), LOGD("}\n"), LOGD(`export { ${r} } `), newLine(), LOGW(getLine(80));
}, t = e => e, n = e => {
  let a = !1;
  return Il2Cpp.Domain.assembly("mscorlib").image.classes.forEach((t => {
    t.name == e && (a = !0);
  })), a;
}, l = (a, t = ptr(0)) => {
  if (null == a) return;
  let l;
  LOGW(getLine(80)), l = t.isNull() ? new Il2Cpp.Class(findClass(a)) : new Il2Cpp.Class(t);
  let r = l.namespace.replace(".", "_") + "_" + l.name + "_API";
  LOGD('import { cache } from "decorator-cache-getter"\n'), LOGD(`class ${r} {`);
  let s = l.methods, p = new Array;
  s.forEach((t => {
    LOGZ(`\t// ${(0, e.getMethodDesFromMethodInfo)(t)}`);
    let n = "";
    t.isStatic || (n += '"pointer"');
    for (let e = 0; e < t.parameters.length; e++) n += ',"pointer"';
    n.startsWith(",") && (n = n.substring(1)), n = `[${n}]`, LOGD("\t@cache");
    let l = t.name.replace(".", "_");
    if (p.includes(t.name)) {
      let e = t.parameters.map((e => e.name)).join("_");
      l += "_" + e;
    }
    LOGD(`\tstatic get _${l}() {`);
    let r = t.returnType.name;
    r = "System.Void" == r ? "void" : "pointer";
    let s = 0 == t.class.namespace.length ? "" : `${t.class.namespace}.`;
    {
      let e = `[${t.parameters.map((e => `"${e.type.name}"`)).join(",")}]`;
      LOGD(`\t\treturn Il2Cpp.Api.o("${t.class.image.assembly.name}", "${s}${a}", "${t.name}", ${t.parameters.length}, ${e}, "${r}", ${n})`);
    }
    LOGD("\t}\n"), p.push(t.name);
  })), LOGD("}\n"), LOGE(`Il2Cpp.Api.${a} = ${r}\n`), LOGD("declare global {"), LOGD(`\tnamespace ${n(a) ? "mscorlib" : "Il2Cpp"}.Api{`), 
  LOGD(`\t\tclass ${a} extends ${r} { }`), LOGD("\t}"), LOGD("}\n"), LOGD("export { }\n"), 
  LOGW(getLine(80));
}, r = (e, a = ptr(0)) => {
  let t;
  LOGW(getLine(80)), t = a.isNull() ? new Il2Cpp.Class(findClass(e)) : new Il2Cpp.Class(a), 
  LOGE(`export enum ${t.namespace.replace(".", "_")}_${t.name} {`), t.fields.forEach((e => {
    Il2Cpp.Api._typeGetTypeEnum, LOGD(`\t${e.name} = ${e}`);
  })), LOGO("}\n");
}, s = (e, a = ptr(0)) => {
  if (null == e) return;
  let t;
  LOGW(getLine(80)), t = a.isNull() ? new Il2Cpp.Class(findClass(e)) : new Il2Cpp.Class(a);
  let n = t.namespace.replace(".", "_") + "_" + t.name;
  LOGD(`interface ${n} {`), t.methods.forEach((e => {
    let a = "";
    for (let t = 0; t < e.parameters.length; t++) a += `,${e.parameters[t].name}: ${e.parameters[t].type.name.replace(".", "_")}`;
    a.startsWith(",") && (a = a.substring(1)), LOGD(`\t${e.name}: (instance: NativePointer, ${a}) => ${e.returnType.name.replace(".", "_")}`);
  })), LOGD("}\n");
};

globalThis.generateClass = a, globalThis.generateApi = l, globalThis.generateFieldEnum = r, 
globalThis.generateInterface = s;

},{"../../../bridge/fix/il2cppM":21}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./apiExtends/apiExtends"), require("./apiExtends/generator"), require("./mscorlibObj/include"), 
require("./thread/include");

},{"./apiExtends/apiExtends":32,"./apiExtends/generator":33,"./mscorlibObj/include":470,"./thread/include":472}],35:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, o = arguments.length, s = o < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, n, i); else for (var p = t.length - 1; p >= 0; p--) (r = t[p]) && (s = (o < 3 ? r(s) : o > 3 ? r(e, n, s) : r(e, n)) || s);
  return o > 3 && s && Object.defineProperty(e, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _get_pointerEnter() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerEnter", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerEnter() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerEnter", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_lastPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_lastPress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_lastPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_lastPress", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_rawPointerPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_rawPointerPress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_rawPointerPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_rawPointerPress", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pointerDrag() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerDrag", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerDrag() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerDrag", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pointerCurrentRaycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerCurrentRaycast", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerCurrentRaycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerCurrentRaycast", 1, [ "UnityEngine.EventSystems.RaycastResult" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pointerPressRaycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerPressRaycast", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerPressRaycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerPressRaycast", 1, [ "UnityEngine.EventSystems.RaycastResult" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_eligibleForClick() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_eligibleForClick", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_eligibleForClick() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_eligibleForClick", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pointerId() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerId", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerId() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerId", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_position() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_position", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_position() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_position", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_delta() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_delta", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_delta() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_delta", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pressPosition() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pressPosition", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pressPosition() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pressPosition", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_worldPosition() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_worldPosition", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_worldPosition() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_worldPosition", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_worldNormal() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_worldNormal", 0, [], "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_worldNormal() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_worldNormal", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_clickTime() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_clickTime", 0, [], "float", [ "pointer" ]);
  }
  static get _set_clickTime() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_clickTime", 1, [ "System.Single" ], "void", [ "pointer", "float" ]);
  }
  static get _get_clickCount() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_clickCount", 0, [], "int32", [ "pointer" ]);
  }
  static get _set_clickCount() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_clickCount", 1, [ "System.Int32" ], "void", [ "pointer", "int32" ]);
  }
  static get _get_scrollDelta() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_scrollDelta", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_scrollDelta() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_scrollDelta", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_useDragThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_useDragThreshold", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_useDragThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_useDragThreshold", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_dragging() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_dragging", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_dragging() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_dragging", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_button() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_button", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_button() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_button", 1, [ "UnityEngine.EventSystems.PointerEventData.InputButton" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", ".ctor", 1, [ "UnityEngine.EventSystems.EventSystem" ], "void", [ "pointer", "pointer" ]);
  }
  static get _IsPointerMoving() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "IsPointerMoving", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsScrolling() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "IsScrolling", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_enterEventCamera() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_enterEventCamera", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_pressEventCamera() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pressEventCamera", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_pointerPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerPress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pointerPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerPress", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_pointerClick() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerClick", 0, "pointer", [ "pointer" ]);
  }
  static get _set_pointerClick() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerClick", 1, "void", [ "pointer", "pointer" ]);
  }
}

t([ e.cache ], n, "_get_pointerEnter", null), t([ e.cache ], n, "_set_pointerEnter", null), 
t([ e.cache ], n, "_get_lastPress", null), t([ e.cache ], n, "_set_lastPress", null), 
t([ e.cache ], n, "_get_rawPointerPress", null), t([ e.cache ], n, "_set_rawPointerPress", null), 
t([ e.cache ], n, "_get_pointerDrag", null), t([ e.cache ], n, "_set_pointerDrag", null), 
t([ e.cache ], n, "_get_pointerCurrentRaycast", null), t([ e.cache ], n, "_set_pointerCurrentRaycast", null), 
t([ e.cache ], n, "_get_pointerPressRaycast", null), t([ e.cache ], n, "_set_pointerPressRaycast", null), 
t([ e.cache ], n, "_get_eligibleForClick", null), t([ e.cache ], n, "_set_eligibleForClick", null), 
t([ e.cache ], n, "_get_pointerId", null), t([ e.cache ], n, "_set_pointerId", null), 
t([ e.cache ], n, "_get_position", null), t([ e.cache ], n, "_set_position", null), 
t([ e.cache ], n, "_get_delta", null), t([ e.cache ], n, "_set_delta", null), t([ e.cache ], n, "_get_pressPosition", null), 
t([ e.cache ], n, "_set_pressPosition", null), t([ e.cache ], n, "_get_worldPosition", null), 
t([ e.cache ], n, "_set_worldPosition", null), t([ e.cache ], n, "_get_worldNormal", null), 
t([ e.cache ], n, "_set_worldNormal", null), t([ e.cache ], n, "_get_clickTime", null), 
t([ e.cache ], n, "_set_clickTime", null), t([ e.cache ], n, "_get_clickCount", null), 
t([ e.cache ], n, "_set_clickCount", null), t([ e.cache ], n, "_get_scrollDelta", null), 
t([ e.cache ], n, "_set_scrollDelta", null), t([ e.cache ], n, "_get_useDragThreshold", null), 
t([ e.cache ], n, "_set_useDragThreshold", null), t([ e.cache ], n, "_get_dragging", null), 
t([ e.cache ], n, "_set_dragging", null), t([ e.cache ], n, "_get_button", null), 
t([ e.cache ], n, "_set_button", null), t([ e.cache ], n, "__ctor", null), t([ e.cache ], n, "_IsPointerMoving", null), 
t([ e.cache ], n, "_IsScrolling", null), t([ e.cache ], n, "_get_enterEventCamera", null), 
t([ e.cache ], n, "_get_pressEventCamera", null), t([ e.cache ], n, "_get_pointerPress", null), 
t([ e.cache ], n, "_set_pointerPress", null), t([ e.cache ], n, "_ToString", null), 
t([ e.cache ], n, "_get_pointerClick", null), t([ e.cache ], n, "_set_pointerClick", null), 
Il2Cpp.Api.PointerEventData = n;

},{"decorator-cache-getter":513}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_PointerEventData_Impl = void 0;

const e = require("../../../Object/Component/Behavior/Camera/class"), t = require("../../../Object/GameObject/class"), n = require("../../../ValueType/Vector2/class"), r = require("../../../ValueType/Vector3/class"), i = require("../class");

class a extends i.UnityEngine_EventSystems_BaseEventData_Impl {
  hovered=lfv(this.handle, "hovered");
  m_PointerPress=new t.GameObjectImpl(lfv(this.handle, "m_PointerPress"));
  constructor(e) {
    super(e);
  }
  get_pointerEnter() {
    return new t.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerEnter(this.handle));
  }
  set_pointerEnter(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerEnter(this.handle, e.handle);
  }
  get_lastPress() {
    return new t.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_lastPress(this.handle));
  }
  set_lastPress(e) {
    return Il2Cpp.Api.PointerEventData._set_lastPress(this.handle, e.handle);
  }
  get_rawPointerPress() {
    return new t.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_rawPointerPress(this.handle));
  }
  set_rawPointerPress(e) {
    return Il2Cpp.Api.PointerEventData._set_rawPointerPress(this.handle, e.handle);
  }
  get_pointerDrag() {
    return new t.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerDrag(this.handle));
  }
  set_pointerDrag(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerDrag(this.handle, e.handle);
  }
  get_pointerCurrentRaycast() {
    return Il2Cpp.Api.PointerEventData._get_pointerCurrentRaycast(this.handle);
  }
  set_pointerCurrentRaycast(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerCurrentRaycast(this.handle, e);
  }
  get_pointerPressRaycast() {
    return Il2Cpp.Api.PointerEventData._get_pointerPressRaycast(this.handle);
  }
  set_pointerPressRaycast(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerPressRaycast(this.handle, e);
  }
  get_eligibleForClick() {
    return !Il2Cpp.Api.PointerEventData._get_eligibleForClick(this.handle).isNull();
  }
  set_eligibleForClick(e) {
    return Il2Cpp.Api.PointerEventData._set_eligibleForClick(this.handle, e ? ptr(1) : ptr(0));
  }
  get_pointerId() {
    return Il2Cpp.Api.PointerEventData._get_pointerId(this.handle).toInt32();
  }
  set_pointerId(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerId(this.handle, e).toInt32();
  }
  get_position() {
    return new n.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_position(this.handle));
  }
  set_position(e) {
    return Il2Cpp.Api.PointerEventData._set_position(this.handle, e.handle);
  }
  get_delta() {
    return new n.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_delta(this.handle));
  }
  set_delta(e) {
    return Il2Cpp.Api.PointerEventData._set_delta(this.handle, e.handle);
  }
  get_pressPosition() {
    return new n.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_pressPosition(this.handle));
  }
  set_pressPosition(e) {
    return Il2Cpp.Api.PointerEventData._set_pressPosition(this.handle, e.handle);
  }
  get_worldPosition() {
    return new r.UnityEngine_Vector3_Impl(Il2Cpp.Api.PointerEventData._get_worldPosition(this.handle));
  }
  set_worldPosition(e) {
    return Il2Cpp.Api.PointerEventData._set_worldPosition(this.handle, e.handle);
  }
  get_worldNormal() {
    const e = alloc(16);
    return Il2Cpp.Api.PointerEventData._get_worldNormal(e, this.handle), new r.UnityEngine_Vector3_Impl(e);
  }
  set_worldNormal(e) {
    return Il2Cpp.Api.PointerEventData._set_worldNormal(this.handle, e.handle);
  }
  get_clickTime() {
    return Il2Cpp.Api.PointerEventData._get_clickTime(this.handle);
  }
  set_clickTime(e) {
    return Il2Cpp.Api.PointerEventData._set_clickTime(this.handle, e);
  }
  get_clickCount() {
    return Il2Cpp.Api.PointerEventData._get_clickCount(this.handle);
  }
  set_clickCount(e) {
    return Il2Cpp.Api.PointerEventData._set_clickCount(this.handle, e);
  }
  get_scrollDelta() {
    return new n.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_scrollDelta(this.handle));
  }
  set_scrollDelta(e) {
    return Il2Cpp.Api.PointerEventData._set_scrollDelta(this.handle, e.handle);
  }
  get_useDragThreshold() {
    return !Il2Cpp.Api.PointerEventData._get_useDragThreshold(this.handle).isNull();
  }
  set_useDragThreshold(e) {
    return Il2Cpp.Api.PointerEventData._set_useDragThreshold(this.handle, e ? ptr(1) : ptr(0));
  }
  get_dragging() {
    return !Il2Cpp.Api.PointerEventData._get_dragging(this.handle).isNull();
  }
  set_dragging(e) {
    return Il2Cpp.Api.PointerEventData._set_dragging(this.handle, e ? ptr(1) : ptr(0));
  }
  get_button() {
    return Il2Cpp.Api.PointerEventData._get_button(this.handle);
  }
  set_button(e) {
    return Il2Cpp.Api.PointerEventData._set_button(this.handle, e);
  }
  __ctor(e) {
    return Il2Cpp.Api.PointerEventData.__ctor(this.handle, e);
  }
  IsPointerMoving() {
    return !Il2Cpp.Api.PointerEventData._IsPointerMoving(this.handle).isNull();
  }
  IsScrolling() {
    return !Il2Cpp.Api.PointerEventData._IsScrolling(this.handle).isNull();
  }
  get_enterEventCamera() {
    return new e.UnityEngine_Camera(Il2Cpp.Api.PointerEventData._get_enterEventCamera(this.handle));
  }
  get_pressEventCamera() {
    return new e.UnityEngine_Camera(Il2Cpp.Api.PointerEventData._get_pressEventCamera(this.handle));
  }
  get_pointerPress() {
    return new t.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerPress(this.handle));
  }
  set_pointerPress(e) {
    return Il2Cpp.Api.PointerEventData._set_pointerPress(this.handle, e.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.PointerEventData._ToString(this.handle));
  }
}

exports.UnityEngine_EventSystems_PointerEventData_Impl = a, Il2Cpp.PointerEventData = a;

},{"../../../Object/Component/Behavior/Camera/class":163,"../../../Object/GameObject/class":279,"../../../ValueType/Vector2/class":439,"../../../ValueType/Vector3/class":443,"../class":41}],37:[function(require,module,exports){
"use strict";

var t;

!function(t) {
  t[t.Left = 0] = "Left", t[t.Middle = 2] = "Middle", t[t.Right = 1] = "Right";
}(t || (t = {}));

},{}],38:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.showEventData = void 0;

const t = require("./class"), e = e => {
  LOGO(`${getLine(15)} EventData ${getLine(15)}`);
  let n = new t.UnityEngine_EventSystems_PointerEventData_Impl(e), a = allocVector();
  callFunction(find_method("UnityEngine.UI", "PointerEventData", "get_position", 0), a, e), 
  LOGD("ClickPositon\t---\x3e\t" + a.readFloat() + "\t" + a.add(p_size).readFloat()), 
  LOGD("clickTime\t---\x3e\t" + n.get_clickTime()), LOGD("clickCount\t---\x3e\t" + n.get_clickCount());
  let o = allocVector();
  callFunction(find_method("UnityEngine.UI", "PointerEventData", "get_delta", 0), allocVector(), e), 
  LOGD("delta\t\t---\x3e\t" + o.readFloat() + "\t" + o.add(p_size).readFloat());
};

exports.showEventData = e, globalThis.showEventData = e;

},{"./class":36}],39:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./enum");

},{"./api":35,"./class":36,"./enum":37,"./export":38}],40:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, c) {
  var r, i = arguments.length, s = i < 3 ? t : null === c ? c = Object.getOwnPropertyDescriptor(t, n) : c;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, c); else for (var o = e.length - 1; o >= 0; o--) (r = e[o]) && (s = (i < 3 ? r(s) : i > 3 ? r(t, n, s) : r(t, n)) || s);
  return i > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", ".ctor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_currentInputModule() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "get_currentInputModule", 0, "pointer", [ "pointer" ]);
  }
  static get _get_selectedObject() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "get_selectedObject", 0, "pointer", [ "pointer" ]);
  }
  static get _set_selectedObject() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "set_selectedObject", 1, "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_currentInputModule", null), 
e([ t.cache ], n, "_get_selectedObject", null), e([ t.cache ], n, "_set_selectedObject", null), 
Il2Cpp.Api.BaseEventData = n;

},{"decorator-cache-getter":513}],41:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_BaseEventData_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_EventSystems_AbstractEventData_Impl {
  m_EventSystem=lfv(this.handle, "m_EventSystem");
  constructor(e) {
    super(e);
  }
  __ctor(e) {
    return Il2Cpp.Api.BaseEventData.__ctor(this.handle, e);
  }
  get_currentInputModule() {
    return Il2Cpp.Api.BaseEventData._get_currentInputModule(this.handle);
  }
  get_selectedObject() {
    return Il2Cpp.Api.BaseEventData._get_selectedObject(this.handle);
  }
  set_selectedObject(e) {
    return Il2Cpp.Api.BaseEventData._set_selectedObject(this.handle, e);
  }
}

exports.UnityEngine_EventSystems_BaseEventData_Impl = t, Il2Cpp.BaseEventData = t;

},{"../class":44}],42:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./PointerEventData/include"), require("./api"), require("./class");

},{"./PointerEventData/include":39,"./api":40,"./class":41}],43:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, r) {
  var i, c = arguments.length, s = c < 3 ? e : null === r ? r = Object.getOwnPropertyDescriptor(e, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, n, r); else for (var a = t.length - 1; a >= 0; a--) (i = t[a]) && (s = (c < 3 ? i(s) : c > 3 ? i(e, n, s) : i(e, n)) || s);
  return c > 3 && s && Object.defineProperty(e, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _Reset() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "Reset", 0, "void", [ "pointer" ]);
  }
  static get _Use() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "Use", 0, "void", [ "pointer" ]);
  }
  static get _get_used() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "get_used", 0, "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", ".ctor", 0, "void", [ "pointer" ]);
  }
}

t([ e.cache ], n, "_Reset", null), t([ e.cache ], n, "_Use", null), t([ e.cache ], n, "_get_used", null), 
t([ e.cache ], n, "__ctor", null), Il2Cpp.Api.AbstractEventData = n;

},{"decorator-cache-getter":513}],44:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_AbstractEventData_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  m_Used=lfv(this.handle, "m_Used");
  constructor(t) {
    super(t);
  }
  Reset() {
    return Il2Cpp.Api.AbstractEventData._Reset(this.handle);
  }
  Use() {
    return Il2Cpp.Api.AbstractEventData._Use(this.handle);
  }
  get_used() {
    return Il2Cpp.Api.AbstractEventData._get_used(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.AbstractEventData.__ctor(this.handle);
  }
}

exports.UnityEngine_EventSystems_AbstractEventData_Impl = e, Il2Cpp.AbstractEventData = e;

},{"../class":468}],45:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./BaseEventData/include"), require("./api"), require("./class"), require("./interface");

},{"./BaseEventData/include":42,"./api":43,"./class":44,"./interface":46}],46:[function(require,module,exports){
"use strict";

},{}],47:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, a = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (a = (o < 3 ? r(a) : o > 3 ? r(t, n, a) : r(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_debug() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "get_debug", 0, [], "pointer", []);
  }
  static get _set_debug() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "set_debug", 1, [ "System.Boolean" ], "void", [ "pointer" ]);
  }
  static get _GetConstructorID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetConstructorID", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetConstructorID_javaClass_signature() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetConstructorID", 2, [ "System.IntPtr", "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMethodID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetMethodID", 2, [ "System.IntPtr", "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMethodID_javaClass_methodName_signature() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetMethodID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetMethodID_javaClass_methodName_signature_isStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetMethodID", 4, [ "System.IntPtr", "System.String", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetFieldID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetFieldID", 2, [ "System.IntPtr", "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFieldID_javaClass_fieldName_signature() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetFieldID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetFieldID_javaClass_fieldName_signature_isStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetFieldID", 4, [ "System.IntPtr", "System.String", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateJavaRunnable() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "CreateJavaRunnable", 1, [ "UnityEngine.AndroidJavaRunnable" ], "pointer", [ "pointer" ]);
  }
  static get _CreateJavaProxy() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "CreateJavaProxy", 1, [ "UnityEngine.AndroidJavaProxy" ], "pointer", [ "pointer" ]);
  }
  static get _ConvertToJNIArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "ConvertToJNIArray", 1, [ "System.Array" ], "pointer", [ "pointer" ]);
  }
  static get _CreateJNIArgArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "CreateJNIArgArray", 1, [ "System.Object[]" ], "pointer", [ "pointer" ]);
  }
  static get _DeleteJNIArgArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "DeleteJNIArgArray", 2, [ "System.Object[]", "UnityEngine.jvalue[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetConstructorID_jclass_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetConstructorID", 2, [ "System.IntPtr", "System.Object[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMethodID_jclass_methodName_args_isStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetMethodID", 4, [ "System.IntPtr", "System.String", "System.Object[]", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetSignature() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetSignature", 1, [ "System.Object" ], "pointer", [ "pointer" ]);
  }
  static get _GetSignature_Object_array() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetSignature", 1, [ "System.Object[]" ], "pointer", [ "pointer" ]);
  }
  static get _ConvertFromJNIArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "ConvertFromJNIArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetFieldID_jclass_fieldName_isStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetFieldID", 3, [ "System.IntPtr", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetSignature_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNIHelper", "GetSignature", 1, [ "System.Object[]" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_debug", null), e([ t.cache ], n, "_set_debug", null), e([ t.cache ], n, "_GetConstructorID", null), 
e([ t.cache ], n, "_GetConstructorID_javaClass_signature", null), e([ t.cache ], n, "_GetMethodID", null), 
e([ t.cache ], n, "_GetMethodID_javaClass_methodName_signature", null), e([ t.cache ], n, "_GetMethodID_javaClass_methodName_signature_isStatic", null), 
e([ t.cache ], n, "_GetFieldID", null), e([ t.cache ], n, "_GetFieldID_javaClass_fieldName_signature", null), 
e([ t.cache ], n, "_GetFieldID_javaClass_fieldName_signature_isStatic", null), e([ t.cache ], n, "_CreateJavaRunnable", null), 
e([ t.cache ], n, "_CreateJavaProxy", null), e([ t.cache ], n, "_ConvertToJNIArray", null), 
e([ t.cache ], n, "_CreateJNIArgArray", null), e([ t.cache ], n, "_DeleteJNIArgArray", null), 
e([ t.cache ], n, "_GetConstructorID_jclass_args", null), e([ t.cache ], n, "_GetMethodID_jclass_methodName_args_isStatic", null), 
e([ t.cache ], n, "_GetSignature", null), e([ t.cache ], n, "_GetSignature_Object_array", null), 
e([ t.cache ], n, "_ConvertFromJNIArray", null), e([ t.cache ], n, "_GetFieldID_jclass_fieldName_isStatic", null), 
e([ t.cache ], n, "_GetSignature_args", null), Il2Cpp.Api.AndroidJNIHelper = n;

},{"decorator-cache-getter":513}],48:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AndroidJNIHelper_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  static get_debug() {
    return Il2Cpp.Api.AndroidJNIHelper._get_debug();
  }
  static set_debug(e) {
    return Il2Cpp.Api.AndroidJNIHelper._set_debug(e);
  }
  static GetConstructorID(e) {
    return Il2Cpp.Api.AndroidJNIHelper._GetConstructorID(e);
  }
  static GetConstructorID_javaClass_signature(e, t) {
    return Il2Cpp.Api.AndroidJNIHelper._GetConstructorID(e, t);
  }
  static GetMethodID_javaClass_methodName(e, t) {
    return Il2Cpp.Api.AndroidJNIHelper._GetMethodID(e, t);
  }
  static GetMethodID_javaClass_methodName_signature(e, t, r) {
    return Il2Cpp.Api.AndroidJNIHelper._GetMethodID(e, t, r);
  }
  static GetMethodID_javaClass_methodName_signature_isStatic(e, t, r, i) {
    return Il2Cpp.Api.AndroidJNIHelper._GetMethodID(e, t, r, i);
  }
  static GetFieldID(e, t) {
    return Il2Cpp.Api.AndroidJNIHelper._GetFieldID(e, t);
  }
  static GetFieldID_javaClass_fieldName_signature(e, t, r) {
    return Il2Cpp.Api.AndroidJNIHelper._GetFieldID(e, t, r);
  }
  static GetFieldID_4(e, t, r, i) {
    return Il2Cpp.Api.AndroidJNIHelper._GetFieldID(e, t, r, i);
  }
  static CreateJavaRunnable(e) {
    return Il2Cpp.Api.AndroidJNIHelper._CreateJavaRunnable(e);
  }
  static CreateJavaProxy(e) {
    return Il2Cpp.Api.AndroidJNIHelper._CreateJavaProxy(e);
  }
  static ConvertToJNIArray(e) {
    return Il2Cpp.Api.AndroidJNIHelper._ConvertToJNIArray(e);
  }
  static CreateJNIArgArray(e) {
    return Il2Cpp.Api.AndroidJNIHelper._CreateJNIArgArray(e);
  }
  static DeleteJNIArgArray(e, t) {
    return Il2Cpp.Api.AndroidJNIHelper._DeleteJNIArgArray(e, t);
  }
  static GetConstructorID_2(e, t) {
    return Il2Cpp.Api.AndroidJNIHelper._GetConstructorID(e, t);
  }
  static GetMethodID_4(e, t, r, i) {
    return Il2Cpp.Api.AndroidJNIHelper._GetMethodID(e, t, r, i);
  }
  static GetSignature(e) {
    return readU16(Il2Cpp.Api.AndroidJNIHelper._GetSignature(e));
  }
  static GetSignature_1(e) {
    return readU16(Il2Cpp.Api.AndroidJNIHelper._GetSignature(e));
  }
  static ConvertFromJNIArray(e) {
    return Il2Cpp.Api.AndroidJNIHelper._ConvertFromJNIArray(e);
  }
  static GetMethodID_jclass_methodName_args_isStatic(e, t, r, i) {
    return Il2Cpp.Api.AndroidJNIHelper._GetMethodID(e, t, r, i);
  }
  static GetFieldID_jclass_fieldName_isStatic(e, t, r) {
    return Il2Cpp.Api.AndroidJNIHelper._GetFieldID(e, t, r);
  }
  static GetSignature_args(e) {
    return readU16(Il2Cpp.Api.AndroidJNIHelper._GetSignature(e));
  }
}

exports.UnityEngine_AndroidJNIHelper_Impl = t, Il2Cpp.AndroidJNIHelper = t;

},{"../class":468}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getAndroidFieldNameFromHandle = exports.getAndroidMethodNameFromHandle = exports.listAndroidFieldID = exports.listAndroidMethodID = void 0;

const e = require("../../../../utils/formart");

let t = new Map, i = new Map;

const r = () => {
  null != Il2Cpp.Api.AndroidJNIHelper._GetMethodID_javaClass_methodName_signature_isStatic && A(Il2Cpp.Api.AndroidJNIHelper._GetMethodID_javaClass_methodName_signature_isStatic, ((e, t, i) => {
    i.set("value", [ e[0], readU16(e[1]), readU16(e[2]), e[3] ]);
  }), ((e, i, r) => {
    t.set(e.toString(), r.get("value"));
  }));
}, o = () => {
  null != Il2Cpp.Api.AndroidJNIHelper._GetFieldID_javaClass_fieldName_signature_isStatic && A(Il2Cpp.Api.AndroidJNIHelper._GetFieldID_javaClass_fieldName_signature_isStatic, ((e, t, i) => {
    i.set("value", [ e[0], readU16(e[1]), readU16(e[2]), e[3] ]);
  }), ((e, t, r) => {
    i.set(e.toString(), r.get("value"));
  }));
}, d = () => {
  if (0 != t.size) {
    LOGD(`[+] listAndroidMethodID ( count:${t.size} ) ↓ `);
    for (let [i, [r, o, d, l]] of t) LOGD(`\t[-] ${e.formartClass.alignStr(i, 14)} ->   ${r} ${l} ${o} ${d}`);
  }
};

exports.listAndroidMethodID = d;

const l = () => {
  if (0 != i.size) {
    LOGD(`[+] listAndroidFieldID ( count:${i.size} ) ↓ `);
    for (let [t, [r, o, d, l]] of i) LOGD(`\t[-] ${e.formartClass.alignStr(t, 14)} ->   ${r} ${l} ${o} ${d}`);
  }
};

exports.listAndroidFieldID = l;

const s = e => {
  for (let [i, [r, o, d, l]] of t) if (i == e.toString()) return o;
  return "Unknown";
};

exports.getAndroidMethodNameFromHandle = s;

const n = e => {
  for (let [t, [r, o, d, l]] of i) if (t == e.toString()) return o;
  return "Unknown";
};

exports.getAndroidFieldNameFromHandle = n, globalThis.listAndroidMethodID = exports.listAndroidMethodID, 
globalThis.listAndroidFieldID = exports.listAndroidFieldID;

},{"../../../../utils/formart":505}],50:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":47,"./class":48,"./export":49}],51:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, o = arguments.length, l = o < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(t, e, n, i); else for (var d = t.length - 1; d >= 0; d--) (r = t[d]) && (l = (o < 3 ? r(l) : o > 3 ? r(e, n, l) : r(e, n)) || l);
  return o > 3 && l && Object.defineProperty(e, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _CheckException() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CheckException", 0, [], "void", []);
  }
  static get _DeleteGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "DeleteGlobalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _DeleteWeakGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "DeleteWeakGlobalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _DeleteLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "DeleteLocalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _NewString() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "NewString", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetStringChars() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStringChars", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetObjectClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetObjectClass", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetStaticMethodID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticMethodID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetMethodID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetMethodID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetFieldID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetFieldID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStaticFieldID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticFieldID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FromReflectedMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromReflectedMethod", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FindClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FindClass", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _NewObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "NewObject", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticObjectField", 3, [ "System.IntPtr", "System.IntPtr", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticStringField", 3, [ "System.IntPtr", "System.IntPtr", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticCharField", 3, [ "System.IntPtr", "System.IntPtr", "System.Char" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticDoubleField", 3, [ "System.IntPtr", "System.IntPtr", "System.Double" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticFloatField", 3, [ "System.IntPtr", "System.IntPtr", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticLongField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int64" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticShortField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int16" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticSByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticBooleanField", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStaticIntField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStaticObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticObjectField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticStringField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticCharField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticDoubleField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticFloatField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticLongField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticShortField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticSByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticBooleanField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStaticIntField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CallStaticVoidMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticVoidMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticObjectMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticObjectMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticStringMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticStringMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticCharMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticCharMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticDoubleMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticDoubleMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticFloatMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticFloatMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticLongMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticLongMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticShortMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticShortMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticSByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticSByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticBooleanMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticBooleanMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticIntMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStaticIntMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetObjectField", 3, [ "System.IntPtr", "System.IntPtr", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetStringField", 3, [ "System.IntPtr", "System.IntPtr", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetCharField", 3, [ "System.IntPtr", "System.IntPtr", "System.Char" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetDoubleField", 3, [ "System.IntPtr", "System.IntPtr", "System.Double" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetFloatField", 3, [ "System.IntPtr", "System.IntPtr", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetLongField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int64" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetShortField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int16" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetSByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetBooleanField", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "SetIntField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetObjectField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetStringField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetCharField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetDoubleField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetFloatField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetLongField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetShortField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetSByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetBooleanField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetIntField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CallVoidMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallVoidMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallObjectMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallObjectMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStringMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallStringMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallCharMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallCharMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallDoubleMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallDoubleMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallFloatMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallFloatMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallLongMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallLongMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallShortMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallShortMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallSByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallSByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallBooleanMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallBooleanMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallIntMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "CallIntMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FromCharArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromCharArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromDoubleArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromDoubleArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromFloatArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromFloatArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromLongArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromLongArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromShortArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromShortArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromByteArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromSByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromSByteArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromBooleanArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromBooleanArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromIntArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "FromIntArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _ToObjectArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToObjectArray", 2, [ "System.IntPtr[]", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToCharArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToCharArray", 1, [ "System.Char[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToDoubleArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToDoubleArray", 1, [ "System.Double[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToFloatArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToFloatArray", 1, [ "System.Single[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToLongArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToLongArray", 1, [ "System.Int64[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToShortArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToShortArray", 1, [ "System.Int16[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToByteArray", 1, [ "System.Byte[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToSByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToSByteArray", 1, [ "System.SByte[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToBooleanArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToBooleanArray", 1, [ "System.Boolean[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToIntArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "ToIntArray", 1, [ "System.Int32[]" ], "pointer", [ "pointer" ]);
  }
  static get _GetObjectArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetObjectArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetArrayLength() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNISafe", "GetArrayLength", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
}

t([ e.cache ], n, "_CheckException", null), t([ e.cache ], n, "_DeleteGlobalRef", null), 
t([ e.cache ], n, "_DeleteWeakGlobalRef", null), t([ e.cache ], n, "_DeleteLocalRef", null), 
t([ e.cache ], n, "_NewString", null), t([ e.cache ], n, "_GetStringChars", null), 
t([ e.cache ], n, "_GetObjectClass", null), t([ e.cache ], n, "_GetStaticMethodID", null), 
t([ e.cache ], n, "_GetMethodID", null), t([ e.cache ], n, "_GetFieldID", null), 
t([ e.cache ], n, "_GetStaticFieldID", null), t([ e.cache ], n, "_FromReflectedMethod", null), 
t([ e.cache ], n, "_FindClass", null), t([ e.cache ], n, "_NewObject", null), t([ e.cache ], n, "_SetStaticObjectField", null), 
t([ e.cache ], n, "_SetStaticStringField", null), t([ e.cache ], n, "_SetStaticCharField", null), 
t([ e.cache ], n, "_SetStaticDoubleField", null), t([ e.cache ], n, "_SetStaticFloatField", null), 
t([ e.cache ], n, "_SetStaticLongField", null), t([ e.cache ], n, "_SetStaticShortField", null), 
t([ e.cache ], n, "_SetStaticSByteField", null), t([ e.cache ], n, "_SetStaticBooleanField", null), 
t([ e.cache ], n, "_SetStaticIntField", null), t([ e.cache ], n, "_GetStaticObjectField", null), 
t([ e.cache ], n, "_GetStaticStringField", null), t([ e.cache ], n, "_GetStaticCharField", null), 
t([ e.cache ], n, "_GetStaticDoubleField", null), t([ e.cache ], n, "_GetStaticFloatField", null), 
t([ e.cache ], n, "_GetStaticLongField", null), t([ e.cache ], n, "_GetStaticShortField", null), 
t([ e.cache ], n, "_GetStaticSByteField", null), t([ e.cache ], n, "_GetStaticBooleanField", null), 
t([ e.cache ], n, "_GetStaticIntField", null), t([ e.cache ], n, "_CallStaticVoidMethod", null), 
t([ e.cache ], n, "_CallStaticObjectMethod", null), t([ e.cache ], n, "_CallStaticStringMethod", null), 
t([ e.cache ], n, "_CallStaticCharMethod", null), t([ e.cache ], n, "_CallStaticDoubleMethod", null), 
t([ e.cache ], n, "_CallStaticFloatMethod", null), t([ e.cache ], n, "_CallStaticLongMethod", null), 
t([ e.cache ], n, "_CallStaticShortMethod", null), t([ e.cache ], n, "_CallStaticSByteMethod", null), 
t([ e.cache ], n, "_CallStaticBooleanMethod", null), t([ e.cache ], n, "_CallStaticIntMethod", null), 
t([ e.cache ], n, "_SetObjectField", null), t([ e.cache ], n, "_SetStringField", null), 
t([ e.cache ], n, "_SetCharField", null), t([ e.cache ], n, "_SetDoubleField", null), 
t([ e.cache ], n, "_SetFloatField", null), t([ e.cache ], n, "_SetLongField", null), 
t([ e.cache ], n, "_SetShortField", null), t([ e.cache ], n, "_SetSByteField", null), 
t([ e.cache ], n, "_SetBooleanField", null), t([ e.cache ], n, "_SetIntField", null), 
t([ e.cache ], n, "_GetObjectField", null), t([ e.cache ], n, "_GetStringField", null), 
t([ e.cache ], n, "_GetCharField", null), t([ e.cache ], n, "_GetDoubleField", null), 
t([ e.cache ], n, "_GetFloatField", null), t([ e.cache ], n, "_GetLongField", null), 
t([ e.cache ], n, "_GetShortField", null), t([ e.cache ], n, "_GetSByteField", null), 
t([ e.cache ], n, "_GetBooleanField", null), t([ e.cache ], n, "_GetIntField", null), 
t([ e.cache ], n, "_CallVoidMethod", null), t([ e.cache ], n, "_CallObjectMethod", null), 
t([ e.cache ], n, "_CallStringMethod", null), t([ e.cache ], n, "_CallCharMethod", null), 
t([ e.cache ], n, "_CallDoubleMethod", null), t([ e.cache ], n, "_CallFloatMethod", null), 
t([ e.cache ], n, "_CallLongMethod", null), t([ e.cache ], n, "_CallShortMethod", null), 
t([ e.cache ], n, "_CallSByteMethod", null), t([ e.cache ], n, "_CallBooleanMethod", null), 
t([ e.cache ], n, "_CallIntMethod", null), t([ e.cache ], n, "_FromCharArray", null), 
t([ e.cache ], n, "_FromDoubleArray", null), t([ e.cache ], n, "_FromFloatArray", null), 
t([ e.cache ], n, "_FromLongArray", null), t([ e.cache ], n, "_FromShortArray", null), 
t([ e.cache ], n, "_FromByteArray", null), t([ e.cache ], n, "_FromSByteArray", null), 
t([ e.cache ], n, "_FromBooleanArray", null), t([ e.cache ], n, "_FromIntArray", null), 
t([ e.cache ], n, "_ToObjectArray", null), t([ e.cache ], n, "_ToCharArray", null), 
t([ e.cache ], n, "_ToDoubleArray", null), t([ e.cache ], n, "_ToFloatArray", null), 
t([ e.cache ], n, "_ToLongArray", null), t([ e.cache ], n, "_ToShortArray", null), 
t([ e.cache ], n, "_ToByteArray", null), t([ e.cache ], n, "_ToSByteArray", null), 
t([ e.cache ], n, "_ToBooleanArray", null), t([ e.cache ], n, "_ToIntArray", null), 
t([ e.cache ], n, "_GetObjectArrayElement", null), t([ e.cache ], n, "_GetArrayLength", null), 
Il2Cpp.Api.AndroidJNISafe = n;

},{"decorator-cache-getter":513}],52:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AndroidJNISafe_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  static CheckException() {
    return Il2Cpp.Api.AndroidJNISafe._CheckException();
  }
  static DeleteGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNISafe._DeleteGlobalRef(t);
  }
  static DeleteWeakGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNISafe._DeleteWeakGlobalRef(t);
  }
  static DeleteLocalRef(t) {
    return Il2Cpp.Api.AndroidJNISafe._DeleteLocalRef(t);
  }
  static NewString(t) {
    return Il2Cpp.Api.AndroidJNISafe._NewString(t);
  }
  static GetStringChars(t) {
    return readU16(Il2Cpp.Api.AndroidJNISafe._GetStringChars(t));
  }
  static GetObjectClass(t) {
    return Il2Cpp.Api.AndroidJNISafe._GetObjectClass(t);
  }
  static GetStaticMethodID(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticMethodID(t, e, i);
  }
  static GetMethodID(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._GetMethodID(t, e, i);
  }
  static GetFieldID(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._GetFieldID(t, e, i);
  }
  static GetStaticFieldID(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticFieldID(t, e, i);
  }
  static FromReflectedMethod(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromReflectedMethod(t);
  }
  static FindClass(t) {
    return Il2Cpp.Api.AndroidJNISafe._FindClass(t);
  }
  static NewObject(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._NewObject(t, e, i);
  }
  static SetStaticObjectField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticObjectField(t, e, i);
  }
  static SetStaticStringField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticStringField(t, e, i);
  }
  static SetStaticCharField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticCharField(t, e, i);
  }
  static SetStaticDoubleField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticDoubleField(t, e, i);
  }
  static SetStaticFloatField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticFloatField(t, e, i);
  }
  static SetStaticLongField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticLongField(t, e, i);
  }
  static SetStaticShortField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticShortField(t, e, i);
  }
  static SetStaticSByteField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticSByteField(t, e, i);
  }
  static SetStaticBooleanField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticBooleanField(t, e, i);
  }
  static SetStaticIntField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStaticIntField(t, e, i);
  }
  static GetStaticObjectField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticObjectField(t, e);
  }
  static GetStaticStringField(t, e) {
    return readU16(Il2Cpp.Api.AndroidJNISafe._GetStaticStringField(t, e));
  }
  static GetStaticCharField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticCharField(t, e);
  }
  static GetStaticDoubleField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticDoubleField(t, e);
  }
  static GetStaticFloatField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticFloatField(t, e);
  }
  static GetStaticLongField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticLongField(t, e);
  }
  static GetStaticShortField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticShortField(t, e);
  }
  static GetStaticSByteField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticSByteField(t, e);
  }
  static GetStaticBooleanField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticBooleanField(t, e);
  }
  static GetStaticIntField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetStaticIntField(t, e);
  }
  static CallStaticVoidMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticVoidMethod(t, e, i);
  }
  static CallStaticObjectMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticObjectMethod(t, e, i);
  }
  static CallStaticStringMethod(t, e, i) {
    return readU16(Il2Cpp.Api.AndroidJNISafe._CallStaticStringMethod(t, e, i));
  }
  static CallStaticCharMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticCharMethod(t, e, i);
  }
  static CallStaticDoubleMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticDoubleMethod(t, e, i);
  }
  static CallStaticFloatMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticFloatMethod(t, e, i);
  }
  static CallStaticLongMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticLongMethod(t, e, i);
  }
  static CallStaticShortMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticShortMethod(t, e, i);
  }
  static CallStaticSByteMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticSByteMethod(t, e, i);
  }
  static CallStaticBooleanMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticBooleanMethod(t, e, i);
  }
  static CallStaticIntMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallStaticIntMethod(t, e, i);
  }
  static SetObjectField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetObjectField(t, e, i);
  }
  static SetStringField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetStringField(t, e, i);
  }
  static SetCharField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetCharField(t, e, i);
  }
  static SetDoubleField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetDoubleField(t, e, i);
  }
  static SetFloatField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetFloatField(t, e, i);
  }
  static SetLongField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetLongField(t, e, i);
  }
  static SetShortField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetShortField(t, e, i);
  }
  static SetSByteField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetSByteField(t, e, i);
  }
  static SetBooleanField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetBooleanField(t, e, i);
  }
  static SetIntField(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._SetIntField(t, e, i);
  }
  static GetObjectField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetObjectField(t, e);
  }
  static GetStringField(t, e) {
    return readU16(Il2Cpp.Api.AndroidJNISafe._GetStringField(t, e));
  }
  static GetCharField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetCharField(t, e);
  }
  static GetDoubleField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetDoubleField(t, e);
  }
  static GetFloatField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetFloatField(t, e);
  }
  static GetLongField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetLongField(t, e);
  }
  static GetShortField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetShortField(t, e);
  }
  static GetSByteField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetSByteField(t, e);
  }
  static GetBooleanField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetBooleanField(t, e);
  }
  static GetIntField(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetIntField(t, e);
  }
  static CallVoidMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallVoidMethod(t, e, i);
  }
  static CallObjectMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallObjectMethod(t, e, i);
  }
  static CallStringMethod(t, e, i) {
    return readU16(Il2Cpp.Api.AndroidJNISafe._CallStringMethod(t, e, i));
  }
  static CallCharMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallCharMethod(t, e, i);
  }
  static CallDoubleMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallDoubleMethod(t, e, i);
  }
  static CallFloatMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallFloatMethod(t, e, i);
  }
  static CallLongMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallLongMethod(t, e, i);
  }
  static CallShortMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallShortMethod(t, e, i);
  }
  static CallSByteMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallSByteMethod(t, e, i);
  }
  static CallBooleanMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallBooleanMethod(t, e, i);
  }
  static CallIntMethod(t, e, i) {
    return Il2Cpp.Api.AndroidJNISafe._CallIntMethod(t, e, i);
  }
  static FromCharArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromCharArray(t);
  }
  static FromDoubleArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromDoubleArray(t);
  }
  static FromFloatArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromFloatArray(t);
  }
  static FromLongArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromLongArray(t);
  }
  static FromShortArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromShortArray(t);
  }
  static FromByteArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromByteArray(t);
  }
  static FromSByteArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromSByteArray(t);
  }
  static FromBooleanArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromBooleanArray(t);
  }
  static FromIntArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._FromIntArray(t);
  }
  static ToObjectArray(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._ToObjectArray(t, e);
  }
  static ToCharArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToCharArray(t);
  }
  static ToDoubleArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToDoubleArray(t);
  }
  static ToFloatArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToFloatArray(t);
  }
  static ToLongArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToLongArray(t);
  }
  static ToShortArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToShortArray(t);
  }
  static ToByteArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToByteArray(t);
  }
  static ToSByteArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToSByteArray(t);
  }
  static ToBooleanArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToBooleanArray(t);
  }
  static ToIntArray(t) {
    return Il2Cpp.Api.AndroidJNISafe._ToIntArray(t);
  }
  static GetObjectArrayElement(t, e) {
    return Il2Cpp.Api.AndroidJNISafe._GetObjectArrayElement(t, e);
  }
  static GetArrayLength(t) {
    return Il2Cpp.Api.AndroidJNISafe._GetArrayLength(t);
  }
}

exports.UnityEngine_AndroidJNISafe_Impl = e, Il2Cpp.AndroidJNISafe = e;

},{"../class":468}],53:[function(require,module,exports){
"use strict";

},{}],54:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":51,"./class":52,"./export":53}],55:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, o = arguments.length, l = o < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(t, e, n, i); else for (var d = t.length - 1; d >= 0; d--) (r = t[d]) && (l = (o < 3 ? r(l) : o > 3 ? r(e, n, l) : r(e, n)) || l);
  return o > 3 && l && Object.defineProperty(e, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _AttachCurrentThread() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "AttachCurrentThread", 0, [], "pointer", []);
  }
  static get _DetachCurrentThread() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "DetachCurrentThread", 0, [], "pointer", []);
  }
  static get _GetVersion() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetVersion", 0, [], "pointer", []);
  }
  static get _FindClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FindClass", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _FromReflectedMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromReflectedMethod", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromReflectedField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromReflectedField", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _ToReflectedMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToReflectedMethod", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ToReflectedField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToReflectedField", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetSuperclass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetSuperclass", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _IsAssignableFrom() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "IsAssignableFrom", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Throw() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "Throw", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _ThrowNew() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ThrowNew", 2, [ "System.IntPtr", "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ExceptionOccurred() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ExceptionOccurred", 0, [], "pointer", []);
  }
  static get _ExceptionDescribe() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ExceptionDescribe", 0, [], "void", []);
  }
  static get _ExceptionClear() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ExceptionClear", 0, [], "void", []);
  }
  static get _FatalError() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FatalError", 1, [ "System.String" ], "void", [ "pointer" ]);
  }
  static get _PushLocalFrame() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "PushLocalFrame", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _PopLocalFrame() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "PopLocalFrame", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _NewGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewGlobalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _DeleteGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "DeleteGlobalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _NewWeakGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewWeakGlobalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _DeleteWeakGlobalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "DeleteWeakGlobalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _NewLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewLocalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _DeleteLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "DeleteLocalRef", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
  static get _IsSameObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "IsSameObject", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _EnsureLocalCapacity() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "EnsureLocalCapacity", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _AllocObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "AllocObject", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _NewObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewObject", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetObjectClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetObjectClass", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _IsInstanceOf() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "IsInstanceOf", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMethodID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetMethodID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetFieldID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetFieldID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStaticMethodID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticMethodID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStaticFieldID() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticFieldID", 3, [ "System.IntPtr", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _NewString() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewString", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _NewStringFromStr() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewStringFromStr", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _NewString_chars() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewString", 1, [ "System.Char[]" ], "pointer", [ "pointer" ]);
  }
  static get _NewStringUTF() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewStringUTF", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetStringChars() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStringChars", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetStringLength() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStringLength", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetStringUTFLength() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStringUTFLength", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetStringUTFChars() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStringUTFChars", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _CallStringMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStringMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallObjectMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallObjectMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallIntMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallIntMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallBooleanMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallBooleanMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallShortMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallShortMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallSByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallSByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallCharMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallCharMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallFloatMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallFloatMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallDoubleMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallDoubleMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallLongMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallLongMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallVoidMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallVoidMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStringField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetObjectField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetBooleanField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetSByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetCharField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetShortField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetIntField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetLongField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetFloatField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetDoubleField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStringField", 3, [ "System.IntPtr", "System.IntPtr", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetObjectField", 3, [ "System.IntPtr", "System.IntPtr", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetBooleanField", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.Byte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetSByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetCharField", 3, [ "System.IntPtr", "System.IntPtr", "System.Char" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetShortField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int16" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetIntField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetLongField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int64" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetFloatField", 3, [ "System.IntPtr", "System.IntPtr", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetDoubleField", 3, [ "System.IntPtr", "System.IntPtr", "System.Double" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticStringMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticStringMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticObjectMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticObjectMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticIntMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticIntMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticBooleanMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticBooleanMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticShortMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticShortMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticSByteMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticSByteMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticCharMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticCharMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticFloatMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticFloatMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticDoubleMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticDoubleMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticLongMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticLongMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStaticVoidMethod() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "CallStaticVoidMethod", 3, [ "System.IntPtr", "System.IntPtr", "UnityEngine.jvalue[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStaticStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticStringField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticObjectField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticBooleanField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticSByteField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticCharField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticShortField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticIntField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticLongField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticFloatField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetStaticDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetStaticDoubleField", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetStaticStringField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticStringField", 3, [ "System.IntPtr", "System.IntPtr", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticObjectField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticObjectField", 3, [ "System.IntPtr", "System.IntPtr", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticBooleanField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticBooleanField", 3, [ "System.IntPtr", "System.IntPtr", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.Byte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticSByteField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticSByteField", 3, [ "System.IntPtr", "System.IntPtr", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticCharField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticCharField", 3, [ "System.IntPtr", "System.IntPtr", "System.Char" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticShortField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticShortField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int16" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticIntField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticIntField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticLongField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticLongField", 3, [ "System.IntPtr", "System.IntPtr", "System.Int64" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticFloatField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticFloatField", 3, [ "System.IntPtr", "System.IntPtr", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetStaticDoubleField() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetStaticDoubleField", 3, [ "System.IntPtr", "System.IntPtr", "System.Double" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ToBooleanArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToBooleanArray", 1, [ "System.Boolean[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToByteArray", 1, [ "System.Byte[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToSByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToSByteArray", 1, [ "System.SByte[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToCharArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToCharArray", 1, [ "System.Char[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToShortArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToShortArray", 1, [ "System.Int16[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToIntArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToIntArray", 1, [ "System.Int32[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToLongArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToLongArray", 1, [ "System.Int64[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToFloatArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToFloatArray", 1, [ "System.Single[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToDoubleArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToDoubleArray", 1, [ "System.Double[]" ], "pointer", [ "pointer" ]);
  }
  static get _ToObjectArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToObjectArray", 2, [ "System.IntPtr[]", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToObjectArray_array() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "ToObjectArray", 1, [ "System.IntPtr[]" ], "pointer", [ "pointer" ]);
  }
  static get _FromBooleanArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromBooleanArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromByteArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromSByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromSByteArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromCharArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromCharArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromShortArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromShortArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromIntArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromIntArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromLongArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromLongArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromFloatArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromFloatArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromDoubleArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromDoubleArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromObjectArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "FromObjectArray", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _GetArrayLength() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetArrayLength", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _NewBooleanArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewBooleanArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewByteArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewSByteArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewSByteArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewCharArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewCharArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewShortArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewShortArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewIntArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewIntArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewLongArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewLongArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewFloatArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewFloatArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewDoubleArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewDoubleArray", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _NewObjectArray() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "NewObjectArray", 3, [ "System.Int32", "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetBooleanArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetBooleanArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetByteArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetByteArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetSByteArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetSByteArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetCharArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetCharArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetShortArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetShortArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetIntArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetIntArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetLongArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetLongArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloatArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetFloatArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetDoubleArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetDoubleArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetObjectArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "GetObjectArrayElement", 2, [ "System.IntPtr", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetBooleanArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetBooleanArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Byte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetBooleanArrayElement_array_index_val() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetBooleanArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetByteArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetByteArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetSByteArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetSByteArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.SByte" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetCharArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetCharArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Char" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetShortArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetShortArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Int16" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetIntArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetIntArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetLongArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetLongArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Int64" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetFloatArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetFloatArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetDoubleArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetDoubleArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.Double" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetObjectArrayElement() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJNI", "SetObjectArrayElement", 3, [ "System.IntPtr", "System.Int32", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], n, "_AttachCurrentThread", null), t([ e.cache ], n, "_DetachCurrentThread", null), 
t([ e.cache ], n, "_GetVersion", null), t([ e.cache ], n, "_FindClass", null), t([ e.cache ], n, "_FromReflectedMethod", null), 
t([ e.cache ], n, "_FromReflectedField", null), t([ e.cache ], n, "_ToReflectedMethod", null), 
t([ e.cache ], n, "_ToReflectedField", null), t([ e.cache ], n, "_GetSuperclass", null), 
t([ e.cache ], n, "_IsAssignableFrom", null), t([ e.cache ], n, "_Throw", null), 
t([ e.cache ], n, "_ThrowNew", null), t([ e.cache ], n, "_ExceptionOccurred", null), 
t([ e.cache ], n, "_ExceptionDescribe", null), t([ e.cache ], n, "_ExceptionClear", null), 
t([ e.cache ], n, "_FatalError", null), t([ e.cache ], n, "_PushLocalFrame", null), 
t([ e.cache ], n, "_PopLocalFrame", null), t([ e.cache ], n, "_NewGlobalRef", null), 
t([ e.cache ], n, "_DeleteGlobalRef", null), t([ e.cache ], n, "_NewWeakGlobalRef", null), 
t([ e.cache ], n, "_DeleteWeakGlobalRef", null), t([ e.cache ], n, "_NewLocalRef", null), 
t([ e.cache ], n, "_DeleteLocalRef", null), t([ e.cache ], n, "_IsSameObject", null), 
t([ e.cache ], n, "_EnsureLocalCapacity", null), t([ e.cache ], n, "_AllocObject", null), 
t([ e.cache ], n, "_NewObject", null), t([ e.cache ], n, "_GetObjectClass", null), 
t([ e.cache ], n, "_IsInstanceOf", null), t([ e.cache ], n, "_GetMethodID", null), 
t([ e.cache ], n, "_GetFieldID", null), t([ e.cache ], n, "_GetStaticMethodID", null), 
t([ e.cache ], n, "_GetStaticFieldID", null), t([ e.cache ], n, "_NewString", null), 
t([ e.cache ], n, "_NewStringFromStr", null), t([ e.cache ], n, "_NewString_chars", null), 
t([ e.cache ], n, "_NewStringUTF", null), t([ e.cache ], n, "_GetStringChars", null), 
t([ e.cache ], n, "_GetStringLength", null), t([ e.cache ], n, "_GetStringUTFLength", null), 
t([ e.cache ], n, "_GetStringUTFChars", null), t([ e.cache ], n, "_CallStringMethod", null), 
t([ e.cache ], n, "_CallObjectMethod", null), t([ e.cache ], n, "_CallIntMethod", null), 
t([ e.cache ], n, "_CallBooleanMethod", null), t([ e.cache ], n, "_CallShortMethod", null), 
t([ e.cache ], n, "_CallByteMethod", null), t([ e.cache ], n, "_CallSByteMethod", null), 
t([ e.cache ], n, "_CallCharMethod", null), t([ e.cache ], n, "_CallFloatMethod", null), 
t([ e.cache ], n, "_CallDoubleMethod", null), t([ e.cache ], n, "_CallLongMethod", null), 
t([ e.cache ], n, "_CallVoidMethod", null), t([ e.cache ], n, "_GetStringField", null), 
t([ e.cache ], n, "_GetObjectField", null), t([ e.cache ], n, "_GetBooleanField", null), 
t([ e.cache ], n, "_GetByteField", null), t([ e.cache ], n, "_GetSByteField", null), 
t([ e.cache ], n, "_GetCharField", null), t([ e.cache ], n, "_GetShortField", null), 
t([ e.cache ], n, "_GetIntField", null), t([ e.cache ], n, "_GetLongField", null), 
t([ e.cache ], n, "_GetFloatField", null), t([ e.cache ], n, "_GetDoubleField", null), 
t([ e.cache ], n, "_SetStringField", null), t([ e.cache ], n, "_SetObjectField", null), 
t([ e.cache ], n, "_SetBooleanField", null), t([ e.cache ], n, "_SetByteField", null), 
t([ e.cache ], n, "_SetSByteField", null), t([ e.cache ], n, "_SetCharField", null), 
t([ e.cache ], n, "_SetShortField", null), t([ e.cache ], n, "_SetIntField", null), 
t([ e.cache ], n, "_SetLongField", null), t([ e.cache ], n, "_SetFloatField", null), 
t([ e.cache ], n, "_SetDoubleField", null), t([ e.cache ], n, "_CallStaticStringMethod", null), 
t([ e.cache ], n, "_CallStaticObjectMethod", null), t([ e.cache ], n, "_CallStaticIntMethod", null), 
t([ e.cache ], n, "_CallStaticBooleanMethod", null), t([ e.cache ], n, "_CallStaticShortMethod", null), 
t([ e.cache ], n, "_CallStaticByteMethod", null), t([ e.cache ], n, "_CallStaticSByteMethod", null), 
t([ e.cache ], n, "_CallStaticCharMethod", null), t([ e.cache ], n, "_CallStaticFloatMethod", null), 
t([ e.cache ], n, "_CallStaticDoubleMethod", null), t([ e.cache ], n, "_CallStaticLongMethod", null), 
t([ e.cache ], n, "_CallStaticVoidMethod", null), t([ e.cache ], n, "_GetStaticStringField", null), 
t([ e.cache ], n, "_GetStaticObjectField", null), t([ e.cache ], n, "_GetStaticBooleanField", null), 
t([ e.cache ], n, "_GetStaticByteField", null), t([ e.cache ], n, "_GetStaticSByteField", null), 
t([ e.cache ], n, "_GetStaticCharField", null), t([ e.cache ], n, "_GetStaticShortField", null), 
t([ e.cache ], n, "_GetStaticIntField", null), t([ e.cache ], n, "_GetStaticLongField", null), 
t([ e.cache ], n, "_GetStaticFloatField", null), t([ e.cache ], n, "_GetStaticDoubleField", null), 
t([ e.cache ], n, "_SetStaticStringField", null), t([ e.cache ], n, "_SetStaticObjectField", null), 
t([ e.cache ], n, "_SetStaticBooleanField", null), t([ e.cache ], n, "_SetStaticByteField", null), 
t([ e.cache ], n, "_SetStaticSByteField", null), t([ e.cache ], n, "_SetStaticCharField", null), 
t([ e.cache ], n, "_SetStaticShortField", null), t([ e.cache ], n, "_SetStaticIntField", null), 
t([ e.cache ], n, "_SetStaticLongField", null), t([ e.cache ], n, "_SetStaticFloatField", null), 
t([ e.cache ], n, "_SetStaticDoubleField", null), t([ e.cache ], n, "_ToBooleanArray", null), 
t([ e.cache ], n, "_ToByteArray", null), t([ e.cache ], n, "_ToSByteArray", null), 
t([ e.cache ], n, "_ToCharArray", null), t([ e.cache ], n, "_ToShortArray", null), 
t([ e.cache ], n, "_ToIntArray", null), t([ e.cache ], n, "_ToLongArray", null), 
t([ e.cache ], n, "_ToFloatArray", null), t([ e.cache ], n, "_ToDoubleArray", null), 
t([ e.cache ], n, "_ToObjectArray", null), t([ e.cache ], n, "_ToObjectArray_array", null), 
t([ e.cache ], n, "_FromBooleanArray", null), t([ e.cache ], n, "_FromByteArray", null), 
t([ e.cache ], n, "_FromSByteArray", null), t([ e.cache ], n, "_FromCharArray", null), 
t([ e.cache ], n, "_FromShortArray", null), t([ e.cache ], n, "_FromIntArray", null), 
t([ e.cache ], n, "_FromLongArray", null), t([ e.cache ], n, "_FromFloatArray", null), 
t([ e.cache ], n, "_FromDoubleArray", null), t([ e.cache ], n, "_FromObjectArray", null), 
t([ e.cache ], n, "_GetArrayLength", null), t([ e.cache ], n, "_NewBooleanArray", null), 
t([ e.cache ], n, "_NewByteArray", null), t([ e.cache ], n, "_NewSByteArray", null), 
t([ e.cache ], n, "_NewCharArray", null), t([ e.cache ], n, "_NewShortArray", null), 
t([ e.cache ], n, "_NewIntArray", null), t([ e.cache ], n, "_NewLongArray", null), 
t([ e.cache ], n, "_NewFloatArray", null), t([ e.cache ], n, "_NewDoubleArray", null), 
t([ e.cache ], n, "_NewObjectArray", null), t([ e.cache ], n, "_GetBooleanArrayElement", null), 
t([ e.cache ], n, "_GetByteArrayElement", null), t([ e.cache ], n, "_GetSByteArrayElement", null), 
t([ e.cache ], n, "_GetCharArrayElement", null), t([ e.cache ], n, "_GetShortArrayElement", null), 
t([ e.cache ], n, "_GetIntArrayElement", null), t([ e.cache ], n, "_GetLongArrayElement", null), 
t([ e.cache ], n, "_GetFloatArrayElement", null), t([ e.cache ], n, "_GetDoubleArrayElement", null), 
t([ e.cache ], n, "_GetObjectArrayElement", null), t([ e.cache ], n, "_SetBooleanArrayElement", null), 
t([ e.cache ], n, "_SetBooleanArrayElement_array_index_val", null), t([ e.cache ], n, "_SetByteArrayElement", null), 
t([ e.cache ], n, "_SetSByteArrayElement", null), t([ e.cache ], n, "_SetCharArrayElement", null), 
t([ e.cache ], n, "_SetShortArrayElement", null), t([ e.cache ], n, "_SetIntArrayElement", null), 
t([ e.cache ], n, "_SetLongArrayElement", null), t([ e.cache ], n, "_SetFloatArrayElement", null), 
t([ e.cache ], n, "_SetDoubleArrayElement", null), t([ e.cache ], n, "_SetObjectArrayElement", null), 
Il2Cpp.Api.AndroidJNI = n;

},{"decorator-cache-getter":513}],56:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AndroidJNI_Impl = void 0;

const t = require("../class");

class r extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  static AttachCurrentThread() {
    return Il2Cpp.Api.AndroidJNI._AttachCurrentThread();
  }
  static DetachCurrentThread() {
    return Il2Cpp.Api.AndroidJNI._DetachCurrentThread();
  }
  static GetVersion() {
    return Il2Cpp.Api.AndroidJNI._GetVersion();
  }
  static FindClass(t) {
    return Il2Cpp.Api.AndroidJNI._FindClass(t);
  }
  static FromReflectedMethod(t) {
    return Il2Cpp.Api.AndroidJNI._FromReflectedMethod(t);
  }
  static FromReflectedField(t) {
    return Il2Cpp.Api.AndroidJNI._FromReflectedField(t);
  }
  static ToReflectedMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._ToReflectedMethod(t, r, e);
  }
  static ToReflectedField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._ToReflectedField(t, r, e);
  }
  static GetSuperclass(t) {
    return Il2Cpp.Api.AndroidJNI._GetSuperclass(t);
  }
  static IsAssignableFrom(t, r) {
    return Il2Cpp.Api.AndroidJNI._IsAssignableFrom(t, r);
  }
  static Throw(t) {
    return Il2Cpp.Api.AndroidJNI._Throw(t);
  }
  static ThrowNew(t, r) {
    return Il2Cpp.Api.AndroidJNI._ThrowNew(t, r);
  }
  static ExceptionOccurred() {
    return Il2Cpp.Api.AndroidJNI._ExceptionOccurred();
  }
  static ExceptionDescribe() {
    return Il2Cpp.Api.AndroidJNI._ExceptionDescribe();
  }
  static ExceptionClear() {
    return Il2Cpp.Api.AndroidJNI._ExceptionClear();
  }
  static FatalError(t) {
    return Il2Cpp.Api.AndroidJNI._FatalError(t);
  }
  static PushLocalFrame(t) {
    return Il2Cpp.Api.AndroidJNI._PushLocalFrame(t);
  }
  static PopLocalFrame(t) {
    return Il2Cpp.Api.AndroidJNI._PopLocalFrame(t);
  }
  static NewGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNI._NewGlobalRef(t);
  }
  static DeleteGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNI._DeleteGlobalRef(t);
  }
  static NewWeakGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNI._NewWeakGlobalRef(t);
  }
  static DeleteWeakGlobalRef(t) {
    return Il2Cpp.Api.AndroidJNI._DeleteWeakGlobalRef(t);
  }
  static NewLocalRef(t) {
    return Il2Cpp.Api.AndroidJNI._NewLocalRef(t);
  }
  static DeleteLocalRef(t) {
    return Il2Cpp.Api.AndroidJNI._DeleteLocalRef(t);
  }
  static IsSameObject(t, r) {
    return Il2Cpp.Api.AndroidJNI._IsSameObject(t, r);
  }
  static EnsureLocalCapacity(t) {
    return Il2Cpp.Api.AndroidJNI._EnsureLocalCapacity(t);
  }
  static AllocObject(t) {
    return Il2Cpp.Api.AndroidJNI._AllocObject(t);
  }
  static NewObject(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._NewObject(t, r, e);
  }
  static GetObjectClass(t) {
    return Il2Cpp.Api.AndroidJNI._GetObjectClass(t);
  }
  static IsInstanceOf(t, r) {
    return Il2Cpp.Api.AndroidJNI._IsInstanceOf(t, r);
  }
  static GetMethodID(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._GetMethodID(t, r, e);
  }
  static GetFieldID(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._GetFieldID(t, r, e);
  }
  static GetStaticMethodID(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._GetStaticMethodID(t, r, e);
  }
  static GetStaticFieldID(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._GetStaticFieldID(t, r, e);
  }
  static NewString(t) {
    return Il2Cpp.Api.AndroidJNI._NewString(t);
  }
  static NewStringFromStr(t) {
    return Il2Cpp.Api.AndroidJNI._NewStringFromStr(t);
  }
  static NewString_1(t) {
    return Il2Cpp.Api.AndroidJNI._NewString(t);
  }
  static NewStringUTF(t) {
    return Il2Cpp.Api.AndroidJNI._NewStringUTF(t);
  }
  static GetStringChars(t) {
    return readU16(Il2Cpp.Api.AndroidJNI._GetStringChars(t));
  }
  static GetStringLength(t) {
    return Il2Cpp.Api.AndroidJNI._GetStringLength(t);
  }
  static GetStringUTFLength(t) {
    return Il2Cpp.Api.AndroidJNI._GetStringUTFLength(t);
  }
  static GetStringUTFChars(t) {
    return readU16(Il2Cpp.Api.AndroidJNI._GetStringUTFChars(t));
  }
  static CallStringMethod(t, r, e) {
    return readU16(Il2Cpp.Api.AndroidJNI._CallStringMethod(t, r, e));
  }
  static CallObjectMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallObjectMethod(t, r, e);
  }
  static CallIntMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallIntMethod(t, r, e);
  }
  static CallBooleanMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallBooleanMethod(t, r, e);
  }
  static CallShortMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallShortMethod(t, r, e);
  }
  static CallByteMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallByteMethod(t, r, e);
  }
  static CallSByteMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallSByteMethod(t, r, e);
  }
  static CallCharMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallCharMethod(t, r, e);
  }
  static CallFloatMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallFloatMethod(t, r, e);
  }
  static CallDoubleMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallDoubleMethod(t, r, e);
  }
  static CallLongMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallLongMethod(t, r, e);
  }
  static CallVoidMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallVoidMethod(t, r, e);
  }
  static GetStringField(t, r) {
    return readU16(Il2Cpp.Api.AndroidJNI._GetStringField(t, r));
  }
  static GetObjectField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetObjectField(t, r);
  }
  static GetBooleanField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetBooleanField(t, r);
  }
  static GetByteField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetByteField(t, r);
  }
  static GetSByteField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetSByteField(t, r);
  }
  static GetCharField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetCharField(t, r);
  }
  static GetShortField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetShortField(t, r);
  }
  static GetIntField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetIntField(t, r);
  }
  static GetLongField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetLongField(t, r);
  }
  static GetFloatField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetFloatField(t, r);
  }
  static GetDoubleField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetDoubleField(t, r);
  }
  static SetStringField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStringField(t, r, e);
  }
  static SetObjectField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetObjectField(t, r, e);
  }
  static SetBooleanField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetBooleanField(t, r, e);
  }
  static SetByteField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetByteField(t, r, e);
  }
  static SetSByteField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetSByteField(t, r, e);
  }
  static SetCharField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetCharField(t, r, e);
  }
  static SetShortField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetShortField(t, r, e);
  }
  static SetIntField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetIntField(t, r, e);
  }
  static SetLongField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetLongField(t, r, e);
  }
  static SetFloatField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetFloatField(t, r, e);
  }
  static SetDoubleField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetDoubleField(t, r, e);
  }
  static CallStaticStringMethod(t, r, e) {
    return readU16(Il2Cpp.Api.AndroidJNI._CallStaticStringMethod(t, r, e));
  }
  static CallStaticObjectMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticObjectMethod(t, r, e);
  }
  static CallStaticIntMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticIntMethod(t, r, e);
  }
  static CallStaticBooleanMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticBooleanMethod(t, r, e);
  }
  static CallStaticShortMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticShortMethod(t, r, e);
  }
  static CallStaticByteMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticByteMethod(t, r, e);
  }
  static CallStaticSByteMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticSByteMethod(t, r, e);
  }
  static CallStaticCharMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticCharMethod(t, r, e);
  }
  static CallStaticFloatMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticFloatMethod(t, r, e);
  }
  static CallStaticDoubleMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticDoubleMethod(t, r, e);
  }
  static CallStaticLongMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticLongMethod(t, r, e);
  }
  static CallStaticVoidMethod(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._CallStaticVoidMethod(t, r, e);
  }
  static GetStaticStringField(t, r) {
    return readU16(Il2Cpp.Api.AndroidJNI._GetStaticStringField(t, r));
  }
  static GetStaticObjectField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticObjectField(t, r);
  }
  static GetStaticBooleanField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticBooleanField(t, r);
  }
  static GetStaticByteField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticByteField(t, r);
  }
  static GetStaticSByteField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticSByteField(t, r);
  }
  static GetStaticCharField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticCharField(t, r);
  }
  static GetStaticShortField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticShortField(t, r);
  }
  static GetStaticIntField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticIntField(t, r);
  }
  static GetStaticLongField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticLongField(t, r);
  }
  static GetStaticFloatField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticFloatField(t, r);
  }
  static GetStaticDoubleField(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetStaticDoubleField(t, r);
  }
  static SetStaticStringField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticStringField(t, r, e);
  }
  static SetStaticObjectField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticObjectField(t, r, e);
  }
  static SetStaticBooleanField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticBooleanField(t, r, e);
  }
  static SetStaticByteField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticByteField(t, r, e);
  }
  static SetStaticSByteField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticSByteField(t, r, e);
  }
  static SetStaticCharField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticCharField(t, r, e);
  }
  static SetStaticShortField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticShortField(t, r, e);
  }
  static SetStaticIntField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticIntField(t, r, e);
  }
  static SetStaticLongField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticLongField(t, r, e);
  }
  static SetStaticFloatField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticFloatField(t, r, e);
  }
  static SetStaticDoubleField(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetStaticDoubleField(t, r, e);
  }
  static ToBooleanArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToBooleanArray(t);
  }
  static ToByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToByteArray(t);
  }
  static ToSByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToSByteArray(t);
  }
  static ToCharArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToCharArray(t);
  }
  static ToShortArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToShortArray(t);
  }
  static ToIntArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToIntArray(t);
  }
  static ToLongArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToLongArray(t);
  }
  static ToFloatArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToFloatArray(t);
  }
  static ToDoubleArray(t) {
    return Il2Cpp.Api.AndroidJNI._ToDoubleArray(t);
  }
  static ToObjectArray(t, r) {
    return Il2Cpp.Api.AndroidJNI._ToObjectArray(t, r);
  }
  static ToObjectArray_1(t) {
    return Il2Cpp.Api.AndroidJNI._ToObjectArray(t);
  }
  static FromBooleanArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromBooleanArray(t);
  }
  static FromByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromByteArray(t);
  }
  static FromSByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromSByteArray(t);
  }
  static FromCharArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromCharArray(t);
  }
  static FromShortArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromShortArray(t);
  }
  static FromIntArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromIntArray(t);
  }
  static FromLongArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromLongArray(t);
  }
  static FromFloatArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromFloatArray(t);
  }
  static FromDoubleArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromDoubleArray(t);
  }
  static FromObjectArray(t) {
    return Il2Cpp.Api.AndroidJNI._FromObjectArray(t);
  }
  static GetArrayLength(t) {
    return Il2Cpp.Api.AndroidJNI._GetArrayLength(t);
  }
  static NewBooleanArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewBooleanArray(t);
  }
  static NewByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewByteArray(t);
  }
  static NewSByteArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewSByteArray(t);
  }
  static NewCharArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewCharArray(t);
  }
  static NewShortArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewShortArray(t);
  }
  static NewIntArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewIntArray(t);
  }
  static NewLongArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewLongArray(t);
  }
  static NewFloatArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewFloatArray(t);
  }
  static NewDoubleArray(t) {
    return Il2Cpp.Api.AndroidJNI._NewDoubleArray(t);
  }
  static NewObjectArray(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._NewObjectArray(t, r, e);
  }
  static GetBooleanArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetBooleanArrayElement(t, r);
  }
  static GetByteArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetByteArrayElement(t, r);
  }
  static GetSByteArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetSByteArrayElement(t, r);
  }
  static GetCharArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetCharArrayElement(t, r);
  }
  static GetShortArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetShortArrayElement(t, r);
  }
  static GetIntArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetIntArrayElement(t, r);
  }
  static GetLongArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetLongArrayElement(t, r);
  }
  static GetFloatArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetFloatArrayElement(t, r);
  }
  static GetDoubleArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetDoubleArrayElement(t, r);
  }
  static GetObjectArrayElement(t, r) {
    return Il2Cpp.Api.AndroidJNI._GetObjectArrayElement(t, r);
  }
  static SetBooleanArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetBooleanArrayElement(t, r, e);
  }
  static SetBooleanArrayElement_3(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetBooleanArrayElement(t, r, e);
  }
  static SetByteArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetByteArrayElement(t, r, e);
  }
  static SetSByteArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetSByteArrayElement(t, r, e);
  }
  static SetCharArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetCharArrayElement(t, r, e);
  }
  static SetShortArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetShortArrayElement(t, r, e);
  }
  static SetIntArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetIntArrayElement(t, r, e);
  }
  static SetLongArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetLongArrayElement(t, r, e);
  }
  static SetFloatArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetFloatArrayElement(t, r, e);
  }
  static SetDoubleArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetDoubleArrayElement(t, r, e);
  }
  static SetObjectArrayElement(t, r, e) {
    return Il2Cpp.Api.AndroidJNI._SetObjectArrayElement(t, r, e);
  }
}

exports.UnityEngine_AndroidJNI_Impl = r, Il2Cpp.AndroidJNI = r;

},{"../class":468}],57:[function(require,module,exports){
"use strict";

},{}],58:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":55,"./class":56,"./export":57}],59:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, o = arguments.length, a = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r); else for (var c = e.length - 1; c >= 0; c--) (i = e[c]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaClass", ".ctor", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get __AndroidJavaClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaClass", "_AndroidJavaClass", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_jclass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaClass", ".ctor", 1, [ "System.IntPtr" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "__AndroidJavaClass", null), 
e([ t.cache ], n, "__ctor_jclass", null), Il2Cpp.Api.AndroidJavaClass = n;

},{"decorator-cache-getter":513}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AndroidJavaClass_Impl = void 0;

const s = require("../class");

class a extends s.UnityEngine_AndroidJavaObject_Impl {
  constructor(s) {
    super(s);
  }
  _ctor_className(s) {
    return Il2Cpp.Api.AndroidJavaClass.__ctor(this.handle, s);
  }
  _AndroidJavaClass_className(s) {
    return Il2Cpp.Api.AndroidJavaClass.__AndroidJavaClass(this.handle, s);
  }
  _ctor_jclass(s) {
    return Il2Cpp.Api.AndroidJavaClass.__ctor(this.handle, s);
  }
}

exports.UnityEngine_AndroidJavaClass_Impl = a, Il2Cpp.AndroidJavaClass = a;

},{"../class":64}],61:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getAndroidClassFromName = exports.getAndroidClassNameFromHandle = exports.listAndroidClass = void 0;

let s = new Map;

const e = () => {
  try {
    if (null == Il2Cpp.Api.AndroidJavaClass.__AndroidJavaClass) return;
    A(Il2Cpp.Api.AndroidJavaClass.__AndroidJavaClass, ((e, o) => {
      s.set(readU16(e[1]), new Il2Cpp.AndroidJavaClass(e[0]));
    }));
  } catch (s) {}
}, o = () => {
  if (0 != s.size) {
    LOGD(`[+] listAndroidClass ( count:${s.size} ) ↓ `);
    for (let [e, o] of s) LOGD(`\t[-] ${o.handle} -> ${e}`);
  }
};

exports.listAndroidClass = o;

const r = e => {
  for (let [o, r] of s) if (r.handle.equals(e)) return o;
  return "Unknown";
};

exports.getAndroidClassNameFromHandle = r;

const a = e => s.get(e);

exports.getAndroidClassFromName = a, globalThis.listAndroidClass = exports.listAndroidClass;

},{}],62:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":59,"./class":60,"./export":61}],63:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, o = arguments.length, a = o < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e, n, i); else for (var d = t.length - 1; d >= 0; d--) (r = t[d]) && (a = (o < 3 ? r(a) : o > 3 ? r(e, n, a) : r(e, n)) || a);
  return o > 3 && a && Object.defineProperty(e, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 2, [ "System.String", "System.String[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_className_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 2, [ "System.String", "UnityEngine.AndroidJavaObject[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_className_AndroidJavaClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 2, [ "System.String", "UnityEngine.AndroidJavaClass[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_className_AndroidJavaRunnable() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 2, [ "System.String", "UnityEngine.AndroidJavaRunnable[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_className_Object() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Dispose() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Dispose", 0, [], "void", [ "pointer" ]);
  }
  static get _Call() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Call", 2, [ "System.String", "T[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Call_methodName_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Call", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "CallStatic", 2, [ "System.String", "T[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallStatic_methodName_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "CallStatic", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Get() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Get", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Set() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Set", 2, [ "System.String", "FieldType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "GetStatic", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "SetStatic", 2, [ "System.String", "FieldType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetRawObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "GetRawObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetRawClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "GetRawClass", 0, [], "pointer", [ "pointer" ]);
  }
  static get _CloneReference() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "CloneReference", 0, [], "pointer", [ "pointer" ]);
  }
  static get _DebugPrint() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "DebugPrint", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _DebugPrint_call_methodName_signature_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "DebugPrint", 4, [ "System.String", "System.String", "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __AndroidJavaObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_AndroidJavaObject", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_jobject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 1, [ "System.IntPtr" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Finalize", 0, [], "void", [ "pointer" ]);
  }
  static get _Dispose_disposing() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "Dispose", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get __Call() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_Call", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __Call_methodName_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_Call", 2, [ "System.String", "System.Object[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __Get() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_Get", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get __Set() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_Set", 2, [ "System.String", "FieldType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __CallStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_CallStatic", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __CallStatic_methodName_args() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_CallStatic", 2, [ "System.String", "System.Object[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __GetStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_GetStatic", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get __SetStatic() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_SetStatic", 2, [ "System.String", "FieldType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AndroidJavaObjectDeleteLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "AndroidJavaObjectDeleteLocalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _AndroidJavaClassDeleteLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "AndroidJavaClassDeleteLocalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _FromJavaArrayDeleteLocalRef() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "FromJavaArrayDeleteLocalRef", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get __GetRawObject() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_GetRawObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get __GetRawClass() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.AndroidJavaObject", "_GetRawClass", 0, [], "pointer", [ "pointer" ]);
  }
}

t([ e.cache ], n, "__ctor", null), t([ e.cache ], n, "__ctor_className_args", null), 
t([ e.cache ], n, "__ctor_className_AndroidJavaClass", null), t([ e.cache ], n, "__ctor_className_AndroidJavaRunnable", null), 
t([ e.cache ], n, "__ctor_className_Object", null), t([ e.cache ], n, "_Dispose", null), 
t([ e.cache ], n, "_Call", null), t([ e.cache ], n, "_Call_methodName_args", null), 
t([ e.cache ], n, "_CallStatic", null), t([ e.cache ], n, "_CallStatic_methodName_args", null), 
t([ e.cache ], n, "_Get", null), t([ e.cache ], n, "_Set", null), t([ e.cache ], n, "_GetStatic", null), 
t([ e.cache ], n, "_SetStatic", null), t([ e.cache ], n, "_GetRawObject", null), 
t([ e.cache ], n, "_GetRawClass", null), t([ e.cache ], n, "_CloneReference", null), 
t([ e.cache ], n, "_DebugPrint", null), t([ e.cache ], n, "_DebugPrint_call_methodName_signature_args", null), 
t([ e.cache ], n, "__AndroidJavaObject", null), t([ e.cache ], n, "__ctor_jobject", null), 
t([ e.cache ], n, "__ctor_", null), t([ e.cache ], n, "_Finalize", null), t([ e.cache ], n, "_Dispose_disposing", null), 
t([ e.cache ], n, "__Call", null), t([ e.cache ], n, "__Call_methodName_args", null), 
t([ e.cache ], n, "__Get", null), t([ e.cache ], n, "__Set", null), t([ e.cache ], n, "__CallStatic", null), 
t([ e.cache ], n, "__CallStatic_methodName_args", null), t([ e.cache ], n, "__GetStatic", null), 
t([ e.cache ], n, "__SetStatic", null), t([ e.cache ], n, "_AndroidJavaObjectDeleteLocalRef", null), 
t([ e.cache ], n, "_AndroidJavaClassDeleteLocalRef", null), t([ e.cache ], n, "_FromJavaArrayDeleteLocalRef", null), 
t([ e.cache ], n, "__GetRawObject", null), t([ e.cache ], n, "__GetRawClass", null), 
Il2Cpp.Api.AndroidJavaObject = n;

},{"decorator-cache-getter":513}],64:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AndroidJavaObject_Impl = void 0;

const a = require("../class"), t = require("../GlobalJavaObjectRef/class");

class e extends a.mscorlib_System_Object_impl {
  enableDebugPrints=lfv(this.handle, "enableDebugPrints");
  m_jobject=new t.UnityEngine_GlobalJavaObjectRef_Impl(lfv(this.handle, "m_jobject"));
  m_jclass=new t.UnityEngine_GlobalJavaObjectRef_Impl(lfv(this.handle, "m_jclass"));
  constructor(a) {
    super(a);
  }
  _ctor(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  _ctor_AndroidJavaObject_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  _ctor_AndroidJavaClass_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  _ctor_AndroidJavaProxy_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  _ctor_AndroidJavaRunnable_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  _ctor_Object_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a, t);
  }
  Dispose() {
    return Il2Cpp.Api.AndroidJavaObject._Dispose(this.handle);
  }
  Call_T_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._Call(this.handle, a, t);
  }
  Call_Object_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._Call(this.handle, a, t);
  }
  CallStatic_T_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._CallStatic(this.handle, a, t);
  }
  CallStatic_Object_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._CallStatic(this.handle, a, t);
  }
  Get(a) {
    return Il2Cpp.Api.AndroidJavaObject._Get(this.handle, a);
  }
  Set(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._Set(this.handle, a, t);
  }
  GetStatic(a) {
    return Il2Cpp.Api.AndroidJavaObject._GetStatic(this.handle, a);
  }
  SetStatic(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._SetStatic(this.handle, a, t);
  }
  GetRawObject() {
    return Il2Cpp.Api.AndroidJavaObject._GetRawObject(this.handle);
  }
  GetRawClass() {
    return Il2Cpp.Api.AndroidJavaObject._GetRawClass(this.handle);
  }
  CloneReference() {
    return new e(Il2Cpp.Api.AndroidJavaObject._CloneReference(this.handle));
  }
  Call_System_String_T_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._Call(this.handle, a, t);
  }
  Call_2(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._Call(this.handle, a, t);
  }
  CallStatic_System_String_T_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._CallStatic(this.handle, a, t);
  }
  CallStatic_System_System_Object_array(a, t) {
    return Il2Cpp.Api.AndroidJavaObject._CallStatic(this.handle, a, t);
  }
  DebugPrint(a) {
    return Il2Cpp.Api.AndroidJavaObject._DebugPrint(this.handle, a);
  }
  DebugPrint_4(a, t, e, r) {
    return Il2Cpp.Api.AndroidJavaObject._DebugPrint(this.handle, a, t, e, r);
  }
  _AndroidJavaObject(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__AndroidJavaObject(this.handle, a, t);
  }
  _ctor_1(a) {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle, a);
  }
  _ctor_0() {
    return Il2Cpp.Api.AndroidJavaObject.__ctor(this.handle);
  }
  Finalize() {
    return Il2Cpp.Api.AndroidJavaObject._Finalize(this.handle);
  }
  Dispose_1(a) {
    return Il2Cpp.Api.AndroidJavaObject._Dispose(this.handle, a);
  }
  _Call(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__Call(this.handle, a, t);
  }
  _Call_2(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__Call(this.handle, a, t);
  }
  _Get(a) {
    return Il2Cpp.Api.AndroidJavaObject.__Get(this.handle, a);
  }
  _Set(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__Set(this.handle, a, t);
  }
  _CallStatic(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__CallStatic(this.handle, a, t);
  }
  _CallStatic_2(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__CallStatic(this.handle, a, t);
  }
  _GetStatic(a) {
    return Il2Cpp.Api.AndroidJavaObject.__GetStatic(this.handle, a);
  }
  _SetStatic(a, t) {
    return Il2Cpp.Api.AndroidJavaObject.__SetStatic(this.handle, a, t);
  }
  static AndroidJavaObjectDeleteLocalRef(a) {
    return new e(Il2Cpp.Api.AndroidJavaObject._AndroidJavaObjectDeleteLocalRef(a));
  }
  static AndroidJavaClassDeleteLocalRef(a) {
    return new e(Il2Cpp.Api.AndroidJavaObject._AndroidJavaClassDeleteLocalRef(a));
  }
  static FromJavaArrayDeleteLocalRef(a) {
    return Il2Cpp.Api.AndroidJavaObject._FromJavaArrayDeleteLocalRef(a);
  }
  _GetRawObject() {
    return Il2Cpp.Api.AndroidJavaObject.__GetRawObject(this.handle);
  }
  _GetRawClass() {
    return Il2Cpp.Api.AndroidJavaObject.__GetRawClass(this.handle);
  }
}

exports.UnityEngine_AndroidJavaObject_Impl = e, Il2Cpp.AndroidJavaObject = e;

},{"../GlobalJavaObjectRef/class":130,"../class":468}],65:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./AndroidJavaClass/include"), require("./api"), require("./class");

},{"./AndroidJavaClass/include":62,"./api":63,"./class":64}],66:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, l = arguments.length, a = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (a = (l < 3 ? o(a) : l > 3 ? o(t, n, a) : o(t, n)) || a);
  return l > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _CallLogCallback() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "CallLogCallback", 4, "void", [ "pointer", "pointer", "pointer", "bool" ]);
  }
  static get _CallLowMemory() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "CallLowMemory", 0, "void", []);
  }
  static get _GetStackTraceLogType() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "GetStackTraceLogType", 0, "pointer", []);
  }
  static get _LoadLevel() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "LoadLevel", 1, "void", [ "pointer" ]);
  }
  static get _OpenURL() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "OpenURL", 1, "void", [ "pointer" ]);
  }
  static get _Quit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Quit", 0, "void", []);
  }
  static get _RegisterLogCallback() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "RegisterLogCallback", 1, "void", [ "pointer" ]);
  }
  static get _get_cloudProjectId() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_cloudProjectId", 0, "pointer", []);
  }
  static get _get_dataPath() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_dataPath", 0, "pointer", []);
  }
  static get _get_identifier() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_identifier", 0, "pointer", []);
  }
  static get _get_internetReachability() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_internetReachability", 0, "pointer", []);
  }
  static get _get_isEditor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isEditor", 0, "bool", []);
  }
  static get _get_isMobilePlatform() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isMobilePlatform", 0, "bool", []);
  }
  static get _get_isPlaying() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isPlaying", 0, "bool", []);
  }
  static get _get_persistentDataPath() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_persistentDataPath", 0, "pointer", []);
  }
  static get _get_temporaryCachePath() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_temporaryCachePath", 0, "pointer", []);
  }
  static get _get_version() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_version", 0, "pointer", []);
  }
  static get _get_productName() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_productName", 0, "pointer", []);
  }
  static get _get_platform() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_platform", 0, "pointer", []);
  }
  static get _set_runInBackground() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "set_runInBackground", 1, "void", [ "bool" ]);
  }
  static get _get_streamingAssetsPath() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_streamingAssetsPath", 0, "pointer", []);
  }
  static get _set_targetFrameRate() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "set_targetFrameRate", 1, "void", [ "int32" ]);
  }
  static get _get_unityVersion() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_unityVersion", 0, "pointer", []);
  }
  static get _add_logMessageReceived() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "add_logMessageReceived", 1, "void", [ "pointer" ]);
  }
  static get _SetLogCallbackDefined() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "SetLogCallbackDefined", 1, "void", [ "bool" ]);
  }
  static get _get_systemLanguage() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_systemLanguage", 0, "pointer", []);
  }
  static get _Internal_ApplicationWantsToQuit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationWantsToQuit", 0, "bool", []);
  }
  static get _Internal_ApplicationQuit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationQuit", 0, "void", []);
  }
  static get _Internal_ApplicationUnload() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationUnload", 0, "void", []);
  }
  static get _InvokeOnBeforeRender() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeOnBeforeRender", 0, "void", []);
  }
  static get _InvokeFocusChanged() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeFocusChanged", 0, "void", [ "bool" ]);
  }
  static get _InvokeDeepLinkActivated() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeDeepLinkActivated", 1, "void", [ "pointer" ]);
  }
  static get _get_companyName() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_companyName", 0, "pointer", []);
  }
  static get _remove_logMessageReceived() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "remove_logMessageReceived", 1, "void", [ "pointer" ]);
  }
  static get _add_logMessageReceivedThreaded() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "add_logMessageReceivedThreaded", 1, "void", [ "pointer" ]);
  }
  static get _remove_logMessageReceivedThreaded() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "remove_logMessageReceivedThreaded", 1, "void", [ "pointer" ]);
  }
  static get _Quit_() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Application", "Quit", 0, [], "void", []);
  }
  static get _get_isFocused() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Application", "get_isFocused", 0, [], "pointer", []);
  }
  static get _get_isBatchMode() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Application", "get_isBatchMode", 0, [], "pointer", []);
  }
}

e([ t.cache ], n, "_CallLogCallback", null), e([ t.cache ], n, "_CallLowMemory", null), 
e([ t.cache ], n, "_GetStackTraceLogType", null), e([ t.cache ], n, "_LoadLevel", null), 
e([ t.cache ], n, "_OpenURL", null), e([ t.cache ], n, "_Quit", null), e([ t.cache ], n, "_RegisterLogCallback", null), 
e([ t.cache ], n, "_get_cloudProjectId", null), e([ t.cache ], n, "_get_dataPath", null), 
e([ t.cache ], n, "_get_identifier", null), e([ t.cache ], n, "_get_internetReachability", null), 
e([ t.cache ], n, "_get_isEditor", null), e([ t.cache ], n, "_get_isMobilePlatform", null), 
e([ t.cache ], n, "_get_isPlaying", null), e([ t.cache ], n, "_get_persistentDataPath", null), 
e([ t.cache ], n, "_get_temporaryCachePath", null), e([ t.cache ], n, "_get_version", null), 
e([ t.cache ], n, "_get_productName", null), e([ t.cache ], n, "_get_platform", null), 
e([ t.cache ], n, "_set_runInBackground", null), e([ t.cache ], n, "_get_streamingAssetsPath", null), 
e([ t.cache ], n, "_set_targetFrameRate", null), e([ t.cache ], n, "_get_unityVersion", null), 
e([ t.cache ], n, "_add_logMessageReceived", null), e([ t.cache ], n, "_SetLogCallbackDefined", null), 
e([ t.cache ], n, "_get_systemLanguage", null), e([ t.cache ], n, "_Internal_ApplicationWantsToQuit", null), 
e([ t.cache ], n, "_Internal_ApplicationQuit", null), e([ t.cache ], n, "_Internal_ApplicationUnload", null), 
e([ t.cache ], n, "_InvokeOnBeforeRender", null), e([ t.cache ], n, "_InvokeFocusChanged", null), 
e([ t.cache ], n, "_InvokeDeepLinkActivated", null), e([ t.cache ], n, "_get_companyName", null), 
e([ t.cache ], n, "_remove_logMessageReceived", null), e([ t.cache ], n, "_add_logMessageReceivedThreaded", null), 
e([ t.cache ], n, "_remove_logMessageReceivedThreaded", null), e([ t.cache ], n, "_Quit_", null), 
e([ t.cache ], n, "_get_isFocused", null), e([ t.cache ], n, "_get_isBatchMode", null), 
Il2Cpp.Api.Application = n;

},{"decorator-cache-getter":513}],67:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Application_impl = void 0;

const t = require("../../../../bridge/fix/enum"), e = require("../Type/class"), i = require("./enum");

class a extends e.mscorlib_System_Type_impl {
  deepLinkActivated=lfv(this.handle, "deepLinkActivated");
  focusChanged=lfv(this.handle, "focusChanged");
  LowMemoryCallback=lfv(this.handle, "LowMemoryCallback");
  quitting=lfv(this.handle, "quitting");
  s_LogCallbackHandler=lfv(this.handle, "s_LogCallbackHandler");
  s_LogCallbackHandlerThreaded=lfv(this.handle, "s_LogCallbackHandlerThreaded");
  s_RegisterLogCallbackDeprecated=lfv(this.handle, "s_RegisterLogCallbackDeprecated");
  wantsToQuit=lfv(this.handle, "wantsToQuit");
  static get Quit_1() {
    return Il2Cpp.Api.Application._Quit_();
  }
  static get Quit() {
    return Il2Cpp.Api.Application._Quit();
  }
  static get isPlaying() {
    return 1 == Il2Cpp.Api.Application._get_isPlaying();
  }
  static get dataPath() {
    return readU16(Il2Cpp.Api.Application._get_dataPath());
  }
  static get streamingAssetsPath() {
    return readU16(Il2Cpp.Api.Application._get_streamingAssetsPath());
  }
  static get persistentDataPath() {
    return readU16(Il2Cpp.Api.Application._get_persistentDataPath());
  }
  static get temporaryCachePath() {
    try {
      return readU16(Il2Cpp.Api.Application._get_temporaryCachePath());
    } catch (t) {
      return "Function : temporaryCachePath not found";
    }
  }
  static get unityVersion() {
    return readU16(Il2Cpp.Api.Application._get_unityVersion());
  }
  static get version() {
    return readU16(Il2Cpp.Api.Application._get_version());
  }
  static get identifier() {
    return ptr(Il2Cpp.Api.Application._get_identifier).isNull() ? Java.use("android.app.ActivityThread").currentApplication().getApplicationContext().getPackageName() + " ( from java api )" : readU16(Il2Cpp.Api.Application._get_identifier());
  }
  static get productName() {
    try {
      return readU16(Il2Cpp.Api.Application._get_productName());
    } catch (t) {
      return "Function : productName not found";
    }
  }
  static get companyName() {
    return readU16(Il2Cpp.Api.Application._get_companyName());
  }
  static get cloudProjectId() {
    return readU16(Il2Cpp.Api.Application._get_cloudProjectId());
  }
  static OpenURL(t) {
    return Il2Cpp.Api.Application._OpenURL(allocUStr(t));
  }
  static targetFrameRate(t) {
    return Il2Cpp.Api.Application._set_targetFrameRate(t);
  }
  static SetLogCallbackDefined(t) {
    return Il2Cpp.Api.Application._SetLogCallbackDefined(t);
  }
  static GetStackTraceLogType(t) {
    return Il2Cpp.Api.Application._GetStackTraceLogType(t);
  }
  static get internetReachability() {
    return Il2Cpp.Api.Application._get_internetReachability();
  }
  static get internetReachability_toString() {
    return (0, t.enumNumToName)(Il2Cpp.Application.internetReachability, "NetworkReachability");
  }
  static get_internetReachability() {
    return Il2Cpp.Api.Application._get_internetReachability();
  }
  static get_internetReachability_toString() {
    return (0, t.enumNumToName)(a.internetReachability, "NetworkReachability");
  }
  static get platform() {
    return Il2Cpp.Api.Application._get_platform();
  }
  static get platform_toString() {
    return (0, t.enumNumToName)(a.platform, "RuntimePlatform");
  }
  static get systemLanguage() {
    try {
      return Il2Cpp.Api.Application._get_platform();
    } catch (t) {
      return i.SystemLanguage.Unknown;
    }
  }
  static get systemLanguage_toString() {
    try {
      return (0, t.enumNumToName)(a.systemLanguage, "SystemLanguage");
    } catch (t) {
      return "Function : systemLanguage not found";
    }
  }
  static CallLowMemory() {
    return Il2Cpp.Api.Application._CallLowMemory();
  }
  static add_logMessageReceived(t) {
    return Il2Cpp.Api.Application._add_logMessageReceived(t);
  }
  static remove_logMessageReceived(t) {
    return Il2Cpp.Api.Application._remove_logMessageReceived(t);
  }
  static add_logMessageReceivedThreaded(t) {
    return Il2Cpp.Api.Application._add_logMessageReceivedThreaded(t);
  }
  static remove_logMessageReceivedThreaded(t) {
    return Il2Cpp.Api.Application._remove_logMessageReceivedThreaded(t);
  }
  static CallLogCallback(t, e, i, a) {
    return Il2Cpp.Api.Application._CallLogCallback(allocUStr(t), allocUStr(e), i, a);
  }
  static Internal_ApplicationWantsToQuit() {
    return Il2Cpp.Api.Application._Internal_ApplicationWantsToQuit();
  }
  static Internal_ApplicationQuit() {
    return Il2Cpp.Api.Application._Internal_ApplicationQuit();
  }
  static Internal_ApplicationUnload() {
    return Il2Cpp.Api.Application._Internal_ApplicationUnload();
  }
  static InvokeOnBeforeRender() {
    return Il2Cpp.Api.Application._InvokeOnBeforeRender();
  }
  static InvokeFocusChanged(t) {
    return Il2Cpp.Api.Application._InvokeFocusChanged(t);
  }
  static InvokeDeepLinkActivated(t) {
    return Il2Cpp.Api.Application._InvokeDeepLinkActivated(allocUStr(t));
  }
  static RegisterLogCallback_1(t) {
    return Il2Cpp.Api.Application._RegisterLogCallback(t);
  }
  static RegisterLogCallback_2(t, e) {
    return Il2Cpp.Api.Application._RegisterLogCallback(t, e);
  }
  static get isEditor() {
    return 1 == Il2Cpp.Api.Application._get_isEditor();
  }
  static GetStackTraceLogType_1(t) {
    return Il2Cpp.Api.Application._GetStackTraceLogType(t);
  }
  static GetStackTraceLogType_toString(e) {
    return (0, t.enumNumToName)(Il2Cpp.Application.GetStackTraceLogType_1(e), "StackTraceLogType");
  }
}

exports.UnityEngine_Application_impl = a, Il2Cpp.Application = a;

},{"../../../../bridge/fix/enum":19,"../Type/class":356,"./enum":68}],68:[function(require,module,exports){
"use strict";

var e, a, r, n, i;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.SystemLanguage = exports.RuntimePlatform = exports.LogType = exports.StackTraceLogType = exports.NetworkReachability = void 0, 
function(e) {
  e[e.NotReachable = 0] = "NotReachable", e[e.ReachableViaCarrierDataNetwork = 1] = "ReachableViaCarrierDataNetwork", 
  e[e.ReachableViaLocalAreaNetwork = 2] = "ReachableViaLocalAreaNetwork";
}(e = exports.NetworkReachability || (exports.NetworkReachability = {})), function(e) {
  e[e.None = 0] = "None", e[e.ScriptOnly = 1] = "ScriptOnly", e[e.Full = 2] = "Full";
}(a = exports.StackTraceLogType || (exports.StackTraceLogType = {})), function(e) {
  e[e.Error = 0] = "Error", e[e.Assert = 1] = "Assert", e[e.Warning = 2] = "Warning", 
  e[e.Log = 3] = "Log", e[e.Exception = 4] = "Exception";
}(r = exports.LogType || (exports.LogType = {})), function(e) {
  e[e.Android = 11] = "Android", e[e.BlackBerryPlayer = 22] = "BlackBerryPlayer", 
  e[e.CloudRendering = 35] = "CloudRendering", e[e.FlashPlayer = 15] = "FlashPlayer", 
  e[e.GameCoreScarlett = 36] = "GameCoreScarlett", e[e.GameCoreXboxOne = 37] = "GameCoreXboxOne", 
  e[e.GameCoreXboxSeries = 36] = "GameCoreXboxSeries", e[e.IPhonePlayer = 8] = "IPhonePlayer", 
  e[e.LinuxEditor = 16] = "LinuxEditor", e[e.LinuxPlayer = 13] = "LinuxPlayer", e[e.Lumin = 33] = "Lumin", 
  e[e.MetroPlayerARM = 20] = "MetroPlayerARM", e[e.MetroPlayerX64 = 19] = "MetroPlayerX64", 
  e[e.MetroPlayerX86 = 18] = "MetroPlayerX86", e[e.NaCl = 12] = "NaCl", e[e.OSXDashboardPlayer = 4] = "OSXDashboardPlayer", 
  e[e.OSXEditor = 0] = "OSXEditor", e[e.OSXPlayer = 1] = "OSXPlayer", e[e.OSXWebPlayer = 3] = "OSXWebPlayer", 
  e[e.PS3 = 9] = "PS3", e[e.PS4 = 25] = "PS4", e[e.PS5 = 38] = "PS5", e[e.PSM = 26] = "PSM", 
  e[e.PSP2 = 24] = "PSP2", e[e.SamsungTVPlayer = 28] = "SamsungTVPlayer", e[e.Stadia = 34] = "Stadia", 
  e[e.Switch = 32] = "Switch", e[e.TizenPlayer = 23] = "TizenPlayer", e[e.tvOS = 31] = "tvOS", 
  e[e.WebGLPlayer = 17] = "WebGLPlayer", e[e.WiiU = 30] = "WiiU", e[e.WindowsEditor = 7] = "WindowsEditor", 
  e[e.WindowsPlayer = 2] = "WindowsPlayer", e[e.WindowsWebPlayer = 5] = "WindowsWebPlayer", 
  e[e.WP8Player = 21] = "WP8Player", e[e.WSAPlayerARM = 20] = "WSAPlayerARM", e[e.WSAPlayerX64 = 19] = "WSAPlayerX64", 
  e[e.WSAPlayerX86 = 18] = "WSAPlayerX86", e[e.XBOX360 = 10] = "XBOX360", e[e.XboxOne = 27] = "XboxOne";
}(n = exports.RuntimePlatform || (exports.RuntimePlatform = {})), function(e) {
  e[e.Afrikaans = 0] = "Afrikaans", e[e.Arabic = 1] = "Arabic", e[e.Basque = 2] = "Basque", 
  e[e.Belarusian = 3] = "Belarusian", e[e.Bulgarian = 4] = "Bulgarian", e[e.Catalan = 5] = "Catalan", 
  e[e.Chinese = 6] = "Chinese", e[e.ChineseSimplified = 40] = "ChineseSimplified", 
  e[e.ChineseTraditional = 41] = "ChineseTraditional", e[e.Czech = 7] = "Czech", e[e.Danish = 8] = "Danish", 
  e[e.Dutch = 9] = "Dutch", e[e.English = 10] = "English", e[e.Estonian = 11] = "Estonian", 
  e[e.Faroese = 12] = "Faroese", e[e.Finnish = 13] = "Finnish", e[e.French = 14] = "French", 
  e[e.German = 15] = "German", e[e.Greek = 16] = "Greek", e[e.Hebrew = 17] = "Hebrew", 
  e[e.Hungarian = 18] = "Hungarian", e[e.Icelandic = 19] = "Icelandic", e[e.Indonesian = 20] = "Indonesian", 
  e[e.Italian = 21] = "Italian", e[e.Japanese = 22] = "Japanese", e[e.Korean = 23] = "Korean", 
  e[e.Latvian = 24] = "Latvian", e[e.Lithuanian = 25] = "Lithuanian", e[e.Norwegian = 26] = "Norwegian", 
  e[e.Polish = 27] = "Polish", e[e.Portuguese = 28] = "Portuguese", e[e.Romanian = 29] = "Romanian", 
  e[e.Russian = 30] = "Russian", e[e.SerboCroatian = 31] = "SerboCroatian", e[e.Slovak = 32] = "Slovak", 
  e[e.Slovenian = 33] = "Slovenian", e[e.Spanish = 34] = "Spanish", e[e.Swedish = 35] = "Swedish", 
  e[e.Thai = 36] = "Thai", e[e.Turkish = 37] = "Turkish", e[e.Ukrainian = 38] = "Ukrainian", 
  e[e.Unknown = 42] = "Unknown", e[e.Vietnamese = 39] = "Vietnamese";
}(i = exports.SystemLanguage || (exports.SystemLanguage = {}));

},{}],69:[function(require,module,exports){
"use strict";

function t() {
  LOGE(`${getLine(20)} Application ${getLine(20)}`), LOGD(`[*] cloudProjectId\t\t\t${Il2Cpp.Application.cloudProjectId}\n${getLine(20)}`), 
  LOGD(`[*] productName\t\t\t\t${Il2Cpp.Application.productName}\n${getLine(20)}`), 
  LOGD(`[*] identifier\t\t\t\t${Il2Cpp.Application.identifier}\n${getLine(20)}`), 
  LOGD(`[*] unityVersion\t\t\t${Il2Cpp.Application.unityVersion}\n${getLine(20)}`), 
  LOGD(`[*] version\t\t\t\t${Il2Cpp.Application.version}\n${getLine(20)}`), LOGD(`[*] dataPath\t\t\t\t${Il2Cpp.Application.dataPath}\n${getLine(20)}`), 
  LOGD(`[*] persistentDataPath\t\t\t${Il2Cpp.Application.persistentDataPath}\n${getLine(20)}`), 
  LOGD(`[*] streamingAssetsPath\t\t\t${Il2Cpp.Application.streamingAssetsPath}\n${getLine(20)}`), 
  LOGD(`[*] temporaryCachePath\t\t\t${Il2Cpp.Application.temporaryCachePath}\n${getLine(20)}`), 
  LOGD(`[*] platform\t\t\t\t${Il2Cpp.Application.platform_toString}\n${getLine(20)}`), 
  LOGD(`[*] systemLanguage\t\t\t${Il2Cpp.Application.systemLanguage_toString}\n${getLine(20)}`), 
  LOGD(`[*] internetReachability\t\t${Il2Cpp.Application.internetReachability_toString}\n${getLine(20)}`), 
  LOGD(`[*] isEditor\t\t\t\t${Il2Cpp.Application.isEditor}\n${getLine(20)}`), LOGD(`[*] isPlaying\t\t\t\t${Il2Cpp.Application.isPlaying}\n${getLine(20)}`), 
  LOGD(`[*] get_dpi\t\t\t\t${Il2Cpp.Screen.get_dpi()}\n${getLine(20)}`), LOGD(`[*] get_height\t\t\t\t${Il2Cpp.Screen.get_height()}\n${getLine(20)}`), 
  LOGD(`[*] get_width\t\t\t\t${Il2Cpp.Screen.get_width()}\n${getLine(20)}`), LOGD(`[*] get_fullScreenMode\t\t\t${Il2Cpp.Screen.get_fullScreenMode_toString()}\n${getLine(20)}`), 
  LOGD(`[*] get_orientation\t\t\t${Il2Cpp.Screen.get_orientation_toString()}\n${getLine(20)}`);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Application = void 0, exports.Application = t;

},{}],70:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./enum"), require("./api"), require("./class"), require("./export");

},{"./api":66,"./class":67,"./enum":68,"./export":69}],71:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, W = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) W = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (W = (o < 3 ? r(W) : o > 3 ? r(t, n, W) : r(t, n)) || W);
  return o > 3 && W && Object.defineProperty(t, n, W), W;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", ".ctor", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_error() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "get_error", 0, [], "pointer", [ "pointer" ]);
  }
  static get _CreateTextureFromDownloadedData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "CreateTextureFromDownloadedData", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_texture() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "get_texture", 0, [], "pointer", [ "pointer" ]);
  }
  static get _LoadImageIntoTexture() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "LoadImageIntoTexture", 1, [ "UnityEngine.Texture2D" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_url() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "get_url", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_keepWaiting() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "get_keepWaiting", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Dispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "Dispose", 0, [], "void", [ "pointer" ]);
  }
  static get _WaitUntilDoneIfPossible() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestWWWModule", "UnityEngine.WWW", "WaitUntilDoneIfPossible", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_error", null), e([ t.cache ], n, "_CreateTextureFromDownloadedData", null), 
e([ t.cache ], n, "_get_texture", null), e([ t.cache ], n, "_LoadImageIntoTexture", null), 
e([ t.cache ], n, "_get_url", null), e([ t.cache ], n, "_get_keepWaiting", null), 
e([ t.cache ], n, "_Dispose", null), e([ t.cache ], n, "_WaitUntilDoneIfPossible", null), 
Il2Cpp.Api.WWW = n;

},{"decorator-cache-getter":513}],72:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_WWW_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_CustomYieldInstruction_Impl {
  constructor(e) {
    super(e);
  }
  get_error() {
    return readU16(Il2Cpp.Api.WWW._get_error(this.handle));
  }
  CreateTextureFromDownloadedData(e) {
    return Il2Cpp.Api.WWW._CreateTextureFromDownloadedData(this.handle, e);
  }
  get_texture() {
    return Il2Cpp.Api.WWW._get_texture(this.handle);
  }
  LoadImageIntoTexture(e) {
    return Il2Cpp.Api.WWW._LoadImageIntoTexture(this.handle, e);
  }
  get_url() {
    return readU16(Il2Cpp.Api.WWW._get_url(this.handle));
  }
  get_keepWaiting() {
    return Il2Cpp.Api.WWW._get_keepWaiting(this.handle);
  }
  Dispose() {
    return Il2Cpp.Api.WWW._Dispose(this.handle);
  }
  WaitUntilDoneIfPossible() {
    return Il2Cpp.Api.WWW._WaitUntilDoneIfPossible(this.handle);
  }
}

exports.UnityEngine_WWW_Impl = t, Il2Cpp.WWW = t;

},{"../class":76}],73:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => {};

globalThis.HookWWWCtor = e;

},{}],74:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":71,"./class":72,"./export":73}],75:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, c = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (c = (o < 3 ? r(c) : o > 3 ? r(t, n, c) : r(t, n)) || c);
  return o > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_keepWaiting() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.CustomYieldInstruction", "get_keepWaiting", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Current() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.CustomYieldInstruction", "get_Current", 0, [], "pointer", [ "pointer" ]);
  }
  static get _MoveNext() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.CustomYieldInstruction", "MoveNext", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Reset() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.CustomYieldInstruction", "Reset", 0, [], "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.CustomYieldInstruction", ".ctor", 0, [], "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_keepWaiting", null), e([ t.cache ], n, "_get_Current", null), 
e([ t.cache ], n, "_MoveNext", null), e([ t.cache ], n, "_Reset", null), e([ t.cache ], n, "__ctor", null), 
Il2Cpp.Api.CustomYieldInstruction = n;

},{"decorator-cache-getter":513}],76:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_CustomYieldInstruction_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  get_keepWaiting() {
    return Il2Cpp.Api.CustomYieldInstruction._get_keepWaiting(this.handle);
  }
  get_Current() {
    return Il2Cpp.Api.CustomYieldInstruction._get_Current(this.handle);
  }
  MoveNext() {
    return Il2Cpp.Api.CustomYieldInstruction._MoveNext(this.handle);
  }
  Reset() {
    return Il2Cpp.Api.CustomYieldInstruction._Reset(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.CustomYieldInstruction.__ctor(this.handle);
  }
}

exports.UnityEngine_CustomYieldInstruction_Impl = e, Il2Cpp.CustomYieldInstruction = e;

},{"../class":468}],77:[function(require,module,exports){
"use strict";

},{}],78:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./WWW/include");

},{"./WWW/include":74,"./api":75,"./class":76,"./export":77}],79:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, g = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) g = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (g = (o < 3 ? r(g) : o > 3 ? r(t, n, g) : r(t, n)) || g);
  return o > 3 && g && Object.defineProperty(t, n, g), g;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_unityLogger() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "get_unityLogger", 0, "pointer", []);
  }
  static get _DrawLine() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawLine", 5, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _DrawRay() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawRay", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DrawRay_start_dir_color_duration_depthTest() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawRay", 5, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Color", "System.Single", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Log() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "Log", 1, [ "System.Object" ], "void", [ "pointer" ]);
  }
  static get _Log_message_context() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "Log", 2, [ "System.Object", "UnityEngine.Object" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogError() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "LogError", 1, "void", [ "pointer" ]);
  }
  static get _LogError_message_context() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogError", 2, [ "System.Object", "UnityEngine.Object" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogErrorFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogErrorFormat", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogErrorFormat_context_format_args() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogErrorFormat", 3, [ "UnityEngine.Object", "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _LogException() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogException", 1, [ "System.Exception" ], "void", [ "pointer" ]);
  }
  static get _LogException_exception_context() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogException", 2, [ "System.Exception", "UnityEngine.Object" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogWarning() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarning", 1, [ "System.Object" ], "void", [ "pointer" ]);
  }
  static get _LogWarning_message_context() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarning", 2, [ "System.Object", "UnityEngine.Object" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogWarningFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarningFormat", 2, [ "System.String", "System.Object[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LogWarningFormat_context_format_args() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarningFormat", 3, [ "UnityEngine.Object", "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CallOverridenDebugHandler() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "CallOverridenDebugHandler", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", ".cctor", 0, "void", []);
  }
  static get _DrawLine_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawLine_Injected", 5, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_get_unityLogger", null), e([ t.cache ], n, "_DrawLine", null), 
e([ t.cache ], n, "_DrawRay", null), e([ t.cache ], n, "_DrawRay_start_dir_color_duration_depthTest", null), 
e([ t.cache ], n, "_Log", null), e([ t.cache ], n, "_Log_message_context", null), 
e([ t.cache ], n, "_LogError", null), e([ t.cache ], n, "_LogError_message_context", null), 
e([ t.cache ], n, "_LogErrorFormat", null), e([ t.cache ], n, "_LogErrorFormat_context_format_args", null), 
e([ t.cache ], n, "_LogException", null), e([ t.cache ], n, "_LogException_exception_context", null), 
e([ t.cache ], n, "_LogWarning", null), e([ t.cache ], n, "_LogWarning_message_context", null), 
e([ t.cache ], n, "_LogWarningFormat", null), e([ t.cache ], n, "_LogWarningFormat_context_format_args", null), 
e([ t.cache ], n, "_CallOverridenDebugHandler", null), e([ t.cache ], n, "__cctor", null), 
e([ t.cache ], n, "_DrawLine_Injected", null), Il2Cpp.Api.Debug = n;

},{"decorator-cache-getter":513}],80:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Debug_Impl = void 0;

const r = require("../class");

class t extends r.mscorlib_System_Object_impl {
  s_Logger=lfv(this.handle, "s_Logger");
  constructor(r) {
    super(r);
  }
  static get_unityLogger() {
    return Il2Cpp.Api.Debug._get_unityLogger();
  }
  static DrawLine(r, t, e, p, i) {
    return Il2Cpp.Api.Debug._DrawLine(r, t, e, p, i);
  }
  static DrawRay(r, t, e) {
    return Il2Cpp.Api.Debug._DrawRay(r, t, e);
  }
  static DrawRay_5(r, t, e, p, i) {
    return Il2Cpp.Api.Debug._DrawRay(r, t, e, p, i);
  }
  static Log(r) {
    return Il2Cpp.Api.Debug._Log(r);
  }
  static Log_2(r, t) {
    return Il2Cpp.Api.Debug._Log(r, t);
  }
  static LogError(r) {
    return Il2Cpp.Api.Debug._LogError(r);
  }
  static LogError_2(r, t) {
    return Il2Cpp.Api.Debug._LogError(r, t);
  }
  static LogErrorFormat(r, t) {
    return Il2Cpp.Api.Debug._LogErrorFormat(allocUStr(r), t);
  }
  static LogErrorFormat_3(r, t, e) {
    return Il2Cpp.Api.Debug._LogErrorFormat(r, allocUStr(t), e);
  }
  static LogException(r) {
    return Il2Cpp.Api.Debug._LogException(r);
  }
  static LogException_2(r, t) {
    return Il2Cpp.Api.Debug._LogException(r, t);
  }
  static LogWarning(r) {
    return Il2Cpp.Api.Debug._LogWarning(r);
  }
  static LogWarning_2(r, t) {
    return Il2Cpp.Api.Debug._LogWarning(r, t);
  }
  static LogWarningFormat(r, t) {
    return Il2Cpp.Api.Debug._LogWarningFormat(allocUStr(r), t);
  }
  static LogWarningFormat_3(r, t, e) {
    return Il2Cpp.Api.Debug._LogWarningFormat(r, allocUStr(t), e);
  }
  static CallOverridenDebugHandler(r, t) {
    return Il2Cpp.Api.Debug._CallOverridenDebugHandler(r, t);
  }
  static _cctor() {
    return Il2Cpp.Api.Debug.__cctor();
  }
  static DrawLine_Injected(r, t, e, p, i) {
    return Il2Cpp.Api.Debug._DrawLine_Injected(r, t, e, p, i);
  }
}

exports.UnityEngine_Debug_Impl = t, Il2Cpp.Debug = t;

},{"../class":468}],81:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookDebugLog = void 0;

const o = () => {
  let o = find_method("UnityEngine.CoreModule", "Logger", "Log", 2, !0);
  LOGD("[*] Hook : UnityEngine.CoreModule.Logger.Log : " + o), A(o, ((o, e) => {
    LOGG(`\n[*] Logger.LOG('${o[1]}' , '${readU16(o[2])}')  <---  LR : ${checkCtx(e, "LR")}`);
  }));
  let e = Il2Cpp.Api.Debug._LogException;
  LOGD("[*] Hook : UnityEngine.CoreModule.Debug.LogException : " + e), A(e, ((o, e) => {
    let g = callFunction(find_method("mscorlib", "Exception", "ToString", 0, !0), o[0]);
    LOGG(`\n[*] Logger.LOG('${readU16(g)}')  <---  LR : ${checkCtx(e, "LR")}`);
  }));
};

exports.HookDebugLog = o, globalThis.HookDebugLog = o;

},{}],82:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":79,"./class":80,"./export":81}],83:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, c = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (c = (r < 3 ? o(c) : r > 3 ? o(t, n, c) : o(t, n)) || c);
  return r > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", ".ctor", 2, [ "System.Object", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Invoke() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "Invoke", 0, [], "void", [ "pointer" ]);
  }
  static get _BeginInvoke() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "BeginInvoke", 2, [ "System.AsyncCallback", "System.Object" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _EndInvoke() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "EndInvoke", 1, [ "System.IAsyncResult" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_Invoke", null), e([ t.cache ], n, "_BeginInvoke", null), 
e([ t.cache ], n, "_EndInvoke", null), Il2Cpp.Api.UnityAction = n;

},{"decorator-cache-getter":513}],84:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Events_UnityAction_Impl = void 0;

const n = require("../class");

class t extends n.System_MulticastDelegate_Impl {
  constructor(n) {
    super(n);
  }
  _ctor(n, t) {
    return Il2Cpp.Api.UnityAction.__ctor(this.handle, n, t);
  }
  Invoke() {
    return Il2Cpp.Api.UnityAction._Invoke(this.handle);
  }
  BeginInvoke(n, t) {
    return Il2Cpp.Api.UnityAction._BeginInvoke(this.handle, n, t);
  }
  EndInvoke(n) {
    return Il2Cpp.Api.UnityAction._EndInvoke(this.handle, n);
  }
}

exports.UnityEngine_Events_UnityAction_Impl = t, Il2Cpp.UnityAction = t;

},{"../class":87}],85:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":83,"./class":84}],86:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, l) {
  var o, n = arguments.length, r = n < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, i) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, i, l); else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (r = (n < 3 ? o(r) : n > 3 ? o(t, i, r) : o(t, i)) || r);
  return n > 3 && r && Object.defineProperty(t, i, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _GetObjectData() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetObjectData", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DynamicInvokeImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "DynamicInvokeImpl", 1, [ "System.Object[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetMethodImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetMethodImpl", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetInvocationList() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetInvocationList", 0, [], "pointer", [ "pointer" ]);
  }
  static get _CombineImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "CombineImpl", 1, [ "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _LastIndexOf() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "LastIndexOf", 2, [ "System.Delegate[]", "System.Delegate[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RemoveImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "RemoveImpl", 1, [ "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], i, "_GetObjectData", null), e([ t.cache ], i, "_DynamicInvokeImpl", null), 
e([ t.cache ], i, "_Equals", null), e([ t.cache ], i, "_GetHashCode", null), e([ t.cache ], i, "_GetMethodImpl", null), 
e([ t.cache ], i, "_GetInvocationList", null), e([ t.cache ], i, "_CombineImpl", null), 
e([ t.cache ], i, "_LastIndexOf", null), e([ t.cache ], i, "_RemoveImpl", null), 
mscorlib.Api.MulticastDelegate = i;

},{"decorator-cache-getter":513}],87:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_MulticastDelegate_Impl = void 0;

const e = require("../class");

class t extends e.System_Delegate_Impl {
  delegates=lfv(this.handle, "delegates");
  constructor(e) {
    super(e);
  }
  GetObjectData(e, t) {
    return mscorlib.Api.MulticastDelegate._GetObjectData(this.handle, e, t);
  }
  DynamicInvokeImpl(e) {
    return mscorlib.Api.MulticastDelegate._DynamicInvokeImpl(this.handle, e);
  }
  Equals(e) {
    return mscorlib.Api.MulticastDelegate._Equals(this.handle, e);
  }
  GetHashCode() {
    return mscorlib.Api.MulticastDelegate._GetHashCode(this.handle);
  }
  GetMethodImpl() {
    return mscorlib.Api.MulticastDelegate._GetMethodImpl(this.handle);
  }
  GetInvocationList() {
    return mscorlib.Api.MulticastDelegate._GetInvocationList(this.handle);
  }
  CombineImpl(t) {
    return new e.System_Delegate_Impl(mscorlib.Api.MulticastDelegate._CombineImpl(this.handle, t.handle));
  }
  LastIndexOf(e, t) {
    return mscorlib.Api.MulticastDelegate._LastIndexOf(this.handle, e, t);
  }
  RemoveImpl(t) {
    return new e.System_Delegate_Impl(mscorlib.Api.MulticastDelegate._RemoveImpl(this.handle, t.handle));
  }
}

exports.System_MulticastDelegate_Impl = t, mscorlib.MulticastDelegate = t;

},{"../class":90}],88:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./UnityAction/include");

},{"./UnityAction/include":85,"./api":86,"./class":87}],89:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var i, n = arguments.length, l = n < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, r, o); else for (var a = e.length - 1; a >= 0; a--) (i = e[a]) && (l = (n < 3 ? i(l) : n > 3 ? i(t, r, l) : i(t, r)) || l);
  return n > 3 && l && Object.defineProperty(t, r, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _get_Method() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "get_Method", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetVirtualMethod_internal() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetVirtualMethod_internal", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Target() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "get_Target", 0, [], "pointer", [ "pointer" ]);
  }
  static get _CreateDelegate_internal() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate_internal", 4, [ "System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _arg_type_match() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "arg_type_match", 2, [ "System.Type", "System.Type" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _arg_type_match_this() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "arg_type_match_this", 3, [ "System.Type", "System.Type", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _return_type_match() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "return_type_match", 2, [ "System.Type", "System.Type" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CreateDelegate() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 4, [ "System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_firstArgument_method_throwOnBindFailure_allowClosed() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, [ "System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_firstArgument_method() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, [ "System.Type", "System.Object", "System.Reflection.MethodInfo" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_method_throwOnBindFailure() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, [ "System.Type", "System.Reflection.MethodInfo", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_method() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 2, [ "System.Type", "System.Reflection.MethodInfo" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_target_method() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, [ "System.Type", "System.Object", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetCandidateMethod() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetCandidateMethod", 6, [ "System.Type", "System.Type", "System.String", "System.Reflection.BindingFlags", "System.Boolean", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, [ "System.Type", "System.Type", "System.String", "System.Boolean", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_target_method_() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, [ "System.Type", "System.Type", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure_() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, [ "System.Type", "System.Object", "System.String", "System.Boolean", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateDelegate_type_target_method_ignoreCase() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 4, [ "System.Type", "System.Object", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _DynamicInvoke() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "DynamicInvoke", 1, [ "System.Object[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InitializeDelegateData() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "InitializeDelegateData", 0, [], "void", [ "pointer" ]);
  }
  static get _DynamicInvokeImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "DynamicInvokeImpl", 1, [ "System.Object[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Clone() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Clone", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetMethodImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetMethodImpl", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetObjectData() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetObjectData", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetInvocationList() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetInvocationList", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Combine() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Combine", 2, [ "System.Delegate", "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Combine_delegates() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Combine", 1, [ "System.Delegate[]" ], "pointer", [ "pointer" ]);
  }
  static get _CombineImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CombineImpl", 1, [ "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Remove() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Remove", 2, [ "System.Delegate", "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _RemoveImpl() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "RemoveImpl", 1, [ "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "op_Equality", 2, [ "System.Delegate", "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "op_Inequality", 2, [ "System.Delegate", "System.Delegate" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CreateDelegateNoSecurityCheck() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegateNoSecurityCheck", 3, [ "System.RuntimeType", "System.Object", "System.Reflection.MethodInfo" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AllocDelegateLike_internal() {
    return Il2Cpp.Api.o("mscorlib", "System.Delegate", "AllocDelegateLike_internal", 1, [ "System.Delegate" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], r, "_get_Method", null), e([ t.cache ], r, "_GetVirtualMethod_internal", null), 
e([ t.cache ], r, "_get_Target", null), e([ t.cache ], r, "_CreateDelegate_internal", null), 
e([ t.cache ], r, "_arg_type_match", null), e([ t.cache ], r, "_arg_type_match_this", null), 
e([ t.cache ], r, "_return_type_match", null), e([ t.cache ], r, "_CreateDelegate", null), 
e([ t.cache ], r, "_CreateDelegate_type_firstArgument_method_throwOnBindFailure_allowClosed", null), 
e([ t.cache ], r, "_CreateDelegate_type_firstArgument_method", null), e([ t.cache ], r, "_CreateDelegate_type_method_throwOnBindFailure", null), 
e([ t.cache ], r, "_CreateDelegate_type_method", null), e([ t.cache ], r, "_CreateDelegate_type_target_method", null), 
e([ t.cache ], r, "_GetCandidateMethod", null), e([ t.cache ], r, "_CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure", null), 
e([ t.cache ], r, "_CreateDelegate_type_target_method_", null), e([ t.cache ], r, "_CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure_", null), 
e([ t.cache ], r, "_CreateDelegate_type_target_method_ignoreCase", null), e([ t.cache ], r, "_DynamicInvoke", null), 
e([ t.cache ], r, "_InitializeDelegateData", null), e([ t.cache ], r, "_DynamicInvokeImpl", null), 
e([ t.cache ], r, "_Clone", null), e([ t.cache ], r, "_Equals", null), e([ t.cache ], r, "_GetHashCode", null), 
e([ t.cache ], r, "_GetMethodImpl", null), e([ t.cache ], r, "_GetObjectData", null), 
e([ t.cache ], r, "_GetInvocationList", null), e([ t.cache ], r, "_Combine", null), 
e([ t.cache ], r, "_Combine_delegates", null), e([ t.cache ], r, "_CombineImpl", null), 
e([ t.cache ], r, "_Remove", null), e([ t.cache ], r, "_RemoveImpl", null), e([ t.cache ], r, "_op_Equality", null), 
e([ t.cache ], r, "_op_Inequality", null), e([ t.cache ], r, "_CreateDelegateNoSecurityCheck", null), 
e([ t.cache ], r, "_AllocDelegateLike_internal", null), mscorlib.Api.Delegate = r;

},{"decorator-cache-getter":513}],90:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Delegate_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  method_ptr=lfv(this.handle, "method_ptr");
  invoke_impl=lfv(this.handle, "invoke_impl");
  m_target=new e.mscorlib_System_Object_impl(lfv(this.handle, "m_target"));
  method=lfv(this.handle, "method");
  delegate_trampoline=lfv(this.handle, "delegate_trampoline");
  extra_arg=lfv(this.handle, "extra_arg");
  method_code=lfv(this.handle, "method_code");
  method_info=lfv(this.handle, "method_info");
  original_method_info=lfv(this.handle, "original_method_info");
  data=lfv(this.handle, "data");
  method_is_virtual=!lfv(this.handle, "method_is_virtual").isNull();
  constructor(e) {
    super(e);
  }
  get_Method() {
    return mscorlib.Api.Delegate._get_Method(this.handle);
  }
  GetVirtualMethod_internal() {
    return mscorlib.Api.Delegate._GetVirtualMethod_internal(this.handle);
  }
  get_Target() {
    return mscorlib.Api.Delegate._get_Target(this.handle);
  }
  static CreateDelegate_internal(e, t, a, l) {
    return mscorlib.Api.Delegate._CreateDelegate_internal(e.handle, t.handle, a, l);
  }
  static arg_type_match(e, t) {
    return mscorlib.Api.Delegate._arg_type_match(e, t);
  }
  static arg_type_match_this(e, t, a) {
    return mscorlib.Api.Delegate._arg_type_match_this(e, t, a);
  }
  static return_type_match(e, t) {
    return mscorlib.Api.Delegate._return_type_match(e, t);
  }
  static CreateDelegate(e, a, l, i) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a, l, i));
  }
  static CreateDelegate_5_(e, t, a, l, i) {
    return mscorlib.Api.Delegate._CreateDelegate(e.handle, t, a, l, i);
  }
  static CreateDelegate_3_(e, a, l) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a, l));
  }
  static CreateDelegate_3(e, a, l) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a, l));
  }
  static CreateDelegate_2(e, a) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a));
  }
  static CreateDelegate_3__(e, a, l) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a.handle, l));
  }
  static GetCandidateMethod(e, t, a, l, i, r) {
    return mscorlib.Api.Delegate._GetCandidateMethod(e.handle, t.handle, a, l, i, r);
  }
  static CreateDelegate_5__(e, a, l, i, r) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a.handle, l, i, r));
  }
  static CreateDelegate_3___(e, a, l) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a.handle, l));
  }
  static CreateDelegate_5(e, a, l, i, r) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a.handle, l, i, r));
  }
  static CreateDelegate_4(e, a, l, i) {
    return new t(mscorlib.Api.Delegate._CreateDelegate(e.handle, a.handle, l, i));
  }
  DynamicInvoke(t) {
    return new e.mscorlib_System_Object_impl(mscorlib.Api.Delegate._DynamicInvoke(this.handle, t));
  }
  InitializeDelegateData() {
    return mscorlib.Api.Delegate._InitializeDelegateData(this.handle);
  }
  DynamicInvokeImpl(t) {
    return new e.mscorlib_System_Object_impl(mscorlib.Api.Delegate._DynamicInvokeImpl(this.handle, t));
  }
  Clone() {
    return new e.mscorlib_System_Object_impl(mscorlib.Api.Delegate._Clone(this.handle));
  }
  Equals(e) {
    return mscorlib.Api.Delegate._Equals(this.handle, e);
  }
  GetHashCode() {
    return mscorlib.Api.Delegate._GetHashCode(this.handle);
  }
  GetMethodImpl() {
    return mscorlib.Api.Delegate._GetMethodImpl(this.handle);
  }
  GetObjectData(e, t) {
    return mscorlib.Api.Delegate._GetObjectData(this.handle, e, t);
  }
  GetInvocationList() {
    return mscorlib.Api.Delegate._GetInvocationList(this.handle);
  }
  static Combine(e, a) {
    return new t(mscorlib.Api.Delegate._Combine(e.handle, a.handle));
  }
  static Combine_1(e) {
    return new t(mscorlib.Api.Delegate._Combine(e));
  }
  CombineImpl(e) {
    return new t(mscorlib.Api.Delegate._CombineImpl(this.handle, e.handle));
  }
  static Remove(e, a) {
    return new t(mscorlib.Api.Delegate._Remove(e.handle, a.handle));
  }
  RemoveImpl(e) {
    return new t(mscorlib.Api.Delegate._RemoveImpl(this.handle, e.handle));
  }
  static op_Equality(e, t) {
    return mscorlib.Api.Delegate._op_Equality(e.handle, t.handle);
  }
  static op_Inequality(e, t) {
    return mscorlib.Api.Delegate._op_Inequality(e.handle, t.handle);
  }
  static CreateDelegateNoSecurityCheck(e, t, a) {
    return mscorlib.Api.Delegate._CreateDelegateNoSecurityCheck(e, t, a);
  }
  static AllocDelegateLike_internal(e) {
    return mscorlib.Api.Delegate._AllocDelegateLike_internal(e.handle);
  }
  toString() {
    try {
      let e = new Il2Cpp.Method(this.method);
      return `${e.name} | MI:${this.method} | MP:${e.relativeVirtualAddress} | TG:${this.m_target} | virtual:${this.method_is_virtual}`;
    } catch (e) {
      return "Error";
    }
  }
  toArray() {
    return [ this.method, this.method_ptr, this.m_target, this.method_is_virtual ];
  }
}

exports.System_Delegate_Impl = t, mscorlib.Delegate = t;

},{"../class":468}],91:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./MulticastDelegate/include");

},{"./MulticastDelegate/include":88,"./api":89,"./class":90}],92:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, l = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (l = (r < 3 ? o(l) : r > 3 ? o(t, n, l) : o(t, n)) || l);
  return r > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Create() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "Create", 3, [ "UnityEngine.Networking.DownloadHandlerAudioClip", "System.String", "UnityEngine.AudioType" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InternalCreateAudioClip() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "InternalCreateAudioClip", 2, [ "System.String", "UnityEngine.AudioType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", ".ctor", 2, [ "System.String", "UnityEngine.AudioType" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "GetData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetText() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "GetText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_audioClip() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "get_audioClip", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetContent() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestAudioModule", "UnityEngine.Networking.DownloadHandlerAudioClip", "GetContent", 1, [ "UnityEngine.Networking.UnityWebRequest" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_Create", null), e([ t.cache ], n, "_InternalCreateAudioClip", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_GetData", null), e([ t.cache ], n, "_GetText", null), 
e([ t.cache ], n, "_get_audioClip", null), e([ t.cache ], n, "_GetContent", null), 
Il2Cpp.Api.DownloadHandlerAudioClip = n;

},{"decorator-cache-getter":513}],93:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_DownloadHandlerAudioClip_Impl = void 0;

const e = require("../../Object/AudioClip/class"), l = require("../class");

class i extends l.UnityEngine_Networking_DownloadHandler_Impl {
  constructor(e) {
    super(e);
  }
  static Create(e, l, i) {
    return Il2Cpp.Api.DownloadHandlerAudioClip._Create(e, allocUStr(l), i);
  }
  InternalCreateAudioClip(e, l) {
    return Il2Cpp.Api.DownloadHandlerAudioClip._InternalCreateAudioClip(this.handle, e, l);
  }
  _ctor(e, l) {
    return Il2Cpp.Api.DownloadHandlerAudioClip.__ctor(this.handle, e, l);
  }
  GetData() {
    return Il2Cpp.Api.DownloadHandlerAudioClip._GetData(this.handle);
  }
  GetText() {
    return readU16(Il2Cpp.Api.DownloadHandlerAudioClip._GetText(this.handle));
  }
  get_audioClip() {
    return new e.UnityEngine_AudioClip_Impl(Il2Cpp.Api.DownloadHandlerAudioClip._get_audioClip(this.handle));
  }
  static GetContent(e) {
    return Il2Cpp.Api.DownloadHandlerAudioClip._GetContent(e);
  }
}

exports.UnityEngine_Networking_DownloadHandlerAudioClip_Impl = i, Il2Cpp.DownloadHandlerAudioClip = i;

},{"../../Object/AudioClip/class":155,"../class":110}],94:[function(require,module,exports){
"use strict";

var e;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AudioType = void 0, function(e) {
  e[e.UNKNOWN = 0] = "UNKNOWN", e[e.ACC = 1] = "ACC", e[e.AIFF = 2] = "AIFF", e[e.IT = 10] = "IT", 
  e[e.MOD = 12] = "MOD", e[e.MPEG = 13] = "MPEG", e[e.OGGVORBIS = 14] = "OGGVORBIS", 
  e[e.S3M = 17] = "S3M", e[e.WAV = 20] = "WAV", e[e.XM = 21] = "XM", e[e.XMA = 22] = "XMA", 
  e[e.VAG = 23] = "VAG", e[e.AUDIOQUEUE = 24] = "AUDIOQUEUE";
}(e = exports.UnityEngine_AudioType || (exports.UnityEngine_AudioType = {}));

},{}],95:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.DownloadHandlerAudioClipHooker = void 0;

class o {
  static hook() {
    try {
      let o = Il2Cpp.Api.DownloadHandlerAudioClip._GetText;
      null != o && A(o, void 0, (o => {
        LOGD(`[*] DownloadHandlerAudioClipHooker.GetText() | ret = '${readU16(o)}'`);
      })), LOGD("Hook DownloadHandlerAudioClipHooker.GetText()");
    } catch (o) {
      LOGE(o);
    }
    try {
      let o = Il2Cpp.Api.DownloadHandlerAudioClip._GetData;
      null != o && A(o, void 0, (o => {
        LOGD(`[*] DownloadHandlerAudioClipHooker.GetData() | ret = '${o}'`);
      })), LOGD("Hook DownloadHandlerAudioClipHooker.GetData()");
    } catch (o) {
      LOGE(o);
    }
  }
}

exports.DownloadHandlerAudioClipHooker = o;

},{}],96:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./enum");

},{"./api":92,"./class":93,"./enum":94,"./export":95}],97:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, o = arguments.length, a = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r); else for (var l = e.length - 1; l >= 0; l--) (i = e[l]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Create() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerBuffer", "Create", 1, [ "UnityEngine.Networking.DownloadHandlerBuffer" ], "pointer", [ "pointer" ]);
  }
  static get _InternalCreateBuffer() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerBuffer", "InternalCreateBuffer", 0, [], "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerBuffer", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _GetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerBuffer", "GetData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _InternalGetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerBuffer", "InternalGetData", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_Create", null), e([ t.cache ], n, "_InternalCreateBuffer", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_GetData", null), e([ t.cache ], n, "_InternalGetData", null), 
Il2Cpp.Api.DownloadHandlerBuffer = n;

},{"decorator-cache-getter":513}],98:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_DownloadHandlerBuffer_Impl = void 0;

const e = require("../class");

class r extends e.UnityEngine_Networking_DownloadHandler_Impl {
  constructor(e) {
    super(e);
  }
  static Create(e) {
    return Il2Cpp.Api.DownloadHandlerBuffer._Create(e);
  }
  InternalCreateBuffer() {
    return Il2Cpp.Api.DownloadHandlerBuffer._InternalCreateBuffer(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.DownloadHandlerBuffer.__ctor(this.handle);
  }
  GetData() {
    return Il2Cpp.Api.DownloadHandlerBuffer._GetData(this.handle);
  }
  InternalGetData() {
    return Il2Cpp.Api.DownloadHandlerBuffer._InternalGetData(this.handle);
  }
}

exports.UnityEngine_Networking_DownloadHandlerBuffer_Impl = r, Il2Cpp.DownloadHandlerBuffer = r;

},{"../class":110}],99:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.DownloadHandlerBufferHooker = void 0;

class e {
  static hook() {
    try {
      let e = Il2Cpp.Api.DownloadHandlerBuffer._GetData;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerBuffer.GetData() | ret = '${e}'`);
      })), LOGD("Hook DownloadHandlerBuffer.GetData()");
    } catch (e) {
      LOGE(e);
    }
  }
}

exports.DownloadHandlerBufferHooker = e;

},{}],100:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":97,"./class":98,"./export":99}],101:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, o = arguments.length, l = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, r); else for (var a = e.length - 1; a >= 0; a--) (i = e[a]) && (l = (o < 3 ? i(l) : o > 3 ? i(t, n, l) : i(t, n)) || l);
  return o > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Create() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "Create", 2, [ "UnityEngine.Networking.DownloadHandlerTexture", "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InternalCreateTexture() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "InternalCreateTexture", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", ".ctor", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "GetData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_texture() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "get_texture", 0, [], "pointer", [ "pointer" ]);
  }
  static get _InternalGetTexture() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "InternalGetTexture", 0, [], "pointer", [ "pointer" ]);
  }
  static get _InternalGetTextureNative() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "InternalGetTextureNative", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetContent() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestTextureModule", "UnityEngine.Networking.DownloadHandlerTexture", "GetContent", 1, [ "UnityEngine.Networking.UnityWebRequest" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_Create", null), e([ t.cache ], n, "_InternalCreateTexture", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_GetData", null), e([ t.cache ], n, "_get_texture", null), 
e([ t.cache ], n, "_InternalGetTexture", null), e([ t.cache ], n, "_InternalGetTextureNative", null), 
e([ t.cache ], n, "_GetContent", null), Il2Cpp.Api.DownloadHandlerTexture = n;

},{"decorator-cache-getter":513}],102:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_DownloadHandlerFile_Impl = void 0;

const e = require("../class");

class n extends e.UnityEngine_Networking_DownloadHandler_Impl {
  constructor(e) {
    super(e);
  }
  static Create(e, n, l) {
    return Il2Cpp.Api.DownloadHandlerFile._Create(e, n, l);
  }
  InternalCreateVFS(e, n) {
    return Il2Cpp.Api.DownloadHandlerFile._InternalCreateVFS(this.handle, e, n);
  }
  _ctor_DownloadHandlerFile(e) {
    return Il2Cpp.Api.DownloadHandlerFile.__ctor(this.handle, e);
  }
  GetData() {
    return Il2Cpp.Api.DownloadHandlerFile._GetData(this.handle);
  }
  GetText() {
    return readU16(Il2Cpp.Api.DownloadHandlerFile._GetText(this.handle));
  }
}

exports.UnityEngine_Networking_DownloadHandlerFile_Impl = n, Il2Cpp.DownloadHandlerFile = n;

},{"../class":110}],103:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.DownloadHandlerFileHooker = void 0;

class e {
  static hook() {
    try {
      let e = Il2Cpp.Api.DownloadHandlerFile._GetText;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerFile.GetText() | ret = '${readU16(e)}'`);
      })), LOGD("Hook DownloadHandlerFile.GetText()");
    } catch (e) {
      LOGE(e);
    }
    try {
      let e = Il2Cpp.Api.DownloadHandlerFile._GetData;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerFile.GetData() | ret = '${e}'`);
      })), LOGD("Hook DownloadHandlerFile.GetData()");
    } catch (e) {
      LOGE(e);
    }
  }
}

exports.DownloadHandlerFileHooker = e;

},{}],104:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":101,"./class":102,"./export":103}],105:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, l = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var a = e.length - 1; a >= 0; a--) (r = e[a]) && (l = (o < 3 ? r(l) : o > 3 ? r(t, n, l) : r(t, n)) || l);
  return o > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Create() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerFile", "Create", 3, [ "UnityEngine.Networking.DownloadHandlerFile", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InternalCreateVFS() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerFile", "InternalCreateVFS", 2, [ "System.String", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerFile", ".ctor", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerFile", "GetData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetText() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandlerFile", "GetText", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_Create", null), e([ t.cache ], n, "_InternalCreateVFS", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_GetData", null), e([ t.cache ], n, "_GetText", null), 
Il2Cpp.Api.DownloadHandlerFile = n;

},{"decorator-cache-getter":513}],106:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_DownloadHandlerTexture_Impl = void 0;

const e = require("../../Object/Texture/Texture2D/class"), t = require("../class");

class r extends t.UnityEngine_Networking_DownloadHandler_Impl {
  mTexture=new e.UnityEngine_Texture2D_Impl(lfv(this.handle, "mTexture"));
  mHasTexture=lfv(this.handle, "mHasTexture");
  mNonReadable=lfv(this.handle, "mNonReadable");
  constructor(e) {
    super(e);
  }
  static Create(e, t) {
    return Il2Cpp.Api.DownloadHandlerTexture._Create(e, t);
  }
  InternalCreateTexture(e) {
    return Il2Cpp.Api.DownloadHandlerTexture._InternalCreateTexture(this.handle, e);
  }
  _ctor_DownloadHandlerTexture(e) {
    return Il2Cpp.Api.DownloadHandlerTexture.__ctor(this.handle, e);
  }
  GetData() {
    return Il2Cpp.Api.DownloadHandlerTexture._GetData(this.handle);
  }
  get_texture() {
    return Il2Cpp.Api.DownloadHandlerTexture._get_texture(this.handle);
  }
  InternalGetTexture() {
    return Il2Cpp.Api.DownloadHandlerTexture._InternalGetTexture(this.handle);
  }
  InternalGetTextureNative() {
    return Il2Cpp.Api.DownloadHandlerTexture._InternalGetTextureNative(this.handle);
  }
  static GetContent(e) {
    return Il2Cpp.Api.DownloadHandlerTexture._GetContent(e);
  }
}

exports.UnityEngine_Networking_DownloadHandlerTexture_Impl = r, Il2Cpp.DownloadHandlerTexture = r;

},{"../../Object/Texture/Texture2D/class":293,"../class":110}],107:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.DownloadHandlerTextureHooker = void 0;

class e {
  static hook() {
    try {
      let e = Il2Cpp.Api.DownloadHandlerTexture._GetData;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerTexture.GetData() | ret = '${e}'`);
      })), LOGD("Hook DownloadHandlerTexture.GetData()");
    } catch (e) {
      LOGE(e);
    }
    try {
      let e = Il2Cpp.Api.DownloadHandlerTexture._GetContent;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerTexture.GetContent() | ret = '${e}'`);
      })), LOGD("Hook DownloadHandlerTexture.GetContent()");
    } catch (e) {
      LOGE(e);
    }
    try {
      let e = Il2Cpp.Api.DownloadHandlerTexture._get_texture;
      e && A(e, void 0, (e => {
        LOGD(`[*] DownloadHandlerTexture.get_texture() | ret = '${e}'`);
      })), LOGD("Hook DownloadHandlerTexture.get_texture()");
    } catch (e) {
      LOGE(e);
    }
  }
}

exports.DownloadHandlerTextureHooker = e;

},{}],108:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":105,"./class":106,"./export":107}],109:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, l = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (l = (r < 3 ? o(l) : r > 3 ? o(t, n, l) : o(t, n)) || l);
  return r > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Release() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "Release", 0, [], "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "Finalize", 0, [], "void", [ "pointer" ]);
  }
  static get _Dispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "Dispose", 0, [], "void", [ "pointer" ]);
  }
  static get _get_data() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "get_data", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_text() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "get_text", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "GetData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetText() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "GetText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetTextEncoder() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "GetTextEncoder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetContentType() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "GetContentType", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetCheckedDownloader() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "GetCheckedDownloader", 1, [ "UnityEngine.Networking.UnityWebRequest" ], "pointer", [ "pointer" ]);
  }
  static get _InternalGetByteArray() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.DownloadHandler", "InternalGetByteArray", 1, [ "UnityEngine.Networking.DownloadHandler" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_Release", null), e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_Finalize", null), 
e([ t.cache ], n, "_Dispose", null), e([ t.cache ], n, "_get_data", null), e([ t.cache ], n, "_get_text", null), 
e([ t.cache ], n, "_GetData", null), e([ t.cache ], n, "_GetText", null), e([ t.cache ], n, "_GetTextEncoder", null), 
e([ t.cache ], n, "_GetContentType", null), e([ t.cache ], n, "_GetCheckedDownloader", null), 
e([ t.cache ], n, "_InternalGetByteArray", null), Il2Cpp.Api.DownloadHandler = n;

},{"decorator-cache-getter":513}],110:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_DownloadHandler_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  m_Ptr=lfv(this.handle, "m_Ptr");
  constructor(e) {
    super(e);
  }
  Release() {
    return Il2Cpp.Api.DownloadHandler._Release(this.handle);
  }
  _ctor_DownloadHandler() {
    return Il2Cpp.Api.DownloadHandler.__ctor(this.handle);
  }
  Finalize() {
    return Il2Cpp.Api.DownloadHandler._Finalize(this.handle);
  }
  Dispose() {
    return Il2Cpp.Api.DownloadHandler._Dispose(this.handle);
  }
  get_data() {
    return Il2Cpp.Api.DownloadHandler._get_data(this.handle);
  }
  get_text() {
    return readU16(Il2Cpp.Api.DownloadHandler._get_text(this.handle));
  }
  GetData() {
    return Il2Cpp.Api.DownloadHandler._GetData(this.handle);
  }
  GetText() {
    return readU16(Il2Cpp.Api.DownloadHandler._GetText(this.handle));
  }
  GetTextEncoder() {
    return Il2Cpp.Api.DownloadHandler._GetTextEncoder(this.handle);
  }
  GetContentType() {
    return readU16(Il2Cpp.Api.DownloadHandler._GetContentType(this.handle));
  }
  static InternalGetByteArray(e) {
    return Il2Cpp.Api.DownloadHandler._InternalGetByteArray(e);
  }
}

exports.UnityEngine_Networking_DownloadHandler_Impl = t, Il2Cpp.DownloadHandler = t;

},{"../class":468}],111:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const o = require("./DownloadHandlerAudioClip/export"), e = require("./DownloadHandlerBuffer/export"), r = require("./DownloadHandlerFile/export"), l = require("./DownloadHandlerTexture/export"), d = () => {
  o.DownloadHandlerAudioClipHooker.hook(), e.DownloadHandlerBufferHooker.hook(), r.DownloadHandlerFileHooker.hook(), 
  l.DownloadHandlerTextureHooker.hook();
};

globalThis.HookDownloadHandler = d;

},{"./DownloadHandlerAudioClip/export":95,"./DownloadHandlerBuffer/export":99,"./DownloadHandlerFile/export":103,"./DownloadHandlerTexture/export":107}],112:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./DownloadHandlerAudioClip/include"), 
require("./DownloadHandlerBuffer/include"), require("./DownloadHandlerFile/include"), 
require("./DownloadHandlerTexture/include");

},{"./DownloadHandlerAudioClip/include":96,"./DownloadHandlerBuffer/include":100,"./DownloadHandlerFile/include":104,"./DownloadHandlerTexture/include":108,"./api":109,"./class":110,"./export":111}],113:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, o = arguments.length, a = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r); else for (var l = e.length - 1; l >= 0; l--) (i = e[l]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _GetResourceString() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetResourceString", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetResourceString_key_values() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetResourceString", 2, [ "System.String", "System.Object[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetResourceStringEncodingName() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetResourceStringEncodingName", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _get_CurrentManagedThreadId() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_CurrentManagedThreadId", 0, [], "pointer", []);
  }
  static get _get_HasShutdownStarted() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_HasShutdownStarted", 0, [], "pointer", []);
  }
  static get _GetNewLine() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetNewLine", 0, [], "pointer", []);
  }
  static get _get_NewLine() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_NewLine", 0, [], "pointer", []);
  }
  static get _get_Platform() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_Platform", 0, [], "pointer", []);
  }
  static get _GetOSVersionString() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetOSVersionString", 0, [], "pointer", []);
  }
  static get _get_OSVersion() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_OSVersion", 0, [], "pointer", []);
  }
  static get _CreateVersionFromString() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "CreateVersionFromString", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _get_StackTrace() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_StackTrace", 0, [], "pointer", []);
  }
  static get _get_TickCount() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_TickCount", 0, [], "uint32", []);
  }
  static get _Exit() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "Exit", 1, [ "System.Int32" ], "void", [ "pointer" ]);
  }
  static get _ExpandEnvironmentVariables() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "ExpandEnvironmentVariables", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetCommandLineArgs() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetCommandLineArgs", 0, [], "pointer", []);
  }
  static get _internalGetEnvironmentVariable_native() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "internalGetEnvironmentVariable_native", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _internalGetEnvironmentVariable() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "internalGetEnvironmentVariable", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetEnvironmentVariable() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetEnvironmentVariable", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetEnvironmentVariablesNoCase() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetEnvironmentVariablesNoCase", 0, [], "pointer", []);
  }
  static get _GetFolderPath() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetFolderPath", 1, [ "System.Environment.SpecialFolder" ], "pointer", [ "pointer" ]);
  }
  static get _GetWindowsFolderPath() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetWindowsFolderPath", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _GetFolderPath_folder_option() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetFolderPath", 2, [ "System.Environment.SpecialFolder", "System.Environment.SpecialFolderOption" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ReadXdgUserDir() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "ReadXdgUserDir", 4, [ "System.String", "System.String", "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _UnixGetFolderPath() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "UnixGetFolderPath", 2, [ "System.Environment.SpecialFolder", "System.Environment.SpecialFolderOption" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _FailFast() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "FailFast", 2, [ "System.String", "System.Exception" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_Is64BitProcess() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_Is64BitProcess", 0, [], "pointer", []);
  }
  static get _get_ProcessorCount() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_ProcessorCount", 0, [], "uint32", []);
  }
  static get _get_IsRunningOnWindows() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "get_IsRunningOnWindows", 0, [], "pointer", []);
  }
  static get _GetEnvironmentVariableNames() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetEnvironmentVariableNames", 0, [], "pointer", []);
  }
  static get _GetMachineConfigPath() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetMachineConfigPath", 0, [], "pointer", []);
  }
  static get _internalGetHome() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "internalGetHome", 0, [], "pointer", []);
  }
  static get _GetPageSize() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetPageSize", 0, [], "uint32", []);
  }
  static get _GetStackTrace() {
    return Il2Cpp.Api.o("mscorlib", "System.Environment", "GetStackTrace", 2, [ "System.Exception", "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_GetResourceString", null), e([ t.cache ], n, "_GetResourceString_key_values", null), 
e([ t.cache ], n, "_GetResourceStringEncodingName", null), e([ t.cache ], n, "_get_CurrentManagedThreadId", null), 
e([ t.cache ], n, "_get_HasShutdownStarted", null), e([ t.cache ], n, "_GetNewLine", null), 
e([ t.cache ], n, "_get_NewLine", null), e([ t.cache ], n, "_get_Platform", null), 
e([ t.cache ], n, "_GetOSVersionString", null), e([ t.cache ], n, "_get_OSVersion", null), 
e([ t.cache ], n, "_CreateVersionFromString", null), e([ t.cache ], n, "_get_StackTrace", null), 
e([ t.cache ], n, "_get_TickCount", null), e([ t.cache ], n, "_Exit", null), e([ t.cache ], n, "_ExpandEnvironmentVariables", null), 
e([ t.cache ], n, "_GetCommandLineArgs", null), e([ t.cache ], n, "_internalGetEnvironmentVariable_native", null), 
e([ t.cache ], n, "_internalGetEnvironmentVariable", null), e([ t.cache ], n, "_GetEnvironmentVariable", null), 
e([ t.cache ], n, "_GetEnvironmentVariablesNoCase", null), e([ t.cache ], n, "_GetFolderPath", null), 
e([ t.cache ], n, "_GetWindowsFolderPath", null), e([ t.cache ], n, "_GetFolderPath_folder_option", null), 
e([ t.cache ], n, "_ReadXdgUserDir", null), e([ t.cache ], n, "_UnixGetFolderPath", null), 
e([ t.cache ], n, "_FailFast", null), e([ t.cache ], n, "_get_Is64BitProcess", null), 
e([ t.cache ], n, "_get_ProcessorCount", null), e([ t.cache ], n, "_get_IsRunningOnWindows", null), 
e([ t.cache ], n, "_GetEnvironmentVariableNames", null), e([ t.cache ], n, "_GetMachineConfigPath", null), 
e([ t.cache ], n, "_internalGetHome", null), e([ t.cache ], n, "_GetPageSize", null), 
e([ t.cache ], n, "_GetStackTrace", null), mscorlib.Api.Environment = n;

},{"decorator-cache-getter":513}],114:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Environment_Impl = void 0;

const e = require("../../../../bridge/fix/enum"), t = require("../../../../bridge/fix/packer/packArray"), n = require("../class");

class r extends n.mscorlib_System_Object_impl {
  mono_corlib_version=lfv(this.handle, "mono_corlib_version").toInt32();
  nl=readU16(lfv(this.handle, "nl"));
  os=lfv(this.handle, "os");
  constructor(e) {
    super(e);
  }
  static GetResourceString(e) {
    return readU16(mscorlib.Api.Environment._GetResourceString(e));
  }
  static GetResourceStringEncodingName(e) {
    return readU16(mscorlib.Api.Environment._GetResourceStringEncodingName(e));
  }
  static get_CurrentManagedThreadId() {
    return mscorlib.Api.Environment._get_CurrentManagedThreadId();
  }
  static get_HasShutdownStarted() {
    return 1 == mscorlib.Api.Environment._get_HasShutdownStarted();
  }
  static GetNewLine() {
    return readU16(mscorlib.Api.Environment._GetNewLine());
  }
  static get_NewLine() {
    return readU16(mscorlib.Api.Environment._get_NewLine());
  }
  static get_Platform() {
    return mscorlib.Api.Environment._get_Platform();
  }
  static get Platform() {
    return (0, e.enumNumToName)(mscorlib.Api.Environment._get_Platform(), "PlatformID");
  }
  static GetOSVersionString() {
    return readU16(mscorlib.Api.Environment._GetOSVersionString());
  }
  static get_OSVersion() {
    return mscorlib.Api.Environment._get_OSVersion();
  }
  static CreateVersionFromString(e) {
    return mscorlib.Api.Environment._CreateVersionFromString(e);
  }
  static get_StackTrace() {
    return readU16(mscorlib.Api.Environment._get_StackTrace());
  }
  static get_TickCount() {
    return mscorlib.Api.Environment._get_TickCount();
  }
  static Exit(e) {
    return mscorlib.Api.Environment._Exit(e);
  }
  static ExpandEnvironmentVariables(e) {
    return readU16(mscorlib.Api.Environment._ExpandEnvironmentVariables(e));
  }
  static GetCommandLineArgs() {
    return mscorlib.Api.Environment._GetCommandLineArgs();
  }
  static internalGetEnvironmentVariable_native(e) {
    return readU16(mscorlib.Api.Environment._internalGetEnvironmentVariable_native(e));
  }
  static internalGetEnvironmentVariable(e) {
    return readU16(mscorlib.Api.Environment._internalGetEnvironmentVariable(e));
  }
  static GetEnvironmentVariable(e) {
    return readU16(mscorlib.Api.Environment._GetEnvironmentVariable(e));
  }
  static FailFast(e, t) {
    return mscorlib.Api.Environment._FailFast(e, t);
  }
  static get_Is64BitProcess() {
    return 1 == mscorlib.Api.Environment._get_Is64BitProcess();
  }
  static get_ProcessorCount() {
    return mscorlib.Api.Environment._get_ProcessorCount();
  }
  static get_IsRunningOnWindows() {
    return 1 == mscorlib.Api.Environment._get_IsRunningOnWindows();
  }
  static GetEnvironmentVariableNames() {
    return new t.PackArray(mscorlib.Api.Environment._GetEnvironmentVariableNames());
  }
  static GetMachineConfigPath() {
    return readU16(mscorlib.Api.Environment._GetMachineConfigPath());
  }
  static internalGetHome() {
    return readU16(mscorlib.Api.Environment._internalGetHome());
  }
  static GetPageSize() {
    return mscorlib.Api.Environment._GetPageSize();
  }
  static GetStackTrace(e, t) {
    return readU16(mscorlib.Api.Environment._GetStackTrace(e, t));
  }
}

exports.System_Environment_Impl = r, mscorlib.Environment = r;

},{"../../../../bridge/fix/enum":19,"../../../../bridge/fix/packer/packArray":27,"../class":468}],115:[function(require,module,exports){
"use strict";

function t() {
  LOG(`${getLine(20)} Environment ${getLine(20)}`, LogColor.RED), LOGD(`[*] OSVersionString\t\t\t${mscorlib.Environment.GetOSVersionString()}\n${getLine(20)}`), 
  LOGD(`[*] MachineConfigPath\t\t\t${mscorlib.Environment.GetMachineConfigPath()}\n${getLine(20)}`), 
  LOGD(`[*] PageSize\t\t\t\t${mscorlib.Environment.GetPageSize()}\n${getLine(20)}`), 
  LOGD(`[*] HasShutdownStarted\t\t\t${mscorlib.Environment.get_HasShutdownStarted()}\n${getLine(20)}`), 
  LOGD(`[*] Is64BitProcess\t\t\t${mscorlib.Environment.get_Is64BitProcess()}\n${getLine(20)}`), 
  LOGD(`[*] IsRunningOnWindows\t\t\t${mscorlib.Environment.get_IsRunningOnWindows()}\n${getLine(20)}`), 
  LOGD(`[*] Platform\t\t\t\t${mscorlib.Environment.Platform}\n${getLine(20)}`), LOGD(`[*] ProcessorCount\t\t\t${mscorlib.Environment.get_ProcessorCount()}\n${getLine(20)}`), 
  LOGD(`[*] TickCount\t\t\t\t${mscorlib.Environment.get_TickCount()}\n${getLine(20)}`);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Environment = void 0, exports.Environment = t;

},{}],116:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":113,"./class":114,"./export":115}],117:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, r) {
  var n, o = arguments.length, c = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, i, r); else for (var p = e.length - 1; p >= 0; p--) (n = e[p]) && (c = (o < 3 ? n(c) : o > 3 ? n(t, i, c) : n(t, i)) || c);
  return o > 3 && c && Object.defineProperty(t, i, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _Init() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "Init", 0, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get __ctor_message() {
    return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_message_innerException() {
    return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 2, [ "System.String", "System.Exception" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_info_context() {
    return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_Message() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Message", 0, "pointer", [ "pointer" ]);
  }
  static get _get_Data() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Data", 0, "pointer", [ "pointer" ]);
  }
  static get _IsImmutableAgileException() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "IsImmutableAgileException", 1, "pointer", [ "pointer" ]);
  }
  static get _GetClassName() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetClassName", 0, "pointer", [ "pointer" ]);
  }
  static get _get_InnerException() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_InnerException", 0, "pointer", [ "pointer" ]);
  }
  static get _get_TargetSite() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_TargetSite", 0, "pointer", [ "pointer" ]);
  }
  static get _get_StackTrace() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_StackTrace", 0, "pointer", [ "pointer" ]);
  }
  static get _GetStackTrace() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetStackTrace", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetErrorCode() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "SetErrorCode", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_Source() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Source", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_needFileLineInfo_needMessage() {
    return Il2Cpp.Api.o("mscorlib", "System.Exception", "ToString", 2, [ "System.Boolean", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetObjectData() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetObjectData", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _OnDeserialized() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "OnDeserialized", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _StripFileInfo() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "StripFileInfo", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RestoreExceptionDispatchInfo() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "RestoreExceptionDispatchInfo", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_HResult() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_HResult", 0, "pointer", [ "pointer" ]);
  }
  static get _set_HResult() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "set_HResult", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetType() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetType", 0, "pointer", [ "pointer" ]);
  }
  static get _GetMessageFromNativeResources() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetMessageFromNativeResources", 1, "pointer", [ "pointer" ]);
  }
  static get _FixRemotingException() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "FixRemotingException", 0, "pointer", [ "pointer" ]);
  }
  static get _ReportUnhandledException() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", "ReportUnhandledException", 1, "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("mscorlib", "System.Exception", ".cctor", 0, "void", []);
  }
}

e([ t.cache ], i, "_Init", null), e([ t.cache ], i, "__ctor", null), e([ t.cache ], i, "__ctor_message", null), 
e([ t.cache ], i, "__ctor_message_innerException", null), e([ t.cache ], i, "__ctor_info_context", null), 
e([ t.cache ], i, "_get_Message", null), e([ t.cache ], i, "_get_Data", null), e([ t.cache ], i, "_IsImmutableAgileException", null), 
e([ t.cache ], i, "_GetClassName", null), e([ t.cache ], i, "_get_InnerException", null), 
e([ t.cache ], i, "_get_TargetSite", null), e([ t.cache ], i, "_get_StackTrace", null), 
e([ t.cache ], i, "_GetStackTrace", null), e([ t.cache ], i, "_SetErrorCode", null), 
e([ t.cache ], i, "_get_Source", null), e([ t.cache ], i, "_ToString", null), e([ t.cache ], i, "_ToString_needFileLineInfo_needMessage", null), 
e([ t.cache ], i, "_GetObjectData", null), e([ t.cache ], i, "_OnDeserialized", null), 
e([ t.cache ], i, "_StripFileInfo", null), e([ t.cache ], i, "_RestoreExceptionDispatchInfo", null), 
e([ t.cache ], i, "_get_HResult", null), e([ t.cache ], i, "_set_HResult", null), 
e([ t.cache ], i, "_GetType", null), e([ t.cache ], i, "_GetMessageFromNativeResources", null), 
e([ t.cache ], i, "_FixRemotingException", null), e([ t.cache ], i, "_ReportUnhandledException", null), 
e([ t.cache ], i, "__cctor", null), mscorlib.Api.Exception = i;

},{"decorator-cache-getter":513}],118:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Exception_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  s_EDILock=lfv(this.handle, "s_EDILock");
  _className=lfv(this.handle, "_className");
  _message=lfv(this.handle, "_message");
  _data=lfv(this.handle, "_data");
  _innerException=lfv(this.handle, "_innerException");
  _helpURL=lfv(this.handle, "_helpURL");
  _stackTrace=lfv(this.handle, "_stackTrace");
  _stackTraceString=lfv(this.handle, "_stackTraceString");
  _remoteStackTraceString=lfv(this.handle, "_remoteStackTraceString");
  _remoteStackIndex=lfv(this.handle, "_remoteStackIndex");
  _dynamicMethods=lfv(this.handle, "_dynamicMethods");
  _HResult=lfv(this.handle, "_HResult");
  _source=lfv(this.handle, "_source");
  _safeSerializationManager=lfv(this.handle, "_safeSerializationManager");
  captured_traces=lfv(this.handle, "captured_traces");
  native_trace_ips=lfv(this.handle, "native_trace_ips");
  _COMPlusExceptionCode=lfv(this.handle, "_COMPlusExceptionCode");
  constructor(e) {
    super(e);
  }
  Init() {
    return mscorlib.Api.Exception._Init(this.handle);
  }
  _ctor() {
    return mscorlib.Api.Exception.__ctor(this.handle);
  }
  _ctor_1(e) {
    return mscorlib.Api.Exception.__ctor(this.handle, e);
  }
  _ctor_msg_exception(e, t) {
    return mscorlib.Api.Exception.__ctor(this.handle, e, t);
  }
  _ctor_info_ctx(e, t) {
    return mscorlib.Api.Exception.__ctor(this.handle, e, t);
  }
  get_Message() {
    return readU16(mscorlib.Api.Exception._get_Message(this.handle));
  }
  get_Data() {
    return mscorlib.Api.Exception._get_Data(this.handle);
  }
  static IsImmutableAgileException(e) {
    return mscorlib.Api.Exception._IsImmutableAgileException(e);
  }
  GetClassName() {
    return readU16(mscorlib.Api.Exception._GetClassName(this.handle));
  }
  get_InnerException() {
    return mscorlib.Api.Exception._get_InnerException(this.handle);
  }
  get_TargetSite() {
    return mscorlib.Api.Exception._get_TargetSite(this.handle);
  }
  get_StackTrace() {
    return readU16(mscorlib.Api.Exception._get_StackTrace(this.handle));
  }
  GetStackTrace(e) {
    return readU16(mscorlib.Api.Exception._GetStackTrace(this.handle, e));
  }
  SetErrorCode(e) {
    return mscorlib.Api.Exception._SetErrorCode(this.handle, e);
  }
  get_Source() {
    return readU16(mscorlib.Api.Exception._get_Source(this.handle));
  }
  ToString() {
    return readU16(mscorlib.Api.Exception._ToString(this.handle));
  }
  ToString_2(e, t) {
    return readU16(mscorlib.Api.Exception._ToString(this.handle, e, t));
  }
  GetObjectData(e, t) {
    return mscorlib.Api.Exception._GetObjectData(this.handle, e, t);
  }
  OnDeserialized(e) {
    return mscorlib.Api.Exception._OnDeserialized(this.handle, e);
  }
  StripFileInfo(e, t) {
    return readU16(mscorlib.Api.Exception._StripFileInfo(this.handle, e, t));
  }
  RestoreExceptionDispatchInfo(e) {
    return mscorlib.Api.Exception._RestoreExceptionDispatchInfo(this.handle, e);
  }
  get_HResult() {
    return mscorlib.Api.Exception._get_HResult(this.handle);
  }
  set_HResult(e) {
    return mscorlib.Api.Exception._set_HResult(this.handle, e);
  }
  GetType() {
    return mscorlib.Api.Exception._GetType(this.handle);
  }
  static GetMessageFromNativeResources(e) {
    return readU16(mscorlib.Api.Exception._GetMessageFromNativeResources(e));
  }
  FixRemotingException() {
    return mscorlib.Api.Exception._FixRemotingException(this.handle);
  }
  static ReportUnhandledException(e) {
    return mscorlib.Api.Exception._ReportUnhandledException(e);
  }
  static _cctor() {
    return mscorlib.Api.Exception.__cctor();
  }
}

exports.System_Exception_Impl = t, mscorlib.Exception = t;

},{"../class":468}],119:[function(require,module,exports){
"use strict";

},{}],120:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":117,"./class":118,"./export":119}],121:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var a, r = arguments.length, o = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, n, i); else for (var l = t.length - 1; l >= 0; l--) (a = t[l]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, n, o) : a(e, n)) || o);
  return r > 3 && o && Object.defineProperty(e, n, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _get_defaultFontData() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_defaultFontData", 0, "pointer", []);
  }
  static get _get_font() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_font", 0, "pointer", [ "pointer" ]);
  }
  static get _set_font() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_font", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_fontSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_fontSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_fontSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontStyle() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_fontStyle", 0, "pointer", [ "pointer" ]);
  }
  static get _set_fontStyle() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_fontStyle", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_bestFit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_bestFit", 0, "pointer", [ "pointer" ]);
  }
  static get _set_bestFit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_bestFit", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_minSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_minSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_minSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_minSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_maxSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_maxSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_maxSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_maxSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_alignment() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_alignment", 0, "pointer", [ "pointer" ]);
  }
  static get _set_alignment() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_alignment", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_alignByGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_alignByGeometry", 0, "pointer", [ "pointer" ]);
  }
  static get _set_alignByGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_alignByGeometry", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_richText() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_richText", 0, "pointer", [ "pointer" ]);
  }
  static get _set_richText() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_richText", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_horizontalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_horizontalOverflow", 0, "pointer", [ "pointer" ]);
  }
  static get _set_horizontalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_horizontalOverflow", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_verticalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_verticalOverflow", 0, "pointer", [ "pointer" ]);
  }
  static get _set_verticalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_verticalOverflow", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_lineSpacing() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_lineSpacing", 0, "pointer", [ "pointer" ]);
  }
  static get _set_lineSpacing() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_lineSpacing", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", 0, "void", [ "pointer" ]);
  }
  static get _UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", 0, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", ".ctor", 0, "void", [ "pointer" ]);
  }
}

t([ e.cache ], n, "_get_defaultFontData", null), t([ e.cache ], n, "_get_font", null), 
t([ e.cache ], n, "_set_font", null), t([ e.cache ], n, "_get_fontSize", null), 
t([ e.cache ], n, "_set_fontSize", null), t([ e.cache ], n, "_get_fontStyle", null), 
t([ e.cache ], n, "_set_fontStyle", null), t([ e.cache ], n, "_get_bestFit", null), 
t([ e.cache ], n, "_set_bestFit", null), t([ e.cache ], n, "_get_minSize", null), 
t([ e.cache ], n, "_set_minSize", null), t([ e.cache ], n, "_get_maxSize", null), 
t([ e.cache ], n, "_set_maxSize", null), t([ e.cache ], n, "_get_alignment", null), 
t([ e.cache ], n, "_set_alignment", null), t([ e.cache ], n, "_get_alignByGeometry", null), 
t([ e.cache ], n, "_set_alignByGeometry", null), t([ e.cache ], n, "_get_richText", null), 
t([ e.cache ], n, "_set_richText", null), t([ e.cache ], n, "_get_horizontalOverflow", null), 
t([ e.cache ], n, "_set_horizontalOverflow", null), t([ e.cache ], n, "_get_verticalOverflow", null), 
t([ e.cache ], n, "_set_verticalOverflow", null), t([ e.cache ], n, "_get_lineSpacing", null), 
t([ e.cache ], n, "_set_lineSpacing", null), t([ e.cache ], n, "_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize", null), 
t([ e.cache ], n, "_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize", null), 
t([ e.cache ], n, "__ctor", null), Il2Cpp.Api.FontData = n;

},{"decorator-cache-getter":513}],122:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_UI_FontData_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  m_Font=lfv(this.handle, "m_Font");
  m_FontSize=lfv(this.handle, "m_FontSize");
  m_FontStyle=lfv(this.handle, "m_FontStyle");
  m_BestFit=lfv(this.handle, "m_BestFit");
  m_MinSize=lfv(this.handle, "m_MinSize");
  m_MaxSize=lfv(this.handle, "m_MaxSize");
  m_Alignment=lfv(this.handle, "m_Alignment");
  m_AlignByGeometry=lfv(this.handle, "m_AlignByGeometry");
  m_RichText=lfv(this.handle, "m_RichText");
  m_HorizontalOverflow=lfv(this.handle, "m_HorizontalOverflow");
  m_VerticalOverflow=lfv(this.handle, "m_VerticalOverflow");
  m_LineSpacing=lfv(this.handle, "m_LineSpacing");
  constructor(t) {
    super(t);
  }
  get_defaultFontData() {
    return Il2Cpp.Api.FontData._get_defaultFontData();
  }
  get_font() {
    return Il2Cpp.Api.FontData._get_font(this.handle);
  }
  set_font(t) {
    return Il2Cpp.Api.FontData._set_font(this.handle, t);
  }
  get_fontSize() {
    return Il2Cpp.Api.FontData._get_fontSize(this.handle);
  }
  set_fontSize(t) {
    return Il2Cpp.Api.FontData._set_fontSize(this.handle, t);
  }
  get_fontStyle() {
    return Il2Cpp.Api.FontData._get_fontStyle(this.handle);
  }
  set_fontStyle(t) {
    return Il2Cpp.Api.FontData._set_fontStyle(this.handle, t);
  }
  get_bestFit() {
    return Il2Cpp.Api.FontData._get_bestFit(this.handle);
  }
  set_bestFit(t) {
    return Il2Cpp.Api.FontData._set_bestFit(this.handle, t);
  }
  get_minSize() {
    return Il2Cpp.Api.FontData._get_minSize(this.handle);
  }
  set_minSize(t) {
    return Il2Cpp.Api.FontData._set_minSize(this.handle, t);
  }
  get_maxSize() {
    return Il2Cpp.Api.FontData._get_maxSize(this.handle);
  }
  set_maxSize(t) {
    return Il2Cpp.Api.FontData._set_maxSize(this.handle, t);
  }
  get_alignment() {
    return Il2Cpp.Api.FontData._get_alignment(this.handle);
  }
  set_alignment(t) {
    return Il2Cpp.Api.FontData._set_alignment(this.handle, t);
  }
  get_alignByGeometry() {
    return Il2Cpp.Api.FontData._get_alignByGeometry(this.handle);
  }
  set_alignByGeometry(t) {
    return Il2Cpp.Api.FontData._set_alignByGeometry(this.handle, t);
  }
  get_richText() {
    return Il2Cpp.Api.FontData._get_richText(this.handle);
  }
  set_richText(t) {
    return Il2Cpp.Api.FontData._set_richText(this.handle, t);
  }
  get_horizontalOverflow() {
    return Il2Cpp.Api.FontData._get_horizontalOverflow(this.handle);
  }
  set_horizontalOverflow(t) {
    return Il2Cpp.Api.FontData._set_horizontalOverflow(this.handle, t);
  }
  get_verticalOverflow() {
    return Il2Cpp.Api.FontData._get_verticalOverflow(this.handle);
  }
  set_verticalOverflow(t) {
    return Il2Cpp.Api.FontData._set_verticalOverflow(this.handle, t);
  }
  get_lineSpacing() {
    return Il2Cpp.Api.FontData._get_lineSpacing(this.handle);
  }
  set_lineSpacing(t) {
    return Il2Cpp.Api.FontData._set_lineSpacing(this.handle, t);
  }
  UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
    return Il2Cpp.Api.FontData._UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize(this.handle);
  }
  UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
    return Il2Cpp.Api.FontData._UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.FontData.__ctor(this.handle);
  }
}

exports.UnityEngine_UI_FontData_Impl = e;

},{"../class":468}],123:[function(require,module,exports){
"use strict";

},{}],124:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":121,"./class":122,"./export":123}],125:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, l = arguments.length, r = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (r = (l < 3 ? o(r) : l > 3 ? o(t, n, r) : o(t, n)) || r);
  return l > 3 && r && Object.defineProperty(t, n, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_color() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_color", 0, "pointer", []);
  }
  static get _set_color() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_color", 1, "void", [ "pointer" ]);
  }
  static get _set_changed() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_changed", 1, "void", [ "pointer" ]);
  }
  static get _set_depth() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_depth", 1, "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", ".cctor", 0, "void", []);
  }
  static get _set_nextScrollStepTime() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_nextScrollStepTime", 1, "void", [ "pointer" ]);
  }
  static get _set_skin() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_skin", 1, "void", [ "pointer" ]);
  }
  static get _get_skin() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_skin", 0, "pointer", []);
  }
  static get _DoSetSkin() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "DoSetSkin", 1, "void", [ "pointer" ]);
  }
  static get _Label() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "Label", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Label_position_content_style() {
    return Il2Cpp.Api.o("UnityEngine.IMGUIModule", "UnityEngine.GUI", "Label", 3, [ "UnityEngine.Rect", "UnityEngine.GUIContent", "UnityEngine.GUIStyle" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DoLabel() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "DoLabel", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_scrollViewStates() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_scrollViewStates", 0, "pointer", []);
  }
  static get _CallWindowDelegate() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "CallWindowDelegate", 8, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_color_Injected() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_color_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_color_Injected() {
    return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_color_Injected", 1, "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_color", null), e([ t.cache ], n, "_set_color", null), e([ t.cache ], n, "_set_changed", null), 
e([ t.cache ], n, "_set_depth", null), e([ t.cache ], n, "__cctor", null), e([ t.cache ], n, "_set_nextScrollStepTime", null), 
e([ t.cache ], n, "_set_skin", null), e([ t.cache ], n, "_get_skin", null), e([ t.cache ], n, "_DoSetSkin", null), 
e([ t.cache ], n, "_Label", null), e([ t.cache ], n, "_Label_position_content_style", null), 
e([ t.cache ], n, "_DoLabel", null), e([ t.cache ], n, "_get_scrollViewStates", null), 
e([ t.cache ], n, "_CallWindowDelegate", null), e([ t.cache ], n, "_get_color_Injected", null), 
e([ t.cache ], n, "_set_color_Injected", null), Il2Cpp.Api.GUI = n;

},{"decorator-cache-getter":513}],126:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_GUI_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  s_HotTextField=lfv(this.handle, "s_HotTextField");
  s_BoxHash=lfv(this.handle, "s_BoxHash");
  s_ButonHash=lfv(this.handle, "s_ButonHash");
  s_RepeatButtonHash=lfv(this.handle, "s_RepeatButtonHash");
  s_ToggleHash=lfv(this.handle, "s_ToggleHash");
  s_ButtonGridHash=lfv(this.handle, "s_ButtonGridHash");
  s_SliderHash=lfv(this.handle, "s_SliderHash");
  s_BeginGroupHash=lfv(this.handle, "s_BeginGroupHash");
  s_ScrollviewHash=lfv(this.handle, "s_ScrollviewHash");
  s_Skin=lfv(this.handle, "s_Skin");
  constructor(t) {
    super(t);
  }
  static get_color() {
    return Il2Cpp.Api.GUI._get_color();
  }
  static set_color(t) {
    return Il2Cpp.Api.GUI._set_color(t);
  }
  static set_changed(t) {
    return Il2Cpp.Api.GUI._set_changed(t);
  }
  static set_depth(t) {
    return Il2Cpp.Api.GUI._set_depth(t);
  }
  static _cctor() {
    return Il2Cpp.Api.GUI.__cctor();
  }
  static set_nextScrollStepTime(t) {
    return Il2Cpp.Api.GUI._set_nextScrollStepTime(t);
  }
  static set_skin(t) {
    return Il2Cpp.Api.GUI._set_skin(t);
  }
  static get_skin() {
    return Il2Cpp.Api.GUI._get_skin();
  }
  static DoSetSkin(t) {
    return Il2Cpp.Api.GUI._DoSetSkin(t);
  }
  static Label(t, e, s) {
    return Il2Cpp.Api.GUI._Label(t, e, s);
  }
  static Label_3(t, e, s) {
    return Il2Cpp.Api.GUI._Label(t, e, s);
  }
  static DoLabel(t, e, s) {
    return Il2Cpp.Api.GUI._DoLabel(t, e, s);
  }
  static get_scrollViewStates() {
    return Il2Cpp.Api.GUI._get_scrollViewStates();
  }
  static CallWindowDelegate(t, e, s, l, i, _, p, r) {
    return Il2Cpp.Api.GUI._CallWindowDelegate(t, e, s, l, i, _, p, r);
  }
  static get_color_Injected(t) {
    return Il2Cpp.Api.GUI._get_color_Injected(t);
  }
  static set_color_Injected(t) {
    return Il2Cpp.Api.GUI._set_color_Injected(t);
  }
}

exports.UnityEngine_GUI_Impl = e, Il2Cpp.GUI = e;

},{"../class":468}],127:[function(require,module,exports){
"use strict";

},{}],128:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":125,"./class":126,"./export":127}],129:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, n) {
  var o, l = arguments.length, r = l < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, i, n); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (r = (l < 3 ? o(r) : l > 3 ? o(t, i, r) : o(t, i)) || r);
  return l > 3 && r && Object.defineProperty(t, i, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.GlobalJavaObjectRef", ".ctor", 1, [ "System.IntPtr" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.GlobalJavaObjectRef", "Finalize", 0, [], "void", [ "pointer" ]);
  }
  static get _op_Implicit() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.GlobalJavaObjectRef", "op_Implicit", 1, [ "UnityEngine.GlobalJavaObjectRef" ], "pointer", [ "pointer" ]);
  }
  static get _Dispose() {
    return Il2Cpp.Api.o("UnityEngine.AndroidJNIModule", "UnityEngine.GlobalJavaObjectRef", "Dispose", 0, [], "void", [ "pointer" ]);
  }
}

e([ t.cache ], i, "__ctor", null), e([ t.cache ], i, "_Finalize", null), e([ t.cache ], i, "_op_Implicit", null), 
e([ t.cache ], i, "_Dispose", null), Il2Cpp.Api.GlobalJavaObjectRef = i;

},{"decorator-cache-getter":513}],130:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_GlobalJavaObjectRef_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  m_disposed=lfv(this.handle, "m_disposed");
  m_jobject=lfv(this.handle, "m_jobject");
  constructor(e) {
    super(e);
  }
  _ctor(e) {
    return Il2Cpp.Api.GlobalJavaObjectRef.__ctor(this.handle, e);
  }
  Finalize() {
    return Il2Cpp.Api.GlobalJavaObjectRef._Finalize(this.handle);
  }
  static op_Implicit(e) {
    return Il2Cpp.Api.GlobalJavaObjectRef._op_Implicit(e);
  }
  Dispose() {
    return Il2Cpp.Api.GlobalJavaObjectRef._Dispose(this.handle);
  }
}

exports.UnityEngine_GlobalJavaObjectRef_Impl = t, Il2Cpp.GlobalJavaObjectRef = t;

},{"../class":468}],131:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":129,"./class":130}],132:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, o) {
  var i, r = arguments.length, a = r < 3 ? n : null === o ? o = Object.getOwnPropertyDescriptor(n, t) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, n, t, o); else for (var c = e.length - 1; c >= 0; c--) (i = e[c]) && (a = (r < 3 ? i(a) : r > 3 ? i(n, t, a) : i(n, t)) || a);
  return r > 3 && a && Object.defineProperty(n, t, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _EncodeToPNG() {
    return Il2Cpp.Api.o("UnityEngine.ImageConversionModule", "UnityEngine.ImageConversion", "EncodeToPNG", 1, [ "UnityEngine.Texture2D" ], "pointer", [ "pointer" ]);
  }
  static get _EncodeToJPG() {
    return Il2Cpp.Api.o("UnityEngine.ImageConversionModule", "UnityEngine.ImageConversion", "EncodeToJPG", 2, [ "UnityEngine.Texture2D", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _EncodeToJPG_tex() {
    return Il2Cpp.Api.o("UnityEngine.ImageConversionModule", "UnityEngine.ImageConversion", "EncodeToJPG", 1, [ "UnityEngine.Texture2D" ], "pointer", [ "pointer" ]);
  }
  static get _LoadImage() {
    return Il2Cpp.Api.o("UnityEngine.ImageConversionModule", "UnityEngine.ImageConversion", "LoadImage", 3, [ "UnityEngine.Texture2D", "System.Byte[]", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _LoadImage_tex_data() {
    return Il2Cpp.Api.o("UnityEngine.ImageConversionModule", "UnityEngine.ImageConversion", "LoadImage", 2, [ "UnityEngine.Texture2D", "System.Byte[]" ], "pointer", [ "pointer", "pointer" ]);
  }
}

e([ n.cache ], t, "_EncodeToPNG", null), e([ n.cache ], t, "_EncodeToJPG", null), 
e([ n.cache ], t, "_EncodeToJPG_tex", null), e([ n.cache ], t, "_LoadImage", null), 
e([ n.cache ], t, "_LoadImage_tex_data", null), Il2Cpp.Api.ImageConversion = t;

},{"decorator-cache-getter":513}],133:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ImageConversion_Impl = void 0;

const e = require("../class");

class o extends e.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  static EncodeToPNG(e) {
    return Il2Cpp.Api.ImageConversion._EncodeToPNG(e);
  }
  static EncodeToJPG(e, o) {
    return Il2Cpp.Api.ImageConversion._EncodeToJPG(e, o);
  }
  static EncodeToJPG_1(e) {
    return Il2Cpp.Api.ImageConversion._EncodeToJPG(e);
  }
  static LoadImage(e, o, n) {
    return Il2Cpp.Api.ImageConversion._LoadImage(e, o, n);
  }
  static LoadImage_2(e, o) {
    return Il2Cpp.Api.ImageConversion._LoadImage(e, o);
  }
}

exports.UnityEngine_ImageConversion_Impl = o, Il2Cpp.ImageConversion = o;

},{"../class":468}],134:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), globalThis.showTexture2D = e => {
  let o = checkCmdInput(e), n = Il2Cpp.Api.ImageConversion._EncodeToJPG_tex;
  if (n) return void seeHexA(n(o));
  let i = Il2Cpp.Api.ImageConversion._EncodeToJPG;
  if (i) return void seeHexA(i(o, 100));
  let t = find_method("UnityEngine.ImageConversionModule", "ImageConversion", "EncodeToPNG", 1);
  t && seeHexA(callFunction(t, o));
};

},{}],135:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":132,"./class":133,"./export":134}],136:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var o, u = arguments.length, p = u < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, n, i); else for (var c = t.length - 1; c >= 0; c--) (o = t[c]) && (p = (u < 3 ? o(p) : u > 3 ? o(e, n, p) : o(e, n)) || p);
  return u > 3 && p && Object.defineProperty(e, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _GetKeyInt() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyInt", 1, "pointer", [ "pointer" ]);
  }
  static get _GetKeyUpInt() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyUpInt", 1, "pointer", [ "pointer" ]);
  }
  static get _GetKeyDownInt() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyDownInt", 1, "pointer", [ "pointer" ]);
  }
  static get _GetAxis() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetAxis", 1, "pointer", [ "pointer" ]);
  }
  static get _GetAxisRaw() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetAxisRaw", 1, "pointer", [ "pointer" ]);
  }
  static get _GetButtonDown() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetButtonDown", 1, "pointer", [ "pointer" ]);
  }
  static get _GetMouseButton() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButton", 1, "pointer", [ "pointer" ]);
  }
  static get _GetMouseButtonDown() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButtonDown", 1, "pointer", [ "pointer" ]);
  }
  static get _GetMouseButtonUp() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButtonUp", 1, "pointer", [ "pointer" ]);
  }
  static get _GetTouch() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetTouch", 1, "pointer", [ "pointer" ]);
  }
  static get _GetKey() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKey", 1, "pointer", [ "pointer" ]);
  }
  static get _GetKeyUp() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyUp", 1, "pointer", [ "pointer" ]);
  }
  static get _GetKeyDown() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyDown", 1, "pointer", [ "pointer" ]);
  }
  static get _set_simulateMouseWithTouches() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_simulateMouseWithTouches", 1, "void", [ "pointer" ]);
  }
  static get _get_mousePosition() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePosition", 0, "pointer", []);
  }
  static get _get_mouseScrollDelta() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mouseScrollDelta", 0, "pointer", []);
  }
  static get _get_imeCompositionMode() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_imeCompositionMode", 0, "pointer", []);
  }
  static get _set_imeCompositionMode() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_imeCompositionMode", 1, "void", [ "pointer" ]);
  }
  static get _get_compositionString() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionString", 0, "pointer", []);
  }
  static get _get_compositionCursorPos() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionCursorPos", 0, "pointer", []);
  }
  static get _set_compositionCursorPos() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_compositionCursorPos", 1, "void", [ "pointer" ]);
  }
  static get _get_mousePresent() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePresent", 0, "pointer", []);
  }
  static get _get_touchCount() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touchCount", 0, "pointer", []);
  }
  static get _get_touchSupported() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touchSupported", 0, "pointer", []);
  }
  static get _set_multiTouchEnabled() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_multiTouchEnabled", 1, "void", [ "pointer" ]);
  }
  static get _get_touches() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touches", 0, "pointer", []);
  }
  static get _GetTouch_Injected() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetTouch_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _get_mousePosition_Injected() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePosition_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_mouseScrollDelta_Injected() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mouseScrollDelta_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_compositionCursorPos_Injected() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionCursorPos_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_compositionCursorPos_Injected() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_compositionCursorPos_Injected", 1, "void", [ "pointer" ]);
  }
}

t([ e.cache ], n, "_GetKeyInt", null), t([ e.cache ], n, "_GetKeyUpInt", null), 
t([ e.cache ], n, "_GetKeyDownInt", null), t([ e.cache ], n, "_GetAxis", null), 
t([ e.cache ], n, "_GetAxisRaw", null), t([ e.cache ], n, "_GetButtonDown", null), 
t([ e.cache ], n, "_GetMouseButton", null), t([ e.cache ], n, "_GetMouseButtonDown", null), 
t([ e.cache ], n, "_GetMouseButtonUp", null), t([ e.cache ], n, "_GetTouch", null), 
t([ e.cache ], n, "_GetKey", null), t([ e.cache ], n, "_GetKeyUp", null), t([ e.cache ], n, "_GetKeyDown", null), 
t([ e.cache ], n, "_set_simulateMouseWithTouches", null), t([ e.cache ], n, "_get_mousePosition", null), 
t([ e.cache ], n, "_get_mouseScrollDelta", null), t([ e.cache ], n, "_get_imeCompositionMode", null), 
t([ e.cache ], n, "_set_imeCompositionMode", null), t([ e.cache ], n, "_get_compositionString", null), 
t([ e.cache ], n, "_get_compositionCursorPos", null), t([ e.cache ], n, "_set_compositionCursorPos", null), 
t([ e.cache ], n, "_get_mousePresent", null), t([ e.cache ], n, "_get_touchCount", null), 
t([ e.cache ], n, "_get_touchSupported", null), t([ e.cache ], n, "_set_multiTouchEnabled", null), 
t([ e.cache ], n, "_get_touches", null), t([ e.cache ], n, "_GetTouch_Injected", null), 
t([ e.cache ], n, "_get_mousePosition_Injected", null), t([ e.cache ], n, "_get_mouseScrollDelta_Injected", null), 
t([ e.cache ], n, "_get_compositionCursorPos_Injected", null), t([ e.cache ], n, "_set_compositionCursorPos_Injected", null), 
Il2Cpp.Api.Input = n;

},{"decorator-cache-getter":513}],137:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Input_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  static GetKeyInt(t) {
    return Il2Cpp.Api.Input._GetKeyInt(t);
  }
  static GetKeyUpInt(t) {
    return Il2Cpp.Api.Input._GetKeyUpInt(t);
  }
  static GetKeyDownInt(t) {
    return Il2Cpp.Api.Input._GetKeyDownInt(t);
  }
  static GetAxis(t) {
    return Il2Cpp.Api.Input._GetAxis(t);
  }
  static GetAxisRaw(t) {
    return Il2Cpp.Api.Input._GetAxisRaw(t);
  }
  static GetButtonDown(t) {
    return Il2Cpp.Api.Input._GetButtonDown(t);
  }
  static GetMouseButton(t) {
    return Il2Cpp.Api.Input._GetMouseButton(t);
  }
  static GetMouseButtonDown(t) {
    return Il2Cpp.Api.Input._GetMouseButtonDown(t);
  }
  static GetMouseButtonUp(t) {
    return Il2Cpp.Api.Input._GetMouseButtonUp(t);
  }
  static GetTouch(t) {
    return Il2Cpp.Api.Input._GetTouch(t);
  }
  static GetKey(t) {
    return Il2Cpp.Api.Input._GetKey(t);
  }
  static GetKeyUp(t) {
    return Il2Cpp.Api.Input._GetKeyUp(t);
  }
  static GetKeyDown(t) {
    return Il2Cpp.Api.Input._GetKeyDown(t);
  }
  static set_simulateMouseWithTouches(t) {
    return Il2Cpp.Api.Input._set_simulateMouseWithTouches(t);
  }
  static get_mousePosition() {
    return Il2Cpp.Api.Input._get_mousePosition();
  }
  static get_mouseScrollDelta() {
    return Il2Cpp.Api.Input._get_mouseScrollDelta();
  }
  static get_imeCompositionMode() {
    return Il2Cpp.Api.Input._get_imeCompositionMode();
  }
  static set_imeCompositionMode(t) {
    return Il2Cpp.Api.Input._set_imeCompositionMode(t);
  }
  static get_compositionString() {
    return readU16(Il2Cpp.Api.Input._get_compositionString());
  }
  static get_compositionCursorPos() {
    return Il2Cpp.Api.Input._get_compositionCursorPos();
  }
  static set_compositionCursorPos(t) {
    return Il2Cpp.Api.Input._set_compositionCursorPos(t);
  }
  static get_mousePresent() {
    return Il2Cpp.Api.Input._get_mousePresent();
  }
  static get_touchCount() {
    return Il2Cpp.Api.Input._get_touchCount();
  }
  static get_touchSupported() {
    return Il2Cpp.Api.Input._get_touchSupported();
  }
  static set_multiTouchEnabled(t) {
    return Il2Cpp.Api.Input._set_multiTouchEnabled(t);
  }
  static get_touches() {
    return Il2Cpp.Api.Input._get_touches();
  }
  static GetTouch_Injected(t, e) {
    return Il2Cpp.Api.Input._GetTouch_Injected(t, e);
  }
  static get_mousePosition_Injected(t) {
    return Il2Cpp.Api.Input._get_mousePosition_Injected(t);
  }
  static get_mouseScrollDelta_Injected(t) {
    return Il2Cpp.Api.Input._get_mouseScrollDelta_Injected(t);
  }
  static get_compositionCursorPos_Injected(t) {
    return Il2Cpp.Api.Input._get_compositionCursorPos_Injected(t);
  }
  static set_compositionCursorPos_Injected(t) {
    return Il2Cpp.Api.Input._set_compositionCursorPos_Injected(t);
  }
}

exports.UnityEngine_Input_Impl = e, Il2Cpp.Input = e;

},{"../class":468}],138:[function(require,module,exports){
"use strict";

var A, F;

!function(A) {
  A[A.None = 0] = "None", A[A.Backspace = 8] = "Backspace", A[A.Delete = 127] = "Delete", 
  A[A.DownArrow = 264] = "DownArrow", A[A.End = 35] = "End", A[A.Enter = 13] = "Enter", 
  A[A.Escape = 27] = "Escape", A[A.Home = 36] = "Home", A[A.Insert = 45] = "Insert", 
  A[A.LeftArrow = 267] = "LeftArrow", A[A.PageDown = 260] = "PageDown", A[A.PageUp = 259] = "PageUp", 
  A[A.RightArrow = 268] = "RightArrow", A[A.UpArrow = 266] = "UpArrow", A[A.F1 = 112] = "F1", 
  A[A.F2 = 113] = "F2", A[A.F3 = 114] = "F3", A[A.F4 = 115] = "F4", A[A.F5 = 116] = "F5", 
  A[A.F6 = 117] = "F6", A[A.F7 = 118] = "F7", A[A.F8 = 119] = "F8", A[A.F9 = 120] = "F9", 
  A[A.F10 = 121] = "F10", A[A.F11 = 122] = "F11", A[A.F12 = 123] = "F12", A[A.F13 = 124] = "F13", 
  A[A.F14 = 125] = "F14", A[A.F15 = 126] = "F15", A[A.Alpha0 = 48] = "Alpha0", A[A.Alpha1 = 49] = "Alpha1", 
  A[A.Alpha2 = 50] = "Alpha2", A[A.Alpha3 = 51] = "Alpha3", A[A.Alpha4 = 52] = "Alpha4", 
  A[A.Alpha5 = 53] = "Alpha5", A[A.Alpha6 = 54] = "Alpha6", A[A.Alpha7 = 55] = "Alpha7", 
  A[A.Alpha8 = 56] = "Alpha8", A[A.Alpha9 = 57] = "Alpha9", A[A.A = 65] = "A", A[A.B = 66] = "B", 
  A[A.C = 67] = "C", A[A.D = 68] = "D", A[A.E = 69] = "E", A[A.F = 70] = "F", A[A.G = 71] = "G", 
  A[A.H = 72] = "H", A[A.I = 73] = "I", A[A.J = 74] = "J", A[A.K = 75] = "K", A[A.L = 76] = "L", 
  A[A.M = 77] = "M", A[A.N = 78] = "N", A[A.O = 79] = "O", A[A.P = 80] = "P", A[A.Q = 81] = "Q", 
  A[A.R = 82] = "R", A[A.S = 83] = "S", A[A.T = 84] = "T", A[A.U = 85] = "U", A[A.V = 86] = "V", 
  A[A.W = 87] = "W", A[A.X = 88] = "X", A[A.Y = 89] = "Y", A[A.Z = 90] = "Z", A[A.Numlock = 300] = "Numlock";
}(A || (A = {})), function(A) {
  A[A.Auto = 0] = "Auto", A[A.Off = 2] = "Off", A[A.On = 1] = "On";
}(F || (F = {}));

},{}],139:[function(require,module,exports){
"use strict";

},{}],140:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./enum"), require("./class"), require("./export");

},{"./api":136,"./class":137,"./enum":138,"./export":139}],141:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, l = arguments.length, o = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, n, i); else for (var s = e.length - 1; s >= 0; s--) (r = e[s]) && (o = (l < 3 ? r(o) : l > 3 ? r(t, n, o) : r(t, n)) || o);
  return l > 3 && o && Object.defineProperty(t, n, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _ctor_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _AddListener() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "AddListener", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _AddPersistentInvokableCall() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "AddPersistentInvokableCall", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _ClearPersistent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "ClearPersistent", 0, "void", []);
  }
  static get _PrepareInvoke() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "PrepareInvoke", 0, "pointer", []);
  }
  static get _RemoveListener() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "RemoveListener", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_ctor_0", null), e([ t.cache ], n, "_AddListener", null), e([ t.cache ], n, "_AddPersistentInvokableCall", null), 
e([ t.cache ], n, "_ClearPersistent", null), e([ t.cache ], n, "_PrepareInvoke", null), 
e([ t.cache ], n, "_RemoveListener", null), mscorlib.Api.InvokableCallList = n;

},{"decorator-cache-getter":513}],142:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_Object_impl = exports.InvokableCallList_impl = void 0;

const e = require("../../../../bridge/fix/packer/packList"), l = require("../class");

Object.defineProperty(exports, "mscorlib_System_Object_impl", {
  enumerable: !0,
  get: function() {
    return l.mscorlib_System_Object_impl;
  }
});

class s extends l.mscorlib_System_Object_impl {
  m_ExecutingCalls=new e.PackList(lfv(this.handle, "m_ExecutingCalls", findClass("InvokableCallList")));
  m_NeedsUpdate=lfv(this.handle, "m_NeedsUpdate", findClass("InvokableCallList"));
  m_PersistentCalls=new e.PackList(lfv(this.handle, "m_PersistentCalls", findClass("InvokableCallList")));
  m_RuntimeCalls=new e.PackList(lfv(this.handle, "m_RuntimeCalls", findClass("InvokableCallList")));
  constructor(e) {
    super(e);
  }
  static get ctor_0() {
    return new s(mscorlib.Api.InvokableCallList._ctor_0(alloc()));
  }
  AddListener(e) {
    return new mscorlib.Api.InvokableCallList._AddListener(this.handle, e);
  }
  ClearPersistent() {
    return new mscorlib.Api.InvokableCallList._ClearPersistent(this.handle);
  }
  PrepareInvoke() {
    return new mscorlib.Api.InvokableCallList._PrepareInvoke(this.handle);
  }
  RemoveListener_2(e, l) {
    return new mscorlib.Api.InvokableCallList._RemoveListener(this.handle, e, l);
  }
}

exports.InvokableCallList_impl = s, mscorlib.InvokableCallList = s;

},{"../../../../bridge/fix/packer/packList":29,"../class":468}],143:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => {
  let e = mscorlib.Api.InvokableCallList._AddListener;
  null != e && A(e, (e => {
    let l = new Il2Cpp.Object(e[0]), t = e[1], n = new Il2Cpp.Object(t).toString();
    LOGD(`\n[*] AddListener : ${getObjName(l.handle)} @ ${l.handle}`), LOGZ(`\nBaseInvokableCall\t->  ${n} @ ${t}`);
  }));
};

globalThis.HookAddListener_InvokableCallList = e;

},{}],144:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":141,"./class":142,"./export":143}],145:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, o) {
  var i, r = arguments.length, g = r < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, n) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) g = Reflect.decorate(e, t, n, o); else for (var l = e.length - 1; l >= 0; l--) (i = e[l]) && (g = (r < 3 ? i(g) : r > 3 ? i(t, n, g) : i(t, n)) || g);
  return r > 3 && g && Object.defineProperty(t, n, g), g;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", ".ctor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_logHandler() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_logHandler", 0, "pointer", [ "pointer" ]);
  }
  static get _set_logHandler() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_logHandler", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_logEnabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_logEnabled", 0, "pointer", [ "pointer" ]);
  }
  static get _set_logEnabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_logEnabled", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_filterLogType() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_filterLogType", 0, "pointer", [ "pointer" ]);
  }
  static get _set_filterLogType() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_filterLogType", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _IsLogTypeAllowed() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "IsLogTypeAllowed", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "GetString", 1, "pointer", [ "pointer" ]);
  }
  static get _Log() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "Log", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Log_logType_message_context() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Logger", "Log", 3, [ "UnityEngine.LogType", "System.Object", "UnityEngine.Object" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _LogFormat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "LogFormat", 3, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _LogFormat_logType_context_format_args() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Logger", "LogFormat", 4, [ "UnityEngine.LogType", "UnityEngine.Object", "System.String", "System.Object[]" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _LogException() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "LogException", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_logHandler", null), e([ t.cache ], n, "_set_logHandler", null), 
e([ t.cache ], n, "_get_logEnabled", null), e([ t.cache ], n, "_set_logEnabled", null), 
e([ t.cache ], n, "_get_filterLogType", null), e([ t.cache ], n, "_set_filterLogType", null), 
e([ t.cache ], n, "_IsLogTypeAllowed", null), e([ t.cache ], n, "_GetString", null), 
e([ t.cache ], n, "_Log", null), e([ t.cache ], n, "_Log_logType_message_context", null), 
e([ t.cache ], n, "_LogFormat", null), e([ t.cache ], n, "_LogFormat_logType_context_format_args", null), 
e([ t.cache ], n, "_LogException", null), Il2Cpp.Api.Logger = n;

},{"decorator-cache-getter":513}],146:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Logger_Impl = void 0;

const e = require("../class");

class r extends e.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  _ctor(e) {
    return Il2Cpp.Api.Logger.__ctor(this.handle, e);
  }
  get_logHandler() {
    return Il2Cpp.Api.Logger._get_logHandler(this.handle);
  }
  set_logHandler(e) {
    return Il2Cpp.Api.Logger._set_logHandler(this.handle, e);
  }
  get_logEnabled() {
    return Il2Cpp.Api.Logger._get_logEnabled(this.handle);
  }
  set_logEnabled(e) {
    return Il2Cpp.Api.Logger._set_logEnabled(this.handle, e);
  }
  get_filterLogType() {
    return Il2Cpp.Api.Logger._get_filterLogType(this.handle);
  }
  set_filterLogType(e) {
    return Il2Cpp.Api.Logger._set_filterLogType(this.handle, e);
  }
  IsLogTypeAllowed(e) {
    return Il2Cpp.Api.Logger._IsLogTypeAllowed(this.handle, e);
  }
  static GetString(e) {
    return readU16(Il2Cpp.Api.Logger._GetString(e));
  }
  Log(e, r) {
    return Il2Cpp.Api.Logger._Log(this.handle, e, r);
  }
  Log_3(e, r, t) {
    return Il2Cpp.Api.Logger._Log(this.handle, e, r, t);
  }
  LogFormat(e, r, t) {
    return Il2Cpp.Api.Logger._LogFormat(this.handle, e, r, t);
  }
  LogFormat_4(e, r, t, g) {
    return Il2Cpp.Api.Logger._LogFormat(this.handle, e, r, t, g);
  }
  LogException(e, r) {
    return Il2Cpp.Api.Logger._LogException(this.handle, e, r);
  }
}

exports.UnityEngine_Logger_Impl = r, Il2Cpp.Logger = r;

},{"../class":468}],147:[function(require,module,exports){
"use strict";

var r;

!function(r) {
  r[r.Assert = 1] = "Assert", r[r.Error = 0] = "Error", r[r.Exception = 4] = "Exception", 
  r[r.Log = 3] = "Log", r[r.Warning = 2] = "Warning";
}(r || (r = {}));

},{}],148:[function(require,module,exports){
"use strict";

},{}],149:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./enum");

},{"./api":145,"./class":146,"./enum":147,"./export":148}],150:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class t {
  static get _cctor() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "cctor", 0, "void", []);
  }
  static get _ctor() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _CreateNIE() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "CreateNIE", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "Equals", 0, "bool", [ "pointer", "pointer" ]);
  }
  static get _filter_by_type_name() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "filter_by_type_name", 2, "bool", [ "pointer", "pointer", "pointer" ]);
  }
  static get _filter_by_type_name_ignore_case() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "filter_by_type_name_ignore_case", 2, "bool", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetCustomAttributes() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetCustomAttributes", 1, "pointer", [ "pointer", "bool" ]);
  }
  static get _GetCustomAttributes_1() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetCustomAttributes", 2, "pointer", [ "pointer", "pointer", "bool" ]);
  }
  static get _GetGuidInternal() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetGuidInternal", 0, "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetHashCode", 0, "int32", [ "pointer" ]);
  }
  static get _GetModuleVersionId() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetModuleVersionId", 0, "pointer", [ "pointer" ]);
  }
  static get _GetObjectData() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetObjectData", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _IsDefined() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "IsDefined", 2, "bool", [ "pointer", "pointer", "bool" ]);
  }
  static get _IsResource() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "IsResource", 0, "bool", [ "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "op_Equality", 2, "bool", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _get_Assembly() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Assembly", 0, "pointer", [ "pointer" ]);
  }
  static get _get_ModuleVersionId() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ModuleVersionId", 0, "pointer", [ "pointer" ]);
  }
  static get _get_ScopeName() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ScopeName", 0, "pointer", [ "pointer" ]);
  }
}

mscorlib.Api.Module = t;

},{}],151:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_Reflection_Module_impl = void 0;

const e = require("../Type/class");

class t extends e.mscorlib_System_Type_impl {
  inter=lfv(this.handle, "_impl");
  assembly=lfv(this.handle, "assembly", findClass("Module", [ "mscorlib" ]));
  defaultBindingFlags=lfv(this.handle, "defaultBindingFlags");
  FilterTypeName=lfv(this.handle, "FilterTypeName");
  FilterTypeNameIgnoreCase=lfv(this.handle, "FilterTypeNameIgnoreCase");
  fqname=readU16(lfv(this.handle, "fqname"));
  is_resource=lfv(this.handle, "is_resource");
  _name=readU16(lfv(this.handle, "name"));
  scopename=readU16(lfv(this.handle, "scopename"));
  token=lfv(this.handle, "token");
  static get ctor() {
    return new t(mscorlib.Api.Module._ctor(alloc()));
  }
  static get _cctor() {
    return new t(mscorlib.Api.Module._cctor(alloc()));
  }
  CreateNIE() {
    return mscorlib.Api.Module._CreateNIE(this.handle);
  }
  Equals(e) {
    return mscorlib.Api.Module._Equals(this.handle, e);
  }
  filter_by_type_name(e, t) {
    return mscorlib.Api.Module._filter_by_type_name(this.handle, e.handle, t);
  }
  filter_by_type_name_ignore_case(e, t) {
    return mscorlib.Api.Module._filter_by_type_name_ignore_case(this.handle, e.handle, t);
  }
  GetCustomAttributes_1(e) {
    return mscorlib.Api.Module._GetCustomAttributes(this.handle, e);
  }
  GetCustomAttributes_2(e, t) {
    return mscorlib.Api.Module._GetCustomAttributes_1(this.handle, e.handle, t);
  }
  GetGuidInternal() {
    return readU16(mscorlib.Api.Module._GetGuidInternal(this.handle));
  }
  GetHashCode() {
    return mscorlib.Api.Module._GetHashCode(this.handle);
  }
  GetModuleVersionId() {
    return mscorlib.Api.Module._GetModuleVersionId(this.handle);
  }
  GetObjectData(e, t) {
    return mscorlib.Api.Module._GetObjectData(this.handle, e, t);
  }
  IsDefined(e, t) {
    return mscorlib.Api.Module._IsDefined(this.handle, e.handle, t);
  }
  IsResource() {
    return mscorlib.Api.Module._IsResource(this.handle);
  }
  op_Equality(e) {
    return mscorlib.Api.Module._op_Equality(this.handle, e.handle);
  }
  ToString() {
    return readU16(mscorlib.Api.Module._ToString(this.handle));
  }
  get_Assembly() {
    return mscorlib.Api.Module._get_Assembly(this.handle);
  }
  get_ModuleVersionId() {
    return mscorlib.Api.Module._get_ModuleVersionId(this.handle);
  }
  get_ScopeName() {
    return readU16(mscorlib.Api.Module._get_ScopeName(this.handle));
  }
}

exports.mscorlib_System_Reflection_Module_impl = t, mscorlib.Module = t;

},{"../Type/class":356}],152:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":150,"./class":151}],153:[function(require,module,exports){
"use strict";

},{}],154:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, l = arguments.length, r = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (r = (l < 3 ? o(r) : l > 3 ? o(t, n, r) : o(t, n)) || r);
  return l > 3 && r && Object.defineProperty(t, n, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.AudioModule", "UnityEngine.AudioClip", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_length() {
    return Il2Cpp.Api.o("UnityEngine.AudioModule", "UnityEngine.AudioClip", "get_length", 0, [], "pointer", [ "pointer" ]);
  }
  static get _InvokePCMReaderCallback_Internal() {
    return Il2Cpp.Api.o("UnityEngine.AudioModule", "UnityEngine.AudioClip", "InvokePCMReaderCallback_Internal", 1, [ "System.Single[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _InvokePCMSetPositionCallback_Internal() {
    return Il2Cpp.Api.o("UnityEngine.AudioModule", "UnityEngine.AudioClip", "InvokePCMSetPositionCallback_Internal", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_length", null), e([ t.cache ], n, "_InvokePCMReaderCallback_Internal", null), 
e([ t.cache ], n, "_InvokePCMSetPositionCallback_Internal", null), Il2Cpp.Api.AudioClip = n;

},{"decorator-cache-getter":513}],155:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AudioClip_Impl = void 0;

const e = require("../../Object/class");

class l extends e.UnityEngine_Object {
  m_PCMReaderCallback=lfv(this.handle, "m_PCMReaderCallback");
  m_PCMSetPositionCallback=lfv(this.handle, "m_PCMSetPositionCallback");
  constructor(e) {
    super(e);
  }
  _ctor_AudioClip() {
    return Il2Cpp.Api.AudioClip.__ctor(this.handle);
  }
  get_length() {
    return Il2Cpp.Api.AudioClip._get_length(this.handle);
  }
  InvokePCMReaderCallback_Internal(e) {
    return Il2Cpp.Api.AudioClip._InvokePCMReaderCallback_Internal(this.handle, e);
  }
  InvokePCMSetPositionCallback_Internal(e) {
    return Il2Cpp.Api.AudioClip._InvokePCMSetPositionCallback_Internal(this.handle, e);
  }
}

exports.UnityEngine_AudioClip_Impl = l, Il2Cpp.AudioClip = l;

},{"../../Object/class":303}],156:[function(require,module,exports){
"use strict";

},{}],157:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":154,"./class":155,"./export":156}],158:[function(require,module,exports){
"use strict";

},{}],159:[function(require,module,exports){
"use strict";

},{}],160:[function(require,module,exports){
"use strict";

},{}],161:[function(require,module,exports){
"use strict";

},{}],162:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var a = e.length - 1; a >= 0; a--) (r = e[a]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_nearClipPlane() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_nearClipPlane", 0, "pointer", [ "pointer" ]);
  }
  static get _set_nearClipPlane() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_nearClipPlane", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_farClipPlane() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_farClipPlane", 0, "pointer", [ "pointer" ]);
  }
  static get _set_farClipPlane() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_farClipPlane", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_fieldOfView() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_fieldOfView", 0, "pointer", [ "pointer" ]);
  }
  static get _set_fieldOfView() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_fieldOfView", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_orthographicSize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_orthographicSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_orthographicSize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_orthographicSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_orthographic() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_orthographic", 0, "pointer", [ "pointer" ]);
  }
  static get _get_depth() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_depth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_aspect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_aspect", 0, "pointer", [ "pointer" ]);
  }
  static get _set_aspect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_aspect", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_cullingMask() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cullingMask", 0, "pointer", [ "pointer" ]);
  }
  static get _get_eventMask() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_eventMask", 0, "pointer", [ "pointer" ]);
  }
  static get _get_backgroundColor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_backgroundColor", 0, "pointer", [ "pointer" ]);
  }
  static get _set_backgroundColor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_backgroundColor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_clearFlags() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_clearFlags", 0, "pointer", [ "pointer" ]);
  }
  static get _set_depthTextureMode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_depthTextureMode", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_usePhysicalProperties() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_usePhysicalProperties", 0, "pointer", [ "pointer" ]);
  }
  static get _set_usePhysicalProperties() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_usePhysicalProperties", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_sensorSize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_sensorSize", 0, "pointer", [ "pointer" ]);
  }
  static get _get_lensShift() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_lensShift", 0, "pointer", [ "pointer" ]);
  }
  static get _set_lensShift() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_lensShift", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_rect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_rect", 0, "pointer", [ "pointer" ]);
  }
  static get _set_rect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_rect", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelRect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelRect", 0, "pointer", [ "pointer" ]);
  }
  static get _set_pixelRect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_pixelRect", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelWidth() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelWidth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_pixelHeight() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelHeight", 0, "pointer", [ "pointer" ]);
  }
  static get _get_targetTexture() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_targetTexture", 0, "pointer", [ "pointer" ]);
  }
  static get _get_targetDisplay() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_targetDisplay", 0, "pointer", [ "pointer" ]);
  }
  static get _get_cameraToWorldMatrix() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cameraToWorldMatrix", 0, "pointer", [ "pointer" ]);
  }
  static get _get_projectionMatrix() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_projectionMatrix", 0, "pointer", [ "pointer" ]);
  }
  static get _WorldToScreenPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ViewportToWorldPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ScreenToWorldPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _WorldToScreenPoint_position() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get _ViewportToWorldPoint_position() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get _ScreenToWorldPoint_position() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get _ScreenToViewportPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToViewportPoint", 1, "pointer", [ "pointer" ]);
  }
  static get _ViewportPointToRay() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ViewportPointToRay_pos_eye() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 2, [ "UnityEngine.Vector3", "UnityEngine.Camera.MonoOrStereoscopicEye" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ViewportPointToRay_pos() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get _ScreenPointToRay() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ScreenPointToRay_pos_eye() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 2, [ "UnityEngine.Vector3", "UnityEngine.Camera.MonoOrStereoscopicEye" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ScreenPointToRay_pos() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_main() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_main", 0, "pointer", []);
  }
  static get _get_current() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_current", 0, "pointer", []);
  }
  static get _get_stereoEnabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_stereoEnabled", 0, "pointer", [ "pointer" ]);
  }
  static get _GetAllCamerasCount() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCamerasCount", 0, "pointer", []);
  }
  static get _GetAllCamerasImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCamerasImpl", 1, "pointer", [ "pointer" ]);
  }
  static get _get_allCamerasCount() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_allCamerasCount", 0, "pointer", []);
  }
  static get _GetAllCameras() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCameras", 1, "pointer", [ "pointer" ]);
  }
  static get _FireOnPreCull() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPreCull", 1, "void", [ "pointer" ]);
  }
  static get _FireOnPreRender() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPreRender", 1, "void", [ "pointer" ]);
  }
  static get _FireOnPostRender() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPostRender", 1, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _get_backgroundColor_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_backgroundColor_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_backgroundColor_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_backgroundColor_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_sensorSize_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_sensorSize_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_lensShift_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_lensShift_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_lensShift_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_lensShift_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_rect_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_rect_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_rect_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_rect_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_pixelRect_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelRect_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_pixelRect_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_pixelRect_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_cameraToWorldMatrix_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cameraToWorldMatrix_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_projectionMatrix_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_projectionMatrix_Injected", 1, "void", [ "pointer" ]);
  }
  static get _WorldToScreenPoint_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ViewportToWorldPoint_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ScreenToWorldPoint_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ScreenToViewportPoint_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToViewportPoint_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _ViewportPointToRay_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ScreenPointToRay_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_get_nearClipPlane", null), e([ t.cache ], n, "_set_nearClipPlane", null), 
e([ t.cache ], n, "_get_farClipPlane", null), e([ t.cache ], n, "_set_farClipPlane", null), 
e([ t.cache ], n, "_get_fieldOfView", null), e([ t.cache ], n, "_set_fieldOfView", null), 
e([ t.cache ], n, "_get_orthographicSize", null), e([ t.cache ], n, "_set_orthographicSize", null), 
e([ t.cache ], n, "_get_orthographic", null), e([ t.cache ], n, "_get_depth", null), 
e([ t.cache ], n, "_get_aspect", null), e([ t.cache ], n, "_set_aspect", null), 
e([ t.cache ], n, "_get_cullingMask", null), e([ t.cache ], n, "_get_eventMask", null), 
e([ t.cache ], n, "_get_backgroundColor", null), e([ t.cache ], n, "_set_backgroundColor", null), 
e([ t.cache ], n, "_get_clearFlags", null), e([ t.cache ], n, "_set_depthTextureMode", null), 
e([ t.cache ], n, "_get_usePhysicalProperties", null), e([ t.cache ], n, "_set_usePhysicalProperties", null), 
e([ t.cache ], n, "_get_sensorSize", null), e([ t.cache ], n, "_get_lensShift", null), 
e([ t.cache ], n, "_set_lensShift", null), e([ t.cache ], n, "_get_rect", null), 
e([ t.cache ], n, "_set_rect", null), e([ t.cache ], n, "_get_pixelRect", null), 
e([ t.cache ], n, "_set_pixelRect", null), e([ t.cache ], n, "_get_pixelWidth", null), 
e([ t.cache ], n, "_get_pixelHeight", null), e([ t.cache ], n, "_get_targetTexture", null), 
e([ t.cache ], n, "_get_targetDisplay", null), e([ t.cache ], n, "_get_cameraToWorldMatrix", null), 
e([ t.cache ], n, "_get_projectionMatrix", null), e([ t.cache ], n, "_WorldToScreenPoint", null), 
e([ t.cache ], n, "_ViewportToWorldPoint", null), e([ t.cache ], n, "_ScreenToWorldPoint", null), 
e([ t.cache ], n, "_WorldToScreenPoint_position", null), e([ t.cache ], n, "_ViewportToWorldPoint_position", null), 
e([ t.cache ], n, "_ScreenToWorldPoint_position", null), e([ t.cache ], n, "_ScreenToViewportPoint", null), 
e([ t.cache ], n, "_ViewportPointToRay", null), e([ t.cache ], n, "_ViewportPointToRay_pos_eye", null), 
e([ t.cache ], n, "_ViewportPointToRay_pos", null), e([ t.cache ], n, "_ScreenPointToRay", null), 
e([ t.cache ], n, "_ScreenPointToRay_pos_eye", null), e([ t.cache ], n, "_ScreenPointToRay_pos", null), 
e([ t.cache ], n, "_get_main", null), e([ t.cache ], n, "_get_current", null), e([ t.cache ], n, "_get_stereoEnabled", null), 
e([ t.cache ], n, "_GetAllCamerasCount", null), e([ t.cache ], n, "_GetAllCamerasImpl", null), 
e([ t.cache ], n, "_get_allCamerasCount", null), e([ t.cache ], n, "_GetAllCameras", null), 
e([ t.cache ], n, "_FireOnPreCull", null), e([ t.cache ], n, "_FireOnPreRender", null), 
e([ t.cache ], n, "_FireOnPostRender", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "_get_backgroundColor_Injected", null), e([ t.cache ], n, "_set_backgroundColor_Injected", null), 
e([ t.cache ], n, "_get_sensorSize_Injected", null), e([ t.cache ], n, "_get_lensShift_Injected", null), 
e([ t.cache ], n, "_set_lensShift_Injected", null), e([ t.cache ], n, "_get_rect_Injected", null), 
e([ t.cache ], n, "_set_rect_Injected", null), e([ t.cache ], n, "_get_pixelRect_Injected", null), 
e([ t.cache ], n, "_set_pixelRect_Injected", null), e([ t.cache ], n, "_get_cameraToWorldMatrix_Injected", null), 
e([ t.cache ], n, "_get_projectionMatrix_Injected", null), e([ t.cache ], n, "_WorldToScreenPoint_Injected", null), 
e([ t.cache ], n, "_ViewportToWorldPoint_Injected", null), e([ t.cache ], n, "_ScreenToWorldPoint_Injected", null), 
e([ t.cache ], n, "_ScreenToViewportPoint_Injected", null), e([ t.cache ], n, "_ViewportPointToRay_Injected", null), 
e([ t.cache ], n, "_ScreenPointToRay_Injected", null), Il2Cpp.Api.Camera = n;

},{"decorator-cache-getter":513}],163:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Camera = void 0;

const e = require("../../../../ValueType/Color/class"), t = require("../../../../ValueType/Matrix4x4/class"), r = require("../../../../ValueType/Ray/class"), n = require("../../../../ValueType/Rect/class"), a = require("../../../../ValueType/Vector2/class"), i = require("../../../../ValueType/Vector3/class"), l = require("../class");

class p extends l.UnityEngine_Behaviour_Impl {
  onPreCull=lfv(this.handle, "onPreCull");
  onPreRender=lfv(this.handle, "onPreRender");
  onPostRender=lfv(this.handle, "onPostRender");
  constructor(e) {
    super(e);
  }
  get_nearClipPlane() {
    return Il2Cpp.Api.Camera._get_nearClipPlane(this.handle);
  }
  set_nearClipPlane(e) {
    return Il2Cpp.Api.Camera._set_nearClipPlane(this.handle, e);
  }
  get_farClipPlane() {
    return Il2Cpp.Api.Camera._get_farClipPlane(this.handle);
  }
  set_farClipPlane(e) {
    return Il2Cpp.Api.Camera._set_farClipPlane(this.handle, e);
  }
  get_fieldOfView() {
    return Il2Cpp.Api.Camera._get_fieldOfView(this.handle);
  }
  set_fieldOfView(e) {
    return Il2Cpp.Api.Camera._set_fieldOfView(this.handle, e);
  }
  get_orthographicSize() {
    return Il2Cpp.Api.Camera._get_orthographicSize(this.handle);
  }
  set_orthographicSize(e) {
    return Il2Cpp.Api.Camera._set_orthographicSize(this.handle, e);
  }
  get_orthographic() {
    return Il2Cpp.Api.Camera._get_orthographic(this.handle);
  }
  get_depth() {
    return Il2Cpp.Api.Camera._get_depth(this.handle);
  }
  get_aspect() {
    return Il2Cpp.Api.Camera._get_aspect(this.handle);
  }
  set_aspect(e) {
    return Il2Cpp.Api.Camera._set_aspect(this.handle, e);
  }
  get_cullingMask() {
    return Il2Cpp.Api.Camera._get_cullingMask(this.handle);
  }
  get_eventMask() {
    return Il2Cpp.Api.Camera._get_eventMask(this.handle);
  }
  get_backgroundColor() {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Camera._get_backgroundColor(this.handle));
  }
  set_backgroundColor(e) {
    return Il2Cpp.Api.Camera._set_backgroundColor(this.handle, e.handle);
  }
  get_clearFlags() {
    return Il2Cpp.Api.Camera._get_clearFlags(this.handle);
  }
  set_depthTextureMode(e) {
    return Il2Cpp.Api.Camera._set_depthTextureMode(this.handle, e);
  }
  get_usePhysicalProperties() {
    return Il2Cpp.Api.Camera._get_usePhysicalProperties(this.handle);
  }
  set_usePhysicalProperties(e) {
    return Il2Cpp.Api.Camera._set_usePhysicalProperties(this.handle, e);
  }
  get_sensorSize() {
    return new a.UnityEngine_Vector2_Impl(Il2Cpp.Api.Camera._get_sensorSize(this.handle));
  }
  get_lensShift() {
    return new a.UnityEngine_Vector2_Impl(Il2Cpp.Api.Camera._get_lensShift(this.handle));
  }
  set_lensShift(e) {
    return Il2Cpp.Api.Camera._set_lensShift(this.handle, e.handle);
  }
  get_rect() {
    return new n.UnityEngine_Rect(Il2Cpp.Api.Camera._get_rect(this.handle));
  }
  set_rect(e) {
    return Il2Cpp.Api.Camera._set_rect(this.handle, e.handle);
  }
  get_pixelRect() {
    return new n.UnityEngine_Rect(Il2Cpp.Api.Camera._get_pixelRect(this.handle));
  }
  set_pixelRect(e) {
    return Il2Cpp.Api.Camera._set_pixelRect(this.handle, e.handle);
  }
  get_pixelWidth() {
    return Il2Cpp.Api.Camera._get_pixelWidth(this.handle).toInt32();
  }
  get_pixelHeight() {
    return Il2Cpp.Api.Camera._get_pixelHeight(this.handle).toInt32();
  }
  get_targetTexture() {
    return Il2Cpp.Api.Camera._get_targetTexture(this.handle);
  }
  get_targetDisplay() {
    return Il2Cpp.Api.Camera._get_targetDisplay(this.handle).toInt32();
  }
  get_cameraToWorldMatrix() {
    return new t.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Camera._get_cameraToWorldMatrix(this.handle));
  }
  get_projectionMatrix() {
    return new t.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Camera._get_projectionMatrix(this.handle));
  }
  WorldToScreenPoint(e, t) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._WorldToScreenPoint(this.handle, e, t));
  }
  ViewportToWorldPoint(e, t) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ViewportToWorldPoint(this.handle, e, t));
  }
  ScreenToWorldPoint(e, t) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToWorldPoint(this.handle, e, t));
  }
  WorldToScreenPoint_1(e) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._WorldToScreenPoint(this.handle, e));
  }
  ViewportToWorldPoint_1(e) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ViewportToWorldPoint(this.handle, e));
  }
  ScreenToWorldPoint_1(e) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToWorldPoint(this.handle, e));
  }
  ScreenToViewportPoint(e) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToViewportPoint(this.handle, e));
  }
  ViewportPointToRay(e, t) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, e, t));
  }
  ViewportPointToRay_2(e, t) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, e, t));
  }
  ViewportPointToRay_1(e) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, e.handle));
  }
  ScreenPointToRay_v2_eye(e, t) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, e.handle, t));
  }
  ScreenPointToRay_v3_eye(e, t) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, e.handle, t));
  }
  ScreenPointToRay_v3(e) {
    return new r.UnityEngine_Ray_Impl(Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, e.handle));
  }
  static get_main() {
    return new p(Il2Cpp.Api.Camera._get_main());
  }
  static get_current() {
    return new p(Il2Cpp.Api.Camera._get_current());
  }
  get_stereoEnabled() {
    return Il2Cpp.Api.Camera._get_stereoEnabled(this.handle);
  }
  static get GetAllCamerasCount() {
    return Il2Cpp.Api.Camera._GetAllCamerasCount().toInt32();
  }
  static GetAllCamerasImpl(e) {
    return Il2Cpp.Api.Camera._GetAllCamerasImpl(e);
  }
  static get get_allCamerasCount() {
    return Il2Cpp.Api.Camera._get_allCamerasCount();
  }
  static GetAllCameras(e) {
    return Il2Cpp.Api.Camera._GetAllCameras(e);
  }
  static FireOnPreCull(e) {
    return Il2Cpp.Api.Camera._FireOnPreCull(e);
  }
  static FireOnPreRender(e) {
    return Il2Cpp.Api.Camera._FireOnPreRender(e.handle);
  }
  static FireOnPostRender(e) {
    return Il2Cpp.Api.Camera._FireOnPostRender(e.handle);
  }
  _ctor() {
    return Il2Cpp.Api.Camera.__ctor(this.handle);
  }
  get_backgroundColor_Injected(e) {
    return Il2Cpp.Api.Camera._get_backgroundColor_Injected(this.handle, e.handle);
  }
  set_backgroundColor_Injected(e) {
    return Il2Cpp.Api.Camera._set_backgroundColor_Injected(this.handle, e.handle);
  }
  get_sensorSize_Injected(e) {
    return Il2Cpp.Api.Camera._get_sensorSize_Injected(this.handle, e.handle);
  }
  get_lensShift_Injected(e) {
    return Il2Cpp.Api.Camera._get_lensShift_Injected(this.handle, e.handle);
  }
  set_lensShift_Injected(e) {
    return Il2Cpp.Api.Camera._set_lensShift_Injected(this.handle, e.handle);
  }
  get_rect_Injected(e) {
    return Il2Cpp.Api.Camera._get_rect_Injected(this.handle, e.handle);
  }
  set_rect_Injected(e) {
    return Il2Cpp.Api.Camera._set_rect_Injected(this.handle, e.handle);
  }
  get_pixelRect_Injected(e) {
    return Il2Cpp.Api.Camera._get_pixelRect_Injected(this.handle, e.handle);
  }
  set_pixelRect_Injected(e) {
    return Il2Cpp.Api.Camera._set_pixelRect_Injected(this.handle, e.handle);
  }
  get_cameraToWorldMatrix_Injected(e) {
    return Il2Cpp.Api.Camera._get_cameraToWorldMatrix_Injected(this.handle, e.handle);
  }
  get_projectionMatrix_Injected(e) {
    return Il2Cpp.Api.Camera._get_projectionMatrix_Injected(this.handle, e.handle);
  }
  WorldToScreenPoint_Injected(e, t, r) {
    return Il2Cpp.Api.Camera._WorldToScreenPoint_Injected(this.handle, e.handle, t, r.handle);
  }
  ViewportToWorldPoint_Injected(e, t, r) {
    return Il2Cpp.Api.Camera._ViewportToWorldPoint_Injected(this.handle, e.handle, t, r.handle);
  }
  ScreenToWorldPoint_Injected(e, t, r) {
    return Il2Cpp.Api.Camera._ScreenToWorldPoint_Injected(this.handle, e.handle, t, r.handle);
  }
  ScreenToViewportPoint_Injected(e, t) {
    return Il2Cpp.Api.Camera._ScreenToViewportPoint_Injected(this.handle, e.handle, t.handle);
  }
  ViewportPointToRay_Injected(e, t, r) {
    return Il2Cpp.Api.Camera._ViewportPointToRay_Injected(this.handle, e.handle, t, r.handle);
  }
  ScreenPointToRay_Injected(e, t, r) {
    return Il2Cpp.Api.Camera._ScreenPointToRay_Injected(this.handle, e.handle, t, r.handle);
  }
}

exports.UnityEngine_Camera = p, Il2Cpp.Camera = p;

},{"../../../../ValueType/Color/class":379,"../../../../ValueType/Matrix4x4/class":408,"../../../../ValueType/Ray/class":416,"../../../../ValueType/Rect/class":426,"../../../../ValueType/Vector2/class":439,"../../../../ValueType/Vector3/class":443,"../class":237}],164:[function(require,module,exports){
"use strict";

var e, o, t;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Camera_MonoOrStereoscopicEye = exports.UnityEngine_DepthTextureMode = exports.UnityEngine_CameraClearFlags = void 0, 
function(e) {
  e[e.Color = 2] = "Color", e[e.Depth = 3] = "Depth", e[e.Nothing = 4] = "Nothing", 
  e[e.Skybox = 1] = "Skybox", e[e.SolidColor = 2] = "SolidColor";
}(e = exports.UnityEngine_CameraClearFlags || (exports.UnityEngine_CameraClearFlags = {})), 
function(e) {
  e[e.Depth = 1] = "Depth", e[e.DepthNormals = 2] = "DepthNormals", e[e.MotionVectors = 4] = "MotionVectors", 
  e[e.None = 0] = "None";
}(o = exports.UnityEngine_DepthTextureMode || (exports.UnityEngine_DepthTextureMode = {})), 
function(e) {
  e[e.Left = 0] = "Left", e[e.Mono = 2] = "Mono", e[e.Right = 1] = "Right";
}(t = exports.UnityEngine_Camera_MonoOrStereoscopicEye || (exports.UnityEngine_Camera_MonoOrStereoscopicEye = {}));

},{}],165:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../../../../Physics/class"), t = require("../../../../ValueType/RaycastHit/class"), i = require("../../../../ValueType/Vector3/class"), n = require("./class"), a = () => {
  let a = n.UnityEngine_Camera.get_main(), s = new i.UnityEngine_Vector3_Impl(alloc(5));
  Il2Cpp.Input.get_mousePosition_Injected(s), LOGZ(s.toString());
  let l = new i.UnityEngine_Vector3_Impl(allocVector(10, 20, 30)), c = a.ScreenPointToRay_v3(l), r = new t.UnityEngine_RaycastHit_Impl(alloc(5)), o = e.UnityEngine_Physics_Impl.Raycast_Ray_RaycastHit(c, r);
  LOGD(o);
};

globalThis.testCam = a;

},{"../../../../Physics/class":308,"../../../../ValueType/RaycastHit/class":419,"../../../../ValueType/Vector3/class":443,"./class":163}],166:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./enum"), require("./class"), require("./export");

},{"./api":162,"./class":163,"./enum":164,"./export":165}],167:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, i) {
  var r, a = arguments.length, o = a < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, n, t, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (o = (a < 3 ? r(o) : a > 3 ? r(n, t, o) : r(n, t)) || o);
  return a > 3 && o && Object.defineProperty(n, t, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _add_willRenderCanvases() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "add_willRenderCanvases", 1, [ "UnityEngine.Canvas.WillRenderCanvases" ], "void", [ "pointer" ]);
  }
  static get _remove_willRenderCanvases() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "remove_willRenderCanvases", 1, [ "UnityEngine.Canvas.WillRenderCanvases" ], "void", [ "pointer" ]);
  }
  static get _get_renderMode() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_renderMode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_renderMode() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_renderMode", 1, [ "UnityEngine.RenderMode" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isRootCanvas() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_isRootCanvas", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_scaleFactor() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_scaleFactor", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_scaleFactor() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_scaleFactor", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_referencePixelsPerUnit() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_referencePixelsPerUnit", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_referencePixelsPerUnit() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_referencePixelsPerUnit", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelPerfect() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_pixelPerfect", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_renderOrder() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_renderOrder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_overrideSorting() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_overrideSorting", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_overrideSorting() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_overrideSorting", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_sortingOrder() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_sortingOrder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sortingOrder() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_sortingOrder", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_targetDisplay() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_targetDisplay", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_sortingLayerID() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_sortingLayerID", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sortingLayerID() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_sortingLayerID", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_additionalShaderChannels() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_additionalShaderChannels", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_additionalShaderChannels() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_additionalShaderChannels", 1, [ "UnityEngine.AdditionalCanvasShaderChannels" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_rootCanvas() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_rootCanvas", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_worldCamera() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_worldCamera", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_worldCamera() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_worldCamera", 1, [ "UnityEngine.Camera" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetDefaultCanvasMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "GetDefaultCanvasMaterial", 0, [], "pointer", []);
  }
  static get _GetETC1SupportedCanvasMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "GetETC1SupportedCanvasMaterial", 0, [], "pointer", []);
  }
  static get _ForceUpdateCanvases() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "ForceUpdateCanvases", 0, [], "void", []);
  }
  static get _SendWillRenderCanvases() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "SendWillRenderCanvases", 0, [], "void", []);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", ".ctor", 0, [], "void", [ "pointer" ]);
  }
}

e([ n.cache ], t, "_add_willRenderCanvases", null), e([ n.cache ], t, "_remove_willRenderCanvases", null), 
e([ n.cache ], t, "_get_renderMode", null), e([ n.cache ], t, "_set_renderMode", null), 
e([ n.cache ], t, "_get_isRootCanvas", null), e([ n.cache ], t, "_get_scaleFactor", null), 
e([ n.cache ], t, "_set_scaleFactor", null), e([ n.cache ], t, "_get_referencePixelsPerUnit", null), 
e([ n.cache ], t, "_set_referencePixelsPerUnit", null), e([ n.cache ], t, "_get_pixelPerfect", null), 
e([ n.cache ], t, "_get_renderOrder", null), e([ n.cache ], t, "_get_overrideSorting", null), 
e([ n.cache ], t, "_set_overrideSorting", null), e([ n.cache ], t, "_get_sortingOrder", null), 
e([ n.cache ], t, "_set_sortingOrder", null), e([ n.cache ], t, "_get_targetDisplay", null), 
e([ n.cache ], t, "_get_sortingLayerID", null), e([ n.cache ], t, "_set_sortingLayerID", null), 
e([ n.cache ], t, "_get_additionalShaderChannels", null), e([ n.cache ], t, "_set_additionalShaderChannels", null), 
e([ n.cache ], t, "_get_rootCanvas", null), e([ n.cache ], t, "_get_worldCamera", null), 
e([ n.cache ], t, "_set_worldCamera", null), e([ n.cache ], t, "_GetDefaultCanvasMaterial", null), 
e([ n.cache ], t, "_GetETC1SupportedCanvasMaterial", null), e([ n.cache ], t, "_ForceUpdateCanvases", null), 
e([ n.cache ], t, "_SendWillRenderCanvases", null), e([ n.cache ], t, "__ctor", null), 
Il2Cpp.Api.Canvas = t;

},{"decorator-cache-getter":513}],168:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Canvas_Impl = void 0;

const e = require("../../../Material/class"), a = require("../class"), r = require("../Camera/class");

class n extends a.UnityEngine_Behaviour_Impl {
  willRenderCanvases=lfv(this.handle, "willRenderCanvases");
  constructor(e) {
    super(e);
  }
  static add_willRenderCanvases(e) {
    return Il2Cpp.Api.Canvas._add_willRenderCanvases(e);
  }
  static remove_willRenderCanvases(e) {
    return Il2Cpp.Api.Canvas._remove_willRenderCanvases(e);
  }
  get_renderMode() {
    return Il2Cpp.Api.Canvas._get_renderMode(this.handle);
  }
  set_renderMode(e) {
    return Il2Cpp.Api.Canvas._set_renderMode(this.handle, e);
  }
  get_isRootCanvas() {
    return Il2Cpp.Api.Canvas._get_isRootCanvas(this.handle);
  }
  get_scaleFactor() {
    return Il2Cpp.Api.Canvas._get_scaleFactor(this.handle);
  }
  set_scaleFactor(e) {
    return Il2Cpp.Api.Canvas._set_scaleFactor(this.handle, e);
  }
  get_referencePixelsPerUnit() {
    return Il2Cpp.Api.Canvas._get_referencePixelsPerUnit(this.handle);
  }
  set_referencePixelsPerUnit(e) {
    return Il2Cpp.Api.Canvas._set_referencePixelsPerUnit(this.handle, e);
  }
  get_pixelPerfect() {
    return Il2Cpp.Api.Canvas._get_pixelPerfect(this.handle);
  }
  get_renderOrder() {
    return Il2Cpp.Api.Canvas._get_renderOrder(this.handle);
  }
  get_overrideSorting() {
    return Il2Cpp.Api.Canvas._get_overrideSorting(this.handle);
  }
  set_overrideSorting(e) {
    return Il2Cpp.Api.Canvas._set_overrideSorting(this.handle, e);
  }
  get_sortingOrder() {
    return Il2Cpp.Api.Canvas._get_sortingOrder(this.handle);
  }
  set_sortingOrder(e) {
    return Il2Cpp.Api.Canvas._set_sortingOrder(this.handle, e);
  }
  get_targetDisplay() {
    return Il2Cpp.Api.Canvas._get_targetDisplay(this.handle);
  }
  get_sortingLayerID() {
    return Il2Cpp.Api.Canvas._get_sortingLayerID(this.handle);
  }
  set_sortingLayerID(e) {
    return Il2Cpp.Api.Canvas._set_sortingLayerID(this.handle, e);
  }
  get_additionalShaderChannels() {
    return Il2Cpp.Api.Canvas._get_additionalShaderChannels(this.handle);
  }
  set_additionalShaderChannels(e) {
    return Il2Cpp.Api.Canvas._set_additionalShaderChannels(this.handle, e);
  }
  get_rootCanvas() {
    return new n(Il2Cpp.Api.Canvas._get_rootCanvas(this.handle));
  }
  get_worldCamera() {
    return new r.UnityEngine_Camera(Il2Cpp.Api.Canvas._get_worldCamera(this.handle));
  }
  set_worldCamera(e) {
    return Il2Cpp.Api.Canvas._set_worldCamera(this.handle, e.handle);
  }
  static GetDefaultCanvasMaterial() {
    return new e.UnityEngine_Material_Impl(Il2Cpp.Api.Canvas._GetDefaultCanvasMaterial());
  }
  static GetETC1SupportedCanvasMaterial() {
    return new e.UnityEngine_Material_Impl(Il2Cpp.Api.Canvas._GetETC1SupportedCanvasMaterial());
  }
  static ForceUpdateCanvases() {
    return Il2Cpp.Api.Canvas._ForceUpdateCanvases();
  }
  static SendWillRenderCanvases() {
    return Il2Cpp.Api.Canvas._SendWillRenderCanvases();
  }
  _ctor() {
    return Il2Cpp.Api.Canvas.__ctor(alloc());
  }
}

exports.UnityEngine_Canvas_Impl = n, Il2Cpp.Canvas = n;

},{"../../../Material/class":283,"../Camera/class":163,"../class":237}],169:[function(require,module,exports){
"use strict";

},{}],170:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":167,"./class":168,"./export":169}],171:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var o, r = arguments.length, g = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) g = Reflect.decorate(t, e, n, i); else for (var p = t.length - 1; p >= 0; p--) (o = t[p]) && (g = (r < 3 ? o(g) : r > 3 ? o(e, n, g) : o(e, n)) || g);
  return r > 3 && g && Object.defineProperty(e, n, g), g;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _get_type() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_type", 0, "pointer", [ "pointer" ]);
  }
  static get _get_spotAngle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_spotAngle", 0, "pointer", [ "pointer" ]);
  }
  static get _get_color() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_color", 0, "pointer", [ "pointer" ]);
  }
  static get _set_color() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_color", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_intensity() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_intensity", 0, "pointer", [ "pointer" ]);
  }
  static get _set_intensity() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_intensity", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_bounceIntensity() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bounceIntensity", 0, "pointer", [ "pointer" ]);
  }
  static get _get_range() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_range", 0, "pointer", [ "pointer" ]);
  }
  static get _get_bakingOutput() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bakingOutput", 0, "pointer", [ "pointer" ]);
  }
  static get _get_shadows() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_shadows", 0, "pointer", [ "pointer" ]);
  }
  static get _get_cookieSize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_cookieSize", 0, "pointer", [ "pointer" ]);
  }
  static get _get_cookie() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_cookie", 0, "pointer", [ "pointer" ]);
  }
  static get _get_color_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_color_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _set_color_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_color_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_bakingOutput_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bakingOutput_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
}

t([ e.cache ], n, "_get_type", null), t([ e.cache ], n, "_get_spotAngle", null), 
t([ e.cache ], n, "_get_color", null), t([ e.cache ], n, "_set_color", null), t([ e.cache ], n, "_get_intensity", null), 
t([ e.cache ], n, "_set_intensity", null), t([ e.cache ], n, "_get_bounceIntensity", null), 
t([ e.cache ], n, "_get_range", null), t([ e.cache ], n, "_get_bakingOutput", null), 
t([ e.cache ], n, "_get_shadows", null), t([ e.cache ], n, "_get_cookieSize", null), 
t([ e.cache ], n, "_get_cookie", null), t([ e.cache ], n, "_get_color_Injected", null), 
t([ e.cache ], n, "_set_color_Injected", null), t([ e.cache ], n, "_get_bakingOutput_Injected", null), 
Il2Cpp.Api.Light = n;

},{"decorator-cache-getter":513}],172:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Light_Impl = void 0;

const e = require("../../../../ValueType/Color/class"), t = require("../../../Texture/class"), i = require("../class");

class n extends i.UnityEngine_Behaviour_Impl {
  m_BakedIndex=lfv(this.handle, "m_BakedIndex");
  constructor(e) {
    super(e);
  }
  get_type() {
    return Il2Cpp.Api.Light._get_type(this.handle);
  }
  get_spotAngle() {
    return Il2Cpp.Api.Light._get_spotAngle(this.handle);
  }
  get_color() {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Light._get_color(this.handle));
  }
  set_color(e) {
    return Il2Cpp.Api.Light._set_color(this.handle, e.handle);
  }
  get_intensity() {
    return Il2Cpp.Api.Light._get_intensity(this.handle);
  }
  set_intensity(e) {
    return Il2Cpp.Api.Light._set_intensity(this.handle, e);
  }
  get_bounceIntensity() {
    return Il2Cpp.Api.Light._get_bounceIntensity(this.handle);
  }
  get_range() {
    return Il2Cpp.Api.Light._get_range(this.handle);
  }
  get_bakingOutput() {
    return Il2Cpp.Api.Light._get_bakingOutput(this.handle);
  }
  get_shadows() {
    return Il2Cpp.Api.Light._get_shadows(this.handle);
  }
  get_cookieSize() {
    return Il2Cpp.Api.Light._get_cookieSize(this.handle);
  }
  get_cookie() {
    return new t.UnityEngine_Texture_Impl(Il2Cpp.Api.Light._get_cookie(this.handle));
  }
  get_color_Injected(e) {
    return Il2Cpp.Api.Light._get_color_Injected(this.handle, e.handle);
  }
  set_color_Injected(e) {
    return Il2Cpp.Api.Light._set_color_Injected(this.handle, e.handle);
  }
  get_bakingOutput_Injected(e) {
    return Il2Cpp.Api.Light._get_bakingOutput_Injected(this.handle, e);
  }
}

exports.UnityEngine_Light_Impl = n, Il2Cpp.Light = n;

},{"../../../../ValueType/Color/class":379,"../../../Texture/class":298,"../class":237}],173:[function(require,module,exports){
"use strict";

var e;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_LightType = void 0, function(e) {
  e[e.Area = 3] = "Area", e[e.Directional = 1] = "Directional", e[e.Disc = 4] = "Disc", 
  e[e.Point = 2] = "Point", e[e.Rectangle = 3] = "Rectangle", e[e.Spot = 0] = "Spot";
}(e = exports.UnityEngine_LightType || (exports.UnityEngine_LightType = {}));

},{}],174:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":171,"./class":172,"./enum":173}],175:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, n, e, i) {
  var r, o = arguments.length, c = o < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, e) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(t, n, e, i); else for (var p = t.length - 1; p >= 0; p--) (r = t[p]) && (c = (o < 3 ? r(c) : o > 3 ? r(n, e, c) : r(n, e)) || c);
  return o > 3 && c && Object.defineProperty(n, e, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class e {
  static get _ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _OnFinishSubmit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnFinishSubmit", 0, "pointer", [ "pointer" ]);
  }
  static get _OnPointerClick() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnPointerClick", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _OnSubmit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnSubmit", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Press() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "Press", 0, "pointer", [ "pointer" ]);
  }
  static get _set_onClick() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "set_onClick", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_onClick() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "get_onClick", 0, "pointer", [ "pointer" ]);
  }
}

t([ n.cache ], e, "_ctor", null), t([ n.cache ], e, "_OnFinishSubmit", null), t([ n.cache ], e, "_OnPointerClick", null), 
t([ n.cache ], e, "_OnSubmit", null), t([ n.cache ], e, "_Press", null), t([ n.cache ], e, "_set_onClick", null), 
t([ n.cache ], e, "_get_onClick", null), Il2Cpp.Api.Button = e;

},{"decorator-cache-getter":513}],176:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Button = void 0;

const t = require("../../../../../../AbstractEventData/BaseEventData/PointerEventData/class"), n = require("../../../../../../UnityEventBase/UnityEvent/ButtonClickedEvent/class"), e = require("../class");

class i extends e.UnityEngine_UI_Selectable_Impl {
  m_OnClick=new t.UnityEngine_EventSystems_PointerEventData_Impl(lfv(this.handle, "m_OnClick"));
  constructor(t) {
    super(t);
  }
  _ctor_Button() {
    return Il2Cpp.Api.Button._ctor(this.handle);
  }
  get_onClick() {
    return new n.UnityEngine_UI_Button_ButtonClickedEvent_Impl(Il2Cpp.Api.Button._get_onClick(this.handle));
  }
  set_onClick(t) {
    return Il2Cpp.Api.Button._set_onClick(this.handle, t);
  }
  Press() {
    return Il2Cpp.Api.Button._Press(this.handle);
  }
  OnPointerClick(t) {
    return Il2Cpp.Api.Button._OnPointerClick(this.handle, t);
  }
  OnSubmit(t) {
    return Il2Cpp.Api.Button._OnSubmit(this.handle, t);
  }
  OnFinishSubmit() {
    return Il2Cpp.Api.Button._OnFinishSubmit(this.handle);
  }
}

exports.Button = i, Il2Cpp.Button = i;

},{"../../../../../../AbstractEventData/BaseEventData/PointerEventData/class":36,"../../../../../../UnityEventBase/UnityEvent/ButtonClickedEvent/class":358,"../class":180}],177:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HideClickedObj = exports.OnButtonClick = exports.OnPointerClick = void 0;

const e = require("../../../../../../AbstractEventData/BaseEventData/PointerEventData/class"), t = require("../../../../../../Delegate/MulticastDelegate/UnityAction/class"), n = require("../../../../../../../../../utils/formart"), i = require("../../../../../../ValueType/exports"), o = require("./class");

function l(t = -1, n = ptr(0)) {
  let i;
  switch (arguments[0]) {
   default:
    if (i = n.isNull() ? ptr(Il2Cpp.Api.Button._OnPointerClick) : checkCmdInput(n), 
    null == i || i.isNull()) break;
    LOGE("\nEnable Hook OnPointerClick at " + i + "(" + i.sub(soAddr) + ")\n");
    try {
      A(i, (e => {
        LOGW("\n" + getLine(38)), LOGD("public void OnPointerClick( " + e[0] + " , " + e[1] + " )"), 
        o(e[1]);
      }));
    } catch (e) {
      A(i.add(2 * p_size), ((e, t) => {
        LOGW("\n" + getLine(38)), LOGD("public void OnPointerClick( " + getPlatformCtxWithArgV(t, 0) + " , " + getPlatformCtxWithArgV(t, 1) + " )"), 
        o(e[1]);
      }));
    }
    break;

   case 0:
    if (i = ptr(Il2Cpp.Api.PointerInputModule._DeselectIfSelectionChanged), i.isNull()) break;
    LOGE("\nEnable Hook DeselectIfSelectionChanged at " + i + "(" + i.sub(soAddr) + ")\n"), 
    A(i, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected void DeselectIfSelectionChanged(Ins = " + e[0] + " , GameObject = " + e[1] + " , BaseEventData(" + findClass("BaseEventData") + ") = " + e[2] + " )"), 
      e[1].isNull() || showGameObject(e[1]);
    }));
    break;

   case 1:
    if (i = find_method("UnityEngine.UI", "ScrollRect", "OnInitializePotentialDrag", 1), 
    i.isNull()) break;
    LOGE("\nEnable Hook OnInitializePotentialDrag at " + i + "(" + i.sub(soAddr) + ")\n"), 
    A(i, (e => {
      LOGW("\n" + getLine(38)), LOGD("public void OnInitializePotentialDrag( " + e[0] + " , " + e[1] + " )"), 
      o(e[1]);
    }));
    break;

   case 2:
    A(Il2Cpp.Api.PointerInputModule._ProcessMove, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void ProcessMove( " + e[1] + " )"), 
      o(e[1]);
    }));
    break;

   case 3:
    A(Il2Cpp.Api.PointerInputModule._ProcessDrag, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void ProcessDrag( " + e[1] + " )"), 
      o(e[1]);
    }));
    break;

   case 4:
    A(Il2Cpp.Api.BaseInputModule._HandlePointerExitAndEnter, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void HandlePointerExitAndEnter( " + e[1] + " , " + e[2] + ")"), 
      o(e[1]);
    }));
    break;

   case 5:
    A(Il2Cpp.Api.PointerEventData._set_pointerPress, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void set_pointerPress( " + e[1] + " )"), 
      showGameObject(e[1]);
    }));
    break;

   case 6:
    A(Il2Cpp.Api.PointerInputModule._GetPointerData, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void GetPointerData( " + e[2] + " )"), 
      showGameObject(e[1]), showEventData(e[2]);
    }));
    break;

   case 7:
    A(Il2Cpp.Api.EventSystem._RaycastAll, (e => {
      LOGW("\n" + getLine(38)), LOGD(`protected virtual Void RaycastAll( ${e[0]} , ${e[1]} , ${e[2]} )`), 
      o(e[1]);
    }));
    break;

   case 8:
    A(Il2Cpp.Api.PointerInputModule._GetTouchPointerEventData, (e => {}), (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void GetTouchPointerEventData "), 
      o(e);
    }));

   case 9:
    A(Il2Cpp.Api.Selectable._OnPointerExit, (e => {
      LOGW("\n" + getLine(38)), LOGD("protected virtual Void OnPointerExit( " + e[1] + " )"), 
      o(e[1]);
    }));
  }
  function o(t) {
    if (t.isNull()) return;
    let n = new e.UnityEngine_EventSystems_PointerEventData_Impl(t).get_pointerEnter();
    showGameObject(n), showComponents(n);
  }
}

exports.OnPointerClick = l;

const r = (n = ptr(0)) => {
  if (n.isNull()) try {
    A(Il2Cpp.Api.Button._OnPointerClick, (e => l(e[0], e[1])));
  } catch (e) {
    A(Il2Cpp.Api.Button._OnPointerClick, ((e, t) => {
      l(getPlatformCtxWithArgV(t, 0), getPlatformCtxWithArgV(t, 1));
    }));
  } else A(checkCmdInput(n), (e => l(e[0], e[1])));
  function l(n, l) {
    let r, a = new o.Button(n), s = new e.UnityEngine_EventSystems_PointerEventData_Impl(l), c = a.gameobject;
    try {
      r = a.get_onClick();
    } catch (e) {
      if (!(0, i.checkExtends)(a, "Button")) throw new Error("Instance is not a subclass of Il2cpp.Button");
      throw e;
    }
    LOGD(`\n[*] ${s.handle} ---\x3e ${c.get_name()} { G:${c.handle} | T:${c.get_transform().handle} }`);
    let p = [ r.m_Calls.m_ExecutingCalls, r.m_Calls.m_PersistentCalls, r.m_Calls.m_RuntimeCalls ];
    setTimeout((() => {
      p.forEach((e => {
        0 != e.get_Count() && LOGZ(`\t[+] ${e}`), e.forEach(((e, n) => {
          let i, o = e.field("Delegate").value, l = new t.UnityEngine_Events_UnityAction_Impl(o.handle);
          if (l.method.isNull()) {
            if (l.method_ptr.isNull()) throw new Error("unityAction.method is null");
            i = AddressToMethod(l.method_ptr, !1);
          } else i = new Il2Cpp.Method(l.method);
          LOGW(`\t\t[${n}] ${i.handle} -> ${i.relativeVirtualAddress} | ${i.class.image.assembly.name}.${i.class.name}.${i.name}`);
        }));
      }));
    }), 20);
  }
};

exports.OnButtonClick = r;

const a = (e = ptr(0)) => {
  if (e.isNull()) try {
    A(Il2Cpp.Api.Button._OnPointerClick, (e => t(e[0], e[1])));
  } catch (e) {
    A(Il2Cpp.Api.Button._OnPointerClick, ((e, n) => {
      t(getPlatformCtxWithArgV(n, 0), getPlatformCtxWithArgV(n, 1));
    }));
  } else A(checkCmdInput(e), (e => t(e[0], e[1])));
  function t(e, t) {
    let i = 0;
    listScripts(e)?.forEach((e => {
      0 == i && newLine();
      let t = e.toString();
      LOGW(`${n.formartClass.alignStr(`[${++i}]`, 6)} ${e.handle} ${t}`);
    }));
  }
}, s = (t, n) => {
  let i = find_method("UnityEngine.UI", "Button", "OnPointerClick", 1), o = new NativeFunction(i, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  Interceptor.revert(i), Interceptor.replace(i, new NativeCallback((function(t, n, i, l) {
    if (o(t, n, i, l), n.isNull()) return;
    new e.UnityEngine_EventSystems_PointerEventData_Impl(n).get_pointerEnter().get_name();
  }), "void", [ "pointer", "pointer", "pointer", "pointer" ])), setClick(t, n);
};

exports.HideClickedObj = s, globalThis.B_Button = exports.OnButtonClick, globalThis.HideClickedObj = exports.HideClickedObj, 
globalThis.HookOnPointerClick = l, globalThis.B_Button_Custom = e => (0, exports.OnButtonClick)(checkCmdInput(e)), 
globalThis.HookOnPointerClick_Custom = e => HookOnPointerClick(-1, checkCmdInput(e));

},{"../../../../../../../../../utils/formart":505,"../../../../../../AbstractEventData/BaseEventData/PointerEventData/class":36,"../../../../../../Delegate/MulticastDelegate/UnityAction/class":84,"../../../../../../ValueType/exports":452,"./class":176}],178:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./export"), require("./class");

},{"./api":175,"./class":176,"./export":177}],179:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var l, r = arguments.length, a = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (l = e[c]) && (a = (r < 3 ? l(a) : r > 3 ? l(t, n, a) : l(t, n)) || a);
  return r > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_allSelectablesArray() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectablesArray", 0, "pointer", []);
  }
  static get _get_allSelectableCount() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectableCount", 0, "pointer", []);
  }
  static get _get_allSelectables() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectables", 0, "pointer", []);
  }
  static get _AllSelectablesNoAlloc() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "AllSelectablesNoAlloc", 1, "pointer", [ "pointer" ]);
  }
  static get _get_navigation() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_navigation", 0, "pointer", [ "pointer" ]);
  }
  static get _set_navigation() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_navigation", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_transition() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_transition", 0, "pointer", [ "pointer" ]);
  }
  static get _set_transition() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_transition", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_colors() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_colors", 0, "pointer", [ "pointer" ]);
  }
  static get _set_colors() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_colors", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_spriteState() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_spriteState", 0, "pointer", [ "pointer" ]);
  }
  static get _set_spriteState() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_spriteState", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_animationTriggers() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_animationTriggers", 0, "pointer", [ "pointer" ]);
  }
  static get _set_animationTriggers() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_animationTriggers", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_targetGraphic() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_targetGraphic", 0, "pointer", [ "pointer" ]);
  }
  static get _set_targetGraphic() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_targetGraphic", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_interactable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_interactable", 0, "pointer", [ "pointer" ]);
  }
  static get _set_interactable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_interactable", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_isPointerInside() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_isPointerInside", 0, "pointer", [ "pointer" ]);
  }
  static get _set_isPointerInside() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_isPointerInside", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_isPointerDown() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_isPointerDown", 0, "pointer", [ "pointer" ]);
  }
  static get _set_isPointerDown() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_isPointerDown", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_hasSelection() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_hasSelection", 0, "pointer", [ "pointer" ]);
  }
  static get _set_hasSelection() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_hasSelection", 1, "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _get_image() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_image", 0, "pointer", [ "pointer" ]);
  }
  static get _set_image() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_image", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_animator() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_animator", 0, "pointer", [ "pointer" ]);
  }
  static get _Awake() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Awake", 0, "void", [ "pointer" ]);
  }
  static get _OnCanvasGroupChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnCanvasGroupChanged", 0, "void", [ "pointer" ]);
  }
  static get _IsInteractable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsInteractable", 0, "pointer", [ "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDidApplyAnimationProperties", 0, "void", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnEnable", 0, "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnSetProperty() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnSetProperty", 0, "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDisable", 0, "void", [ "pointer" ]);
  }
  static get _get_currentSelectionState() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_currentSelectionState", 0, "pointer", [ "pointer" ]);
  }
  static get _InstantClearState() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "InstantClearState", 0, "void", [ "pointer" ]);
  }
  static get _DoStateTransition() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "DoStateTransition", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FindSelectable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectable", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetPointOnRectEdge() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "GetPointOnRectEdge", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Navigate() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Navigate", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FindSelectableOnLeft() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnLeft", 0, "pointer", [ "pointer" ]);
  }
  static get _FindSelectableOnRight() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnRight", 0, "pointer", [ "pointer" ]);
  }
  static get _FindSelectableOnUp() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnUp", 0, "pointer", [ "pointer" ]);
  }
  static get _FindSelectableOnDown() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnDown", 0, "pointer", [ "pointer" ]);
  }
  static get _OnMove() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnMove", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _StartColorTween() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "StartColorTween", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DoSpriteSwap() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "DoSpriteSwap", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _TriggerAnimation() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "TriggerAnimation", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _IsHighlighted() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsHighlighted", 0, "pointer", [ "pointer" ]);
  }
  static get _IsPressed() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsPressed", 0, "pointer", [ "pointer" ]);
  }
  static get _EvaluateAndTransitionToSelectionState() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "EvaluateAndTransitionToSelectionState", 0, "void", [ "pointer" ]);
  }
  static get _OnPointerDown() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerDown", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnPointerUp() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerUp", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnPointerEnter() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerEnter", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnPointerExit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerExit", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnSelect() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnSelect", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnDeselect() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDeselect", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Select() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Select", 0, "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", ".cctor", 0, "void", []);
  }
}

e([ t.cache ], n, "_get_allSelectablesArray", null), e([ t.cache ], n, "_get_allSelectableCount", null), 
e([ t.cache ], n, "_get_allSelectables", null), e([ t.cache ], n, "_AllSelectablesNoAlloc", null), 
e([ t.cache ], n, "_get_navigation", null), e([ t.cache ], n, "_set_navigation", null), 
e([ t.cache ], n, "_get_transition", null), e([ t.cache ], n, "_set_transition", null), 
e([ t.cache ], n, "_get_colors", null), e([ t.cache ], n, "_set_colors", null), 
e([ t.cache ], n, "_get_spriteState", null), e([ t.cache ], n, "_set_spriteState", null), 
e([ t.cache ], n, "_get_animationTriggers", null), e([ t.cache ], n, "_set_animationTriggers", null), 
e([ t.cache ], n, "_get_targetGraphic", null), e([ t.cache ], n, "_set_targetGraphic", null), 
e([ t.cache ], n, "_get_interactable", null), e([ t.cache ], n, "_set_interactable", null), 
e([ t.cache ], n, "_get_isPointerInside", null), e([ t.cache ], n, "_set_isPointerInside", null), 
e([ t.cache ], n, "_get_isPointerDown", null), e([ t.cache ], n, "_set_isPointerDown", null), 
e([ t.cache ], n, "_get_hasSelection", null), e([ t.cache ], n, "_set_hasSelection", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_image", null), e([ t.cache ], n, "_set_image", null), 
e([ t.cache ], n, "_get_animator", null), e([ t.cache ], n, "_Awake", null), e([ t.cache ], n, "_OnCanvasGroupChanged", null), 
e([ t.cache ], n, "_IsInteractable", null), e([ t.cache ], n, "_OnDidApplyAnimationProperties", null), 
e([ t.cache ], n, "_OnEnable", null), e([ t.cache ], n, "_OnTransformParentChanged", null), 
e([ t.cache ], n, "_OnSetProperty", null), e([ t.cache ], n, "_OnDisable", null), 
e([ t.cache ], n, "_get_currentSelectionState", null), e([ t.cache ], n, "_InstantClearState", null), 
e([ t.cache ], n, "_DoStateTransition", null), e([ t.cache ], n, "_FindSelectable", null), 
e([ t.cache ], n, "_GetPointOnRectEdge", null), e([ t.cache ], n, "_Navigate", null), 
e([ t.cache ], n, "_FindSelectableOnLeft", null), e([ t.cache ], n, "_FindSelectableOnRight", null), 
e([ t.cache ], n, "_FindSelectableOnUp", null), e([ t.cache ], n, "_FindSelectableOnDown", null), 
e([ t.cache ], n, "_OnMove", null), e([ t.cache ], n, "_StartColorTween", null), 
e([ t.cache ], n, "_DoSpriteSwap", null), e([ t.cache ], n, "_TriggerAnimation", null), 
e([ t.cache ], n, "_IsHighlighted", null), e([ t.cache ], n, "_IsPressed", null), 
e([ t.cache ], n, "_EvaluateAndTransitionToSelectionState", null), e([ t.cache ], n, "_OnPointerDown", null), 
e([ t.cache ], n, "_OnPointerUp", null), e([ t.cache ], n, "_OnPointerEnter", null), 
e([ t.cache ], n, "_OnPointerExit", null), e([ t.cache ], n, "_OnSelect", null), 
e([ t.cache ], n, "_OnDeselect", null), e([ t.cache ], n, "_Select", null), e([ t.cache ], n, "__cctor", null), 
Il2Cpp.Api.Selectable = n;

},{"decorator-cache-getter":513}],180:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_UI_Selectable_Impl = void 0;

const e = require("../UIBehaviour/class"), t = require("../../../../../../../../bridge/fix/packer/packList");

class l extends e.UnityEngine_EventSystems_UIBehaviour_Impl {
  m_Navigation;
  m_Transition;
  m_Colors;
  m_SpriteState;
  m_AnimationTriggers;
  m_Interactable;
  m_GroupsAllowInteraction;
  constructor(e) {
    super(e), this.m_Navigation = lfv(this.handle, "m_Navigation"), this.m_Transition = lfv(this.handle, "m_Transition"), 
    this.m_Colors = lfv(this.handle, "m_Colors"), this.m_SpriteState = lfv(this.handle, "m_SpriteState"), 
    this.m_AnimationTriggers = lfv(this.handle, "m_AnimationTriggers"), this.m_Interactable = 0 == lfv(this.handle, "m_Interactable").toInt32(), 
    this.m_GroupsAllowInteraction = 0 == lfv(this.handle, "m_GroupsAllowInteraction").toInt32();
  }
  static get_allSelectablesArray() {
    return Il2Cpp.Api.Selectable._get_allSelectablesArray();
  }
  static get_allSelectableCount() {
    return Il2Cpp.Api.Selectable._get_allSelectableCount();
  }
  static get_allSelectables() {
    return new t.PackList(Il2Cpp.Api.Selectable._get_allSelectables());
  }
  static AllSelectablesNoAlloc(e) {
    return Il2Cpp.Api.Selectable._AllSelectablesNoAlloc(e);
  }
  get_navigation() {
    return Il2Cpp.Api.Selectable._get_navigation(this.handle);
  }
  set_navigation(e) {
    return Il2Cpp.Api.Selectable._set_navigation(this.handle, e);
  }
  get_transition() {
    return Il2Cpp.Api.Selectable._get_transition(this.handle);
  }
  set_transition(e) {
    return Il2Cpp.Api.Selectable._set_transition(this.handle, e);
  }
  get_colors() {
    return Il2Cpp.Api.Selectable._get_colors(this.handle);
  }
  set_colors(e) {
    return Il2Cpp.Api.Selectable._set_colors(this.handle, e);
  }
  get_spriteState() {
    return Il2Cpp.Api.Selectable._get_spriteState(this.handle);
  }
  set_spriteState(e) {
    return Il2Cpp.Api.Selectable._set_spriteState(this.handle, e);
  }
  get_animationTriggers() {
    return Il2Cpp.Api.Selectable._get_animationTriggers(this.handle);
  }
  set_animationTriggers(e) {
    return Il2Cpp.Api.Selectable._set_animationTriggers(this.handle, e);
  }
  get_targetGraphic() {
    return Il2Cpp.Api.Selectable._get_targetGraphic(this.handle);
  }
  set_targetGraphic(e) {
    return Il2Cpp.Api.Selectable._set_targetGraphic(this.handle, e);
  }
  get_interactable() {
    return Il2Cpp.Api.Selectable._get_interactable(this.handle);
  }
  set_interactable(e) {
    return Il2Cpp.Api.Selectable._set_interactable(this.handle, e);
  }
  get_isPointerInside() {
    return Il2Cpp.Api.Selectable._get_isPointerInside(this.handle);
  }
  set_isPointerInside(e) {
    return Il2Cpp.Api.Selectable._set_isPointerInside(this.handle, e);
  }
  get_isPointerDown() {
    return Il2Cpp.Api.Selectable._get_isPointerDown(this.handle);
  }
  set_isPointerDown(e) {
    return Il2Cpp.Api.Selectable._set_isPointerDown(this.handle, e);
  }
  get_hasSelection() {
    return Il2Cpp.Api.Selectable._get_hasSelection(this.handle);
  }
  set_hasSelection(e) {
    return Il2Cpp.Api.Selectable._set_hasSelection(this.handle, e);
  }
  _ctor() {
    return Il2Cpp.Api.Selectable.__ctor(this.handle);
  }
  get_image() {
    return Il2Cpp.Api.Selectable._get_image(this.handle);
  }
  set_image(e) {
    return Il2Cpp.Api.Selectable._set_image(this.handle, e);
  }
  get_animator() {
    return Il2Cpp.Api.Selectable._get_animator(this.handle);
  }
  Awake() {
    return Il2Cpp.Api.Selectable._Awake(this.handle);
  }
  OnCanvasGroupChanged() {
    return Il2Cpp.Api.Selectable._OnCanvasGroupChanged(this.handle);
  }
  IsInteractable() {
    return Il2Cpp.Api.Selectable._IsInteractable(this.handle);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.Selectable._OnDidApplyAnimationProperties(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.Selectable._OnEnable(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.Selectable._OnTransformParentChanged(this.handle);
  }
  OnSetProperty() {
    return Il2Cpp.Api.Selectable._OnSetProperty(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.Selectable._OnDisable(this.handle);
  }
  get_currentSelectionState() {
    return Il2Cpp.Api.Selectable._get_currentSelectionState(this.handle);
  }
  InstantClearState() {
    return Il2Cpp.Api.Selectable._InstantClearState(this.handle);
  }
  DoStateTransition(e, t) {
    return Il2Cpp.Api.Selectable._DoStateTransition(this.handle, e, t);
  }
  FindSelectable(e) {
    return Il2Cpp.Api.Selectable._FindSelectable(this.handle, e);
  }
  static GetPointOnRectEdge(e, t) {
    return Il2Cpp.Api.Selectable._GetPointOnRectEdge(e, t);
  }
  Navigate(e, t) {
    return Il2Cpp.Api.Selectable._Navigate(this.handle, e, t);
  }
  FindSelectableOnLeft() {
    return Il2Cpp.Api.Selectable._FindSelectableOnLeft(this.handle);
  }
  FindSelectableOnRight() {
    return Il2Cpp.Api.Selectable._FindSelectableOnRight(this.handle);
  }
  FindSelectableOnUp() {
    return Il2Cpp.Api.Selectable._FindSelectableOnUp(this.handle);
  }
  FindSelectableOnDown() {
    return Il2Cpp.Api.Selectable._FindSelectableOnDown(this.handle);
  }
  OnMove(e) {
    return Il2Cpp.Api.Selectable._OnMove(this.handle, e);
  }
  StartColorTween(e, t) {
    return Il2Cpp.Api.Selectable._StartColorTween(this.handle, e, t);
  }
  DoSpriteSwap(e) {
    return Il2Cpp.Api.Selectable._DoSpriteSwap(this.handle, e);
  }
  TriggerAnimation(e) {
    return Il2Cpp.Api.Selectable._TriggerAnimation(this.handle, e);
  }
  IsHighlighted() {
    return Il2Cpp.Api.Selectable._IsHighlighted(this.handle);
  }
  IsPressed() {
    return Il2Cpp.Api.Selectable._IsPressed(this.handle);
  }
  EvaluateAndTransitionToSelectionState() {
    return Il2Cpp.Api.Selectable._EvaluateAndTransitionToSelectionState(this.handle);
  }
  OnPointerDown(e) {
    return Il2Cpp.Api.Selectable._OnPointerDown(this.handle, e);
  }
  OnPointerUp(e) {
    return Il2Cpp.Api.Selectable._OnPointerUp(this.handle, e);
  }
  OnPointerEnter(e) {
    return Il2Cpp.Api.Selectable._OnPointerEnter(this.handle, e);
  }
  OnPointerExit(e) {
    return Il2Cpp.Api.Selectable._OnPointerExit(this.handle, e);
  }
  OnSelect(e) {
    return Il2Cpp.Api.Selectable._OnSelect(this.handle, e);
  }
  OnDeselect(e) {
    return Il2Cpp.Api.Selectable._OnDeselect(this.handle, e);
  }
  Select() {
    return Il2Cpp.Api.Selectable._Select(this.handle);
  }
  static _cctor() {
    return Il2Cpp.Api.Selectable.__cctor();
  }
}

exports.UnityEngine_UI_Selectable_Impl = l, Il2Cpp.Selectable = l;

},{"../../../../../../../../bridge/fix/packer/packList":29,"../UIBehaviour/class":228}],181:[function(require,module,exports){
"use strict";

},{}],182:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./Button/include"), require("./class"), require("./export"), require("./api");

},{"./Button/include":178,"./api":179,"./class":180,"./export":181}],183:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, l = arguments.length, s = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (s = (l < 3 ? o(s) : l > 3 ? o(t, n, s) : o(t, n)) || s);
  return l > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_inputMode() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_inputMode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_allowActivationOnMobileDevice() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_allowActivationOnMobileDevice", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_allowActivationOnMobileDevice() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_allowActivationOnMobileDevice", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_forceModuleActive() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_forceModuleActive", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_forceModuleActive() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_forceModuleActive", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_inputActionsPerSecond() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_inputActionsPerSecond", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_inputActionsPerSecond() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_inputActionsPerSecond", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_repeatDelay() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_repeatDelay", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_repeatDelay() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_repeatDelay", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_horizontalAxis() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_horizontalAxis", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_horizontalAxis() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_horizontalAxis", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_verticalAxis() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_verticalAxis", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_verticalAxis() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_verticalAxis", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_submitButton() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_submitButton", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_submitButton() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_submitButton", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_cancelButton() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "get_cancelButton", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_cancelButton() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "set_cancelButton", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ShouldIgnoreEventsOnNoFocus() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ShouldIgnoreEventsOnNoFocus", 0, [], "pointer", [ "pointer" ]);
  }
  static get _UpdateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "UpdateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _IsModuleSupported() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "IsModuleSupported", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ShouldActivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ShouldActivateModule", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ActivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ActivateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _DeactivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "DeactivateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _Process() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "Process", 0, [], "void", [ "pointer" ]);
  }
  static get _ProcessTouchEvents() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ProcessTouchEvents", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ProcessTouchPress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ProcessTouchPress", 3, [ "UnityEngine.EventSystems.PointerEventData", "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SendSubmitEventToSelectedObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "SendSubmitEventToSelectedObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetRawMoveVector() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "GetRawMoveVector", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SendMoveEventToSelectedObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "SendMoveEventToSelectedObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ProcessMouseEvent() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ProcessMouseEvent", 0, [], "void", [ "pointer" ]);
  }
  static get _ForceAutoSelect() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ForceAutoSelect", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ProcessMouseEvent_id() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ProcessMouseEvent", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SendUpdateEventToSelectedObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "SendUpdateEventToSelectedObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ProcessMousePress() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "ProcessMousePress", 1, [ "UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetCurrentFocusedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.StandaloneInputModule", "GetCurrentFocusedGameObject", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_inputMode", null), e([ t.cache ], n, "_get_allowActivationOnMobileDevice", null), 
e([ t.cache ], n, "_set_allowActivationOnMobileDevice", null), e([ t.cache ], n, "_get_forceModuleActive", null), 
e([ t.cache ], n, "_set_forceModuleActive", null), e([ t.cache ], n, "_get_inputActionsPerSecond", null), 
e([ t.cache ], n, "_set_inputActionsPerSecond", null), e([ t.cache ], n, "_get_repeatDelay", null), 
e([ t.cache ], n, "_set_repeatDelay", null), e([ t.cache ], n, "_get_horizontalAxis", null), 
e([ t.cache ], n, "_set_horizontalAxis", null), e([ t.cache ], n, "_get_verticalAxis", null), 
e([ t.cache ], n, "_set_verticalAxis", null), e([ t.cache ], n, "_get_submitButton", null), 
e([ t.cache ], n, "_set_submitButton", null), e([ t.cache ], n, "_get_cancelButton", null), 
e([ t.cache ], n, "_set_cancelButton", null), e([ t.cache ], n, "_ShouldIgnoreEventsOnNoFocus", null), 
e([ t.cache ], n, "_UpdateModule", null), e([ t.cache ], n, "_IsModuleSupported", null), 
e([ t.cache ], n, "_ShouldActivateModule", null), e([ t.cache ], n, "_ActivateModule", null), 
e([ t.cache ], n, "_DeactivateModule", null), e([ t.cache ], n, "_Process", null), 
e([ t.cache ], n, "_ProcessTouchEvents", null), e([ t.cache ], n, "_ProcessTouchPress", null), 
e([ t.cache ], n, "_SendSubmitEventToSelectedObject", null), e([ t.cache ], n, "_GetRawMoveVector", null), 
e([ t.cache ], n, "_SendMoveEventToSelectedObject", null), e([ t.cache ], n, "_ProcessMouseEvent", null), 
e([ t.cache ], n, "_ForceAutoSelect", null), e([ t.cache ], n, "_ProcessMouseEvent_id", null), 
e([ t.cache ], n, "_SendUpdateEventToSelectedObject", null), e([ t.cache ], n, "_ProcessMousePress", null), 
e([ t.cache ], n, "_GetCurrentFocusedGameObject", null), Il2Cpp.Api.StandaloneInputModule = n;

},{"decorator-cache-getter":513}],184:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_StandaloneInputModule_Impl = void 0;

const e = require("../../../../../../../../AbstractEventData/BaseEventData/PointerEventData/class"), t = require("../class");

class n extends t.UnityEngine_EventSystems_PointerInputModule_Impl {
  m_PrevActionTime=lfv(this.handle, "m_PrevActionTime");
  m_LastMoveVector=lfv(this.handle, "m_LastMoveVector");
  m_ConsecutiveMoveCount=lfv(this.handle, "m_ConsecutiveMoveCount");
  m_LastMousePosition=lfv(this.handle, "m_LastMousePosition");
  m_MousePosition=lfv(this.handle, "m_MousePosition");
  m_CurrentFocusedGameObject=lfv(this.handle, "m_CurrentFocusedGameObject");
  m_InputPointerEvent=new e.UnityEngine_EventSystems_PointerEventData_Impl(lfv(this.handle, "m_InputPointerEvent"));
  m_HorizontalAxis=lfv(this.handle, "m_HorizontalAxis");
  m_VerticalAxis=lfv(this.handle, "m_VerticalAxis");
  m_SubmitButton=lfv(this.handle, "m_SubmitButton");
  m_CancelButton=lfv(this.handle, "m_CancelButton");
  m_InputActionsPerSecond=lfv(this.handle, "m_InputActionsPerSecond");
  m_RepeatDelay=lfv(this.handle, "m_RepeatDelay");
  m_ForceModuleActive=lfv(this.handle, "m_ForceModuleActive");
  constructor(e) {
    super(e);
  }
  _ctor() {
    return Il2Cpp.Api.StandaloneInputModule.__ctor(this.handle);
  }
  get_inputMode() {
    return Il2Cpp.Api.StandaloneInputModule._get_inputMode(this.handle);
  }
  get_allowActivationOnMobileDevice() {
    return Il2Cpp.Api.StandaloneInputModule._get_allowActivationOnMobileDevice(this.handle);
  }
  set_allowActivationOnMobileDevice(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_allowActivationOnMobileDevice(this.handle, e);
  }
  get_forceModuleActive() {
    return Il2Cpp.Api.StandaloneInputModule._get_forceModuleActive(this.handle);
  }
  set_forceModuleActive(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_forceModuleActive(this.handle, e);
  }
  get_inputActionsPerSecond() {
    return Il2Cpp.Api.StandaloneInputModule._get_inputActionsPerSecond(this.handle);
  }
  set_inputActionsPerSecond(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_inputActionsPerSecond(this.handle, e);
  }
  get_repeatDelay() {
    return Il2Cpp.Api.StandaloneInputModule._get_repeatDelay(this.handle);
  }
  set_repeatDelay(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_repeatDelay(this.handle, e);
  }
  get_horizontalAxis() {
    return readU16(Il2Cpp.Api.StandaloneInputModule._get_horizontalAxis(this.handle));
  }
  set_horizontalAxis(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_horizontalAxis(this.handle, e);
  }
  get_verticalAxis() {
    return readU16(Il2Cpp.Api.StandaloneInputModule._get_verticalAxis(this.handle));
  }
  set_verticalAxis(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_verticalAxis(this.handle, e);
  }
  get_submitButton() {
    return readU16(Il2Cpp.Api.StandaloneInputModule._get_submitButton(this.handle));
  }
  set_submitButton(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_submitButton(this.handle, e);
  }
  get_cancelButton() {
    return readU16(Il2Cpp.Api.StandaloneInputModule._get_cancelButton(this.handle));
  }
  set_cancelButton(e) {
    return Il2Cpp.Api.StandaloneInputModule._set_cancelButton(this.handle, e);
  }
  ShouldIgnoreEventsOnNoFocus() {
    return Il2Cpp.Api.StandaloneInputModule._ShouldIgnoreEventsOnNoFocus(this.handle);
  }
  UpdateModule() {
    return Il2Cpp.Api.StandaloneInputModule._UpdateModule(this.handle);
  }
  IsModuleSupported() {
    return Il2Cpp.Api.StandaloneInputModule._IsModuleSupported(this.handle);
  }
  ShouldActivateModule() {
    return Il2Cpp.Api.StandaloneInputModule._ShouldActivateModule(this.handle);
  }
  ActivateModule() {
    return Il2Cpp.Api.StandaloneInputModule._ActivateModule(this.handle);
  }
  DeactivateModule() {
    return Il2Cpp.Api.StandaloneInputModule._DeactivateModule(this.handle);
  }
  Process() {
    return Il2Cpp.Api.StandaloneInputModule._Process(this.handle);
  }
  ProcessTouchEvents() {
    return Il2Cpp.Api.StandaloneInputModule._ProcessTouchEvents(this.handle);
  }
  ProcessTouchPress(e, t, n) {
    return Il2Cpp.Api.StandaloneInputModule._ProcessTouchPress(this.handle, e, t, n);
  }
  SendSubmitEventToSelectedObject() {
    return Il2Cpp.Api.StandaloneInputModule._SendSubmitEventToSelectedObject(this.handle);
  }
  GetRawMoveVector() {
    return Il2Cpp.Api.StandaloneInputModule._GetRawMoveVector(this.handle);
  }
  SendMoveEventToSelectedObject() {
    return Il2Cpp.Api.StandaloneInputModule._SendMoveEventToSelectedObject(this.handle);
  }
  ProcessMouseEvent() {
    return Il2Cpp.Api.StandaloneInputModule._ProcessMouseEvent(this.handle);
  }
  ForceAutoSelect() {
    return Il2Cpp.Api.StandaloneInputModule._ForceAutoSelect(this.handle);
  }
  ProcessMouseEvent_1(e) {
    return Il2Cpp.Api.StandaloneInputModule._ProcessMouseEvent(this.handle, e);
  }
  SendUpdateEventToSelectedObject() {
    return Il2Cpp.Api.StandaloneInputModule._SendUpdateEventToSelectedObject(this.handle);
  }
  ProcessMousePress(e) {
    return Il2Cpp.Api.StandaloneInputModule._ProcessMousePress(this.handle, e);
  }
  GetCurrentFocusedGameObject() {
    return Il2Cpp.Api.StandaloneInputModule._GetCurrentFocusedGameObject(this.handle);
  }
}

exports.UnityEngine_EventSystems_StandaloneInputModule_Impl = n, Il2Cpp.StandaloneInputModule = n;

},{"../../../../../../../../AbstractEventData/BaseEventData/PointerEventData/class":36,"../class":188}],185:[function(require,module,exports){
"use strict";

var e;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_StandaloneInputModule_InputMode = void 0, function(e) {
  e[e.Buttons = 1] = "Buttons", e[e.Mouse = 0] = "Mouse";
}(e = exports.UnityEngine_EventSystems_StandaloneInputModule_InputMode || (exports.UnityEngine_EventSystems_StandaloneInputModule_InputMode = {}));

},{}],186:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":183,"./class":184,"./enum":185}],187:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var o, r = arguments.length, p = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, n, i); else for (var a = t.length - 1; a >= 0; a--) (o = t[a]) && (p = (r < 3 ? o(p) : r > 3 ? o(e, n, p) : o(e, n)) || p);
  return r > 3 && p && Object.defineProperty(e, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _GetPointerData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "GetPointerData", 3, [ "System.Int32", "UnityEngine.EventSystems.PointerEventData&", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RemovePointerData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "RemovePointerData", 1, [ "UnityEngine.EventSystems.PointerEventData" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetTouchPointerEventData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "GetTouchPointerEventData", 3, [ "UnityEngine.Touch", "System.Boolean&", "System.Boolean&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CopyFromTo() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "CopyFromTo", 2, [ "UnityEngine.EventSystems.PointerEventData", "UnityEngine.EventSystems.PointerEventData" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _StateForMouseButton() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "StateForMouseButton", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMousePointerEventData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "GetMousePointerEventData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetMousePointerEventData_id() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "GetMousePointerEventData", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetLastPointerEventData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "GetLastPointerEventData", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ShouldStartDrag() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "ShouldStartDrag", 4, [ "UnityEngine.Vector2", "UnityEngine.Vector2", "System.Single", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ProcessMove() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "ProcessMove", 1, [ "UnityEngine.EventSystems.PointerEventData" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ProcessDrag() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "ProcessDrag", 1, [ "UnityEngine.EventSystems.PointerEventData" ], "void", [ "pointer", "pointer" ]);
  }
  static get _IsPointerOverGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "IsPointerOverGameObject", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ClearSelection() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "ClearSelection", 0, [], "void", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _DeselectIfSelectionChanged() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerInputModule", "DeselectIfSelectionChanged", 2, [ "UnityEngine.GameObject", "UnityEngine.EventSystems.BaseEventData" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], n, "__ctor", null), t([ e.cache ], n, "_GetPointerData", null), t([ e.cache ], n, "_RemovePointerData", null), 
t([ e.cache ], n, "_GetTouchPointerEventData", null), t([ e.cache ], n, "_CopyFromTo", null), 
t([ e.cache ], n, "_StateForMouseButton", null), t([ e.cache ], n, "_GetMousePointerEventData", null), 
t([ e.cache ], n, "_GetMousePointerEventData_id", null), t([ e.cache ], n, "_GetLastPointerEventData", null), 
t([ e.cache ], n, "_ShouldStartDrag", null), t([ e.cache ], n, "_ProcessMove", null), 
t([ e.cache ], n, "_ProcessDrag", null), t([ e.cache ], n, "_IsPointerOverGameObject", null), 
t([ e.cache ], n, "_ClearSelection", null), t([ e.cache ], n, "_ToString", null), 
t([ e.cache ], n, "_DeselectIfSelectionChanged", null), Il2Cpp.Api.PointerInputModule = n;

},{"decorator-cache-getter":513}],188:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_PointerInputModule_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_EventSystems_BaseInputModule_Impl {
  kMouseLeftId=lfv(this.handle, "kMouseLeftId");
  kMouseRightId=lfv(this.handle, "kMouseRightId");
  kMouseMiddleId=lfv(this.handle, "kMouseMiddleId");
  kFakeTouchesId=lfv(this.handle, "kFakeTouchesId");
  constructor(e) {
    super(e);
  }
  _ctor() {
    return Il2Cpp.Api.PointerInputModule.__ctor(this.handle);
  }
  GetPointerData(e, t, n) {
    return Il2Cpp.Api.PointerInputModule._GetPointerData(this.handle, e, t, n);
  }
  RemovePointerData(e) {
    return Il2Cpp.Api.PointerInputModule._RemovePointerData(this.handle, e);
  }
  GetTouchPointerEventData(e, t, n) {
    return Il2Cpp.Api.PointerInputModule._GetTouchPointerEventData(this.handle, e.handle, t, n);
  }
  CopyFromTo(e, t) {
    return Il2Cpp.Api.PointerInputModule._CopyFromTo(this.handle, e, t);
  }
  StateForMouseButton(e) {
    return Il2Cpp.Api.PointerInputModule._StateForMouseButton(this.handle, e);
  }
  GetMousePointerEventData() {
    return Il2Cpp.Api.PointerInputModule._GetMousePointerEventData(this.handle);
  }
  GetMousePointerEventData_1(e) {
    return Il2Cpp.Api.PointerInputModule._GetMousePointerEventData(this.handle, e);
  }
  GetLastPointerEventData(e) {
    return Il2Cpp.Api.PointerInputModule._GetLastPointerEventData(this.handle, e);
  }
  static ShouldStartDrag(e, t, n, o) {
    return Il2Cpp.Api.PointerInputModule._ShouldStartDrag(e, t, n, o);
  }
  ProcessMove(e) {
    return Il2Cpp.Api.PointerInputModule._ProcessMove(this.handle, e);
  }
  ProcessDrag(e) {
    return Il2Cpp.Api.PointerInputModule._ProcessDrag(this.handle, e);
  }
  ClearSelection() {
    return Il2Cpp.Api.PointerInputModule._ClearSelection(this.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.PointerInputModule._ToString(this.handle));
  }
  DeselectIfSelectionChanged(e, t) {
    return Il2Cpp.Api.PointerInputModule._DeselectIfSelectionChanged(this.handle, e, t);
  }
}

exports.UnityEngine_EventSystems_PointerInputModule_Impl = t, Il2Cpp.PointerInputModule = t;

},{"../class":191}],189:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./StandaloneInputModule/include");

},{"./StandaloneInputModule/include":186,"./api":187,"./class":188}],190:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, p = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var s = e.length - 1; s >= 0; s--) (o = e[s]) && (p = (r < 3 ? o(p) : r > 3 ? o(t, n, p) : o(t, n)) || p);
  return r > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_input() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "get_input", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_inputOverride() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "get_inputOverride", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_inputOverride() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "set_inputOverride", 1, [ "UnityEngine.EventSystems.BaseInput" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_eventSystem() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "get_eventSystem", 0, [], "pointer", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
  static get _Process() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "Process", 0, [], "void", [ "pointer" ]);
  }
  static get _FindFirstRaycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "FindFirstRaycast", 1, [ "System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult>" ], "pointer", [ "pointer" ]);
  }
  static get _DetermineMoveDirection() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "DetermineMoveDirection", 2, [ "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _DetermineMoveDirection_x_y_deadZone() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "DetermineMoveDirection", 3, [ "System.Single", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FindCommonRoot() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "FindCommonRoot", 2, [ "UnityEngine.GameObject", "UnityEngine.GameObject" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _HandlePointerExitAndEnter() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "HandlePointerExitAndEnter", 2, [ "UnityEngine.EventSystems.PointerEventData", "UnityEngine.GameObject" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetAxisEventData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "GetAxisEventData", 3, [ "System.Single", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetBaseEventData() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "GetBaseEventData", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsPointerOverGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "IsPointerOverGameObject", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ShouldActivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "ShouldActivateModule", 0, [], "pointer", [ "pointer" ]);
  }
  static get _DeactivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "DeactivateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _ActivateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "ActivateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "UpdateModule", 0, [], "void", [ "pointer" ]);
  }
  static get _IsModuleSupported() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseInputModule", "IsModuleSupported", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_input", null), e([ t.cache ], n, "_get_inputOverride", null), 
e([ t.cache ], n, "_set_inputOverride", null), e([ t.cache ], n, "_get_eventSystem", null), 
e([ t.cache ], n, "_OnEnable", null), e([ t.cache ], n, "_OnDisable", null), e([ t.cache ], n, "_Process", null), 
e([ t.cache ], n, "_FindFirstRaycast", null), e([ t.cache ], n, "_DetermineMoveDirection", null), 
e([ t.cache ], n, "_DetermineMoveDirection_x_y_deadZone", null), e([ t.cache ], n, "_FindCommonRoot", null), 
e([ t.cache ], n, "_HandlePointerExitAndEnter", null), e([ t.cache ], n, "_GetAxisEventData", null), 
e([ t.cache ], n, "_GetBaseEventData", null), e([ t.cache ], n, "_IsPointerOverGameObject", null), 
e([ t.cache ], n, "_ShouldActivateModule", null), e([ t.cache ], n, "_DeactivateModule", null), 
e([ t.cache ], n, "_ActivateModule", null), e([ t.cache ], n, "_UpdateModule", null), 
e([ t.cache ], n, "_IsModuleSupported", null), Il2Cpp.Api.BaseInputModule = n;

},{"decorator-cache-getter":513}],191:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_BaseInputModule_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_EventSystems_UIBehaviour_Impl {
  m_AxisEventData=lfv(this.handle, "m_AxisEventData");
  m_EventSystem=lfv(this.handle, "m_EventSystem");
  m_BaseEventData=lfv(this.handle, "m_BaseEventData");
  m_InputOverride=lfv(this.handle, "m_InputOverride");
  m_DefaultInput=lfv(this.handle, "m_DefaultInput");
  constructor(e) {
    super(e);
  }
  _ctor() {
    return Il2Cpp.Api.BaseInputModule.__ctor(this.handle);
  }
  get_input() {
    return Il2Cpp.Api.BaseInputModule._get_input(this.handle);
  }
  get_inputOverride() {
    return Il2Cpp.Api.BaseInputModule._get_inputOverride(this.handle);
  }
  set_inputOverride(e) {
    return Il2Cpp.Api.BaseInputModule._set_inputOverride(this.handle, e);
  }
  get_eventSystem() {
    return Il2Cpp.Api.BaseInputModule._get_eventSystem(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.BaseInputModule._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.BaseInputModule._OnDisable(this.handle);
  }
  Process() {
    return Il2Cpp.Api.BaseInputModule._Process(this.handle);
  }
  static DetermineMoveDirection(e, t) {
    return Il2Cpp.Api.BaseInputModule._DetermineMoveDirection(e, t);
  }
  static DetermineMoveDirection_3(e, t, n) {
    return Il2Cpp.Api.BaseInputModule._DetermineMoveDirection(e, t, n);
  }
  static FindCommonRoot(e, t) {
    return Il2Cpp.Api.BaseInputModule._FindCommonRoot(e, t);
  }
  HandlePointerExitAndEnter(e, t) {
    return Il2Cpp.Api.BaseInputModule._HandlePointerExitAndEnter(this.handle, e, t);
  }
  GetAxisEventData(e, t, n) {
    return Il2Cpp.Api.BaseInputModule._GetAxisEventData(this.handle, e, t, n);
  }
  GetBaseEventData() {
    return Il2Cpp.Api.BaseInputModule._GetBaseEventData(this.handle);
  }
  IsPointerOverGameObject(e) {
    return Il2Cpp.Api.BaseInputModule._IsPointerOverGameObject(this.handle, e);
  }
  ShouldActivateModule() {
    return Il2Cpp.Api.BaseInputModule._ShouldActivateModule(this.handle);
  }
  DeactivateModule() {
    return Il2Cpp.Api.BaseInputModule._DeactivateModule(this.handle);
  }
  ActivateModule() {
    return Il2Cpp.Api.BaseInputModule._ActivateModule(this.handle);
  }
  UpdateModule() {
    return Il2Cpp.Api.BaseInputModule._UpdateModule(this.handle);
  }
  IsModuleSupported() {
    return Il2Cpp.Api.BaseInputModule._IsModuleSupported(this.handle);
  }
}

exports.UnityEngine_EventSystems_BaseInputModule_Impl = t, Il2Cpp.BaseInputModule = t;

},{"../class":228}],192:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./PointerInputModule/include");

},{"./PointerInputModule/include":189,"./api":190,"./class":191}],193:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, a = arguments.length, s = a < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, r); else for (var o = e.length - 1; o >= 0; o--) (i = e[o]) && (s = (a < 3 ? i(s) : a > 3 ? i(t, n, s) : i(t, n)) || s);
  return a > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _Raycast() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "Raycast", 2, [ "UnityEngine.EventSystems.PointerEventData", "System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult>" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_eventCamera() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "get_eventCamera", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_priority() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "get_priority", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_sortOrderPriority() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "get_sortOrderPriority", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_renderOrderPriority() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "get_renderOrderPriority", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.BaseRaycaster", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_Raycast", null), e([ t.cache ], n, "_get_eventCamera", null), 
e([ t.cache ], n, "_get_priority", null), e([ t.cache ], n, "_get_sortOrderPriority", null), 
e([ t.cache ], n, "_get_renderOrderPriority", null), e([ t.cache ], n, "_ToString", null), 
e([ t.cache ], n, "_OnEnable", null), e([ t.cache ], n, "_OnDisable", null), Il2Cpp.Api.BaseRaycaster = n;

},{"decorator-cache-getter":513}],194:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_BaseRaycaster_Impl = void 0;

const e = require("../../../Camera/class"), r = require("../class");

class t extends r.UnityEngine_EventSystems_UIBehaviour_Impl {
  constructor(e) {
    super(e);
  }
  _ctor() {
    return Il2Cpp.Api.BaseRaycaster.__ctor(this.handle);
  }
  Raycast(e, r) {
    return Il2Cpp.Api.BaseRaycaster._Raycast(this.handle, e, r.handle);
  }
  get_eventCamera() {
    return new e.UnityEngine_Camera(Il2Cpp.Api.BaseRaycaster._get_eventCamera(this.handle));
  }
  get_priority() {
    return Il2Cpp.Api.BaseRaycaster._get_priority(this.handle);
  }
  get_sortOrderPriority() {
    return Il2Cpp.Api.BaseRaycaster._get_sortOrderPriority(this.handle);
  }
  get_renderOrderPriority() {
    return Il2Cpp.Api.BaseRaycaster._get_renderOrderPriority(this.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.BaseRaycaster._ToString(this.handle));
  }
  OnEnable() {
    return Il2Cpp.Api.BaseRaycaster._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.BaseRaycaster._OnDisable(this.handle);
  }
}

exports.UnityEngine_EventSystems_BaseRaycaster_Impl = t, Il2Cpp.BaseRaycaster = t;

},{"../../../Camera/class":163,"../class":228}],195:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":193,"./class":194}],196:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var s, r = arguments.length, c = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var a = e.length - 1; a >= 0; a--) (s = e[a]) && (c = (r < 3 ? s(c) : r > 3 ? s(t, n, c) : s(t, n)) || c);
  return r > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../../class"), n = require("decorator-cache-getter");

class i extends t.UnityEngine_Behaviour_Impl {
  static get _get_current() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_current", 0, [], "pointer", []);
  }
  static get _set_current() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "set_current", 1, [ "UnityEngine.EventSystems.EventSystem" ], "void", [ "pointer" ]);
  }
  static get _get_sendNavigationEvents() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_sendNavigationEvents", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sendNavigationEvents() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "set_sendNavigationEvents", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelDragThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_pixelDragThreshold", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pixelDragThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "set_pixelDragThreshold", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_currentInputModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_currentInputModule", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_firstSelectedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_firstSelectedGameObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_firstSelectedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "set_firstSelectedGameObject", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_currentSelectedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_currentSelectedGameObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_lastSelectedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_lastSelectedGameObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isFocused() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_isFocused", 0, [], "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateModules() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "UpdateModules", 0, [], "void", [ "pointer" ]);
  }
  static get _get_alreadySelecting() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_alreadySelecting", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetSelectedGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "SetSelectedGameObject", 2, [ "UnityEngine.GameObject", "UnityEngine.EventSystems.BaseEventData" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_baseEventDataCache() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "get_baseEventDataCache", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetSelectedGameObject_selected() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "SetSelectedGameObject", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _RaycastComparer() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "RaycastComparer", 2, [ "UnityEngine.EventSystems.RaycastResult", "UnityEngine.EventSystems.RaycastResult" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _RaycastAll() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "RaycastAll", 2, [ "UnityEngine.EventSystems.PointerEventData", "System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult>" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _IsPointerOverGameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "IsPointerOverGameObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsPointerOverGameObject_pointerId() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "IsPointerOverGameObject", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
  static get _TickModules() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "TickModules", 0, [], "void", [ "pointer" ]);
  }
  static get _OnApplicationFocus() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "OnApplicationFocus", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Update() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "Update", 0, [], "void", [ "pointer" ]);
  }
  static get _ChangeEventModule() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "ChangeEventModule", 1, [ "UnityEngine.EventSystems.BaseInputModule" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.EventSystem", ".cctor", 0, [], "void", []);
  }
}

e([ n.cache ], i, "_get_current", null), e([ n.cache ], i, "_set_current", null), 
e([ n.cache ], i, "_get_sendNavigationEvents", null), e([ n.cache ], i, "_set_sendNavigationEvents", null), 
e([ n.cache ], i, "_get_pixelDragThreshold", null), e([ n.cache ], i, "_set_pixelDragThreshold", null), 
e([ n.cache ], i, "_get_currentInputModule", null), e([ n.cache ], i, "_get_firstSelectedGameObject", null), 
e([ n.cache ], i, "_set_firstSelectedGameObject", null), e([ n.cache ], i, "_get_currentSelectedGameObject", null), 
e([ n.cache ], i, "_get_lastSelectedGameObject", null), e([ n.cache ], i, "_get_isFocused", null), 
e([ n.cache ], i, "__ctor", null), e([ n.cache ], i, "_UpdateModules", null), e([ n.cache ], i, "_get_alreadySelecting", null), 
e([ n.cache ], i, "_SetSelectedGameObject", null), e([ n.cache ], i, "_get_baseEventDataCache", null), 
e([ n.cache ], i, "_SetSelectedGameObject_selected", null), e([ n.cache ], i, "_RaycastComparer", null), 
e([ n.cache ], i, "_RaycastAll", null), e([ n.cache ], i, "_IsPointerOverGameObject", null), 
e([ n.cache ], i, "_IsPointerOverGameObject_pointerId", null), e([ n.cache ], i, "_OnEnable", null), 
e([ n.cache ], i, "_OnDisable", null), e([ n.cache ], i, "_TickModules", null), 
e([ n.cache ], i, "_OnApplicationFocus", null), e([ n.cache ], i, "_Update", null), 
e([ n.cache ], i, "_ChangeEventModule", null), e([ n.cache ], i, "_ToString", null), 
e([ n.cache ], i, "__cctor", null), Il2Cpp.Api.EventSystem = i;

},{"../../../class":237,"decorator-cache-getter":513}],197:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_EventSystem_Impl = void 0;

const e = require("../../../../../../../../../bridge/fix/packer/packList"), t = require("../../../../../../AbstractEventData/BaseEventData/class"), n = require("../../../../../GameObject/class"), s = require("../BaseInputModule/class"), l = require("../class");

class a extends l.UnityEngine_EventSystems_UIBehaviour_Impl {
  m_SystemInputModules=new e.PackList(lfv(this.handle, "m_SystemInputModules"));
  m_CurrentInputModule=new s.UnityEngine_EventSystems_BaseInputModule_Impl(lfv(this.handle, "m_CurrentInputModule"));
  m_EventSystems=new e.PackList(lfv(this.handle, "m_EventSystems"));
  m_FirstSelected=new n.GameObjectImpl(lfv(this.handle, "m_FirstSelected"));
  m_sendNavigationEvents=lfv(this.handle, "m_sendNavigationEvents");
  m_DragThreshold=lfv(this.handle, "m_DragThreshold");
  m_CurrentSelected=new n.GameObjectImpl(lfv(this.handle, "m_CurrentSelected"));
  m_HasFocus=lfv(this.handle, "m_HasFocus");
  m_SelectionGuard=lfv(this.handle, "m_SelectionGuard");
  m_DummyData=new t.UnityEngine_EventSystems_BaseEventData_Impl(lfv(this.handle, "m_DummyData"));
  constructor(e) {
    super(e);
  }
  static get get_current() {
    return new a(Il2Cpp.Api.EventSystem._get_current());
  }
  static set set_current(e) {
    Il2Cpp.Api.EventSystem._set_current(e.handle);
  }
  get_sendNavigationEvents() {
    return Il2Cpp.Api.EventSystem._get_sendNavigationEvents(this.handle);
  }
  set_sendNavigationEvents(e) {
    return Il2Cpp.Api.EventSystem._set_sendNavigationEvents(this.handle, e);
  }
  get_pixelDragThreshold() {
    return Il2Cpp.Api.EventSystem._get_pixelDragThreshold(this.handle);
  }
  set_pixelDragThreshold(e) {
    return Il2Cpp.Api.EventSystem._set_pixelDragThreshold(this.handle, e);
  }
  get_currentInputModule() {
    return new s.UnityEngine_EventSystems_BaseInputModule_Impl(Il2Cpp.Api.EventSystem._get_currentInputModule(this.handle));
  }
  get_firstSelectedGameObject() {
    return new n.GameObjectImpl(Il2Cpp.Api.EventSystem._get_firstSelectedGameObject(this.handle));
  }
  set_firstSelectedGameObject(e) {
    return Il2Cpp.Api.EventSystem._set_firstSelectedGameObject(this.handle, e.handle);
  }
  get_currentSelectedGameObject() {
    let e = Il2Cpp.Api.EventSystem._get_currentSelectedGameObject(this.handle);
    return e.isNull() ? null : new n.GameObjectImpl(e);
  }
  get_lastSelectedGameObject() {
    return new n.GameObjectImpl(Il2Cpp.Api.EventSystem._get_lastSelectedGameObject(this.handle));
  }
  get_isFocused() {
    return Il2Cpp.Api.EventSystem._get_isFocused(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.EventSystem.__ctor(this.handle);
  }
  UpdateModules() {
    return Il2Cpp.Api.EventSystem._UpdateModules(this.handle);
  }
  get_alreadySelecting() {
    return Il2Cpp.Api.EventSystem._get_alreadySelecting(this.handle);
  }
  SetSelectedGameObject(e, t) {
    return Il2Cpp.Api.EventSystem._SetSelectedGameObject(this.handle, e.handle, t.handle);
  }
  get_baseEventDataCache() {
    return new t.UnityEngine_EventSystems_BaseEventData_Impl(Il2Cpp.Api.EventSystem._get_baseEventDataCache(this.handle));
  }
  SetSelectedGameObject_1(e) {
    return Il2Cpp.Api.EventSystem._SetSelectedGameObject(this.handle, e.handle);
  }
  static RaycastComparer(e, t) {
    return Il2Cpp.Api.EventSystem._RaycastComparer(e.handle, t.handle).toInt32();
  }
  RaycastAll(e, t) {
    return Il2Cpp.Api.EventSystem._RaycastAll(this.handle, e.handle, t.handle);
  }
  IsPointerOverGameObject() {
    return Il2Cpp.Api.EventSystem._IsPointerOverGameObject(this.handle);
  }
  IsPointerOverGameObject_1(e) {
    return Il2Cpp.Api.EventSystem._IsPointerOverGameObject(this.handle, e);
  }
  OnEnable() {
    return Il2Cpp.Api.EventSystem._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.EventSystem._OnDisable(this.handle);
  }
  TickModules() {
    return Il2Cpp.Api.EventSystem._TickModules(this.handle);
  }
  OnApplicationFocus(e) {
    return Il2Cpp.Api.EventSystem._OnApplicationFocus(this.handle, e);
  }
  Update() {
    return Il2Cpp.Api.EventSystem._Update(this.handle);
  }
  ChangeEventModule(e) {
    return Il2Cpp.Api.EventSystem._ChangeEventModule(this.handle, e.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.EventSystem._ToString(this.handle));
  }
  static _cctor() {
    return Il2Cpp.Api.EventSystem.__cctor();
  }
}

exports.UnityEngine_EventSystems_EventSystem_Impl = a, Il2Cpp.EventSystem = a;

},{"../../../../../../../../../bridge/fix/packer/packList":29,"../../../../../../AbstractEventData/BaseEventData/class":41,"../../../../../GameObject/class":279,"../BaseInputModule/class":191,"../class":228}],198:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.event_get_lastSelectGobj = exports.event_get_firstSelectGobj = exports.event_getcurrent_select_gameobj = exports.getEventSystem = exports.getEventUpdate = void 0;

const e = (e = !1) => {
  let t = Il2Cpp.Domain.assembly("UnityEngine.UI").image.class("UnityEngine.EventSystems.EventSystem").method("Update");
  return null == e || 0 == e ? t.virtualAddress : t;
};

exports.getEventUpdate = e;

const t = () => Il2Cpp.EventSystem.get_current;

exports.getEventSystem = t;

const s = () => {
  let e = (0, exports.getEventSystem)().get_currentSelectedGameObject();
  null == e && LOGE("Noting to show ..."), null != e && showGameObject(e);
};

exports.event_getcurrent_select_gameobj = s;

const o = () => {
  let e = (0, exports.getEventSystem)().get_firstSelectedGameObject();
  null != e && showGameObject(e);
};

exports.event_get_firstSelectGobj = o;

const n = () => {
  let e = (0, exports.getEventSystem)().get_lastSelectedGameObject();
  null != e && showGameObject(e);
};

exports.event_get_lastSelectGobj = n, globalThis.getEventUpdate = exports.getEventUpdate, 
globalThis.showCurrentEventGobj = exports.event_getcurrent_select_gameobj, globalThis.showFirstEventGobj = exports.event_get_firstSelectGobj, 
globalThis.showLastEventGobj = exports.event_get_lastSelectGobj;

},{}],199:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":196,"./class":197,"./export":198}],200:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, n) {
  var r, p = arguments.length, l = p < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, i, n); else for (var a = e.length - 1; a >= 0; a--) (r = e[a]) && (l = (p < 3 ? r(l) : p > 3 ? r(t, i, l) : r(t, i)) || l);
  return p > 3 && l && Object.defineProperty(t, i, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _get_sprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_sprite", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_sprite", 1, [ "UnityEngine.Sprite" ], "void", [ "pointer", "pointer" ]);
  }
  static get _DisableSpriteOptimizations() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "DisableSpriteOptimizations", 0, [], "void", [ "pointer" ]);
  }
  static get _get_overrideSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_overrideSprite", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_overrideSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_overrideSprite", 1, [ "UnityEngine.Sprite" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_activeSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_activeSprite", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_type() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_type", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_type() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_type", 1, [ "UnityEngine.UI.Image.Type" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_preserveAspect() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_preserveAspect", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_preserveAspect() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_preserveAspect", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fillCenter() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_fillCenter", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fillCenter() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_fillCenter", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fillMethod() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_fillMethod", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fillMethod() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_fillMethod", 1, [ "UnityEngine.UI.Image.FillMethod" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fillAmount() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_fillAmount", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fillAmount() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_fillAmount", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fillClockwise() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_fillClockwise", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fillClockwise() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_fillClockwise", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fillOrigin() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_fillOrigin", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fillOrigin() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_fillOrigin", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_eventAlphaThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_eventAlphaThreshold", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_eventAlphaThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_eventAlphaThreshold", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_alphaHitTestMinimumThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_alphaHitTestMinimumThreshold", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_alphaHitTestMinimumThreshold() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_alphaHitTestMinimumThreshold", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_useSpriteMesh() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_useSpriteMesh", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_useSpriteMesh() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_useSpriteMesh", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_defaultETC1GraphicMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_defaultETC1GraphicMaterial", 0, [], "pointer", []);
  }
  static get _get_mainTexture() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_mainTexture", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_hasBorder() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_hasBorder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_pixelsPerUnitMultiplier() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_pixelsPerUnitMultiplier", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pixelsPerUnitMultiplier() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_pixelsPerUnitMultiplier", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelsPerUnit() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_pixelsPerUnit", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_multipliedPixelsPerUnit() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_multipliedPixelsPerUnit", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_material() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_material", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_material() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "set_material", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _OnBeforeSerialize() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnBeforeSerialize", 0, [], "void", [ "pointer" ]);
  }
  static get _OnAfterDeserialize() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnAfterDeserialize", 0, [], "void", [ "pointer" ]);
  }
  static get _PreserveSpriteAspectRatio() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "PreserveSpriteAspectRatio", 2, [ "UnityEngine.Rect&", "UnityEngine.Vector2" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetDrawingDimensions() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GetDrawingDimensions", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetNativeSize() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "SetNativeSize", 0, [], "void", [ "pointer" ]);
  }
  static get _OnPopulateMesh() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnPopulateMesh", 1, [ "UnityEngine.UI.VertexHelper" ], "void", [ "pointer", "pointer" ]);
  }
  static get _TrackSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "TrackSprite", 0, [], "void", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "UpdateMaterial", 0, [], "void", [ "pointer" ]);
  }
  static get _OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnCanvasHierarchyChanged", 0, [], "void", [ "pointer" ]);
  }
  static get _GenerateSimpleSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GenerateSimpleSprite", 2, [ "UnityEngine.UI.VertexHelper", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GenerateSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GenerateSprite", 2, [ "UnityEngine.UI.VertexHelper", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GenerateSlicedSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GenerateSlicedSprite", 1, [ "UnityEngine.UI.VertexHelper" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GenerateTiledSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GenerateTiledSprite", 1, [ "UnityEngine.UI.VertexHelper" ], "void", [ "pointer", "pointer" ]);
  }
  static get _AddQuad() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "AddQuad", 4, [ "UnityEngine.UI.VertexHelper", "UnityEngine.Vector3[]", "UnityEngine.Color32", "UnityEngine.Vector3[]" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _AddQuad_vertexHelper_posMin_posMax_color_uvMin_uvMax() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "AddQuad", 6, [ "UnityEngine.UI.VertexHelper", "UnityEngine.Vector2", "UnityEngine.Vector2", "UnityEngine.Color32", "UnityEngine.Vector2", "UnityEngine.Vector2" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetAdjustedBorders() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GetAdjustedBorders", 2, [ "UnityEngine.Vector4", "UnityEngine.Rect" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GenerateFilledSprite() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "GenerateFilledSprite", 2, [ "UnityEngine.UI.VertexHelper", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RadialCut() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "RadialCut", 5, [ "UnityEngine.Vector3[]", "UnityEngine.Vector3[]", "System.Single", "System.Boolean", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RadialCut_xy_cos_sin_invert_corner() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "RadialCut", 5, [ "UnityEngine.Vector3[]", "System.Single", "System.Single", "System.Boolean", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "CalculateLayoutInputHorizontal", 0, [], "void", [ "pointer" ]);
  }
  static get _CalculateLayoutInputVertical() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "CalculateLayoutInputVertical", 0, [], "void", [ "pointer" ]);
  }
  static get _get_minWidth() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_minWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_preferredWidth() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_preferredWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_flexibleWidth() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_flexibleWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_minHeight() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_minHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_preferredHeight() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_preferredHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_flexibleHeight() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_flexibleHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_layoutPriority() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "get_layoutPriority", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsRaycastLocationValid() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "IsRaycastLocationValid", 2, [ "UnityEngine.Vector2", "UnityEngine.Camera" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _MapCoordinate() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "MapCoordinate", 2, [ "UnityEngine.Vector2", "UnityEngine.Rect" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RebuildImage() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "RebuildImage", 1, [ "UnityEngine.U2D.SpriteAtlas" ], "void", [ "pointer" ]);
  }
  static get _TrackImage() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "TrackImage", 1, [ "UnityEngine.UI.Image" ], "void", [ "pointer" ]);
  }
  static get _UnTrackImage() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "UnTrackImage", 1, [ "UnityEngine.UI.Image" ], "void", [ "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", "OnDidApplyAnimationProperties", 0, [], "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Image", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], i, "_get_sprite", null), e([ t.cache ], i, "_set_sprite", null), 
e([ t.cache ], i, "_DisableSpriteOptimizations", null), e([ t.cache ], i, "_get_overrideSprite", null), 
e([ t.cache ], i, "_set_overrideSprite", null), e([ t.cache ], i, "_get_activeSprite", null), 
e([ t.cache ], i, "_get_type", null), e([ t.cache ], i, "_set_type", null), e([ t.cache ], i, "_get_preserveAspect", null), 
e([ t.cache ], i, "_set_preserveAspect", null), e([ t.cache ], i, "_get_fillCenter", null), 
e([ t.cache ], i, "_set_fillCenter", null), e([ t.cache ], i, "_get_fillMethod", null), 
e([ t.cache ], i, "_set_fillMethod", null), e([ t.cache ], i, "_get_fillAmount", null), 
e([ t.cache ], i, "_set_fillAmount", null), e([ t.cache ], i, "_get_fillClockwise", null), 
e([ t.cache ], i, "_set_fillClockwise", null), e([ t.cache ], i, "_get_fillOrigin", null), 
e([ t.cache ], i, "_set_fillOrigin", null), e([ t.cache ], i, "_get_eventAlphaThreshold", null), 
e([ t.cache ], i, "_set_eventAlphaThreshold", null), e([ t.cache ], i, "_get_alphaHitTestMinimumThreshold", null), 
e([ t.cache ], i, "_set_alphaHitTestMinimumThreshold", null), e([ t.cache ], i, "_get_useSpriteMesh", null), 
e([ t.cache ], i, "_set_useSpriteMesh", null), e([ t.cache ], i, "__ctor", null), 
e([ t.cache ], i, "_get_defaultETC1GraphicMaterial", null), e([ t.cache ], i, "_get_mainTexture", null), 
e([ t.cache ], i, "_get_hasBorder", null), e([ t.cache ], i, "_get_pixelsPerUnitMultiplier", null), 
e([ t.cache ], i, "_set_pixelsPerUnitMultiplier", null), e([ t.cache ], i, "_get_pixelsPerUnit", null), 
e([ t.cache ], i, "_get_multipliedPixelsPerUnit", null), e([ t.cache ], i, "_get_material", null), 
e([ t.cache ], i, "_set_material", null), e([ t.cache ], i, "_OnBeforeSerialize", null), 
e([ t.cache ], i, "_OnAfterDeserialize", null), e([ t.cache ], i, "_PreserveSpriteAspectRatio", null), 
e([ t.cache ], i, "_GetDrawingDimensions", null), e([ t.cache ], i, "_SetNativeSize", null), 
e([ t.cache ], i, "_OnPopulateMesh", null), e([ t.cache ], i, "_TrackSprite", null), 
e([ t.cache ], i, "_OnEnable", null), e([ t.cache ], i, "_OnDisable", null), e([ t.cache ], i, "_UpdateMaterial", null), 
e([ t.cache ], i, "_OnCanvasHierarchyChanged", null), e([ t.cache ], i, "_GenerateSimpleSprite", null), 
e([ t.cache ], i, "_GenerateSprite", null), e([ t.cache ], i, "_GenerateSlicedSprite", null), 
e([ t.cache ], i, "_GenerateTiledSprite", null), e([ t.cache ], i, "_AddQuad", null), 
e([ t.cache ], i, "_AddQuad_vertexHelper_posMin_posMax_color_uvMin_uvMax", null), 
e([ t.cache ], i, "_GetAdjustedBorders", null), e([ t.cache ], i, "_GenerateFilledSprite", null), 
e([ t.cache ], i, "_RadialCut", null), e([ t.cache ], i, "_RadialCut_xy_cos_sin_invert_corner", null), 
e([ t.cache ], i, "_CalculateLayoutInputHorizontal", null), e([ t.cache ], i, "_CalculateLayoutInputVertical", null), 
e([ t.cache ], i, "_get_minWidth", null), e([ t.cache ], i, "_get_preferredWidth", null), 
e([ t.cache ], i, "_get_flexibleWidth", null), e([ t.cache ], i, "_get_minHeight", null), 
e([ t.cache ], i, "_get_preferredHeight", null), e([ t.cache ], i, "_get_flexibleHeight", null), 
e([ t.cache ], i, "_get_layoutPriority", null), e([ t.cache ], i, "_IsRaycastLocationValid", null), 
e([ t.cache ], i, "_MapCoordinate", null), e([ t.cache ], i, "_RebuildImage", null), 
e([ t.cache ], i, "_TrackImage", null), e([ t.cache ], i, "_UnTrackImage", null), 
e([ t.cache ], i, "_OnDidApplyAnimationProperties", null), e([ t.cache ], i, "__cctor", null), 
Il2Cpp.Api.Image = i;

},{"decorator-cache-getter":513}],201:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UI_Image = void 0;

const e = require("../../../../../../../Material/class"), t = require("../class");

class i extends t.UnityEngine_UI_MaskableGraphic_Impl {
  s_ETC1DefaultUI=new e.UnityEngine_Material_Impl(lfv(this.handle, "s_ETC1DefaultUI"));
  m_Sprite=lfv(this.handle, "m_Sprite");
  m_OverrideSprite=lfv(this.handle, "m_OverrideSprite");
  m_Type=lfv(this.handle, "m_Type");
  m_PreserveAspect=readBoolean(lfv(this.handle, "m_PreserveAspect"));
  m_FillCenter=readBoolean(lfv(this.handle, "m_FillCenter"));
  m_FillMethod=lfv(this.handle, "m_FillMethod");
  m_FillAmount=readSingle(lfv(this.handle, "m_FillAmount"));
  m_FillClockwise=readBoolean(lfv(this.handle, "m_FillClockwise"));
  m_FillOrigin=lfv(this.handle, "m_FillOrigin").toInt32();
  m_AlphaHitTestMinimumThreshold=readSingle(lfv(this.handle, "m_AlphaHitTestMinimumThreshold"));
  m_Tracked=readBoolean(lfv(this.handle, "m_Tracked"));
  m_UseSpriteMesh=readBoolean(lfv(this.handle, "m_UseSpriteMesh"));
  m_PixelsPerUnitMultiplier=readSingle(lfv(this.handle, "m_PixelsPerUnitMultiplier"));
  m_CachedReferencePixelsPerUnit=readSingle(lfv(this.handle, "m_CachedReferencePixelsPerUnit"));
  s_VertScratch=lfv(this.handle, "s_VertScratch");
  s_UVScratch=lfv(this.handle, "s_UVScratch");
  s_Xy=lfv(this.handle, "s_Xy");
  s_Uv=lfv(this.handle, "s_Uv");
  s_Initialized=lfv(this.handle, "s_Initialized");
  _methods={};
  _fields={};
  constructor(e) {
    super(e);
    let t = Il2Cpp.Domain.assembly("UnityEngine.UI").image.class("UnityEngine.UI.Image");
    t.methods.forEach((e => {
      Reflect.set(this._methods, e.name, e.invoke.apply(this.handle));
    })), t.fields.forEach((e => {
      Reflect.set(this._fields, e.name, e.value);
    }));
  }
  get_sprite() {
    return Il2Cpp.Api.Image._get_sprite(this.handle);
  }
  set_sprite(e) {
    return Il2Cpp.Api.Image._set_sprite(this.handle, e);
  }
  DisableSpriteOptimizations() {
    return Il2Cpp.Api.Image._DisableSpriteOptimizations(this.handle);
  }
  get_overrideSprite() {
    return Il2Cpp.Api.Image._get_overrideSprite(this.handle);
  }
  set_overrideSprite(e) {
    return Il2Cpp.Api.Image._set_overrideSprite(this.handle, e);
  }
  get_activeSprite() {
    return Il2Cpp.Api.Image._get_activeSprite(this.handle);
  }
  get_type() {
    return Il2Cpp.Api.Image._get_type(this.handle);
  }
  set_type(e) {
    return Il2Cpp.Api.Image._set_type(this.handle, e);
  }
  get_preserveAspect() {
    return Il2Cpp.Api.Image._get_preserveAspect(this.handle);
  }
  set_preserveAspect(e) {
    return Il2Cpp.Api.Image._set_preserveAspect(this.handle, e);
  }
  get_fillCenter() {
    return Il2Cpp.Api.Image._get_fillCenter(this.handle);
  }
  set_fillCenter(e) {
    return Il2Cpp.Api.Image._set_fillCenter(this.handle, e);
  }
  get_fillMethod() {
    return Il2Cpp.Api.Image._get_fillMethod(this.handle);
  }
  set_fillMethod(e) {
    return Il2Cpp.Api.Image._set_fillMethod(this.handle, e);
  }
  get_fillAmount() {
    return readSingle(Il2Cpp.Api.Image._get_fillAmount(this.handle));
  }
  set_fillAmount(e) {
    return Il2Cpp.Api.Image._set_fillAmount(this.handle, e);
  }
  get_fillClockwise() {
    return Il2Cpp.Api.Image._get_fillClockwise(this.handle);
  }
  set_fillClockwise(e) {
    return Il2Cpp.Api.Image._set_fillClockwise(this.handle, e);
  }
  get_fillOrigin() {
    return Il2Cpp.Api.Image._get_fillOrigin(this.handle);
  }
  set_fillOrigin(e) {
    return Il2Cpp.Api.Image._set_fillOrigin(this.handle, e);
  }
  get_eventAlphaThreshold() {
    return Il2Cpp.Api.Image._get_eventAlphaThreshold(this.handle);
  }
  set_eventAlphaThreshold(e) {
    return Il2Cpp.Api.Image._set_eventAlphaThreshold(this.handle, e);
  }
  get_alphaHitTestMinimumThreshold() {
    return Il2Cpp.Api.Image._get_alphaHitTestMinimumThreshold(this.handle);
  }
  set_alphaHitTestMinimumThreshold(e) {
    return Il2Cpp.Api.Image._set_alphaHitTestMinimumThreshold(this.handle, e);
  }
  get_useSpriteMesh() {
    return Il2Cpp.Api.Image._get_useSpriteMesh(this.handle);
  }
  set_useSpriteMesh(e) {
    return Il2Cpp.Api.Image._set_useSpriteMesh(this.handle, e);
  }
  _ctor_Image() {
    return Il2Cpp.Api.Image.__ctor(this.handle);
  }
  static get_defaultETC1GraphicMaterial() {
    return Il2Cpp.Api.Image._get_defaultETC1GraphicMaterial();
  }
  get_mainTexture() {
    return Il2Cpp.Api.Image._get_mainTexture(this.handle);
  }
  get_hasBorder() {
    return Il2Cpp.Api.Image._get_hasBorder(this.handle);
  }
  get_pixelsPerUnitMultiplier() {
    return Il2Cpp.Api.Image._get_pixelsPerUnitMultiplier(this.handle);
  }
  set_pixelsPerUnitMultiplier(e) {
    return Il2Cpp.Api.Image._set_pixelsPerUnitMultiplier(this.handle, e);
  }
  get_pixelsPerUnit() {
    return readSingle(Il2Cpp.Api.Image._get_pixelsPerUnit(this.handle));
  }
  get_multipliedPixelsPerUnit() {
    return Il2Cpp.Api.Image._get_multipliedPixelsPerUnit(this.handle);
  }
  get_material() {
    return Il2Cpp.Api.Image._get_material(this.handle);
  }
  set_material(e) {
    return Il2Cpp.Api.Image._set_material(this.handle, e);
  }
  OnBeforeSerialize() {
    return Il2Cpp.Api.Image._OnBeforeSerialize(this.handle);
  }
  OnAfterDeserialize() {
    return Il2Cpp.Api.Image._OnAfterDeserialize(this.handle);
  }
  PreserveSpriteAspectRatio(e, t) {
    return Il2Cpp.Api.Image._PreserveSpriteAspectRatio(this.handle, e, t);
  }
  GetDrawingDimensions(e) {
    return Il2Cpp.Api.Image._GetDrawingDimensions(this.handle, e);
  }
  SetNativeSize() {
    return Il2Cpp.Api.Image._SetNativeSize(this.handle);
  }
  OnPopulateMesh(e) {
    return Il2Cpp.Api.Image._OnPopulateMesh(this.handle, e);
  }
  TrackSprite() {
    return Il2Cpp.Api.Image._TrackSprite(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.Image._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.Image._OnDisable(this.handle);
  }
  UpdateMaterial() {
    return Il2Cpp.Api.Image._UpdateMaterial(this.handle);
  }
  OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.Image._OnCanvasHierarchyChanged(this.handle);
  }
  GenerateSimpleSprite(e, t) {
    return Il2Cpp.Api.Image._GenerateSimpleSprite(this.handle, e, t);
  }
  GenerateSprite(e, t) {
    return Il2Cpp.Api.Image._GenerateSprite(this.handle, e, t);
  }
  GenerateSlicedSprite(e) {
    return Il2Cpp.Api.Image._GenerateSlicedSprite(this.handle, e);
  }
  GenerateTiledSprite(e) {
    return Il2Cpp.Api.Image._GenerateTiledSprite(this.handle, e);
  }
  static AddQuad(e, t, i, l) {
    return Il2Cpp.Api.Image._AddQuad(e, t, i, l);
  }
  static AddQuad_6(e, t, i, l, r, a) {
    return Il2Cpp.Api.Image._AddQuad(e, t, i, l, r, a);
  }
  GetAdjustedBorders(e, t) {
    return Il2Cpp.Api.Image._GetAdjustedBorders(this.handle, e, t);
  }
  GenerateFilledSprite(e, t) {
    return Il2Cpp.Api.Image._GenerateFilledSprite(this.handle, e, t);
  }
  static RadialCut(e, t, i, l, r) {
    return Il2Cpp.Api.Image._RadialCut(e, t, i, l, r);
  }
  static RadialCut_5(e, t, i, l, r) {
    return Il2Cpp.Api.Image._RadialCut(e, t, i, l, r);
  }
  CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.Image._CalculateLayoutInputHorizontal(this.handle);
  }
  CalculateLayoutInputVertical() {
    return Il2Cpp.Api.Image._CalculateLayoutInputVertical(this.handle);
  }
  get_minWidth() {
    return readSingle(Il2Cpp.Api.Image._get_minWidth(this.handle));
  }
  get_preferredWidth() {
    return readSingle(Il2Cpp.Api.Image._get_preferredWidth(this.handle));
  }
  get_flexibleWidth() {
    return readSingle(Il2Cpp.Api.Image._get_flexibleWidth(this.handle));
  }
  get_minHeight() {
    return readSingle(Il2Cpp.Api.Image._get_minHeight(this.handle));
  }
  get_preferredHeight() {
    return readSingle(Il2Cpp.Api.Image._get_preferredHeight(this.handle));
  }
  get_flexibleHeight() {
    return readSingle(Il2Cpp.Api.Image._get_flexibleHeight(this.handle));
  }
  get_layoutPriority() {
    return Il2Cpp.Api.Image._get_layoutPriority(this.handle);
  }
  IsRaycastLocationValid(e, t) {
    return Il2Cpp.Api.Image._IsRaycastLocationValid(this.handle, e, t);
  }
  MapCoordinate(e, t) {
    return Il2Cpp.Api.Image._MapCoordinate(this.handle, e, t);
  }
  static RebuildImage(e) {
    return Il2Cpp.Api.Image._RebuildImage(e);
  }
  static TrackImage(e) {
    return Il2Cpp.Api.Image._TrackImage(e.handle);
  }
  static UnTrackImage(e) {
    return Il2Cpp.Api.Image._UnTrackImage(e.handle);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.Image._OnDidApplyAnimationProperties(this.handle);
  }
  static _cctor_Image() {
    return Il2Cpp.Api.Image.__cctor();
  }
}

exports.UI_Image = i, Il2Cpp.UI_Image = i;

},{"../../../../../../../Material/class":283,"../class":222}],202:[function(require,module,exports){
"use strict";

var t, i, o, e, r, l, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Type = exports.FillMethod = exports.OriginVertical = exports.OriginHorizontal = exports.Origin360 = exports.Origin180 = exports.Origin90 = void 0, 
function(t) {
  t[t.Bottom = 0] = "Bottom", t[t.Left = 1] = "Left", t[t.Top = 2] = "Top", t[t.Right = 3] = "Right";
}(t || (t = {})), exports.Origin90 = t, function(t) {
  t[t.Bottom = 0] = "Bottom", t[t.Left = 1] = "Left", t[t.Top = 2] = "Top", t[t.Right = 3] = "Right";
}(i || (i = {})), exports.Origin180 = i, function(t) {
  t[t.Bottom = 0] = "Bottom", t[t.Left = 1] = "Left", t[t.Top = 2] = "Top", t[t.Right = 3] = "Right";
}(o || (o = {})), exports.Origin360 = o, function(t) {
  t[t.Left = 0] = "Left", t[t.Right = 1] = "Right";
}(e || (e = {})), exports.OriginHorizontal = e, function(t) {
  t[t.Bottom = 0] = "Bottom", t[t.Top = 1] = "Top";
}(r || (r = {})), exports.OriginVertical = r, function(t) {
  t[t.Horizontal = 0] = "Horizontal", t[t.Vertical = 1] = "Vertical", t[t.Radial90 = 2] = "Radial90", 
  t[t.Radial180 = 3] = "Radial180", t[t.Radial360 = 4] = "Radial360";
}(l || (l = {})), exports.FillMethod = l, function(t) {
  t[t.Simple = 0] = "Simple", t[t.Sliced = 1] = "Sliced", t[t.Tiled = 2] = "Tiled", 
  t[t.Filled = 3] = "Filled";
}(n || (n = {})), exports.Type = n;

},{}],203:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../../../../../../../../../../utils/common"), e = () => {
  let e = new Map, n = new Map;
  n.set("SETTINGS", "设置"), n.set("選擇角色", "选择角色"), n.set("ADDED", "已添加"), n.set("ON", "开"), 
  n.set("Loading...", "加载中..."), n.set("More games", "更多游戏");
  try {
    LOGD("Enable TMP_Text Hook".padEnd(30, " ") + "| class : " + findClass("TMP_Text")), 
    l = !1, A(find_method("Unity.TextMeshPro", "TMP_Text", "get_transform", 0), ((e, s) => {
      let i = "|" + readU16(callFunction([ "Unity.TextMeshPro", "TMP_Text", "get_text", 0 ], e[0])) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(e[0]), 30) && (r(e[0], "TMP_Text"), LOGD("\n[TMP_Text]  " + e[0] + "\t" + i + "\t" + getPlatformCtx(s).lr), 
      0 != n.size)) {
        let t = n.get(i.substring(1, i.length - 1));
        null != t && (callFunction(find_method("Unity.TextMeshPro", "TMP_Text", "set_text", 1), e[0], allocCStr(t)), 
        LOGH(" \n\t {REP} " + i + " ---\x3e " + t)), null != l && 1 == l && showGameObject(e[0]);
      }
    }));
  } catch {
    LOGE("Unity.TextMeshPro.TMP_Text.get_transform NOT FOUND !");
  }
  var l;
  try {
    LOGD("Enable TextMeshPro Hook".padEnd(30, " ") + "| class : " + findClass("TextMeshPro")), 
    A(Il2Cpp.Api.TextMeshPro._get_transform, (e => {
      let l = "|" + new Il2Cpp.TMP_Text(e[0]).get_text() + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(e[0])) && (r(e[0], "TextMeshPro"), LOG("\n[TextMeshPro]  " + e[0] + "\t" + l, LogColor.C35), 
      0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (callFunction(find_method("Unity.TextMeshPro", "TextMeshPro", "set_text", 1), e[0], allocCStr(t)), 
        LOGH(" \n\t {REP} " + l + " ---\x3e " + t));
      }
    }));
  } catch {
    LOGE("Unity.TextMeshPro.TextMeshPro.get_transform NOT FOUND !");
  }
  try {
    LOGD("Enable Text Hook".padEnd(30, " ") + "| class : " + findClass("Text")), function(e) {
      null == e && (e = !1);
      A(Il2Cpp.Api.Text._get_text, (t => {
        r(t[0], "Text"), e && new Il2Cpp.Component(t[0]).get_gameObject().showSelf();
      }), ((e, l) => {
        let r = "|" + readU16(e) + "|";
        if (-1 != (0, t.filterDuplicateOBJ)(String(e)) && (getPlatformCtx, LOGG("\n[Text_Get]  " + getPlatformCtxWithArgV(l, 0) + "\t" + r), 
        0 != n.size)) {
          let t = n.get(r.substring(1, r.length - 1));
          null != t && (e.replace(allocUStr(t)), LOGH(` \n\t {REP} ${r} ---\x3e ${t}`));
        }
      })), A(Il2Cpp.Api.Text._set_text, ((l, s) => {
        if (-1 == (0, t.filterDuplicateOBJ)(String(l[1]))) return;
        r(l[0], "Text");
        let i = "|" + readU16(l[1]) + "|";
        if (LOGO("\n[Text_Set]  " + l[0] + "\t" + i), 0 != n.size) {
          let t = n.get(i.substring(1, i.length - 1));
          null != t && (l[1] = allocUStr(t), LOGH(` \n\t {REP} ${i} ---\x3e ${t}`)), e && new Il2Cpp.Component(l[0]).get_gameObject().showSelf();
        }
      }));
    }(!1);
  } catch {
    LOGE("UnityEngine.UI.Text.get_text/set_text NOT FOUND!");
  }
  try {
    LOGD("Enable TrackText Hook".padEnd(30, " ") + "| class : " + findClass("FontUpdateTracker")), 
    A(find_method("UnityEngine.UI", "FontUpdateTracker", "TrackText", 1), (e => {
      let l = "|" + callFunctionRUS([ "UnityEngine.UI", "Text", "get_text", 0 ], e[0]) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(callFunctionRUS([ "UnityEngine.UI", "Text", "get_text", 0 ], e[0]))) && (LOGD(`\n[FontUpdateTracker] ${e[0]} \t ${l}`), 
      r(e[0], "Text"), 0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (e[1] = allocUStr(t), LOGH(` \n\t {REP} ${l} ---\x3e ${t}`));
      }
    }));
  } catch {
    LOGE("UnityEngine.UI.FontUpdateTracker.TrackText NOT FOUND !");
  }
  try {
    LOGD("Enable Print Hook".padEnd(30, " ") + "| class : " + findClass("NGUIText")), 
    A(find_method("Assembly-CSharp", "NGUIText", "Print", 4), (e => {
      let l = "|" + readU16(e[0]) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(l) && (LOGD(`\n[NGUIText] ${e[0]} \t ${l}`), 
      r(e[0], "Text", !0), 0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (e[0] = allocUStr(t), LOGH(` \n\t {REP} ${l} ---\x3e ${t}`));
      }
    }));
  } catch {
    LOGE("NGUIText.Print NOT FOUND !");
  }
  function r(t, n, l = !1) {
    if (null == e.get(n) && (e.set(n, 1), getTypeParent(t)), l) try {
      let e = t.add(2 * p_size), n = Memory.scanSync(e, (.5 * e.readInt() + 3) * p_size, "00 00 00 00")[0].address;
      LOGO("\t" + hexdump(e.add(p_size), {
        length: n.sub(e).sub(p_size).toInt32(),
        header: !1
      }));
    } catch (t) {}
  }
};

globalThis.B_Text = e;

},{"../../../../../../../../../../../utils/common":502}],204:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum"), require("./export");

},{"./api":200,"./class":201,"./enum":202,"./export":203}],205:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var n, i = arguments.length, s = i < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, o); else for (var a = e.length - 1; a >= 0; a--) (n = e[a]) && (s = (i < 3 ? n(s) : i > 3 ? n(t, r, s) : n(t, r)) || s);
  return i > 3 && s && Object.defineProperty(t, r, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _get_sortingLayerID() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_sortingLayerID", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sortingLayerID() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "set_sortingLayerID", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_sortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_sortingOrder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "set_sortingOrder", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_autoSizeTextContainer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "set_autoSizeTextContainer", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_textContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_textContainer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_transform() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_transform", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_renderer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_renderer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_mesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_mesh", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_meshFilter() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_meshFilter", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_maskType() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "get_maskType", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_maskType() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "set_maskType", 1, [ "TMPro.MaskingTypes" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetMask() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMask", 2, [ "TMPro.MaskingTypes", "UnityEngine.Vector4" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetMask_type_maskCoords_softnessX_softnessY() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMask", 4, [ "TMPro.MaskingTypes", "UnityEngine.Vector4", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetVerticesDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetVerticesDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetLayoutDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetLayoutDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMaterialDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMaterialDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetAllDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetAllDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _Rebuild() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "Rebuild", 1, [ "UnityEngine.UI.CanvasUpdate" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateMaterial", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateMeshPadding() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateMeshPadding", 0, [], "void", [ "pointer" ]);
  }
  static get _ForceMeshUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "ForceMeshUpdate", 2, [ "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetTextInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetTextInfo", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ClearMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "ClearMesh", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _add_OnPreRenderText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "add_OnPreRenderText", 1, [ "System.Action<TMPro.TMP_TextInfo>" ], "void", [ "pointer", "pointer" ]);
  }
  static get _remove_OnPreRenderText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "remove_OnPreRenderText", 1, [ "System.Action<TMPro.TMP_TextInfo>" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateGeometry() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateGeometry", 2, [ "UnityEngine.Mesh", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _UpdateVertexData() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateVertexData", 1, [ "TMPro.TMP_VertexDataUpdateFlags" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateVertexData_() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateVertexData", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateFontAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateFontAsset", 0, [], "void", [ "pointer" ]);
  }
  static get _CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "CalculateLayoutInputHorizontal", 0, [], "void", [ "pointer" ]);
  }
  static get _CalculateLayoutInputVertical() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "CalculateLayoutInputVertical", 0, [], "void", [ "pointer" ]);
  }
  static get _Awake() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "Awake", 0, [], "void", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDestroy() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnDestroy", 0, [], "void", [ "pointer" ]);
  }
  static get _LoadFontAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "LoadFontAsset", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateEnvMapMatrix() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateEnvMapMatrix", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMask_maskType() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMask", 1, [ "TMPro.MaskingTypes" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetMaskCoordinates() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMaskCoordinates", 1, [ "UnityEngine.Vector4" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetMaskCoordinates_coords_softX_softY() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMaskCoordinates", 3, [ "UnityEngine.Vector4", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _EnableMasking() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "EnableMasking", 0, [], "void", [ "pointer" ]);
  }
  static get _DisableMasking() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "DisableMasking", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateMask() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateMask", 0, [], "void", [ "pointer" ]);
  }
  static get _GetMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetMaterial", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetMaterials", 1, [ "UnityEngine.Material[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetSharedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetSharedMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetSharedMaterials", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetSharedMaterials", 1, [ "UnityEngine.Material[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineThickness() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetOutlineThickness", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetFaceColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetFaceColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetOutlineColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _CreateMaterialInstance() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "CreateMaterialInstance", 0, [], "void", [ "pointer" ]);
  }
  static get _SetShaderDepth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetShaderDepth", 0, [], "void", [ "pointer" ]);
  }
  static get _SetCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetCulling", 0, [], "void", [ "pointer" ]);
  }
  static get _SetPerspectiveCorrection() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetPerspectiveCorrection", 0, [], "void", [ "pointer" ]);
  }
  static get _SetArraySizes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetArraySizes", 1, [ "TMPro.TMP_Text.UnicodeChar[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ComputeMarginSize() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "ComputeMarginSize", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnDidApplyAnimationProperties", 0, [], "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnTransformParentChanged", 0, [], "void", [ "pointer" ]);
  }
  static get _OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnRectTransformDimensionsChange", 0, [], "void", [ "pointer" ]);
  }
  static get _InternalUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "InternalUpdate", 0, [], "void", [ "pointer" ]);
  }
  static get _OnPreRenderObject() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "OnPreRenderObject", 0, [], "void", [ "pointer" ]);
  }
  static get _GenerateTextMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GenerateTextMesh", 0, [], "void", [ "pointer" ]);
  }
  static get _GetTextContainerLocalCorners() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetTextContainerLocalCorners", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetMeshFilters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetMeshFilters", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetActiveSubMeshes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetActiveSubMeshes", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetActiveSubTextObjectRenderers() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "SetActiveSubTextObjectRenderers", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _DestroySubMeshObjects() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "DestroySubMeshObjects", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateSubMeshSortingLayerID() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateSubMeshSortingLayerID", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateSubMeshSortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateSubMeshSortingOrder", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetCompoundBounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "GetCompoundBounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _UpdateSDFScale() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", "UpdateSDFScale", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshPro", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], r, "_get_sortingLayerID", null), e([ t.cache ], r, "_set_sortingLayerID", null), 
e([ t.cache ], r, "_get_sortingOrder", null), e([ t.cache ], r, "_set_sortingOrder", null), 
e([ t.cache ], r, "_get_autoSizeTextContainer", null), e([ t.cache ], r, "_set_autoSizeTextContainer", null), 
e([ t.cache ], r, "_get_textContainer", null), e([ t.cache ], r, "_get_transform", null), 
e([ t.cache ], r, "_get_renderer", null), e([ t.cache ], r, "_get_mesh", null), 
e([ t.cache ], r, "_get_meshFilter", null), e([ t.cache ], r, "_get_maskType", null), 
e([ t.cache ], r, "_set_maskType", null), e([ t.cache ], r, "_SetMask", null), e([ t.cache ], r, "_SetMask_type_maskCoords_softnessX_softnessY", null), 
e([ t.cache ], r, "_SetVerticesDirty", null), e([ t.cache ], r, "_SetLayoutDirty", null), 
e([ t.cache ], r, "_SetMaterialDirty", null), e([ t.cache ], r, "_SetAllDirty", null), 
e([ t.cache ], r, "_Rebuild", null), e([ t.cache ], r, "_UpdateMaterial", null), 
e([ t.cache ], r, "_UpdateMeshPadding", null), e([ t.cache ], r, "_ForceMeshUpdate", null), 
e([ t.cache ], r, "_GetTextInfo", null), e([ t.cache ], r, "_ClearMesh", null), 
e([ t.cache ], r, "_add_OnPreRenderText", null), e([ t.cache ], r, "_remove_OnPreRenderText", null), 
e([ t.cache ], r, "_UpdateGeometry", null), e([ t.cache ], r, "_UpdateVertexData", null), 
e([ t.cache ], r, "_UpdateVertexData_", null), e([ t.cache ], r, "_UpdateFontAsset", null), 
e([ t.cache ], r, "_CalculateLayoutInputHorizontal", null), e([ t.cache ], r, "_CalculateLayoutInputVertical", null), 
e([ t.cache ], r, "_Awake", null), e([ t.cache ], r, "_OnEnable", null), e([ t.cache ], r, "_OnDisable", null), 
e([ t.cache ], r, "_OnDestroy", null), e([ t.cache ], r, "_LoadFontAsset", null), 
e([ t.cache ], r, "_UpdateEnvMapMatrix", null), e([ t.cache ], r, "_SetMask_maskType", null), 
e([ t.cache ], r, "_SetMaskCoordinates", null), e([ t.cache ], r, "_SetMaskCoordinates_coords_softX_softY", null), 
e([ t.cache ], r, "_EnableMasking", null), e([ t.cache ], r, "_DisableMasking", null), 
e([ t.cache ], r, "_UpdateMask", null), e([ t.cache ], r, "_GetMaterial", null), 
e([ t.cache ], r, "_GetMaterials", null), e([ t.cache ], r, "_SetSharedMaterial", null), 
e([ t.cache ], r, "_GetSharedMaterials", null), e([ t.cache ], r, "_SetSharedMaterials", null), 
e([ t.cache ], r, "_SetOutlineThickness", null), e([ t.cache ], r, "_SetFaceColor", null), 
e([ t.cache ], r, "_SetOutlineColor", null), e([ t.cache ], r, "_CreateMaterialInstance", null), 
e([ t.cache ], r, "_SetShaderDepth", null), e([ t.cache ], r, "_SetCulling", null), 
e([ t.cache ], r, "_SetPerspectiveCorrection", null), e([ t.cache ], r, "_SetArraySizes", null), 
e([ t.cache ], r, "_ComputeMarginSize", null), e([ t.cache ], r, "_OnDidApplyAnimationProperties", null), 
e([ t.cache ], r, "_OnTransformParentChanged", null), e([ t.cache ], r, "_OnRectTransformDimensionsChange", null), 
e([ t.cache ], r, "_InternalUpdate", null), e([ t.cache ], r, "_OnPreRenderObject", null), 
e([ t.cache ], r, "_GenerateTextMesh", null), e([ t.cache ], r, "_GetTextContainerLocalCorners", null), 
e([ t.cache ], r, "_SetMeshFilters", null), e([ t.cache ], r, "_SetActiveSubMeshes", null), 
e([ t.cache ], r, "_SetActiveSubTextObjectRenderers", null), e([ t.cache ], r, "_DestroySubMeshObjects", null), 
e([ t.cache ], r, "_UpdateSubMeshSortingLayerID", null), e([ t.cache ], r, "_UpdateSubMeshSortingOrder", null), 
e([ t.cache ], r, "_GetCompoundBounds", null), e([ t.cache ], r, "_UpdateSDFScale", null), 
e([ t.cache ], r, "__ctor", null), e([ t.cache ], r, "__cctor", null), Il2Cpp.Api.TextMeshPro = r;

},{"decorator-cache-getter":513}],206:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.TMPro_TextMeshProUGUI_Impl = void 0;

const e = require("../class");

class t extends e.TMPro_TMP_Text_Impl {
  m_isRebuildingLayout=lfv(this.handle, "m_isRebuildingLayout");
  m_DelayedGraphicRebuild=lfv(this.handle, "m_DelayedGraphicRebuild");
  m_DelayedMaterialRebuild=lfv(this.handle, "m_DelayedMaterialRebuild");
  m_ClipRect=lfv(this.handle, "m_ClipRect");
  m_ValidRect=lfv(this.handle, "m_ValidRect");
  m_hasFontAssetChanged=lfv(this.handle, "m_hasFontAssetChanged");
  m_subTextObjects=lfv(this.handle, "m_subTextObjects");
  m_previousLossyScaleY=lfv(this.handle, "m_previousLossyScaleY");
  m_RectTransformCorners=lfv(this.handle, "m_RectTransformCorners");
  m_canvasRenderer=lfv(this.handle, "m_canvasRenderer");
  m_canvas=lfv(this.handle, "m_canvas");
  m_CanvasScaleFactor=lfv(this.handle, "m_CanvasScaleFactor");
  m_isFirstAllocation=lfv(this.handle, "m_isFirstAllocation");
  m_max_characters=lfv(this.handle, "m_max_characters");
  m_baseMaterial=lfv(this.handle, "m_baseMaterial");
  m_isScrollRegionSet=lfv(this.handle, "m_isScrollRegionSet");
  m_maskOffset=lfv(this.handle, "m_maskOffset");
  m_EnvMapMatrix=lfv(this.handle, "m_EnvMapMatrix");
  m_isRegisteredForEvents=lfv(this.handle, "m_isRegisteredForEvents");
  k_GenerateTextMarker=lfv(this.handle, "k_GenerateTextMarker");
  k_SetArraySizesMarker=lfv(this.handle, "k_SetArraySizesMarker");
  k_GenerateTextPhaseIMarker=lfv(this.handle, "k_GenerateTextPhaseIMarker");
  k_ParseMarkupTextMarker=lfv(this.handle, "k_ParseMarkupTextMarker");
  k_CharacterLookupMarker=lfv(this.handle, "k_CharacterLookupMarker");
  k_HandleGPOSFeaturesMarker=lfv(this.handle, "k_HandleGPOSFeaturesMarker");
  k_CalculateVerticesPositionMarker=lfv(this.handle, "k_CalculateVerticesPositionMarker");
  k_ComputeTextMetricsMarker=lfv(this.handle, "k_ComputeTextMetricsMarker");
  k_HandleVisibleCharacterMarker=lfv(this.handle, "k_HandleVisibleCharacterMarker");
  k_HandleWhiteSpacesMarker=lfv(this.handle, "k_HandleWhiteSpacesMarker");
  k_HandleHorizontalLineBreakingMarker=lfv(this.handle, "k_HandleHorizontalLineBreakingMarker");
  k_HandleVerticalLineBreakingMarker=lfv(this.handle, "k_HandleVerticalLineBreakingMarker");
  k_SaveGlyphVertexDataMarker=lfv(this.handle, "k_SaveGlyphVertexDataMarker");
  k_ComputeCharacterAdvanceMarker=lfv(this.handle, "k_ComputeCharacterAdvanceMarker");
  k_HandleCarriageReturnMarker=lfv(this.handle, "k_HandleCarriageReturnMarker");
  k_HandleLineTerminationMarker=lfv(this.handle, "k_HandleLineTerminationMarker");
  k_SavePageInfoMarker=lfv(this.handle, "k_SavePageInfoMarker");
  k_SaveProcessingStatesMarker=lfv(this.handle, "k_SaveProcessingStatesMarker");
  k_GenerateTextPhaseIIMarker=lfv(this.handle, "k_GenerateTextPhaseIIMarker");
  k_GenerateTextPhaseIIIMarker=lfv(this.handle, "k_GenerateTextPhaseIIIMarker");
  constructor(e) {
    super(e);
  }
  get_materialForRendering() {
    return Il2Cpp.Api.TextMeshProUGUI._get_materialForRendering(this.handle);
  }
  get_autoSizeTextContainer() {
    return Il2Cpp.Api.TextMeshProUGUI._get_autoSizeTextContainer(this.handle);
  }
  set_autoSizeTextContainer(e) {
    return Il2Cpp.Api.TextMeshProUGUI._set_autoSizeTextContainer(this.handle, e);
  }
  get_mesh() {
    return Il2Cpp.Api.TextMeshProUGUI._get_mesh(this.handle);
  }
  get_canvasRenderer() {
    return Il2Cpp.Api.TextMeshProUGUI._get_canvasRenderer(this.handle);
  }
  CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.TextMeshProUGUI._CalculateLayoutInputHorizontal(this.handle);
  }
  CalculateLayoutInputVertical() {
    return Il2Cpp.Api.TextMeshProUGUI._CalculateLayoutInputVertical(this.handle);
  }
  SetVerticesDirty() {
    return Il2Cpp.Api.TextMeshProUGUI._SetVerticesDirty(this.handle);
  }
  SetLayoutDirty() {
    return Il2Cpp.Api.TextMeshProUGUI._SetLayoutDirty(this.handle);
  }
  SetMaterialDirty() {
    return Il2Cpp.Api.TextMeshProUGUI._SetMaterialDirty(this.handle);
  }
  SetAllDirty() {
    return Il2Cpp.Api.TextMeshProUGUI._SetAllDirty(this.handle);
  }
  DelayedGraphicRebuild() {
    return Il2Cpp.Api.TextMeshProUGUI._DelayedGraphicRebuild(this.handle);
  }
  DelayedMaterialRebuild() {
    return Il2Cpp.Api.TextMeshProUGUI._DelayedMaterialRebuild(this.handle);
  }
  Rebuild(e) {
    return Il2Cpp.Api.TextMeshProUGUI._Rebuild(this.handle, e);
  }
  UpdateSubObjectPivot() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateSubObjectPivot(this.handle);
  }
  GetModifiedMaterial(e) {
    return Il2Cpp.Api.TextMeshProUGUI._GetModifiedMaterial(this.handle, e);
  }
  UpdateMaterial() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateMaterial(this.handle);
  }
  get_maskOffset() {
    return Il2Cpp.Api.TextMeshProUGUI._get_maskOffset(this.handle);
  }
  set_maskOffset(e) {
    return Il2Cpp.Api.TextMeshProUGUI._set_maskOffset(this.handle, e);
  }
  RecalculateClipping() {
    return Il2Cpp.Api.TextMeshProUGUI._RecalculateClipping(this.handle);
  }
  Cull(e, t) {
    return Il2Cpp.Api.TextMeshProUGUI._Cull(this.handle, e, t);
  }
  UpdateCulling() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateCulling(this.handle);
  }
  UpdateMeshPadding() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateMeshPadding(this.handle);
  }
  GetTextInfo(e) {
    return Il2Cpp.Api.TextMeshProUGUI._GetTextInfo(this.handle, e);
  }
  ClearMesh() {
    return Il2Cpp.Api.TextMeshProUGUI._ClearMesh(this.handle);
  }
  UpdateVertexData(e) {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateVertexData(this.handle, e);
  }
  UpdateVertexData_0() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateVertexData(this.handle);
  }
  UpdateFontAsset() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateFontAsset(this.handle);
  }
  Awake() {
    return Il2Cpp.Api.TextMeshProUGUI._Awake(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.TextMeshProUGUI._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.TextMeshProUGUI._OnDisable(this.handle);
  }
  OnDestroy() {
    return Il2Cpp.Api.TextMeshProUGUI._OnDestroy(this.handle);
  }
  LoadFontAsset() {
    return Il2Cpp.Api.TextMeshProUGUI._LoadFontAsset(this.handle);
  }
  GetCanvas() {
    return Il2Cpp.Api.TextMeshProUGUI._GetCanvas(this.handle);
  }
  UpdateEnvMapMatrix() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateEnvMapMatrix(this.handle);
  }
  EnableMasking() {
    return Il2Cpp.Api.TextMeshProUGUI._EnableMasking(this.handle);
  }
  DisableMasking() {
    return Il2Cpp.Api.TextMeshProUGUI._DisableMasking(this.handle);
  }
  UpdateMask() {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateMask(this.handle);
  }
  GetMaterial(e) {
    return Il2Cpp.Api.TextMeshProUGUI._GetMaterial(this.handle, e);
  }
  GetMaterials(e) {
    return Il2Cpp.Api.TextMeshProUGUI._GetMaterials(this.handle, e);
  }
  SetSharedMaterial(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetSharedMaterial(this.handle, e);
  }
  GetSharedMaterials() {
    return Il2Cpp.Api.TextMeshProUGUI._GetSharedMaterials(this.handle);
  }
  SetSharedMaterials(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetSharedMaterials(this.handle, e);
  }
  SetOutlineThickness(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetOutlineThickness(this.handle, e);
  }
  SetFaceColor(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetFaceColor(this.handle, e);
  }
  SetOutlineColor(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetOutlineColor(this.handle, e);
  }
  SetShaderDepth() {
    return Il2Cpp.Api.TextMeshProUGUI._SetShaderDepth(this.handle);
  }
  SetCulling() {
    return Il2Cpp.Api.TextMeshProUGUI._SetCulling(this.handle);
  }
  SetPerspectiveCorrection() {
    return Il2Cpp.Api.TextMeshProUGUI._SetPerspectiveCorrection(this.handle);
  }
  SetMeshArrays(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetMeshArrays(this.handle, e);
  }
  ComputeMarginSize() {
    return Il2Cpp.Api.TextMeshProUGUI._ComputeMarginSize(this.handle);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.TextMeshProUGUI._OnDidApplyAnimationProperties(this.handle);
  }
  OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.TextMeshProUGUI._OnCanvasHierarchyChanged(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.TextMeshProUGUI._OnTransformParentChanged(this.handle);
  }
  OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.TextMeshProUGUI._OnRectTransformDimensionsChange(this.handle);
  }
  InternalUpdate() {
    return Il2Cpp.Api.TextMeshProUGUI._InternalUpdate(this.handle);
  }
  OnPreRenderCanvas() {
    return Il2Cpp.Api.TextMeshProUGUI._OnPreRenderCanvas(this.handle);
  }
  GenerateTextMesh() {
    return Il2Cpp.Api.TextMeshProUGUI._GenerateTextMesh(this.handle);
  }
  GetTextContainerLocalCorners_0() {
    return Il2Cpp.Api.TextMeshProUGUI._GetTextContainerLocalCorners(this.handle);
  }
  SetActiveSubMeshes(e) {
    return Il2Cpp.Api.TextMeshProUGUI._SetActiveSubMeshes(this.handle, e);
  }
  DestroySubMeshObjects() {
    return Il2Cpp.Api.TextMeshProUGUI._DestroySubMeshObjects(this.handle);
  }
  GetCompoundBounds() {
    return Il2Cpp.Api.TextMeshProUGUI._GetCompoundBounds(this.handle);
  }
  GetCanvasSpaceClippingRect() {
    return Il2Cpp.Api.TextMeshProUGUI._GetCanvasSpaceClippingRect(this.handle);
  }
  UpdateSDFScale(e) {
    return Il2Cpp.Api.TextMeshProUGUI._UpdateSDFScale(this.handle, e);
  }
  _ctor() {
    return Il2Cpp.Api.TextMeshProUGUI.__ctor(this.handle);
  }
  static _cctor() {
    return Il2Cpp.Api.TextMeshProUGUI.__cctor();
  }
}

exports.TMPro_TextMeshProUGUI_Impl = t, Il2Cpp.TextMeshProUGUI = t;

},{"../class":214}],207:[function(require,module,exports){
"use strict";

},{}],208:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":205,"./class":206,"./export":207}],209:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var i, n = arguments.length, a = n < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, o); else for (var p = e.length - 1; p >= 0; p--) (i = e[p]) && (a = (n < 3 ? i(a) : n > 3 ? i(t, r, a) : i(t, r)) || a);
  return n > 3 && a && Object.defineProperty(t, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _get_materialForRendering() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "get_materialForRendering", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "get_autoSizeTextContainer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "set_autoSizeTextContainer", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_mesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "get_mesh", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_canvasRenderer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "get_canvasRenderer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "CalculateLayoutInputHorizontal", 0, [], "void", [ "pointer" ]);
  }
  static get _CalculateLayoutInputVertical() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "CalculateLayoutInputVertical", 0, [], "void", [ "pointer" ]);
  }
  static get _SetVerticesDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetVerticesDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetLayoutDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetLayoutDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMaterialDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetMaterialDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _SetAllDirty() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetAllDirty", 0, [], "void", [ "pointer" ]);
  }
  static get _DelayedGraphicRebuild() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "DelayedGraphicRebuild", 0, [], "pointer", [ "pointer" ]);
  }
  static get _DelayedMaterialRebuild() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "DelayedMaterialRebuild", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Rebuild() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "Rebuild", 1, [ "UnityEngine.UI.CanvasUpdate" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateSubObjectPivot() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateSubObjectPivot", 0, [], "void", [ "pointer" ]);
  }
  static get _GetModifiedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetModifiedMaterial", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _UpdateMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateMaterial", 0, [], "void", [ "pointer" ]);
  }
  static get _get_maskOffset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "get_maskOffset", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_maskOffset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "set_maskOffset", 1, [ "UnityEngine.Vector4" ], "void", [ "pointer", "pointer" ]);
  }
  static get _RecalculateClipping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "RecalculateClipping", 0, [], "void", [ "pointer" ]);
  }
  static get _Cull() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "Cull", 2, [ "UnityEngine.Rect", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _UpdateCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateCulling", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateMeshPadding() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateMeshPadding", 0, [], "void", [ "pointer" ]);
  }
  static get _InternalCrossFadeColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "InternalCrossFadeColor", 4, [ "UnityEngine.Color", "System.Single", "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _InternalCrossFadeAlpha() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "InternalCrossFadeAlpha", 3, [ "System.Single", "System.Single", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ForceMeshUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "ForceMeshUpdate", 2, [ "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetTextInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetTextInfo", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ClearMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "ClearMesh", 0, [], "void", [ "pointer" ]);
  }
  static get _add_OnPreRenderText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "add_OnPreRenderText", 1, [ "System.Action<TMPro.TMP_TextInfo>" ], "void", [ "pointer", "pointer" ]);
  }
  static get _remove_OnPreRenderText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "remove_OnPreRenderText", 1, [ "System.Action<TMPro.TMP_TextInfo>" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateGeometry() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateGeometry", 2, [ "UnityEngine.Mesh", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _UpdateVertexData() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateVertexData", 1, [ "TMPro.TMP_VertexDataUpdateFlags" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateVertexData_() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateVertexData", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateFontAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateFontAsset", 0, [], "void", [ "pointer" ]);
  }
  static get _Awake() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "Awake", 0, [], "void", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnEnable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnDisable", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDestroy() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnDestroy", 0, [], "void", [ "pointer" ]);
  }
  static get _LoadFontAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "LoadFontAsset", 0, [], "void", [ "pointer" ]);
  }
  static get _GetCanvas() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetCanvas", 0, [], "pointer", [ "pointer" ]);
  }
  static get _UpdateEnvMapMatrix() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateEnvMapMatrix", 0, [], "void", [ "pointer" ]);
  }
  static get _EnableMasking() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "EnableMasking", 0, [], "void", [ "pointer" ]);
  }
  static get _DisableMasking() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "DisableMasking", 0, [], "void", [ "pointer" ]);
  }
  static get _UpdateMask() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateMask", 0, [], "void", [ "pointer" ]);
  }
  static get _GetMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetMaterial", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetMaterials", 1, [ "UnityEngine.Material[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetSharedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetSharedMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetSharedMaterials", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetSharedMaterials", 1, [ "UnityEngine.Material[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineThickness() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetOutlineThickness", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetFaceColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetFaceColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetOutlineColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetShaderDepth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetShaderDepth", 0, [], "void", [ "pointer" ]);
  }
  static get _SetCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetCulling", 0, [], "void", [ "pointer" ]);
  }
  static get _SetPerspectiveCorrection() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetPerspectiveCorrection", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMeshArrays() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetMeshArrays", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetArraySizes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetArraySizes", 1, [ "TMPro.TMP_Text.UnicodeChar[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ComputeMarginSize() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "ComputeMarginSize", 0, [], "void", [ "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnDidApplyAnimationProperties", 0, [], "void", [ "pointer" ]);
  }
  static get _OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnCanvasHierarchyChanged", 0, [], "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnTransformParentChanged", 0, [], "void", [ "pointer" ]);
  }
  static get _OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnRectTransformDimensionsChange", 0, [], "void", [ "pointer" ]);
  }
  static get _InternalUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "InternalUpdate", 0, [], "void", [ "pointer" ]);
  }
  static get _OnPreRenderCanvas() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "OnPreRenderCanvas", 0, [], "void", [ "pointer" ]);
  }
  static get _GenerateTextMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GenerateTextMesh", 0, [], "void", [ "pointer" ]);
  }
  static get _GetTextContainerLocalCorners() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetTextContainerLocalCorners", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetActiveSubMeshes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "SetActiveSubMeshes", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _DestroySubMeshObjects() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "DestroySubMeshObjects", 0, [], "void", [ "pointer" ]);
  }
  static get _GetCompoundBounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetCompoundBounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetCanvasSpaceClippingRect() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "GetCanvasSpaceClippingRect", 0, [], "pointer", [ "pointer" ]);
  }
  static get _UpdateSDFScale() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", "UpdateSDFScale", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TextMeshProUGUI", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], r, "_get_materialForRendering", null), e([ t.cache ], r, "_get_autoSizeTextContainer", null), 
e([ t.cache ], r, "_set_autoSizeTextContainer", null), e([ t.cache ], r, "_get_mesh", null), 
e([ t.cache ], r, "_get_canvasRenderer", null), e([ t.cache ], r, "_CalculateLayoutInputHorizontal", null), 
e([ t.cache ], r, "_CalculateLayoutInputVertical", null), e([ t.cache ], r, "_SetVerticesDirty", null), 
e([ t.cache ], r, "_SetLayoutDirty", null), e([ t.cache ], r, "_SetMaterialDirty", null), 
e([ t.cache ], r, "_SetAllDirty", null), e([ t.cache ], r, "_DelayedGraphicRebuild", null), 
e([ t.cache ], r, "_DelayedMaterialRebuild", null), e([ t.cache ], r, "_Rebuild", null), 
e([ t.cache ], r, "_UpdateSubObjectPivot", null), e([ t.cache ], r, "_GetModifiedMaterial", null), 
e([ t.cache ], r, "_UpdateMaterial", null), e([ t.cache ], r, "_get_maskOffset", null), 
e([ t.cache ], r, "_set_maskOffset", null), e([ t.cache ], r, "_RecalculateClipping", null), 
e([ t.cache ], r, "_Cull", null), e([ t.cache ], r, "_UpdateCulling", null), e([ t.cache ], r, "_UpdateMeshPadding", null), 
e([ t.cache ], r, "_InternalCrossFadeColor", null), e([ t.cache ], r, "_InternalCrossFadeAlpha", null), 
e([ t.cache ], r, "_ForceMeshUpdate", null), e([ t.cache ], r, "_GetTextInfo", null), 
e([ t.cache ], r, "_ClearMesh", null), e([ t.cache ], r, "_add_OnPreRenderText", null), 
e([ t.cache ], r, "_remove_OnPreRenderText", null), e([ t.cache ], r, "_UpdateGeometry", null), 
e([ t.cache ], r, "_UpdateVertexData", null), e([ t.cache ], r, "_UpdateVertexData_", null), 
e([ t.cache ], r, "_UpdateFontAsset", null), e([ t.cache ], r, "_Awake", null), 
e([ t.cache ], r, "_OnEnable", null), e([ t.cache ], r, "_OnDisable", null), e([ t.cache ], r, "_OnDestroy", null), 
e([ t.cache ], r, "_LoadFontAsset", null), e([ t.cache ], r, "_GetCanvas", null), 
e([ t.cache ], r, "_UpdateEnvMapMatrix", null), e([ t.cache ], r, "_EnableMasking", null), 
e([ t.cache ], r, "_DisableMasking", null), e([ t.cache ], r, "_UpdateMask", null), 
e([ t.cache ], r, "_GetMaterial", null), e([ t.cache ], r, "_GetMaterials", null), 
e([ t.cache ], r, "_SetSharedMaterial", null), e([ t.cache ], r, "_GetSharedMaterials", null), 
e([ t.cache ], r, "_SetSharedMaterials", null), e([ t.cache ], r, "_SetOutlineThickness", null), 
e([ t.cache ], r, "_SetFaceColor", null), e([ t.cache ], r, "_SetOutlineColor", null), 
e([ t.cache ], r, "_SetShaderDepth", null), e([ t.cache ], r, "_SetCulling", null), 
e([ t.cache ], r, "_SetPerspectiveCorrection", null), e([ t.cache ], r, "_SetMeshArrays", null), 
e([ t.cache ], r, "_SetArraySizes", null), e([ t.cache ], r, "_ComputeMarginSize", null), 
e([ t.cache ], r, "_OnDidApplyAnimationProperties", null), e([ t.cache ], r, "_OnCanvasHierarchyChanged", null), 
e([ t.cache ], r, "_OnTransformParentChanged", null), e([ t.cache ], r, "_OnRectTransformDimensionsChange", null), 
e([ t.cache ], r, "_InternalUpdate", null), e([ t.cache ], r, "_OnPreRenderCanvas", null), 
e([ t.cache ], r, "_GenerateTextMesh", null), e([ t.cache ], r, "_GetTextContainerLocalCorners", null), 
e([ t.cache ], r, "_SetActiveSubMeshes", null), e([ t.cache ], r, "_DestroySubMeshObjects", null), 
e([ t.cache ], r, "_GetCompoundBounds", null), e([ t.cache ], r, "_GetCanvasSpaceClippingRect", null), 
e([ t.cache ], r, "_UpdateSDFScale", null), e([ t.cache ], r, "__ctor", null), e([ t.cache ], r, "__cctor", null), 
Il2Cpp.Api.TextMeshProUGUI = r;

},{"decorator-cache-getter":513}],210:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.TMPro_TextMeshPro_Impl = void 0;

const e = require("../class");

class t extends e.TMPro_TMP_Text_Impl {
  _SortingLayer=lfv(this.handle, "_SortingLayer");
  _SortingLayerID=lfv(this.handle, "_SortingLayerID");
  _SortingOrder=lfv(this.handle, "_SortingOrder");
  m_currentAutoSizeMode=lfv(this.handle, "m_currentAutoSizeMode");
  m_hasFontAssetChanged=lfv(this.handle, "m_hasFontAssetChanged");
  m_previousLossyScaleY=lfv(this.handle, "m_previousLossyScaleY");
  m_renderer=lfv(this.handle, "m_renderer");
  m_meshFilter=lfv(this.handle, "m_meshFilter");
  m_isFirstAllocation=lfv(this.handle, "m_isFirstAllocation");
  m_max_characters=lfv(this.handle, "m_max_characters");
  m_max_numberOfLines=lfv(this.handle, "m_max_numberOfLines");
  m_subTextObjects=lfv(this.handle, "m_subTextObjects");
  m_maskType=lfv(this.handle, "m_maskType");
  m_EnvMapMatrix=lfv(this.handle, "m_EnvMapMatrix");
  m_RectTransformCorners=lfv(this.handle, "m_RectTransformCorners");
  m_isRegisteredForEvents=lfv(this.handle, "m_isRegisteredForEvents");
  k_GenerateTextMarker=lfv(this.handle, "k_GenerateTextMarker");
  k_SetArraySizesMarker=lfv(this.handle, "k_SetArraySizesMarker");
  k_GenerateTextPhaseIMarker=lfv(this.handle, "k_GenerateTextPhaseIMarker");
  k_ParseMarkupTextMarker=lfv(this.handle, "k_ParseMarkupTextMarker");
  k_CharacterLookupMarker=lfv(this.handle, "k_CharacterLookupMarker");
  k_HandleGPOSFeaturesMarker=lfv(this.handle, "k_HandleGPOSFeaturesMarker");
  k_CalculateVerticesPositionMarker=lfv(this.handle, "k_CalculateVerticesPositionMarker");
  k_ComputeTextMetricsMarker=lfv(this.handle, "k_ComputeTextMetricsMarker");
  k_HandleVisibleCharacterMarker=lfv(this.handle, "k_HandleVisibleCharacterMarker");
  k_HandleWhiteSpacesMarker=lfv(this.handle, "k_HandleWhiteSpacesMarker");
  k_HandleHorizontalLineBreakingMarker=lfv(this.handle, "k_HandleHorizontalLineBreakingMarker");
  k_HandleVerticalLineBreakingMarker=lfv(this.handle, "k_HandleVerticalLineBreakingMarker");
  k_SaveGlyphVertexDataMarker=lfv(this.handle, "k_SaveGlyphVertexDataMarker");
  k_ComputeCharacterAdvanceMarker=lfv(this.handle, "k_ComputeCharacterAdvanceMarker");
  k_HandleCarriageReturnMarker=lfv(this.handle, "k_HandleCarriageReturnMarker");
  k_HandleLineTerminationMarker=lfv(this.handle, "k_HandleLineTerminationMarker");
  k_SavePageInfoMarker=lfv(this.handle, "k_SavePageInfoMarker");
  k_SaveProcessingStatesMarker=lfv(this.handle, "k_SaveProcessingStatesMarker");
  k_GenerateTextPhaseIIMarker=lfv(this.handle, "k_GenerateTextPhaseIIMarker");
  k_GenerateTextPhaseIIIMarker=lfv(this.handle, "k_GenerateTextPhaseIIIMarker");
  constructor(e) {
    super(e);
  }
  get_sortingLayerID() {
    return Il2Cpp.Api.TextMeshPro._get_sortingLayerID(this.handle);
  }
  set_sortingLayerID(e) {
    return Il2Cpp.Api.TextMeshPro._set_sortingLayerID(this.handle, e);
  }
  get_sortingOrder() {
    return Il2Cpp.Api.TextMeshPro._get_sortingOrder(this.handle);
  }
  set_sortingOrder(e) {
    return Il2Cpp.Api.TextMeshPro._set_sortingOrder(this.handle, e);
  }
  get_autoSizeTextContainer() {
    return Il2Cpp.Api.TextMeshPro._get_autoSizeTextContainer(this.handle);
  }
  set_autoSizeTextContainer(e) {
    return Il2Cpp.Api.TextMeshPro._set_autoSizeTextContainer(this.handle, e);
  }
  get_textContainer() {
    return Il2Cpp.Api.TextMeshPro._get_textContainer(this.handle);
  }
  get_transform() {
    return Il2Cpp.Api.TextMeshPro._get_transform(this.handle);
  }
  get_renderer() {
    return Il2Cpp.Api.TextMeshPro._get_renderer(this.handle);
  }
  get_meshFilter() {
    return Il2Cpp.Api.TextMeshPro._get_meshFilter(this.handle);
  }
  get_maskType() {
    return Il2Cpp.Api.TextMeshPro._get_maskType(this.handle);
  }
  set_maskType(e) {
    return Il2Cpp.Api.TextMeshPro._set_maskType(this.handle, e);
  }
  SetMask(e, t) {
    return Il2Cpp.Api.TextMeshPro._SetMask(this.handle, e, t);
  }
  SetMask_4(e, t, r, a) {
    return Il2Cpp.Api.TextMeshPro._SetMask(this.handle, e, t, r, a);
  }
  SetVerticesDirty() {
    return Il2Cpp.Api.TextMeshPro._SetVerticesDirty(this.handle);
  }
  SetLayoutDirty() {
    return Il2Cpp.Api.TextMeshPro._SetLayoutDirty(this.handle);
  }
  SetMaterialDirty() {
    return Il2Cpp.Api.TextMeshPro._SetMaterialDirty(this.handle);
  }
  SetAllDirty() {
    return Il2Cpp.Api.TextMeshPro._SetAllDirty(this.handle);
  }
  Rebuild(e) {
    return Il2Cpp.Api.TextMeshPro._Rebuild(this.handle, e);
  }
  UpdateMaterial() {
    return Il2Cpp.Api.TextMeshPro._UpdateMaterial(this.handle);
  }
  UpdateMeshPadding() {
    return Il2Cpp.Api.TextMeshPro._UpdateMeshPadding(this.handle);
  }
  GetTextInfo(e) {
    return Il2Cpp.Api.TextMeshPro._GetTextInfo(this.handle, e);
  }
  UpdateVertexData(e) {
    return Il2Cpp.Api.TextMeshPro._UpdateVertexData(this.handle, e);
  }
  UpdateVertexData_0() {
    return Il2Cpp.Api.TextMeshPro._UpdateVertexData(this.handle);
  }
  UpdateFontAsset() {
    return Il2Cpp.Api.TextMeshPro._UpdateFontAsset(this.handle);
  }
  CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.TextMeshPro._CalculateLayoutInputHorizontal(this.handle);
  }
  CalculateLayoutInputVertical() {
    return Il2Cpp.Api.TextMeshPro._CalculateLayoutInputVertical(this.handle);
  }
  Awake() {
    return Il2Cpp.Api.TextMeshPro._Awake(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.TextMeshPro._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.TextMeshPro._OnDisable(this.handle);
  }
  OnDestroy() {
    return Il2Cpp.Api.TextMeshPro._OnDestroy(this.handle);
  }
  LoadFontAsset() {
    return Il2Cpp.Api.TextMeshPro._LoadFontAsset(this.handle);
  }
  UpdateEnvMapMatrix() {
    return Il2Cpp.Api.TextMeshPro._UpdateEnvMapMatrix(this.handle);
  }
  SetMask_1(e) {
    return Il2Cpp.Api.TextMeshPro._SetMask(this.handle, e);
  }
  SetMaskCoordinates(e) {
    return Il2Cpp.Api.TextMeshPro._SetMaskCoordinates(this.handle, e);
  }
  SetMaskCoordinates_3(e, t, r) {
    return Il2Cpp.Api.TextMeshPro._SetMaskCoordinates(this.handle, e, t, r);
  }
  EnableMasking() {
    return Il2Cpp.Api.TextMeshPro._EnableMasking(this.handle);
  }
  DisableMasking() {
    return Il2Cpp.Api.TextMeshPro._DisableMasking(this.handle);
  }
  UpdateMask() {
    return Il2Cpp.Api.TextMeshPro._UpdateMask(this.handle);
  }
  GetMaterial_mat(e) {
    return Il2Cpp.Api.TextMeshPro._GetMaterial(this.handle, e);
  }
  GetMaterials_mat_array(e) {
    return Il2Cpp.Api.TextMeshPro._GetMaterials(this.handle, e);
  }
  SetSharedMaterial(e) {
    return Il2Cpp.Api.TextMeshPro._SetSharedMaterial(this.handle, e);
  }
  GetSharedMaterials_0() {
    return Il2Cpp.Api.TextMeshPro._GetSharedMaterials(this.handle);
  }
  SetSharedMaterials_materials(e) {
    return Il2Cpp.Api.TextMeshPro._SetSharedMaterials(this.handle, e);
  }
  SetOutlineThickness(e) {
    return Il2Cpp.Api.TextMeshPro._SetOutlineThickness(this.handle, e);
  }
  SetFaceColor(e) {
    return Il2Cpp.Api.TextMeshPro._SetFaceColor(this.handle, e);
  }
  SetOutlineColor(e) {
    return Il2Cpp.Api.TextMeshPro._SetOutlineColor(this.handle, e);
  }
  CreateMaterialInstance_0() {
    return Il2Cpp.Api.TextMeshPro._CreateMaterialInstance(this.handle);
  }
  SetShaderDepth() {
    return Il2Cpp.Api.TextMeshPro._SetShaderDepth(this.handle);
  }
  SetCulling() {
    return Il2Cpp.Api.TextMeshPro._SetCulling(this.handle);
  }
  SetPerspectiveCorrection() {
    return Il2Cpp.Api.TextMeshPro._SetPerspectiveCorrection(this.handle);
  }
  SetArraySizes_unicodeChars(e) {
    return Il2Cpp.Api.TextMeshPro._SetArraySizes(this.handle, e);
  }
  ComputeMarginSize() {
    return Il2Cpp.Api.TextMeshPro._ComputeMarginSize(this.handle);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.TextMeshPro._OnDidApplyAnimationProperties(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.TextMeshPro._OnTransformParentChanged(this.handle);
  }
  OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.TextMeshPro._OnRectTransformDimensionsChange(this.handle);
  }
  InternalUpdate() {
    return Il2Cpp.Api.TextMeshPro._InternalUpdate(this.handle);
  }
  OnPreRenderObject() {
    return Il2Cpp.Api.TextMeshPro._OnPreRenderObject(this.handle);
  }
  GenerateTextMesh() {
    return Il2Cpp.Api.TextMeshPro._GenerateTextMesh(this.handle);
  }
  GetTextContainerLocalCorners_0() {
    return Il2Cpp.Api.TextMeshPro._GetTextContainerLocalCorners(this.handle);
  }
  SetMeshFilters(e) {
    return Il2Cpp.Api.TextMeshPro._SetMeshFilters(this.handle, e);
  }
  SetActiveSubMeshes(e) {
    return Il2Cpp.Api.TextMeshPro._SetActiveSubMeshes(this.handle, e);
  }
  SetActiveSubTextObjectRenderers(e) {
    return Il2Cpp.Api.TextMeshPro._SetActiveSubTextObjectRenderers(this.handle, e);
  }
  DestroySubMeshObjects() {
    return Il2Cpp.Api.TextMeshPro._DestroySubMeshObjects(this.handle);
  }
  UpdateSubMeshSortingLayerID(e) {
    return Il2Cpp.Api.TextMeshPro._UpdateSubMeshSortingLayerID(this.handle, e);
  }
  UpdateSubMeshSortingOrder(e) {
    return Il2Cpp.Api.TextMeshPro._UpdateSubMeshSortingOrder(this.handle, e);
  }
  GetCompoundBounds() {
    return Il2Cpp.Api.TextMeshPro._GetCompoundBounds(this.handle);
  }
  UpdateSDFScale(e) {
    return Il2Cpp.Api.TextMeshPro._UpdateSDFScale(this.handle, e);
  }
  _ctor() {
    return Il2Cpp.Api.TextMeshPro.__ctor(this.handle);
  }
  static _cctor() {
    return Il2Cpp.Api.TextMeshPro.__cctor();
  }
}

exports.TMPro_TextMeshPro_Impl = t, Il2Cpp.TextMeshPro = t;

},{"../class":214}],211:[function(require,module,exports){
"use strict";

},{}],212:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":209,"./class":210,"./export":211}],213:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, i) {
  var n, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, r) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, r, i); else for (var a = e.length - 1; a >= 0; a--) (n = e[a]) && (p = (o < 3 ? n(p) : o > 3 ? n(t, r, p) : n(t, r)) || p);
  return o > 3 && p && Object.defineProperty(t, r, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _get_text() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_text", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_text() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_text", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isRightToLeftText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isRightToLeftText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isRightToLeftText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isRightToLeftText", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_font() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_font", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_font() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_font", 1, [ "TMPro.TMP_FontAsset" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSharedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontSharedMaterial", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontSharedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontSharedMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontSharedMaterials", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontSharedMaterials", 1, [ "UnityEngine.Material[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontMaterial", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontMaterials", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontMaterials", 1, [ "UnityEngine.Material[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_color() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_color", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_color() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_color", 1, [ "UnityEngine.Color" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_alpha() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_alpha", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_alpha() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_alpha", 1, [ "System.Single" ], "void", [ "pointer", "int32" ]);
  }
  static get _get_enableVertexGradient() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_enableVertexGradient", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_enableVertexGradient() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_enableVertexGradient", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_colorGradient() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_colorGradient", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_colorGradient() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_colorGradient", 1, [ "TMPro.VertexGradient" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_colorGradientPreset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_colorGradientPreset", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_colorGradientPreset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_colorGradientPreset", 1, [ "TMPro.TMP_ColorGradient" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_spriteAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_spriteAsset", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_spriteAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_spriteAsset", 1, [ "TMPro.TMP_SpriteAsset" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_tintAllSprites() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_tintAllSprites", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_tintAllSprites() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_tintAllSprites", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_overrideColorTags() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_overrideColorTags", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_overrideColorTags() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_overrideColorTags", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_faceColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_faceColor", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_faceColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_faceColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_outlineColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_outlineColor", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_outlineColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_outlineColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_outlineWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_outlineWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_outlineWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_outlineWidth", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSize() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontSize", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontSize() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontSize", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontScale() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontScale", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_fontWeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontWeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontWeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontWeight", 1, [ "TMPro.FontWeight" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelsPerUnit() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_pixelsPerUnit", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_enableAutoSizing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_enableAutoSizing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_enableAutoSizing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_enableAutoSizing", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSizeMin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontSizeMin", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontSizeMin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontSizeMin", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSizeMax() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontSizeMax", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontSizeMax() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontSizeMax", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontStyle() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_fontStyle", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_fontStyle() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_fontStyle", 1, [ "TMPro.FontStyles" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isUsingBold() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isUsingBold", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_alignment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_alignment", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_alignment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_alignment", 1, [ "TMPro.TextAlignmentOptions" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_characterSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_characterSpacing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_characterSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_characterSpacing", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_wordSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_wordSpacing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_wordSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_wordSpacing", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_lineSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_lineSpacing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_lineSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_lineSpacing", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_lineSpacingAdjustment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_lineSpacingAdjustment", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_lineSpacingAdjustment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_lineSpacingAdjustment", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_paragraphSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_paragraphSpacing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_paragraphSpacing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_paragraphSpacing", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_characterWidthAdjustment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_characterWidthAdjustment", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_characterWidthAdjustment() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_characterWidthAdjustment", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_enableWordWrapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_enableWordWrapping", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_enableWordWrapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_enableWordWrapping", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_wordWrappingRatios() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_wordWrappingRatios", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_wordWrappingRatios() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_wordWrappingRatios", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_overflowMode() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_overflowMode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_overflowMode() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_overflowMode", 1, [ "TMPro.TextOverflowModes" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isTextOverflowing() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isTextOverflowing", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_firstOverflowCharacterIndex() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_firstOverflowCharacterIndex", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_linkedTextComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_linkedTextComponent", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_linkedTextComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_linkedTextComponent", 1, [ "TMPro.TMP_Text" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isLinkedTextComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isLinkedTextComponent", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isLinkedTextComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isLinkedTextComponent", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isTextTruncated() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isTextTruncated", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_enableKerning() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_enableKerning", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_enableKerning() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_enableKerning", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_extraPadding() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_extraPadding", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_extraPadding() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_extraPadding", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_richText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_richText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_richText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_richText", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_parseCtrlCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_parseCtrlCharacters", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_parseCtrlCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_parseCtrlCharacters", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isOverlay() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isOverlay", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isOverlay() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isOverlay", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isOrthographic() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isOrthographic", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isOrthographic() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isOrthographic", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_enableCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_enableCulling", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_enableCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_enableCulling", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_ignoreRectMaskCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_ignoreRectMaskCulling", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_ignoreRectMaskCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_ignoreRectMaskCulling", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_ignoreVisibility() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_ignoreVisibility", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_ignoreVisibility() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_ignoreVisibility", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_horizontalMapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_horizontalMapping", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_horizontalMapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_horizontalMapping", 1, [ "TMPro.TextureMappingOptions" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_verticalMapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_verticalMapping", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_verticalMapping() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_verticalMapping", 1, [ "TMPro.TextureMappingOptions" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_mappingUvLineOffset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_mappingUvLineOffset", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_mappingUvLineOffset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_mappingUvLineOffset", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_renderMode() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_renderMode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_renderMode() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_renderMode", 1, [ "TMPro.TextRenderFlags" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_geometrySortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_geometrySortingOrder", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_geometrySortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_geometrySortingOrder", 1, [ "TMPro.VertexSortingOrder" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_vertexBufferAutoSizeReduction() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_vertexBufferAutoSizeReduction", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_vertexBufferAutoSizeReduction() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_vertexBufferAutoSizeReduction", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_firstVisibleCharacter() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_firstVisibleCharacter", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_firstVisibleCharacter() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_firstVisibleCharacter", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_maxVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_maxVisibleCharacters", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_maxVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_maxVisibleCharacters", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_maxVisibleWords() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_maxVisibleWords", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_maxVisibleWords() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_maxVisibleWords", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_maxVisibleLines() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_maxVisibleLines", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_maxVisibleLines() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_maxVisibleLines", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_useMaxVisibleDescender() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_useMaxVisibleDescender", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_useMaxVisibleDescender() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_useMaxVisibleDescender", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pageToDisplay() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_pageToDisplay", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pageToDisplay() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_pageToDisplay", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_margin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_margin", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_margin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_margin", 1, [ "UnityEngine.Vector4" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_textInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_textInfo", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_havePropertiesChanged() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_havePropertiesChanged", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_havePropertiesChanged() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_havePropertiesChanged", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isUsingLegacyAnimationComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isUsingLegacyAnimationComponent", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isUsingLegacyAnimationComponent() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isUsingLegacyAnimationComponent", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_transform() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_transform", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_rectTransform() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_rectTransform", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_autoSizeTextContainer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_autoSizeTextContainer() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_autoSizeTextContainer", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_mesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_mesh", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isVolumetricText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_isVolumetricText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isVolumetricText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "set_isVolumetricText", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_bounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_bounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_textBounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_textBounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_spriteAnimator() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_spriteAnimator", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_flexibleHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_flexibleHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_flexibleWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_flexibleWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_minWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_minWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_minHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_minHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_maxWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_maxWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_maxHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_maxHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_layoutElement() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_layoutElement", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_preferredWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_preferredWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_preferredHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_preferredHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_renderedWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_renderedWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_renderedHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_renderedHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_layoutPriority() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "get_layoutPriority", 0, [], "pointer", [ "pointer" ]);
  }
  static get _LoadFontAsset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "LoadFontAsset", 0, [], "void", [ "pointer" ]);
  }
  static get _SetSharedMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetSharedMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetMaterial", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetFontBaseMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetFontBaseMaterial", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetSharedMaterials", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetSharedMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetSharedMaterials", 1, [ "UnityEngine.Material[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetMaterials() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetMaterials", 1, [ "UnityEngine.Material[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CreateMaterialInstance() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "CreateMaterialInstance", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetVertexColorGradient() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetVertexColorGradient", 1, [ "TMPro.TMP_ColorGradient" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetTextSortingOrder() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetTextSortingOrder", 1, [ "TMPro.VertexSortingOrder" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetTextSortingOrder_order() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetTextSortingOrder", 1, [ "System.Int32[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetFaceColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetFaceColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetOutlineColor", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetOutlineThickness() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetOutlineThickness", 1, [ "System.Single" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetShaderDepth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetShaderDepth", 0, [], "void", [ "pointer" ]);
  }
  static get _SetCulling() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetCulling", 0, [], "void", [ "pointer" ]);
  }
  static get _GetPaddingForMaterial() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPaddingForMaterial", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetPaddingForMaterial_mat() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPaddingForMaterial", 1, [ "UnityEngine.Material" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTextContainerLocalCorners() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTextContainerLocalCorners", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ForceMeshUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ForceMeshUpdate", 0, [], "void", [ "pointer" ]);
  }
  static get _ForceMeshUpdate_ignoreActiveState() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ForceMeshUpdate", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetTextInternal() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetTextInternal", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateGeometry() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "UpdateGeometry", 2, [ "UnityEngine.Mesh", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _UpdateVertexData() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "UpdateVertexData", 1, [ "TMPro.TMP_VertexDataUpdateFlags" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateVertexData_() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "UpdateVertexData", 0, [], "void", [ "pointer" ]);
  }
  static get _SetVertices() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetVertices", 1, [ "UnityEngine.Vector3[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _UpdateMeshPadding() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "UpdateMeshPadding", 0, [], "void", [ "pointer" ]);
  }
  static get _CrossFadeColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "CrossFadeColor", 4, [ "UnityEngine.Color", "System.Single", "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CrossFadeAlpha() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "CrossFadeAlpha", 3, [ "System.Single", "System.Single", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _InternalCrossFadeColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "InternalCrossFadeColor", 4, [ "UnityEngine.Color", "System.Single", "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _InternalCrossFadeAlpha() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "InternalCrossFadeAlpha", 3, [ "System.Single", "System.Single", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ParseInputText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ParseInputText", 0, [], "void", [ "pointer" ]);
  }
  static get _SetText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetText_text_syncTextInputBox() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 2, [ "System.String", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetText_text_arg0() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 2, [ "System.String", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetText_text_arg0_arg1() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 3, [ "System.String", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetText_text_arg0_arg1_arg2() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 4, [ "System.String", "System.Single", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetText_text() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetText", 1, [ "System.Text.StringBuilder" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetCharArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetCharArray", 1, [ "System.Char[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetCharArray_sourceTextCHAR_start_length() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetCharArray", 3, [ "System.Char[]", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetCharArray_sourceTextINT32_start_length() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetCharArray", 3, [ "System.Int32[]", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextArrayToCharArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetTextArrayToCharArray", 2, [ "System.Char[]", "TMPro.TMP_Text.UnicodeChar[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _StringToCharArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "StringToCharArray", 2, [ "System.String", "TMPro.TMP_Text.UnicodeChar[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _StringBuilderToIntArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "StringBuilderToIntArray", 2, [ "System.Text.StringBuilder", "TMPro.TMP_Text.UnicodeChar[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ReplaceOpeningStyleTag() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ReplaceOpeningStyleTag", 5, [ "System.String", "System.Int32", "System.Int32", "TMPro.TMP_Text.UnicodeChar[]", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ReplaceClosingStyleTag() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ReplaceClosingStyleTag", 4, [ "System.String", "System.Int32", "TMPro.TMP_Text.UnicodeChar[]", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _IsTagName() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "IsTagName", 3, [ "System.String", "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _IsTagName_textCHAR_tag_index() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "IsTagName", 3, [ "System.Char[]", "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _IsTagName_textINT32_tag_index() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "IsTagName", 3, [ "System.Int32[]", "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _IsTagName_textBUILDER_tag_index() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "IsTagName", 3, [ "System.Text.StringBuilder", "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetTagHashCode() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTagHashCode", 3, [ "System.String", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetTagHashCode_textCHAR_index_closeIndex() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTagHashCode", 3, [ "System.Char[]", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetTagHashCode_textINT32_index_closeIndex() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTagHashCode", 3, [ "System.Int32[]", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetTagHashCode_textBUILDER_index_closeIndex() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTagHashCode", 3, [ "System.Text.StringBuilder", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ResizeInternalArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ResizeInternalArray", 1, [ "T[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _AddFloatToCharArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "AddFloatToCharArray", 3, [ "System.Double", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _AddIntToCharArray() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "AddIntToCharArray", 3, [ "System.Double", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetArraySizes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetArraySizes", 1, [ "TMPro.TMP_Text.UnicodeChar[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GenerateTextMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GenerateTextMesh", 0, [], "void", [ "pointer" ]);
  }
  static get _GetPreferredValues() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredValues", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetPreferredValues_width_height() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredValues", 2, [ "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetPreferredValues_text() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredValues", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetPreferredValues_text_width_height() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredValues", 3, [ "System.String", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetPreferredWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetPreferredWidth_margin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredWidth", 1, [ "UnityEngine.Vector2" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetPreferredHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetPreferredHeight_margin() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetPreferredHeight", 1, [ "UnityEngine.Vector2" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetRenderedValues() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedValues", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetRenderedValues_onlyVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedValues", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetRenderedWidth() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedWidth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetRenderedWidth_onlyVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedWidth", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetRenderedHeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedHeight", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetRenderedHeight_onlyVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetRenderedHeight", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CalculatePreferredValues() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "CalculatePreferredValues", 3, [ "System.Single", "UnityEngine.Vector2", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetCompoundBounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetCompoundBounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetTextBounds() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTextBounds", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetTextBounds_onlyVisibleCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTextBounds", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AdjustLineOffset() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "AdjustLineOffset", 3, [ "System.Int32", "System.Int32", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ResizeLineExtents() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ResizeLineExtents", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetTextInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetTextInfo", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ComputeMarginSize() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ComputeMarginSize", 0, [], "void", [ "pointer" ]);
  }
  static get _SaveWordWrappingState() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SaveWordWrappingState", 3, [ "TMPro.WordWrapState", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RestoreWordWrappingState() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "RestoreWordWrappingState", 1, [ "TMPro.WordWrapState" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SaveGlyphVertexInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SaveGlyphVertexInfo", 3, [ "System.Single", "System.Single", "UnityEngine.Color32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SaveSpriteVertexInfo() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SaveSpriteVertexInfo", 1, [ "UnityEngine.Color32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _FillCharacterVertexBuffers() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "FillCharacterVertexBuffers", 2, [ "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _FillCharacterVertexBuffers_i_index_X4_isVolumetric() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "FillCharacterVertexBuffers", 3, [ "System.Int32", "System.Int32", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _FillSpriteVertexBuffers() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "FillSpriteVertexBuffers", 2, [ "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DrawUnderlineMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "DrawUnderlineMesh", 8, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Int32", "System.Single", "System.Single", "System.Single", "System.Single", "UnityEngine.Color32" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _DrawTextHighlight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "DrawTextHighlight", 4, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Int32", "UnityEngine.Color32" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _LoadDefaultSettings() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "LoadDefaultSettings", 0, [], "void", [ "pointer" ]);
  }
  static get _GetSpecialCharacters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetSpecialCharacters", 1, [ "TMPro.TMP_FontAsset" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ReplaceTagWithCharacter() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ReplaceTagWithCharacter", 4, [ "System.Int32[]", "System.Int32", "System.Int32", "System.Char" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetFontAssetForWeight() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetFontAssetForWeight", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetActiveSubMeshes() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "SetActiveSubMeshes", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ClearSubMeshObjects() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ClearSubMeshObjects", 0, [], "void", [ "pointer" ]);
  }
  static get _ClearMesh() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ClearMesh", 0, [], "void", [ "pointer" ]);
  }
  static get _ClearMesh_uploadGeometry() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ClearMesh", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetParsedText() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetParsedText", 0, [], "pointer", [ "pointer" ]);
  }
  static get _PackUV() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "PackUV", 3, [ "System.Single", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _PackUV_x_y() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "PackUV", 2, [ "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InternalUpdate() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "InternalUpdate", 0, [], "void", [ "pointer" ]);
  }
  static get _HexToInt() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "HexToInt", 1, [ "System.Char" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetUTF16() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetUTF16", 2, [ "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetUTF16_text_i() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetUTF16", 2, [ "System.Text.StringBuilder", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetUTF32() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetUTF32", 2, [ "System.String", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetUTF32_text_i() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetUTF32", 2, [ "System.Text.StringBuilder", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _HexCharsToColor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "HexCharsToColor", 2, [ "System.Char[]", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _HexCharsToColor_hexChars_startIndex_length() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "HexCharsToColor", 3, [ "System.Char[]", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetAttributeParameters() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "GetAttributeParameters", 4, [ "System.Char[]", "System.Int32", "System.Int32", "System.Single[]" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ConvertToFloat() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ConvertToFloat", 3, [ "System.Char[]", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ConvertToFloat_chars_startIndex_length_lastIndex() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ConvertToFloat", 4, [ "System.Char[]", "System.Int32", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ValidateHtmlTag() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", "ValidateHtmlTag", 3, [ "TMPro.TMP_Text.UnicodeChar[]", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("Unity.TextMeshPro", "TMPro.TMP_Text", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], r, "_get_text", null), e([ t.cache ], r, "_set_text", null), e([ t.cache ], r, "_get_isRightToLeftText", null), 
e([ t.cache ], r, "_set_isRightToLeftText", null), e([ t.cache ], r, "_get_font", null), 
e([ t.cache ], r, "_set_font", null), e([ t.cache ], r, "_get_fontSharedMaterial", null), 
e([ t.cache ], r, "_set_fontSharedMaterial", null), e([ t.cache ], r, "_get_fontSharedMaterials", null), 
e([ t.cache ], r, "_set_fontSharedMaterials", null), e([ t.cache ], r, "_get_fontMaterial", null), 
e([ t.cache ], r, "_set_fontMaterial", null), e([ t.cache ], r, "_get_fontMaterials", null), 
e([ t.cache ], r, "_set_fontMaterials", null), e([ t.cache ], r, "_get_color", null), 
e([ t.cache ], r, "_set_color", null), e([ t.cache ], r, "_get_alpha", null), e([ t.cache ], r, "_set_alpha", null), 
e([ t.cache ], r, "_get_enableVertexGradient", null), e([ t.cache ], r, "_set_enableVertexGradient", null), 
e([ t.cache ], r, "_get_colorGradient", null), e([ t.cache ], r, "_set_colorGradient", null), 
e([ t.cache ], r, "_get_colorGradientPreset", null), e([ t.cache ], r, "_set_colorGradientPreset", null), 
e([ t.cache ], r, "_get_spriteAsset", null), e([ t.cache ], r, "_set_spriteAsset", null), 
e([ t.cache ], r, "_get_tintAllSprites", null), e([ t.cache ], r, "_set_tintAllSprites", null), 
e([ t.cache ], r, "_get_overrideColorTags", null), e([ t.cache ], r, "_set_overrideColorTags", null), 
e([ t.cache ], r, "_get_faceColor", null), e([ t.cache ], r, "_set_faceColor", null), 
e([ t.cache ], r, "_get_outlineColor", null), e([ t.cache ], r, "_set_outlineColor", null), 
e([ t.cache ], r, "_get_outlineWidth", null), e([ t.cache ], r, "_set_outlineWidth", null), 
e([ t.cache ], r, "_get_fontSize", null), e([ t.cache ], r, "_set_fontSize", null), 
e([ t.cache ], r, "_get_fontScale", null), e([ t.cache ], r, "_get_fontWeight", null), 
e([ t.cache ], r, "_set_fontWeight", null), e([ t.cache ], r, "_get_pixelsPerUnit", null), 
e([ t.cache ], r, "_get_enableAutoSizing", null), e([ t.cache ], r, "_set_enableAutoSizing", null), 
e([ t.cache ], r, "_get_fontSizeMin", null), e([ t.cache ], r, "_set_fontSizeMin", null), 
e([ t.cache ], r, "_get_fontSizeMax", null), e([ t.cache ], r, "_set_fontSizeMax", null), 
e([ t.cache ], r, "_get_fontStyle", null), e([ t.cache ], r, "_set_fontStyle", null), 
e([ t.cache ], r, "_get_isUsingBold", null), e([ t.cache ], r, "_get_alignment", null), 
e([ t.cache ], r, "_set_alignment", null), e([ t.cache ], r, "_get_characterSpacing", null), 
e([ t.cache ], r, "_set_characterSpacing", null), e([ t.cache ], r, "_get_wordSpacing", null), 
e([ t.cache ], r, "_set_wordSpacing", null), e([ t.cache ], r, "_get_lineSpacing", null), 
e([ t.cache ], r, "_set_lineSpacing", null), e([ t.cache ], r, "_get_lineSpacingAdjustment", null), 
e([ t.cache ], r, "_set_lineSpacingAdjustment", null), e([ t.cache ], r, "_get_paragraphSpacing", null), 
e([ t.cache ], r, "_set_paragraphSpacing", null), e([ t.cache ], r, "_get_characterWidthAdjustment", null), 
e([ t.cache ], r, "_set_characterWidthAdjustment", null), e([ t.cache ], r, "_get_enableWordWrapping", null), 
e([ t.cache ], r, "_set_enableWordWrapping", null), e([ t.cache ], r, "_get_wordWrappingRatios", null), 
e([ t.cache ], r, "_set_wordWrappingRatios", null), e([ t.cache ], r, "_get_overflowMode", null), 
e([ t.cache ], r, "_set_overflowMode", null), e([ t.cache ], r, "_get_isTextOverflowing", null), 
e([ t.cache ], r, "_get_firstOverflowCharacterIndex", null), e([ t.cache ], r, "_get_linkedTextComponent", null), 
e([ t.cache ], r, "_set_linkedTextComponent", null), e([ t.cache ], r, "_get_isLinkedTextComponent", null), 
e([ t.cache ], r, "_set_isLinkedTextComponent", null), e([ t.cache ], r, "_get_isTextTruncated", null), 
e([ t.cache ], r, "_get_enableKerning", null), e([ t.cache ], r, "_set_enableKerning", null), 
e([ t.cache ], r, "_get_extraPadding", null), e([ t.cache ], r, "_set_extraPadding", null), 
e([ t.cache ], r, "_get_richText", null), e([ t.cache ], r, "_set_richText", null), 
e([ t.cache ], r, "_get_parseCtrlCharacters", null), e([ t.cache ], r, "_set_parseCtrlCharacters", null), 
e([ t.cache ], r, "_get_isOverlay", null), e([ t.cache ], r, "_set_isOverlay", null), 
e([ t.cache ], r, "_get_isOrthographic", null), e([ t.cache ], r, "_set_isOrthographic", null), 
e([ t.cache ], r, "_get_enableCulling", null), e([ t.cache ], r, "_set_enableCulling", null), 
e([ t.cache ], r, "_get_ignoreRectMaskCulling", null), e([ t.cache ], r, "_set_ignoreRectMaskCulling", null), 
e([ t.cache ], r, "_get_ignoreVisibility", null), e([ t.cache ], r, "_set_ignoreVisibility", null), 
e([ t.cache ], r, "_get_horizontalMapping", null), e([ t.cache ], r, "_set_horizontalMapping", null), 
e([ t.cache ], r, "_get_verticalMapping", null), e([ t.cache ], r, "_set_verticalMapping", null), 
e([ t.cache ], r, "_get_mappingUvLineOffset", null), e([ t.cache ], r, "_set_mappingUvLineOffset", null), 
e([ t.cache ], r, "_get_renderMode", null), e([ t.cache ], r, "_set_renderMode", null), 
e([ t.cache ], r, "_get_geometrySortingOrder", null), e([ t.cache ], r, "_set_geometrySortingOrder", null), 
e([ t.cache ], r, "_get_vertexBufferAutoSizeReduction", null), e([ t.cache ], r, "_set_vertexBufferAutoSizeReduction", null), 
e([ t.cache ], r, "_get_firstVisibleCharacter", null), e([ t.cache ], r, "_set_firstVisibleCharacter", null), 
e([ t.cache ], r, "_get_maxVisibleCharacters", null), e([ t.cache ], r, "_set_maxVisibleCharacters", null), 
e([ t.cache ], r, "_get_maxVisibleWords", null), e([ t.cache ], r, "_set_maxVisibleWords", null), 
e([ t.cache ], r, "_get_maxVisibleLines", null), e([ t.cache ], r, "_set_maxVisibleLines", null), 
e([ t.cache ], r, "_get_useMaxVisibleDescender", null), e([ t.cache ], r, "_set_useMaxVisibleDescender", null), 
e([ t.cache ], r, "_get_pageToDisplay", null), e([ t.cache ], r, "_set_pageToDisplay", null), 
e([ t.cache ], r, "_get_margin", null), e([ t.cache ], r, "_set_margin", null), 
e([ t.cache ], r, "_get_textInfo", null), e([ t.cache ], r, "_get_havePropertiesChanged", null), 
e([ t.cache ], r, "_set_havePropertiesChanged", null), e([ t.cache ], r, "_get_isUsingLegacyAnimationComponent", null), 
e([ t.cache ], r, "_set_isUsingLegacyAnimationComponent", null), e([ t.cache ], r, "_get_transform", null), 
e([ t.cache ], r, "_get_rectTransform", null), e([ t.cache ], r, "_get_autoSizeTextContainer", null), 
e([ t.cache ], r, "_set_autoSizeTextContainer", null), e([ t.cache ], r, "_get_mesh", null), 
e([ t.cache ], r, "_get_isVolumetricText", null), e([ t.cache ], r, "_set_isVolumetricText", null), 
e([ t.cache ], r, "_get_bounds", null), e([ t.cache ], r, "_get_textBounds", null), 
e([ t.cache ], r, "_get_spriteAnimator", null), e([ t.cache ], r, "_get_flexibleHeight", null), 
e([ t.cache ], r, "_get_flexibleWidth", null), e([ t.cache ], r, "_get_minWidth", null), 
e([ t.cache ], r, "_get_minHeight", null), e([ t.cache ], r, "_get_maxWidth", null), 
e([ t.cache ], r, "_get_maxHeight", null), e([ t.cache ], r, "_get_layoutElement", null), 
e([ t.cache ], r, "_get_preferredWidth", null), e([ t.cache ], r, "_get_preferredHeight", null), 
e([ t.cache ], r, "_get_renderedWidth", null), e([ t.cache ], r, "_get_renderedHeight", null), 
e([ t.cache ], r, "_get_layoutPriority", null), e([ t.cache ], r, "_LoadFontAsset", null), 
e([ t.cache ], r, "_SetSharedMaterial", null), e([ t.cache ], r, "_GetMaterial", null), 
e([ t.cache ], r, "_SetFontBaseMaterial", null), e([ t.cache ], r, "_GetSharedMaterials", null), 
e([ t.cache ], r, "_SetSharedMaterials", null), e([ t.cache ], r, "_GetMaterials", null), 
e([ t.cache ], r, "_CreateMaterialInstance", null), e([ t.cache ], r, "_SetVertexColorGradient", null), 
e([ t.cache ], r, "_SetTextSortingOrder", null), e([ t.cache ], r, "_SetTextSortingOrder_order", null), 
e([ t.cache ], r, "_SetFaceColor", null), e([ t.cache ], r, "_SetOutlineColor", null), 
e([ t.cache ], r, "_SetOutlineThickness", null), e([ t.cache ], r, "_SetShaderDepth", null), 
e([ t.cache ], r, "_SetCulling", null), e([ t.cache ], r, "_GetPaddingForMaterial", null), 
e([ t.cache ], r, "_GetPaddingForMaterial_mat", null), e([ t.cache ], r, "_GetTextContainerLocalCorners", null), 
e([ t.cache ], r, "_ForceMeshUpdate", null), e([ t.cache ], r, "_ForceMeshUpdate_ignoreActiveState", null), 
e([ t.cache ], r, "_SetTextInternal", null), e([ t.cache ], r, "_UpdateGeometry", null), 
e([ t.cache ], r, "_UpdateVertexData", null), e([ t.cache ], r, "_UpdateVertexData_", null), 
e([ t.cache ], r, "_SetVertices", null), e([ t.cache ], r, "_UpdateMeshPadding", null), 
e([ t.cache ], r, "_CrossFadeColor", null), e([ t.cache ], r, "_CrossFadeAlpha", null), 
e([ t.cache ], r, "_InternalCrossFadeColor", null), e([ t.cache ], r, "_InternalCrossFadeAlpha", null), 
e([ t.cache ], r, "_ParseInputText", null), e([ t.cache ], r, "_SetText", null), 
e([ t.cache ], r, "_SetText_text_syncTextInputBox", null), e([ t.cache ], r, "_SetText_text_arg0", null), 
e([ t.cache ], r, "_SetText_text_arg0_arg1", null), e([ t.cache ], r, "_SetText_text_arg0_arg1_arg2", null), 
e([ t.cache ], r, "_SetText_text", null), e([ t.cache ], r, "_SetCharArray", null), 
e([ t.cache ], r, "_SetCharArray_sourceTextCHAR_start_length", null), e([ t.cache ], r, "_SetCharArray_sourceTextINT32_start_length", null), 
e([ t.cache ], r, "_SetTextArrayToCharArray", null), e([ t.cache ], r, "_StringToCharArray", null), 
e([ t.cache ], r, "_StringBuilderToIntArray", null), e([ t.cache ], r, "_ReplaceOpeningStyleTag", null), 
e([ t.cache ], r, "_ReplaceClosingStyleTag", null), e([ t.cache ], r, "_IsTagName", null), 
e([ t.cache ], r, "_IsTagName_textCHAR_tag_index", null), e([ t.cache ], r, "_IsTagName_textINT32_tag_index", null), 
e([ t.cache ], r, "_IsTagName_textBUILDER_tag_index", null), e([ t.cache ], r, "_GetTagHashCode", null), 
e([ t.cache ], r, "_GetTagHashCode_textCHAR_index_closeIndex", null), e([ t.cache ], r, "_GetTagHashCode_textINT32_index_closeIndex", null), 
e([ t.cache ], r, "_GetTagHashCode_textBUILDER_index_closeIndex", null), e([ t.cache ], r, "_ResizeInternalArray", null), 
e([ t.cache ], r, "_AddFloatToCharArray", null), e([ t.cache ], r, "_AddIntToCharArray", null), 
e([ t.cache ], r, "_SetArraySizes", null), e([ t.cache ], r, "_GenerateTextMesh", null), 
e([ t.cache ], r, "_GetPreferredValues", null), e([ t.cache ], r, "_GetPreferredValues_width_height", null), 
e([ t.cache ], r, "_GetPreferredValues_text", null), e([ t.cache ], r, "_GetPreferredValues_text_width_height", null), 
e([ t.cache ], r, "_GetPreferredWidth", null), e([ t.cache ], r, "_GetPreferredWidth_margin", null), 
e([ t.cache ], r, "_GetPreferredHeight", null), e([ t.cache ], r, "_GetPreferredHeight_margin", null), 
e([ t.cache ], r, "_GetRenderedValues", null), e([ t.cache ], r, "_GetRenderedValues_onlyVisibleCharacters", null), 
e([ t.cache ], r, "_GetRenderedWidth", null), e([ t.cache ], r, "_GetRenderedWidth_onlyVisibleCharacters", null), 
e([ t.cache ], r, "_GetRenderedHeight", null), e([ t.cache ], r, "_GetRenderedHeight_onlyVisibleCharacters", null), 
e([ t.cache ], r, "_CalculatePreferredValues", null), e([ t.cache ], r, "_GetCompoundBounds", null), 
e([ t.cache ], r, "_GetTextBounds", null), e([ t.cache ], r, "_GetTextBounds_onlyVisibleCharacters", null), 
e([ t.cache ], r, "_AdjustLineOffset", null), e([ t.cache ], r, "_ResizeLineExtents", null), 
e([ t.cache ], r, "_GetTextInfo", null), e([ t.cache ], r, "_ComputeMarginSize", null), 
e([ t.cache ], r, "_SaveWordWrappingState", null), e([ t.cache ], r, "_RestoreWordWrappingState", null), 
e([ t.cache ], r, "_SaveGlyphVertexInfo", null), e([ t.cache ], r, "_SaveSpriteVertexInfo", null), 
e([ t.cache ], r, "_FillCharacterVertexBuffers", null), e([ t.cache ], r, "_FillCharacterVertexBuffers_i_index_X4_isVolumetric", null), 
e([ t.cache ], r, "_FillSpriteVertexBuffers", null), e([ t.cache ], r, "_DrawUnderlineMesh", null), 
e([ t.cache ], r, "_DrawTextHighlight", null), e([ t.cache ], r, "_LoadDefaultSettings", null), 
e([ t.cache ], r, "_GetSpecialCharacters", null), e([ t.cache ], r, "_ReplaceTagWithCharacter", null), 
e([ t.cache ], r, "_GetFontAssetForWeight", null), e([ t.cache ], r, "_SetActiveSubMeshes", null), 
e([ t.cache ], r, "_ClearSubMeshObjects", null), e([ t.cache ], r, "_ClearMesh", null), 
e([ t.cache ], r, "_ClearMesh_uploadGeometry", null), e([ t.cache ], r, "_GetParsedText", null), 
e([ t.cache ], r, "_PackUV", null), e([ t.cache ], r, "_PackUV_x_y", null), e([ t.cache ], r, "_InternalUpdate", null), 
e([ t.cache ], r, "_HexToInt", null), e([ t.cache ], r, "_GetUTF16", null), e([ t.cache ], r, "_GetUTF16_text_i", null), 
e([ t.cache ], r, "_GetUTF32", null), e([ t.cache ], r, "_GetUTF32_text_i", null), 
e([ t.cache ], r, "_HexCharsToColor", null), e([ t.cache ], r, "_HexCharsToColor_hexChars_startIndex_length", null), 
e([ t.cache ], r, "_GetAttributeParameters", null), e([ t.cache ], r, "_ConvertToFloat", null), 
e([ t.cache ], r, "_ConvertToFloat_chars_startIndex_length_lastIndex", null), e([ t.cache ], r, "_ValidateHtmlTag", null), 
e([ t.cache ], r, "__ctor", null), e([ t.cache ], r, "__cctor", null), Il2Cpp.Api.TMP_Text = r;

},{"decorator-cache-getter":513}],214:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.TMPro_TMP_Text_Impl = void 0;

const e = require("../../../../../../Transform/RectTransform/class"), t = require("../../../../../../../../ValueType/Color/class"), i = require("../../../../../../Transform/class"), r = require("../class");

class n extends r.UnityEngine_UI_MaskableGraphic_Impl {
  m_text=lfv(this.handle, "m_text");
  m_isRightToLeft=lfv(this.handle, "m_isRightToLeft");
  m_fontAsset=lfv(this.handle, "m_fontAsset");
  m_currentFontAsset=lfv(this.handle, "m_currentFontAsset");
  m_isSDFShader=lfv(this.handle, "m_isSDFShader");
  m_sharedMaterial=lfv(this.handle, "m_sharedMaterial");
  m_currentMaterial=lfv(this.handle, "m_currentMaterial");
  m_materialReferences=lfv(this.handle, "m_materialReferences");
  m_currentMaterialIndex=lfv(this.handle, "m_currentMaterialIndex");
  m_fontSharedMaterials=lfv(this.handle, "m_fontSharedMaterials");
  m_fontMaterial=lfv(this.handle, "m_fontMaterial");
  m_fontMaterials=lfv(this.handle, "m_fontMaterials");
  m_isMaterialDirty=lfv(this.handle, "m_isMaterialDirty");
  m_fontColor32=lfv(this.handle, "m_fontColor32");
  m_fontColor=lfv(this.handle, "m_fontColor");
  s_colorWhite=lfv(this.handle, "s_colorWhite");
  m_underlineColor=lfv(this.handle, "m_underlineColor");
  m_strikethroughColor=lfv(this.handle, "m_strikethroughColor");
  m_highlightColor=lfv(this.handle, "m_highlightColor");
  m_highlightPadding=lfv(this.handle, "m_highlightPadding");
  m_enableVertexGradient=lfv(this.handle, "m_enableVertexGradient");
  m_colorMode=lfv(this.handle, "m_colorMode");
  m_fontColorGradient=lfv(this.handle, "m_fontColorGradient");
  m_fontColorGradientPreset=lfv(this.handle, "m_fontColorGradientPreset");
  m_spriteAsset=lfv(this.handle, "m_spriteAsset");
  m_tintAllSprites=lfv(this.handle, "m_tintAllSprites");
  m_tintSprite=lfv(this.handle, "m_tintSprite");
  m_spriteColor=lfv(this.handle, "m_spriteColor");
  m_overrideHtmlColors=lfv(this.handle, "m_overrideHtmlColors");
  m_faceColor=lfv(this.handle, "m_faceColor");
  m_outlineColor=lfv(this.handle, "m_outlineColor");
  m_outlineWidth=lfv(this.handle, "m_outlineWidth");
  m_fontSize=lfv(this.handle, "m_fontSize");
  m_currentFontSize=lfv(this.handle, "m_currentFontSize");
  m_fontSizeBase=lfv(this.handle, "m_fontSizeBase");
  m_fontWeight=lfv(this.handle, "m_fontWeight");
  m_FontWeightInternal=lfv(this.handle, "m_FontWeightInternal");
  m_enableAutoSizing=lfv(this.handle, "m_enableAutoSizing");
  m_maxFontSize=lfv(this.handle, "m_maxFontSize");
  m_minFontSize=lfv(this.handle, "m_minFontSize");
  m_fontSizeMin=lfv(this.handle, "m_fontSizeMin");
  m_fontSizeMax=lfv(this.handle, "m_fontSizeMax");
  m_fontStyle=lfv(this.handle, "m_fontStyle");
  m_FontStyleInternal=lfv(this.handle, "m_FontStyleInternal");
  m_fontStyleStack=lfv(this.handle, "m_fontStyleStack");
  m_isUsingBold=lfv(this.handle, "m_isUsingBold");
  m_textAlignment=lfv(this.handle, "m_textAlignment");
  m_lineJustification=lfv(this.handle, "m_lineJustification");
  m_textContainerLocalCorners=lfv(this.handle, "m_textContainerLocalCorners");
  m_characterSpacing=lfv(this.handle, "m_characterSpacing");
  m_cSpacing=lfv(this.handle, "m_cSpacing");
  m_monoSpacing=lfv(this.handle, "m_monoSpacing");
  m_wordSpacing=lfv(this.handle, "m_wordSpacing");
  m_lineSpacing=lfv(this.handle, "m_lineSpacing");
  m_lineSpacingDelta=lfv(this.handle, "m_lineSpacingDelta");
  m_lineHeight=lfv(this.handle, "m_lineHeight");
  m_lineSpacingMax=lfv(this.handle, "m_lineSpacingMax");
  m_paragraphSpacing=lfv(this.handle, "m_paragraphSpacing");
  m_charWidthMaxAdj=lfv(this.handle, "m_charWidthMaxAdj");
  m_charWidthAdjDelta=lfv(this.handle, "m_charWidthAdjDelta");
  m_enableWordWrapping=lfv(this.handle, "m_enableWordWrapping");
  m_isCharacterWrappingEnabled=lfv(this.handle, "m_isCharacterWrappingEnabled");
  m_isNonBreakingSpace=lfv(this.handle, "m_isNonBreakingSpace");
  m_isIgnoringAlignment=lfv(this.handle, "m_isIgnoringAlignment");
  m_wordWrappingRatios=lfv(this.handle, "m_wordWrappingRatios");
  m_overflowMode=lfv(this.handle, "m_overflowMode");
  m_firstOverflowCharacterIndex=lfv(this.handle, "m_firstOverflowCharacterIndex");
  m_linkedTextComponent=lfv(this.handle, "m_linkedTextComponent");
  m_isLinkedTextComponent=lfv(this.handle, "m_isLinkedTextComponent");
  m_isTextTruncated=lfv(this.handle, "m_isTextTruncated");
  m_enableKerning=lfv(this.handle, "m_enableKerning");
  m_enableExtraPadding=lfv(this.handle, "m_enableExtraPadding");
  checkPaddingRequired=lfv(this.handle, "checkPaddingRequired");
  m_isRichText=lfv(this.handle, "m_isRichText");
  m_parseCtrlCharacters=lfv(this.handle, "m_parseCtrlCharacters");
  m_isOverlay=lfv(this.handle, "m_isOverlay");
  m_isOrthographic=lfv(this.handle, "m_isOrthographic");
  m_isCullingEnabled=lfv(this.handle, "m_isCullingEnabled");
  m_ignoreRectMaskCulling=lfv(this.handle, "m_ignoreRectMaskCulling");
  m_ignoreCulling=lfv(this.handle, "m_ignoreCulling");
  m_horizontalMapping=lfv(this.handle, "m_horizontalMapping");
  m_verticalMapping=lfv(this.handle, "m_verticalMapping");
  m_uvLineOffset=lfv(this.handle, "m_uvLineOffset");
  m_renderMode=lfv(this.handle, "m_renderMode");
  m_geometrySortingOrder=lfv(this.handle, "m_geometrySortingOrder");
  m_VertexBufferAutoSizeReduction=lfv(this.handle, "m_VertexBufferAutoSizeReduction");
  m_firstVisibleCharacter=lfv(this.handle, "m_firstVisibleCharacter");
  m_maxVisibleCharacters=lfv(this.handle, "m_maxVisibleCharacters");
  m_maxVisibleWords=lfv(this.handle, "m_maxVisibleWords");
  m_maxVisibleLines=lfv(this.handle, "m_maxVisibleLines");
  m_useMaxVisibleDescender=lfv(this.handle, "m_useMaxVisibleDescender");
  m_pageToDisplay=lfv(this.handle, "m_pageToDisplay");
  m_isNewPage=lfv(this.handle, "m_isNewPage");
  m_margin=lfv(this.handle, "m_margin");
  m_marginLeft=lfv(this.handle, "m_marginLeft");
  m_marginRight=lfv(this.handle, "m_marginRight");
  m_marginWidth=lfv(this.handle, "m_marginWidth");
  m_marginHeight=lfv(this.handle, "m_marginHeight");
  m_width=lfv(this.handle, "m_width");
  m_textInfo=lfv(this.handle, "m_textInfo");
  m_havePropertiesChanged=lfv(this.handle, "m_havePropertiesChanged");
  m_isUsingLegacyAnimationComponent=lfv(this.handle, "m_isUsingLegacyAnimationComponent");
  m_transform=new i.UnityEngine_Transform_Impl(lfv(this.handle, "m_transform"));
  m_rectTransform=new e.UnityEngine_RectTransform(lfv(this.handle, "m_rectTransform"));
  m_autoSizeTextContainer=lfv(this.handle, "m_autoSizeTextContainer");
  m_mesh=lfv(this.handle, "m_mesh");
  m_isVolumetricText=lfv(this.handle, "m_isVolumetricText");
  m_spriteAnimator=lfv(this.handle, "m_spriteAnimator");
  m_flexibleHeight=lfv(this.handle, "m_flexibleHeight");
  m_flexibleWidth=lfv(this.handle, "m_flexibleWidth");
  m_minWidth=lfv(this.handle, "m_minWidth");
  m_minHeight=lfv(this.handle, "m_minHeight");
  m_maxWidth=lfv(this.handle, "m_maxWidth");
  m_maxHeight=lfv(this.handle, "m_maxHeight");
  m_LayoutElement=lfv(this.handle, "m_LayoutElement");
  m_preferredWidth=lfv(this.handle, "m_preferredWidth");
  m_renderedWidth=lfv(this.handle, "m_renderedWidth");
  m_isPreferredWidthDirty=lfv(this.handle, "m_isPreferredWidthDirty");
  m_preferredHeight=lfv(this.handle, "m_preferredHeight");
  m_renderedHeight=lfv(this.handle, "m_renderedHeight");
  m_isPreferredHeightDirty=lfv(this.handle, "m_isPreferredHeightDirty");
  m_isCalculatingPreferredValues=lfv(this.handle, "m_isCalculatingPreferredValues");
  m_recursiveCount=lfv(this.handle, "m_recursiveCount");
  m_layoutPriority=lfv(this.handle, "m_layoutPriority");
  m_isCalculateSizeRequired=lfv(this.handle, "m_isCalculateSizeRequired");
  m_isLayoutDirty=lfv(this.handle, "m_isLayoutDirty");
  m_verticesAlreadyDirty=lfv(this.handle, "m_verticesAlreadyDirty");
  m_layoutAlreadyDirty=lfv(this.handle, "m_layoutAlreadyDirty");
  m_isAwake=lfv(this.handle, "m_isAwake");
  m_isWaitingOnResourceLoad=lfv(this.handle, "m_isWaitingOnResourceLoad");
  m_isInputParsingRequired=lfv(this.handle, "m_isInputParsingRequired");
  m_inputSource=lfv(this.handle, "m_inputSource");
  old_text=lfv(this.handle, "old_text");
  m_fontScale=lfv(this.handle, "m_fontScale");
  m_fontScaleMultiplier=lfv(this.handle, "m_fontScaleMultiplier");
  m_htmlTag=lfv(this.handle, "m_htmlTag");
  m_xmlAttribute=lfv(this.handle, "m_xmlAttribute");
  m_attributeParameterValues=lfv(this.handle, "m_attributeParameterValues");
  tag_LineIndent=lfv(this.handle, "tag_LineIndent");
  tag_Indent=lfv(this.handle, "tag_Indent");
  tag_NoParsing=lfv(this.handle, "tag_NoParsing");
  m_isParsingText=lfv(this.handle, "m_isParsingText");
  m_FXMatrix=lfv(this.handle, "m_FXMatrix");
  m_isFXMatrixSet=lfv(this.handle, "m_isFXMatrixSet");
  m_input_CharArray=lfv(this.handle, "m_input_CharArray");
  m_charArray_Length=lfv(this.handle, "m_charArray_Length");
  m_totalCharacterCount=lfv(this.handle, "m_totalCharacterCount");
  m_SavedWordWrapState=lfv(this.handle, "m_SavedWordWrapState");
  m_SavedLineState=lfv(this.handle, "m_SavedLineState");
  m_characterCount=lfv(this.handle, "m_characterCount");
  m_firstCharacterOfLine=lfv(this.handle, "m_firstCharacterOfLine");
  m_firstVisibleCharacterOfLine=lfv(this.handle, "m_firstVisibleCharacterOfLine");
  m_lastCharacterOfLine=lfv(this.handle, "m_lastCharacterOfLine");
  m_lastVisibleCharacterOfLine=lfv(this.handle, "m_lastVisibleCharacterOfLine");
  m_lineNumber=lfv(this.handle, "m_lineNumber");
  m_lineVisibleCharacterCount=lfv(this.handle, "m_lineVisibleCharacterCount");
  m_pageNumber=lfv(this.handle, "m_pageNumber");
  m_maxAscender=lfv(this.handle, "m_maxAscender");
  m_maxCapHeight=lfv(this.handle, "m_maxCapHeight");
  m_maxDescender=lfv(this.handle, "m_maxDescender");
  m_maxLineAscender=lfv(this.handle, "m_maxLineAscender");
  m_maxLineDescender=lfv(this.handle, "m_maxLineDescender");
  m_startOfLineAscender=lfv(this.handle, "m_startOfLineAscender");
  m_lineOffset=lfv(this.handle, "m_lineOffset");
  m_meshExtents=lfv(this.handle, "m_meshExtents");
  m_htmlColor=lfv(this.handle, "m_htmlColor");
  m_tabSpacing=lfv(this.handle, "m_tabSpacing");
  m_spacing=lfv(this.handle, "m_spacing");
  m_padding=lfv(this.handle, "m_padding");
  m_baselineOffset=lfv(this.handle, "m_baselineOffset");
  m_xAdvance=lfv(this.handle, "m_xAdvance");
  m_textElementType=lfv(this.handle, "m_textElementType");
  m_cached_TextElement=lfv(this.handle, "m_cached_TextElement");
  m_cached_Underline_Character=lfv(this.handle, "m_cached_Underline_Character");
  m_cached_Ellipsis_Character=lfv(this.handle, "m_cached_Ellipsis_Character");
  m_defaultSpriteAsset=lfv(this.handle, "m_defaultSpriteAsset");
  m_currentSpriteAsset=lfv(this.handle, "m_currentSpriteAsset");
  m_spriteCount=lfv(this.handle, "m_spriteCount");
  m_spriteIndex=lfv(this.handle, "m_spriteIndex");
  m_spriteAnimationID=lfv(this.handle, "m_spriteAnimationID");
  m_ignoreActiveState=lfv(this.handle, "m_ignoreActiveState");
  k_Power=lfv(this.handle, "k_Power");
  k_LargePositiveVector2=lfv(this.handle, "k_LargePositiveVector2");
  k_LargeNegativeVector2=lfv(this.handle, "k_LargeNegativeVector2");
  k_LargePositiveFloat=lfv(this.handle, "k_LargePositiveFloat");
  k_LargeNegativeFloat=lfv(this.handle, "k_LargeNegativeFloat");
  k_LargePositiveInt=lfv(this.handle, "k_LargePositiveInt");
  k_LargeNegativeInt=lfv(this.handle, "k_LargeNegativeInt");
  constructor(e) {
    super(e);
  }
  get_text() {
    return readU16(Il2Cpp.Api.TMP_Text._get_text(this.handle));
  }
  set_text(e) {
    return Il2Cpp.Api.TMP_Text._set_text(this.handle, e);
  }
  get_isRightToLeftText() {
    return Il2Cpp.Api.TMP_Text._get_isRightToLeftText(this.handle);
  }
  set_isRightToLeftText(e) {
    return Il2Cpp.Api.TMP_Text._set_isRightToLeftText(this.handle, e);
  }
  get_font() {
    return Il2Cpp.Api.TMP_Text._get_font(this.handle);
  }
  set_font(e) {
    return Il2Cpp.Api.TMP_Text._set_font(this.handle, e);
  }
  get_fontSharedMaterial() {
    return Il2Cpp.Api.TMP_Text._get_fontSharedMaterial(this.handle);
  }
  set_fontSharedMaterial(e) {
    return Il2Cpp.Api.TMP_Text._set_fontSharedMaterial(this.handle, e);
  }
  get_fontSharedMaterials() {
    return Il2Cpp.Api.TMP_Text._get_fontSharedMaterials(this.handle);
  }
  set_fontSharedMaterials(e) {
    return Il2Cpp.Api.TMP_Text._set_fontSharedMaterials(this.handle, e);
  }
  get_fontMaterial() {
    return Il2Cpp.Api.TMP_Text._get_fontMaterial(this.handle);
  }
  set_fontMaterial(e) {
    return Il2Cpp.Api.TMP_Text._set_fontMaterial(this.handle, e);
  }
  get_fontMaterials() {
    return Il2Cpp.Api.TMP_Text._get_fontMaterials(this.handle);
  }
  set_fontMaterials(e) {
    return Il2Cpp.Api.TMP_Text._set_fontMaterials(this.handle, e);
  }
  get_color() {
    return new t.UnityEngine_Color_Impl(Il2Cpp.Api.TMP_Text._get_color(this.handle));
  }
  set_color(e) {
    return Il2Cpp.Api.TMP_Text._set_color(this.handle, e.handle);
  }
  get_alpha() {
    return Il2Cpp.Api.TMP_Text._get_alpha(this.handle);
  }
  set_alpha(e) {
    return Il2Cpp.Api.TMP_Text._set_alpha(this.handle, e);
  }
  get_enableVertexGradient() {
    return !Il2Cpp.Api.TMP_Text._get_enableVertexGradient(this.handle).isNull();
  }
  set_enableVertexGradient(e) {
    return Il2Cpp.Api.TMP_Text._set_enableVertexGradient(this.handle, e ? ptr(1) : ptr(0));
  }
  get_colorGradient() {
    return Il2Cpp.Api.TMP_Text._get_colorGradient(this.handle);
  }
  set_colorGradient(e) {
    return Il2Cpp.Api.TMP_Text._set_colorGradient(this.handle, e);
  }
  get_colorGradientPreset() {
    return Il2Cpp.Api.TMP_Text._get_colorGradientPreset(this.handle);
  }
  set_colorGradientPreset(e) {
    return Il2Cpp.Api.TMP_Text._set_colorGradientPreset(this.handle, e);
  }
  get_spriteAsset() {
    return Il2Cpp.Api.TMP_Text._get_spriteAsset(this.handle);
  }
  set_spriteAsset(e) {
    return Il2Cpp.Api.TMP_Text._set_spriteAsset(this.handle, e);
  }
  get_tintAllSprites() {
    return Il2Cpp.Api.TMP_Text._get_tintAllSprites(this.handle);
  }
  set_tintAllSprites(e) {
    return Il2Cpp.Api.TMP_Text._set_tintAllSprites(this.handle, e);
  }
  get_overrideColorTags() {
    return Il2Cpp.Api.TMP_Text._get_overrideColorTags(this.handle);
  }
  set_overrideColorTags(e) {
    return Il2Cpp.Api.TMP_Text._set_overrideColorTags(this.handle, e);
  }
  get_faceColor() {
    return Il2Cpp.Api.TMP_Text._get_faceColor(this.handle);
  }
  set_faceColor(e) {
    return Il2Cpp.Api.TMP_Text._set_faceColor(this.handle, e);
  }
  get_outlineColor() {
    return Il2Cpp.Api.TMP_Text._get_outlineColor(this.handle);
  }
  set_outlineColor(e) {
    return Il2Cpp.Api.TMP_Text._set_outlineColor(this.handle, e);
  }
  get_outlineWidth() {
    return Il2Cpp.Api.TMP_Text._get_outlineWidth(this.handle);
  }
  set_outlineWidth(e) {
    return Il2Cpp.Api.TMP_Text._set_outlineWidth(this.handle, e);
  }
  get_fontSize() {
    return Il2Cpp.Api.TMP_Text._get_fontSize(this.handle);
  }
  set_fontSize(e) {
    return Il2Cpp.Api.TMP_Text._set_fontSize(this.handle, e);
  }
  get_fontScale() {
    return Il2Cpp.Api.TMP_Text._get_fontScale(this.handle);
  }
  get_fontWeight() {
    return Il2Cpp.Api.TMP_Text._get_fontWeight(this.handle);
  }
  set_fontWeight(e) {
    return Il2Cpp.Api.TMP_Text._set_fontWeight(this.handle, e);
  }
  get_pixelsPerUnit() {
    return Il2Cpp.Api.TMP_Text._get_pixelsPerUnit(this.handle);
  }
  get_enableAutoSizing() {
    return Il2Cpp.Api.TMP_Text._get_enableAutoSizing(this.handle);
  }
  set_enableAutoSizing(e) {
    return Il2Cpp.Api.TMP_Text._set_enableAutoSizing(this.handle, e);
  }
  get_fontSizeMin() {
    return Il2Cpp.Api.TMP_Text._get_fontSizeMin(this.handle);
  }
  set_fontSizeMin(e) {
    return Il2Cpp.Api.TMP_Text._set_fontSizeMin(this.handle, e);
  }
  get_fontSizeMax() {
    return Il2Cpp.Api.TMP_Text._get_fontSizeMax(this.handle);
  }
  set_fontSizeMax(e) {
    return Il2Cpp.Api.TMP_Text._set_fontSizeMax(this.handle, e);
  }
  get_fontStyle() {
    return Il2Cpp.Api.TMP_Text._get_fontStyle(this.handle);
  }
  set_fontStyle(e) {
    return Il2Cpp.Api.TMP_Text._set_fontStyle(this.handle, e);
  }
  get_isUsingBold() {
    return Il2Cpp.Api.TMP_Text._get_isUsingBold(this.handle);
  }
  get_alignment() {
    return Il2Cpp.Api.TMP_Text._get_alignment(this.handle);
  }
  set_alignment(e) {
    return Il2Cpp.Api.TMP_Text._set_alignment(this.handle, e);
  }
  get_characterSpacing() {
    return Il2Cpp.Api.TMP_Text._get_characterSpacing(this.handle);
  }
  set_characterSpacing(e) {
    return Il2Cpp.Api.TMP_Text._set_characterSpacing(this.handle, e);
  }
  get_wordSpacing() {
    return Il2Cpp.Api.TMP_Text._get_wordSpacing(this.handle);
  }
  set_wordSpacing(e) {
    return Il2Cpp.Api.TMP_Text._set_wordSpacing(this.handle, e);
  }
  get_lineSpacing() {
    return Il2Cpp.Api.TMP_Text._get_lineSpacing(this.handle);
  }
  set_lineSpacing(e) {
    return Il2Cpp.Api.TMP_Text._set_lineSpacing(this.handle, e);
  }
  get_lineSpacingAdjustment() {
    return Il2Cpp.Api.TMP_Text._get_lineSpacingAdjustment(this.handle);
  }
  set_lineSpacingAdjustment(e) {
    return Il2Cpp.Api.TMP_Text._set_lineSpacingAdjustment(this.handle, e);
  }
  get_paragraphSpacing() {
    return Il2Cpp.Api.TMP_Text._get_paragraphSpacing(this.handle);
  }
  set_paragraphSpacing(e) {
    return Il2Cpp.Api.TMP_Text._set_paragraphSpacing(this.handle, e);
  }
  get_characterWidthAdjustment() {
    return Il2Cpp.Api.TMP_Text._get_characterWidthAdjustment(this.handle);
  }
  set_characterWidthAdjustment(e) {
    return Il2Cpp.Api.TMP_Text._set_characterWidthAdjustment(this.handle, e);
  }
  get_enableWordWrapping() {
    return Il2Cpp.Api.TMP_Text._get_enableWordWrapping(this.handle);
  }
  set_enableWordWrapping(e) {
    return Il2Cpp.Api.TMP_Text._set_enableWordWrapping(this.handle, e);
  }
  get_wordWrappingRatios() {
    return Il2Cpp.Api.TMP_Text._get_wordWrappingRatios(this.handle);
  }
  set_wordWrappingRatios(e) {
    return Il2Cpp.Api.TMP_Text._set_wordWrappingRatios(this.handle, e);
  }
  get_overflowMode() {
    return Il2Cpp.Api.TMP_Text._get_overflowMode(this.handle);
  }
  set_overflowMode(e) {
    return Il2Cpp.Api.TMP_Text._set_overflowMode(this.handle, e);
  }
  get_isTextOverflowing() {
    return Il2Cpp.Api.TMP_Text._get_isTextOverflowing(this.handle);
  }
  get_firstOverflowCharacterIndex() {
    return Il2Cpp.Api.TMP_Text._get_firstOverflowCharacterIndex(this.handle);
  }
  get_linkedTextComponent() {
    return new n(Il2Cpp.Api.TMP_Text._get_linkedTextComponent(this.handle));
  }
  set_linkedTextComponent(e) {
    return Il2Cpp.Api.TMP_Text._set_linkedTextComponent(this.handle, e.handle);
  }
  get_isLinkedTextComponent() {
    return !Il2Cpp.Api.TMP_Text._get_isLinkedTextComponent(this.handle).isNull();
  }
  set_isLinkedTextComponent(e) {
    return Il2Cpp.Api.TMP_Text._set_isLinkedTextComponent(this.handle, e ? ptr(1) : ptr(0));
  }
  get_isTextTruncated() {
    return Il2Cpp.Api.TMP_Text._get_isTextTruncated(this.handle);
  }
  get_enableKerning() {
    return Il2Cpp.Api.TMP_Text._get_enableKerning(this.handle);
  }
  set_enableKerning(e) {
    return Il2Cpp.Api.TMP_Text._set_enableKerning(this.handle, e);
  }
  get_extraPadding() {
    return Il2Cpp.Api.TMP_Text._get_extraPadding(this.handle);
  }
  set_extraPadding(e) {
    return Il2Cpp.Api.TMP_Text._set_extraPadding(this.handle, e);
  }
  get_richText() {
    return Il2Cpp.Api.TMP_Text._get_richText(this.handle);
  }
  set_richText(e) {
    return Il2Cpp.Api.TMP_Text._set_richText(this.handle, e);
  }
  get_parseCtrlCharacters() {
    return Il2Cpp.Api.TMP_Text._get_parseCtrlCharacters(this.handle);
  }
  set_parseCtrlCharacters(e) {
    return Il2Cpp.Api.TMP_Text._set_parseCtrlCharacters(this.handle, e);
  }
  get_isOverlay() {
    return Il2Cpp.Api.TMP_Text._get_isOverlay(this.handle);
  }
  set_isOverlay(e) {
    return Il2Cpp.Api.TMP_Text._set_isOverlay(this.handle, e);
  }
  get_isOrthographic() {
    return Il2Cpp.Api.TMP_Text._get_isOrthographic(this.handle);
  }
  set_isOrthographic(e) {
    return Il2Cpp.Api.TMP_Text._set_isOrthographic(this.handle, e);
  }
  get_enableCulling() {
    return Il2Cpp.Api.TMP_Text._get_enableCulling(this.handle);
  }
  set_enableCulling(e) {
    return Il2Cpp.Api.TMP_Text._set_enableCulling(this.handle, e);
  }
  get_ignoreRectMaskCulling() {
    return Il2Cpp.Api.TMP_Text._get_ignoreRectMaskCulling(this.handle);
  }
  set_ignoreRectMaskCulling(e) {
    return Il2Cpp.Api.TMP_Text._set_ignoreRectMaskCulling(this.handle, e);
  }
  get_ignoreVisibility() {
    return Il2Cpp.Api.TMP_Text._get_ignoreVisibility(this.handle);
  }
  set_ignoreVisibility(e) {
    return Il2Cpp.Api.TMP_Text._set_ignoreVisibility(this.handle, e);
  }
  get_horizontalMapping() {
    return Il2Cpp.Api.TMP_Text._get_horizontalMapping(this.handle);
  }
  set_horizontalMapping(e) {
    return Il2Cpp.Api.TMP_Text._set_horizontalMapping(this.handle, e);
  }
  get_verticalMapping() {
    return Il2Cpp.Api.TMP_Text._get_verticalMapping(this.handle);
  }
  set_verticalMapping(e) {
    return Il2Cpp.Api.TMP_Text._set_verticalMapping(this.handle, e);
  }
  get_mappingUvLineOffset() {
    return Il2Cpp.Api.TMP_Text._get_mappingUvLineOffset(this.handle);
  }
  set_mappingUvLineOffset(e) {
    return Il2Cpp.Api.TMP_Text._set_mappingUvLineOffset(this.handle, e);
  }
  get_renderMode() {
    return Il2Cpp.Api.TMP_Text._get_renderMode(this.handle);
  }
  set_renderMode(e) {
    return Il2Cpp.Api.TMP_Text._set_renderMode(this.handle, e);
  }
  get_geometrySortingOrder() {
    return Il2Cpp.Api.TMP_Text._get_geometrySortingOrder(this.handle);
  }
  set_geometrySortingOrder(e) {
    return Il2Cpp.Api.TMP_Text._set_geometrySortingOrder(this.handle, e);
  }
  get_vertexBufferAutoSizeReduction() {
    return Il2Cpp.Api.TMP_Text._get_vertexBufferAutoSizeReduction(this.handle);
  }
  set_vertexBufferAutoSizeReduction(e) {
    return Il2Cpp.Api.TMP_Text._set_vertexBufferAutoSizeReduction(this.handle, e);
  }
  get_firstVisibleCharacter() {
    return Il2Cpp.Api.TMP_Text._get_firstVisibleCharacter(this.handle);
  }
  set_firstVisibleCharacter(e) {
    return Il2Cpp.Api.TMP_Text._set_firstVisibleCharacter(this.handle, e);
  }
  get_maxVisibleCharacters() {
    return Il2Cpp.Api.TMP_Text._get_maxVisibleCharacters(this.handle);
  }
  set_maxVisibleCharacters(e) {
    return Il2Cpp.Api.TMP_Text._set_maxVisibleCharacters(this.handle, e);
  }
  get_maxVisibleWords() {
    return Il2Cpp.Api.TMP_Text._get_maxVisibleWords(this.handle);
  }
  set_maxVisibleWords(e) {
    return Il2Cpp.Api.TMP_Text._set_maxVisibleWords(this.handle, e);
  }
  get_maxVisibleLines() {
    return Il2Cpp.Api.TMP_Text._get_maxVisibleLines(this.handle);
  }
  set_maxVisibleLines(e) {
    return Il2Cpp.Api.TMP_Text._set_maxVisibleLines(this.handle, e);
  }
  get_useMaxVisibleDescender() {
    return Il2Cpp.Api.TMP_Text._get_useMaxVisibleDescender(this.handle);
  }
  set_useMaxVisibleDescender(e) {
    return Il2Cpp.Api.TMP_Text._set_useMaxVisibleDescender(this.handle, e);
  }
  get_pageToDisplay() {
    return Il2Cpp.Api.TMP_Text._get_pageToDisplay(this.handle);
  }
  set_pageToDisplay(e) {
    return Il2Cpp.Api.TMP_Text._set_pageToDisplay(this.handle, e);
  }
  get_margin() {
    return Il2Cpp.Api.TMP_Text._get_margin(this.handle);
  }
  set_margin(e) {
    return Il2Cpp.Api.TMP_Text._set_margin(this.handle, e);
  }
  get_textInfo() {
    return Il2Cpp.Api.TMP_Text._get_textInfo(this.handle);
  }
  get_havePropertiesChanged() {
    return Il2Cpp.Api.TMP_Text._get_havePropertiesChanged(this.handle);
  }
  set_havePropertiesChanged(e) {
    return Il2Cpp.Api.TMP_Text._set_havePropertiesChanged(this.handle, e);
  }
  get_isUsingLegacyAnimationComponent() {
    return Il2Cpp.Api.TMP_Text._get_isUsingLegacyAnimationComponent(this.handle);
  }
  set_isUsingLegacyAnimationComponent(e) {
    return Il2Cpp.Api.TMP_Text._set_isUsingLegacyAnimationComponent(this.handle, e);
  }
  get_transform() {
    return Il2Cpp.Api.TMP_Text._get_transform(this.handle);
  }
  get_rectTransform() {
    return new e.UnityEngine_RectTransform(Il2Cpp.Api.TMP_Text._get_rectTransform(this.handle));
  }
  get_autoSizeTextContainer() {
    return Il2Cpp.Api.TMP_Text._get_autoSizeTextContainer(this.handle);
  }
  set_autoSizeTextContainer(e) {
    return Il2Cpp.Api.TMP_Text._set_autoSizeTextContainer(this.handle, e);
  }
  get_mesh() {
    return Il2Cpp.Api.TMP_Text._get_mesh(this.handle);
  }
  get_isVolumetricText() {
    return Il2Cpp.Api.TMP_Text._get_isVolumetricText(this.handle);
  }
  set_isVolumetricText(e) {
    return Il2Cpp.Api.TMP_Text._set_isVolumetricText(this.handle, e);
  }
  get_bounds() {
    return Il2Cpp.Api.TMP_Text._get_bounds(this.handle);
  }
  get_textBounds() {
    return Il2Cpp.Api.TMP_Text._get_textBounds(this.handle);
  }
  get_spriteAnimator() {
    return Il2Cpp.Api.TMP_Text._get_spriteAnimator(this.handle);
  }
  get_flexibleHeight() {
    return Il2Cpp.Api.TMP_Text._get_flexibleHeight(this.handle);
  }
  get_flexibleWidth() {
    return Il2Cpp.Api.TMP_Text._get_flexibleWidth(this.handle);
  }
  get_minWidth() {
    return Il2Cpp.Api.TMP_Text._get_minWidth(this.handle);
  }
  get_minHeight() {
    return Il2Cpp.Api.TMP_Text._get_minHeight(this.handle);
  }
  get_maxWidth() {
    return Il2Cpp.Api.TMP_Text._get_maxWidth(this.handle);
  }
  get_maxHeight() {
    return Il2Cpp.Api.TMP_Text._get_maxHeight(this.handle);
  }
  get_layoutElement() {
    return Il2Cpp.Api.TMP_Text._get_layoutElement(this.handle);
  }
  get_preferredWidth() {
    return Il2Cpp.Api.TMP_Text._get_preferredWidth(this.handle);
  }
  get_preferredHeight() {
    return Il2Cpp.Api.TMP_Text._get_preferredHeight(this.handle);
  }
  get_renderedWidth() {
    return Il2Cpp.Api.TMP_Text._get_renderedWidth(this.handle);
  }
  get_renderedHeight() {
    return Il2Cpp.Api.TMP_Text._get_renderedHeight(this.handle);
  }
  get_layoutPriority() {
    return Il2Cpp.Api.TMP_Text._get_layoutPriority(this.handle);
  }
  LoadFontAsset() {
    return Il2Cpp.Api.TMP_Text._LoadFontAsset(this.handle);
  }
  SetSharedMaterial(e) {
    return Il2Cpp.Api.TMP_Text._SetSharedMaterial(this.handle, e);
  }
  GetMaterial(e) {
    return Il2Cpp.Api.TMP_Text._GetMaterial(this.handle, e);
  }
  SetFontBaseMaterial(e) {
    return Il2Cpp.Api.TMP_Text._SetFontBaseMaterial(this.handle, e);
  }
  GetSharedMaterials() {
    return Il2Cpp.Api.TMP_Text._GetSharedMaterials(this.handle);
  }
  SetSharedMaterials(e) {
    return Il2Cpp.Api.TMP_Text._SetSharedMaterials(this.handle, e);
  }
  GetMaterials(e) {
    return Il2Cpp.Api.TMP_Text._GetMaterials(this.handle, e);
  }
  CreateMaterialInstance(e) {
    return Il2Cpp.Api.TMP_Text._CreateMaterialInstance(this.handle, e);
  }
  SetVertexColorGradient(e) {
    return Il2Cpp.Api.TMP_Text._SetVertexColorGradient(this.handle, e);
  }
  SetTextSortingOrder(e) {
    return Il2Cpp.Api.TMP_Text._SetTextSortingOrder(this.handle, e);
  }
  SetTextSortingOrder_1(e) {
    return Il2Cpp.Api.TMP_Text._SetTextSortingOrder(this.handle, e);
  }
  SetFaceColor(e) {
    return Il2Cpp.Api.TMP_Text._SetFaceColor(this.handle, e);
  }
  SetOutlineColor(e) {
    return Il2Cpp.Api.TMP_Text._SetOutlineColor(this.handle, e);
  }
  SetOutlineThickness(e) {
    return Il2Cpp.Api.TMP_Text._SetOutlineThickness(this.handle, e);
  }
  SetShaderDepth() {
    return Il2Cpp.Api.TMP_Text._SetShaderDepth(this.handle);
  }
  SetCulling() {
    return Il2Cpp.Api.TMP_Text._SetCulling(this.handle);
  }
  GetPaddingForMaterial() {
    return Il2Cpp.Api.TMP_Text._GetPaddingForMaterial(this.handle);
  }
  GetPaddingForMaterial_1(e) {
    return Il2Cpp.Api.TMP_Text._GetPaddingForMaterial(this.handle, e);
  }
  GetTextContainerLocalCorners() {
    return Il2Cpp.Api.TMP_Text._GetTextContainerLocalCorners(this.handle);
  }
  ForceMeshUpdate() {
    return Il2Cpp.Api.TMP_Text._ForceMeshUpdate(this.handle);
  }
  ForceMeshUpdate_1(e) {
    return Il2Cpp.Api.TMP_Text._ForceMeshUpdate(this.handle, e);
  }
  SetTextInternal(e) {
    return Il2Cpp.Api.TMP_Text._SetTextInternal(this.handle, e);
  }
  UpdateGeometry_2(e, t) {
    return Il2Cpp.Api.TMP_Text._UpdateGeometry(this.handle, e, t);
  }
  UpdateVertexData(e) {
    return Il2Cpp.Api.TMP_Text._UpdateVertexData(this.handle, e);
  }
  UpdateVertexData_0() {
    return Il2Cpp.Api.TMP_Text._UpdateVertexData(this.handle);
  }
  SetVertices(e) {
    return Il2Cpp.Api.TMP_Text._SetVertices(this.handle, e);
  }
  UpdateMeshPadding() {
    return Il2Cpp.Api.TMP_Text._UpdateMeshPadding(this.handle);
  }
  CrossFadeColor(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._CrossFadeColor(this.handle, e, t, i, r);
  }
  CrossFadeAlpha_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._CrossFadeAlpha(this.handle, e, t, i);
  }
  InternalCrossFadeColor(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._InternalCrossFadeColor(this.handle, e, t, i, r);
  }
  InternalCrossFadeAlpha(e, t, i) {
    return Il2Cpp.Api.TMP_Text._InternalCrossFadeAlpha(this.handle, e, t, i);
  }
  ParseInputText() {
    return Il2Cpp.Api.TMP_Text._ParseInputText(this.handle);
  }
  SetText(e) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e);
  }
  SetText_string_bool(e, t) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e, t);
  }
  SetText_string_number(e, t) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e, t);
  }
  SetText_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e, t, i);
  }
  SetText_4(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e, t, i, r);
  }
  SetText_1(e) {
    return Il2Cpp.Api.TMP_Text._SetText(this.handle, e);
  }
  SetCharArray(e) {
    return Il2Cpp.Api.TMP_Text._SetCharArray(this.handle, e);
  }
  SetCharArray_char(e, t, i) {
    return Il2Cpp.Api.TMP_Text._SetCharArray(this.handle, e, t, i);
  }
  SetCharArray_num(e, t, i) {
    return Il2Cpp.Api.TMP_Text._SetCharArray(this.handle, e, t, i);
  }
  SetTextArrayToCharArray(e, t) {
    return Il2Cpp.Api.TMP_Text._SetTextArrayToCharArray(this.handle, e, t);
  }
  StringToCharArray(e, t) {
    return Il2Cpp.Api.TMP_Text._StringToCharArray(this.handle, e, t);
  }
  StringBuilderToIntArray(e, t) {
    return Il2Cpp.Api.TMP_Text._StringBuilderToIntArray(this.handle, e, t);
  }
  ReplaceOpeningStyleTag(e, t, i, r, n) {
    return Il2Cpp.Api.TMP_Text._ReplaceOpeningStyleTag(this.handle, e, t, i, r, n);
  }
  ReplaceOpeningStyleTag_5(e, t, i, r, n) {
    return Il2Cpp.Api.TMP_Text._ReplaceOpeningStyleTag(this.handle, e, t, i, r, n);
  }
  ReplaceClosingStyleTag(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._ReplaceClosingStyleTag(this.handle, e, t, i, r);
  }
  IsTagName(e, t, i) {
    return Il2Cpp.Api.TMP_Text._IsTagName(this.handle, e, t, i);
  }
  IsTagName_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._IsTagName(this.handle, e, t, i);
  }
  GetTagHashCode(e, t, i) {
    return Il2Cpp.Api.TMP_Text._GetTagHashCode(this.handle, e, t, i);
  }
  GetTagHashCode_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._GetTagHashCode(this.handle, e, t, i);
  }
  AddFloatToCharArray(e, t, i) {
    return Il2Cpp.Api.TMP_Text._AddFloatToCharArray(this.handle, e, t, i);
  }
  AddIntToCharArray(e, t, i) {
    return Il2Cpp.Api.TMP_Text._AddIntToCharArray(this.handle, e, t, i);
  }
  SetArraySizes(e) {
    return Il2Cpp.Api.TMP_Text._SetArraySizes(this.handle, e);
  }
  GenerateTextMesh() {
    return Il2Cpp.Api.TMP_Text._GenerateTextMesh(this.handle);
  }
  GetPreferredValues() {
    return Il2Cpp.Api.TMP_Text._GetPreferredValues(this.handle);
  }
  GetPreferredValues_2(e, t) {
    return Il2Cpp.Api.TMP_Text._GetPreferredValues(this.handle, e, t);
  }
  GetPreferredValues_1(e) {
    return Il2Cpp.Api.TMP_Text._GetPreferredValues(this.handle, e);
  }
  GetPreferredValues_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._GetPreferredValues(this.handle, e, t, i);
  }
  GetPreferredWidth() {
    return Il2Cpp.Api.TMP_Text._GetPreferredWidth(this.handle);
  }
  GetPreferredWidth_1(e) {
    return Il2Cpp.Api.TMP_Text._GetPreferredWidth(this.handle, e);
  }
  GetPreferredHeight() {
    return Il2Cpp.Api.TMP_Text._GetPreferredHeight(this.handle);
  }
  GetPreferredHeight_1(e) {
    return Il2Cpp.Api.TMP_Text._GetPreferredHeight(this.handle, e);
  }
  GetRenderedValues() {
    return Il2Cpp.Api.TMP_Text._GetRenderedValues(this.handle);
  }
  GetRenderedValues_1(e) {
    return Il2Cpp.Api.TMP_Text._GetRenderedValues(this.handle, e);
  }
  GetRenderedWidth() {
    return Il2Cpp.Api.TMP_Text._GetRenderedWidth(this.handle);
  }
  GetRenderedWidth_1(e) {
    return Il2Cpp.Api.TMP_Text._GetRenderedWidth(this.handle, e);
  }
  GetRenderedHeight() {
    return Il2Cpp.Api.TMP_Text._GetRenderedHeight(this.handle);
  }
  GetRenderedHeight_1(e) {
    return Il2Cpp.Api.TMP_Text._GetRenderedHeight(this.handle, e);
  }
  CalculatePreferredValues(e, t, i) {
    return Il2Cpp.Api.TMP_Text._CalculatePreferredValues(this.handle, e, t, i);
  }
  GetCompoundBounds() {
    return Il2Cpp.Api.TMP_Text._GetCompoundBounds(this.handle);
  }
  GetTextBounds() {
    return Il2Cpp.Api.TMP_Text._GetTextBounds(this.handle);
  }
  GetTextBounds_1(e) {
    return Il2Cpp.Api.TMP_Text._GetTextBounds(this.handle, e);
  }
  AdjustLineOffset(e, t, i) {
    return Il2Cpp.Api.TMP_Text._AdjustLineOffset(this.handle, e, t, i);
  }
  ResizeLineExtents(e) {
    return Il2Cpp.Api.TMP_Text._ResizeLineExtents(this.handle, e);
  }
  GetTextInfo(e) {
    return Il2Cpp.Api.TMP_Text._GetTextInfo(this.handle, e);
  }
  ComputeMarginSize() {
    return Il2Cpp.Api.TMP_Text._ComputeMarginSize(this.handle);
  }
  SaveWordWrappingState(e, t, i) {
    return Il2Cpp.Api.TMP_Text._SaveWordWrappingState(this.handle, e, t, i);
  }
  RestoreWordWrappingState(e) {
    return Il2Cpp.Api.TMP_Text._RestoreWordWrappingState(this.handle, e);
  }
  SaveGlyphVertexInfo(e, t, i) {
    return Il2Cpp.Api.TMP_Text._SaveGlyphVertexInfo(this.handle, e, t, i);
  }
  SaveSpriteVertexInfo(e) {
    return Il2Cpp.Api.TMP_Text._SaveSpriteVertexInfo(this.handle, e);
  }
  FillCharacterVertexBuffers(e, t) {
    return Il2Cpp.Api.TMP_Text._FillCharacterVertexBuffers(this.handle, e, t);
  }
  FillCharacterVertexBuffers_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._FillCharacterVertexBuffers(this.handle, e, t, i);
  }
  FillSpriteVertexBuffers(e, t) {
    return Il2Cpp.Api.TMP_Text._FillSpriteVertexBuffers(this.handle, e, t);
  }
  DrawUnderlineMesh(e, t, i, r, n, l, a, _) {
    return Il2Cpp.Api.TMP_Text._DrawUnderlineMesh(this.handle, e, t, i, r, n, l, a, _);
  }
  DrawTextHighlight(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._DrawTextHighlight(this.handle, e, t, i, r);
  }
  LoadDefaultSettings() {
    return Il2Cpp.Api.TMP_Text._LoadDefaultSettings(this.handle);
  }
  GetSpecialCharacters(e) {
    return Il2Cpp.Api.TMP_Text._GetSpecialCharacters(this.handle, e);
  }
  ReplaceTagWithCharacter(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._ReplaceTagWithCharacter(this.handle, e, t, i, r);
  }
  GetFontAssetForWeight(e) {
    return Il2Cpp.Api.TMP_Text._GetFontAssetForWeight(this.handle, e);
  }
  SetActiveSubMeshes(e) {
    return Il2Cpp.Api.TMP_Text._SetActiveSubMeshes(this.handle, e);
  }
  ClearSubMeshObjects() {
    return Il2Cpp.Api.TMP_Text._ClearSubMeshObjects(this.handle);
  }
  ClearMesh() {
    return Il2Cpp.Api.TMP_Text._ClearMesh(this.handle);
  }
  ClearMesh_1(e) {
    return Il2Cpp.Api.TMP_Text._ClearMesh(this.handle, e);
  }
  GetParsedText() {
    return readU16(Il2Cpp.Api.TMP_Text._GetParsedText(this.handle));
  }
  PackUV(e, t, i) {
    return Il2Cpp.Api.TMP_Text._PackUV(this.handle, e, t, i);
  }
  PackUV_2(e, t) {
    return Il2Cpp.Api.TMP_Text._PackUV(this.handle, e, t);
  }
  InternalUpdate() {
    return Il2Cpp.Api.TMP_Text._InternalUpdate(this.handle);
  }
  HexToInt(e) {
    return Il2Cpp.Api.TMP_Text._HexToInt(this.handle, e);
  }
  GetUTF16(e, t) {
    return Il2Cpp.Api.TMP_Text._GetUTF16(this.handle, e, t);
  }
  GetUTF16_2(e, t) {
    return Il2Cpp.Api.TMP_Text._GetUTF16(this.handle, e, t);
  }
  GetUTF32(e, t) {
    return Il2Cpp.Api.TMP_Text._GetUTF32(this.handle, e, t);
  }
  GetUTF32_2(e, t) {
    return Il2Cpp.Api.TMP_Text._GetUTF32(this.handle, e, t);
  }
  HexCharsToColor(e, t) {
    return Il2Cpp.Api.TMP_Text._HexCharsToColor(this.handle, e, t);
  }
  HexCharsToColor_3(e, t, i) {
    return Il2Cpp.Api.TMP_Text._HexCharsToColor(this.handle, e, t, i);
  }
  GetAttributeParameters(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._GetAttributeParameters(this.handle, e, t, i, r);
  }
  ConvertToFloat(e, t, i) {
    return Il2Cpp.Api.TMP_Text._ConvertToFloat(this.handle, e, t, i);
  }
  ConvertToFloat_4(e, t, i, r) {
    return Il2Cpp.Api.TMP_Text._ConvertToFloat(this.handle, e, t, i, r);
  }
  ValidateHtmlTag(e, t, i) {
    return Il2Cpp.Api.TMP_Text._ValidateHtmlTag(this.handle, e, t, i);
  }
  _ctor() {
    return Il2Cpp.Api.TMP_Text.__ctor(this.handle);
  }
  static _cctor() {
    return Il2Cpp.Api.TMP_Text.__cctor();
  }
}

exports.TMPro_TMP_Text_Impl = n, Il2Cpp.TMP_Text = n;

},{"../../../../../../../../ValueType/Color/class":379,"../../../../../../Transform/RectTransform/class":267,"../../../../../../Transform/class":271,"../class":222}],215:[function(require,module,exports){
"use strict";

},{}],216:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./TextMeshPro/include"), require("./TextMeshProUGUI/include"), require("./api"), 
require("./class"), require("./export");

},{"./TextMeshPro/include":212,"./TextMeshProUGUI/include":208,"./api":213,"./class":214,"./export":215}],217:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, p = arguments.length, g = p < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) g = Reflect.decorate(t, e, n, i); else for (var l = t.length - 1; l >= 0; l--) (r = t[l]) && (g = (p < 3 ? r(g) : p > 3 ? r(e, n, g) : r(e, n)) || g);
  return p > 3 && g && Object.defineProperty(e, n, g), g;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _get_cachedTextGenerator() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_cachedTextGenerator", 0, "pointer", [ "pointer" ]);
  }
  static get _get_cachedTextGeneratorForLayout() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_cachedTextGeneratorForLayout", 0, "pointer", [ "pointer" ]);
  }
  static get _get_mainTexture() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_mainTexture", 0, "pointer", [ "pointer" ]);
  }
  static get _FontTextureChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "FontTextureChanged", 0, "void", [ "pointer" ]);
  }
  static get _get_font() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_font", 0, "pointer", [ "pointer" ]);
  }
  static get _set_font() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_font", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_text() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_text", 0, "pointer", [ "pointer" ]);
  }
  static get _set_text() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_text", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_supportRichText() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_supportRichText", 0, "pointer", [ "pointer" ]);
  }
  static get _set_supportRichText() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_supportRichText", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_resizeTextForBestFit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_resizeTextForBestFit", 0, "pointer", [ "pointer" ]);
  }
  static get _set_resizeTextForBestFit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_resizeTextForBestFit", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_resizeTextMinSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_resizeTextMinSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_resizeTextMinSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_resizeTextMinSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_resizeTextMaxSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_resizeTextMaxSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_resizeTextMaxSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_resizeTextMaxSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_alignment() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_alignment", 0, "pointer", [ "pointer" ]);
  }
  static get _set_alignment() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_alignment", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_alignByGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_alignByGeometry", 0, "pointer", [ "pointer" ]);
  }
  static get _set_alignByGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_alignByGeometry", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_fontSize", 0, "pointer", [ "pointer" ]);
  }
  static get _set_fontSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_fontSize", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_horizontalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_horizontalOverflow", 0, "pointer", [ "pointer" ]);
  }
  static get _set_horizontalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_horizontalOverflow", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_verticalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_verticalOverflow", 0, "pointer", [ "pointer" ]);
  }
  static get _set_verticalOverflow() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_verticalOverflow", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_lineSpacing() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_lineSpacing", 0, "pointer", [ "pointer" ]);
  }
  static get _set_lineSpacing() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_lineSpacing", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_fontStyle() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_fontStyle", 0, "pointer", [ "pointer" ]);
  }
  static get _set_fontStyle() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "set_fontStyle", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_pixelsPerUnit() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_pixelsPerUnit", 0, "pointer", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "OnEnable", 0, "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "OnDisable", 0, "void", [ "pointer" ]);
  }
  static get _UpdateGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "UpdateGeometry", 0, "void", [ "pointer" ]);
  }
  static get _AssignDefaultFont() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "AssignDefaultFont", 0, "void", [ "pointer" ]);
  }
  static get _GetGenerationSettings() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "GetGenerationSettings", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTextAnchorPivot() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "GetTextAnchorPivot", 1, "pointer", [ "pointer" ]);
  }
  static get _OnPopulateMesh() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "OnPopulateMesh", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "CalculateLayoutInputHorizontal", 0, "void", [ "pointer" ]);
  }
  static get _CalculateLayoutInputVertical() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "CalculateLayoutInputVertical", 0, "void", [ "pointer" ]);
  }
  static get _get_minWidth() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_minWidth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_preferredWidth() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_preferredWidth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_flexibleWidth() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_flexibleWidth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_minHeight() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_minHeight", 0, "pointer", [ "pointer" ]);
  }
  static get _get_preferredHeight() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_preferredHeight", 0, "pointer", [ "pointer" ]);
  }
  static get _get_flexibleHeight() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_flexibleHeight", 0, "pointer", [ "pointer" ]);
  }
  static get _get_layoutPriority() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", "get_layoutPriority", 0, "pointer", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Text", ".cctor", 0, "void", []);
  }
}

t([ e.cache ], n, "__ctor", null), t([ e.cache ], n, "_get_cachedTextGenerator", null), 
t([ e.cache ], n, "_get_cachedTextGeneratorForLayout", null), t([ e.cache ], n, "_get_mainTexture", null), 
t([ e.cache ], n, "_FontTextureChanged", null), t([ e.cache ], n, "_get_font", null), 
t([ e.cache ], n, "_set_font", null), t([ e.cache ], n, "_get_text", null), t([ e.cache ], n, "_set_text", null), 
t([ e.cache ], n, "_get_supportRichText", null), t([ e.cache ], n, "_set_supportRichText", null), 
t([ e.cache ], n, "_get_resizeTextForBestFit", null), t([ e.cache ], n, "_set_resizeTextForBestFit", null), 
t([ e.cache ], n, "_get_resizeTextMinSize", null), t([ e.cache ], n, "_set_resizeTextMinSize", null), 
t([ e.cache ], n, "_get_resizeTextMaxSize", null), t([ e.cache ], n, "_set_resizeTextMaxSize", null), 
t([ e.cache ], n, "_get_alignment", null), t([ e.cache ], n, "_set_alignment", null), 
t([ e.cache ], n, "_get_alignByGeometry", null), t([ e.cache ], n, "_set_alignByGeometry", null), 
t([ e.cache ], n, "_get_fontSize", null), t([ e.cache ], n, "_set_fontSize", null), 
t([ e.cache ], n, "_get_horizontalOverflow", null), t([ e.cache ], n, "_set_horizontalOverflow", null), 
t([ e.cache ], n, "_get_verticalOverflow", null), t([ e.cache ], n, "_set_verticalOverflow", null), 
t([ e.cache ], n, "_get_lineSpacing", null), t([ e.cache ], n, "_set_lineSpacing", null), 
t([ e.cache ], n, "_get_fontStyle", null), t([ e.cache ], n, "_set_fontStyle", null), 
t([ e.cache ], n, "_get_pixelsPerUnit", null), t([ e.cache ], n, "_OnEnable", null), 
t([ e.cache ], n, "_OnDisable", null), t([ e.cache ], n, "_UpdateGeometry", null), 
t([ e.cache ], n, "_AssignDefaultFont", null), t([ e.cache ], n, "_GetGenerationSettings", null), 
t([ e.cache ], n, "_GetTextAnchorPivot", null), t([ e.cache ], n, "_OnPopulateMesh", null), 
t([ e.cache ], n, "_CalculateLayoutInputHorizontal", null), t([ e.cache ], n, "_CalculateLayoutInputVertical", null), 
t([ e.cache ], n, "_get_minWidth", null), t([ e.cache ], n, "_get_preferredWidth", null), 
t([ e.cache ], n, "_get_flexibleWidth", null), t([ e.cache ], n, "_get_minHeight", null), 
t([ e.cache ], n, "_get_preferredHeight", null), t([ e.cache ], n, "_get_flexibleHeight", null), 
t([ e.cache ], n, "_get_layoutPriority", null), t([ e.cache ], n, "__cctor", null), 
Il2Cpp.Api.Text = n;

},{"decorator-cache-getter":513}],218:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Text = void 0;

const e = require("../../../../../../../../FontData/class"), t = require("../class");

class i extends t.UnityEngine_UI_MaskableGraphic_Impl {
  m_FontData=new e.UnityEngine_UI_FontData_Impl(lfv(this.handle, "m_FontData"));
  m_Text=readU16(lfv(this.handle, "m_Text"));
  m_TextCache=lfv(this.handle, "m_TextCache");
  m_TextCacheForLayout=lfv(this.handle, "m_TextCacheForLayout");
  s_DefaultText=lfv(this.handle, "s_DefaultText");
  m_DisableFontTextureRebuiltCallback=lfv(this.handle, "m_DisableFontTextureRebuiltCallback");
  m_TempVerts=lfv(this.handle, "m_TempVerts");
  _ctor_UnityEngine_UI_Text() {
    return Il2Cpp.Api.Text.__ctor(this.handle);
  }
  get_cachedTextGenerator() {
    return Il2Cpp.Api.Text._get_cachedTextGenerator(this.handle);
  }
  get_cachedTextGeneratorForLayout() {
    return Il2Cpp.Api.Text._get_cachedTextGeneratorForLayout(this.handle);
  }
  get_mainTexture() {
    return Il2Cpp.Api.Text._get_mainTexture(this.handle);
  }
  FontTextureChanged() {
    return Il2Cpp.Api.Text._FontTextureChanged(this.handle);
  }
  get_font() {
    return Il2Cpp.Api.Text._get_font(this.handle);
  }
  set_font(e) {
    return Il2Cpp.Api.Text._set_font(this.handle, e);
  }
  get_text() {
    return readU16(Il2Cpp.Api.Text._get_text(this.handle));
  }
  set_text(e) {
    return Il2Cpp.Api.Text._set_text(this.handle, allocUStr(e));
  }
  get_supportRichText() {
    return Il2Cpp.Api.Text._get_supportRichText(this.handle);
  }
  set_supportRichText(e) {
    return Il2Cpp.Api.Text._set_supportRichText(this.handle, e);
  }
  get_resizeTextForBestFit() {
    return Il2Cpp.Api.Text._get_resizeTextForBestFit(this.handle);
  }
  set_resizeTextForBestFit(e) {
    return Il2Cpp.Api.Text._set_resizeTextForBestFit(this.handle, e);
  }
  get_resizeTextMinSize() {
    return Il2Cpp.Api.Text._get_resizeTextMinSize(this.handle);
  }
  set_resizeTextMinSize(e) {
    return Il2Cpp.Api.Text._set_resizeTextMinSize(this.handle, e);
  }
  get_resizeTextMaxSize() {
    return Il2Cpp.Api.Text._get_resizeTextMaxSize(this.handle);
  }
  set_resizeTextMaxSize(e) {
    return Il2Cpp.Api.Text._set_resizeTextMaxSize(this.handle, e);
  }
  get_alignment() {
    return Il2Cpp.Api.Text._get_alignment(this.handle);
  }
  set_alignment(e) {
    return Il2Cpp.Api.Text._set_alignment(this.handle, e);
  }
  get_alignByGeometry() {
    return Il2Cpp.Api.Text._get_alignByGeometry(this.handle);
  }
  set_alignByGeometry(e) {
    return Il2Cpp.Api.Text._set_alignByGeometry(this.handle, e);
  }
  get_fontSize() {
    return Il2Cpp.Api.Text._get_fontSize(this.handle);
  }
  set_fontSize(e) {
    return Il2Cpp.Api.Text._set_fontSize(this.handle, e);
  }
  get_horizontalOverflow() {
    return Il2Cpp.Api.Text._get_horizontalOverflow(this.handle);
  }
  set_horizontalOverflow(e) {
    return Il2Cpp.Api.Text._set_horizontalOverflow(this.handle, e);
  }
  get_verticalOverflow() {
    return Il2Cpp.Api.Text._get_verticalOverflow(this.handle);
  }
  set_verticalOverflow(e) {
    return Il2Cpp.Api.Text._set_verticalOverflow(this.handle, e);
  }
  get_lineSpacing() {
    return Il2Cpp.Api.Text._get_lineSpacing(this.handle);
  }
  set_lineSpacing(e) {
    return Il2Cpp.Api.Text._set_lineSpacing(this.handle, e);
  }
  get_fontStyle() {
    return Il2Cpp.Api.Text._get_fontStyle(this.handle);
  }
  set_fontStyle(e) {
    return Il2Cpp.Api.Text._set_fontStyle(this.handle, e);
  }
  get_pixelsPerUnit() {
    return Il2Cpp.Api.Text._get_pixelsPerUnit(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.Text._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.Text._OnDisable(this.handle);
  }
  UpdateGeometry() {
    return Il2Cpp.Api.Text._UpdateGeometry(this.handle);
  }
  AssignDefaultFont() {
    return Il2Cpp.Api.Text._AssignDefaultFont(this.handle);
  }
  GetGenerationSettings(e) {
    return Il2Cpp.Api.Text._GetGenerationSettings(this.handle, e);
  }
  GetTextAnchorPivot(e) {
    return Il2Cpp.Api.Text._GetTextAnchorPivot(e);
  }
  OnPopulateMesh(e) {
    return Il2Cpp.Api.Text._OnPopulateMesh(this.handle, e);
  }
  CalculateLayoutInputHorizontal() {
    return Il2Cpp.Api.Text._CalculateLayoutInputHorizontal(this.handle);
  }
  CalculateLayoutInputVertical() {
    return Il2Cpp.Api.Text._CalculateLayoutInputVertical(this.handle);
  }
  get_minWidth() {
    return Il2Cpp.Api.Text._get_minWidth(this.handle);
  }
  get_preferredWidth() {
    return Il2Cpp.Api.Text._get_preferredWidth(this.handle);
  }
  get_flexibleWidth() {
    return Il2Cpp.Api.Text._get_flexibleWidth(this.handle);
  }
  get_minHeight() {
    return Il2Cpp.Api.Text._get_minHeight(this.handle);
  }
  get_preferredHeight() {
    return Il2Cpp.Api.Text._get_preferredHeight(this.handle);
  }
  get_flexibleHeight() {
    return Il2Cpp.Api.Text._get_flexibleHeight(this.handle);
  }
  get_layoutPriority() {
    return Il2Cpp.Api.Text._get_layoutPriority(this.handle);
  }
  _cctor() {
    return Il2Cpp.Api.Text.__cctor();
  }
}

exports.Text = i;

},{"../../../../../../../../FontData/class":122,"../class":222}],219:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../../../../../../../../../../utils/common"), e = () => {
  let e = new Map, n = new Map;
  n.set("SETTINGS", "设置"), n.set("選擇角色", "选择角色"), n.set("ADDED", "已添加"), n.set("ON", "开"), 
  n.set("Loading...", "加载中..."), n.set("More games", "更多游戏");
  try {
    LOGD("Enable TMP_Text Hook".padEnd(30, " ") + "| class : " + findClass("TMP_Text")), 
    l = !1, A(find_method("Unity.TextMeshPro", "TMP_Text", "get_transform", 0), ((e, s) => {
      let i = "|" + readU16(callFunction([ "Unity.TextMeshPro", "TMP_Text", "get_text", 0 ], e[0])) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(e[0]), 30) && (r(e[0], "TMP_Text"), LOGD("\n[TMP_Text]  " + e[0] + "\t" + i + "\t" + getPlatformCtx(s).lr), 
      0 != n.size)) {
        let t = n.get(i.substring(1, i.length - 1));
        null != t && (callFunction(find_method("Unity.TextMeshPro", "TMP_Text", "set_text", 1), e[0], allocCStr(t)), 
        LOGH(" \n\t {REP} " + i + " ---\x3e " + t)), null != l && 1 == l && showGameObject(e[0]);
      }
    }));
  } catch {
    LOGE("Unity.TextMeshPro.TMP_Text.get_transform NOT FOUND !");
  }
  var l;
  try {
    LOGD("Enable TextMeshPro Hook".padEnd(30, " ") + "| class : " + findClass("TextMeshPro")), 
    A(Il2Cpp.Api.TextMeshPro._get_transform, (e => {
      let l = "|" + new Il2Cpp.TMP_Text(e[0]).get_text() + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(e[0])) && (r(e[0], "TextMeshPro"), LOG("\n[TextMeshPro]  " + e[0] + "\t" + l, LogColor.C35), 
      0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (callFunction(find_method("Unity.TextMeshPro", "TextMeshPro", "set_text", 1), e[0], allocCStr(t)), 
        LOGH(" \n\t {REP} " + l + " ---\x3e " + t));
      }
    }));
  } catch {
    LOGE("Unity.TextMeshPro.TextMeshPro.get_transform NOT FOUND !");
  }
  try {
    LOGD("Enable Text Hook".padEnd(30, " ") + "| class : " + findClass("Text")), function(e) {
      null == e && (e = !1);
      A(Il2Cpp.Api.Text._get_text, (t => {
        r(t[0], "Text"), e && new Il2Cpp.Component(t[0]).get_gameObject().showSelf();
      }), ((e, l) => {
        let r = "|" + readU16(e) + "|";
        if (-1 != (0, t.filterDuplicateOBJ)(String(e)) && (getPlatformCtx, LOGG("\n[Text_Get]  " + getPlatformCtxWithArgV(l, 0) + "\t" + r), 
        0 != n.size)) {
          let t = n.get(r.substring(1, r.length - 1));
          null != t && (e.replace(allocUStr(t)), LOGH(` \n\t {REP} ${r} ---\x3e ${t}`));
        }
      })), A(Il2Cpp.Api.Text._set_text, ((l, s) => {
        if (-1 == (0, t.filterDuplicateOBJ)(String(l[1]))) return;
        r(l[0], "Text");
        let i = "|" + readU16(l[1]) + "|";
        if (LOGO("\n[Text_Set]  " + l[0] + "\t" + i), 0 != n.size) {
          let t = n.get(i.substring(1, i.length - 1));
          null != t && (l[1] = allocUStr(t), LOGH(` \n\t {REP} ${i} ---\x3e ${t}`)), e && new Il2Cpp.Component(l[0]).get_gameObject().showSelf();
        }
      }));
    }(!1);
  } catch {
    LOGE("UnityEngine.UI.Text.get_text/set_text NOT FOUND!");
  }
  try {
    LOGD("Enable TrackText Hook".padEnd(30, " ") + "| class : " + findClass("FontUpdateTracker")), 
    A(find_method("UnityEngine.UI", "FontUpdateTracker", "TrackText", 1), (e => {
      let l = "|" + callFunctionRUS([ "UnityEngine.UI", "Text", "get_text", 0 ], e[0]) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(String(callFunctionRUS([ "UnityEngine.UI", "Text", "get_text", 0 ], e[0]))) && (LOGD(`\n[FontUpdateTracker] ${e[0]} \t ${l}`), 
      r(e[0], "Text"), 0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (e[1] = allocUStr(t), LOGH(` \n\t {REP} ${l} ---\x3e ${t}`));
      }
    }));
  } catch {
    LOGE("UnityEngine.UI.FontUpdateTracker.TrackText NOT FOUND !");
  }
  try {
    LOGD("Enable Print Hook".padEnd(30, " ") + "| class : " + findClass("NGUIText")), 
    A(find_method("Assembly-CSharp", "NGUIText", "Print", 4), (e => {
      let l = "|" + readU16(e[0]) + "|";
      if (-1 != (0, t.filterDuplicateOBJ)(l) && (LOGD(`\n[NGUIText] ${e[0]} \t ${l}`), 
      r(e[0], "Text", !0), 0 != n.size)) {
        let t = n.get(l.substring(1, l.length - 1));
        null != t && (e[0] = allocUStr(t), LOGH(` \n\t {REP} ${l} ---\x3e ${t}`));
      }
    }));
  } catch {
    LOGE("NGUIText.Print NOT FOUND !");
  }
  function r(t, n, l = !1) {
    if (null == e.get(n) && (e.set(n, 1), getTypeParent(t)), l) try {
      let e = t.add(2 * p_size), n = Memory.scanSync(e, (.5 * e.readInt() + 3) * p_size, "00 00 00 00")[0].address;
      LOGO("\t" + hexdump(e.add(p_size), {
        length: n.sub(e).sub(p_size).toInt32(),
        header: !1
      }));
    } catch (t) {}
  }
};

globalThis.B_Text = e;

},{"../../../../../../../../../../../utils/common":502}],220:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":217,"./class":218,"./export":219}],221:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var a, l = arguments.length, p = l < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var r = e.length - 1; r >= 0; r--) (a = e[r]) && (p = (l < 3 ? a(p) : l > 3 ? a(t, n, p) : a(t, n)) || p);
  return l > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.MaskableGraphicApi = void 0;

const t = require("decorator-cache-getter");

class n {
  static get _get_onCullStateChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "get_onCullStateChanged", 0, "pointer", [ "pointer" ]);
  }
  static get _set_onCullStateChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "set_onCullStateChanged", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_maskable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "get_maskable", 0, "bool", [ "pointer" ]);
  }
  static get _set_maskable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "set_maskable", 1, "void", [ "pointer", "bool" ]);
  }
  static get _get_isMaskingGraphic() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "get_isMaskingGraphic", 0, "bool", [ "pointer" ]);
  }
  static get _set_isMaskingGraphic() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "set_isMaskingGraphic", 1, "void", [ "pointer", "bool" ]);
  }
  static get _GetModifiedMaterial() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "GetModifiedMaterial", 0, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Cull() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "Cull", 0, "void", [ "pointer", "pointer", "bool" ]);
  }
  static get _UpdateCull() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "UpdateCull", 0, "void", [ "pointer", "bool" ]);
  }
  static get _SetClipRect() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "SetClipRect", 0, "void", [ "pointer", "pointer", "bool" ]);
  }
  static get _SetClipSoftness() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "SetClipSoftness", 0, "void", [ "pointer", "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "OnEnable", 0, "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "OnDisable", 0, "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "OnTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _ParentMaskStateChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "ParentMaskStateChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "OnCanvasHierarchyChanged", 0, "void", [ "pointer" ]);
  }
  static get _get_rootCanvasRect() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "get_rootCanvasRect", 0, "pointer", [ "pointer" ]);
  }
  static get _UpdateClipParent() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "UpdateClipParent", 0, "void", [ "pointer" ]);
  }
  static get _RecalculateClipping() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "RecalculateClipping", 0, "void", [ "pointer" ]);
  }
  static get _RecalculateMasking() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", "RecalculateMasking", 0, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.MaskableGraphic", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _get_gameObject() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.IClippable", "get_gameObject", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_onCullStateChanged", null), e([ t.cache ], n, "_set_onCullStateChanged", null), 
e([ t.cache ], n, "_get_maskable", null), e([ t.cache ], n, "_set_maskable", null), 
e([ t.cache ], n, "_get_isMaskingGraphic", null), e([ t.cache ], n, "_set_isMaskingGraphic", null), 
e([ t.cache ], n, "_GetModifiedMaterial", null), e([ t.cache ], n, "_Cull", null), 
e([ t.cache ], n, "_UpdateCull", null), e([ t.cache ], n, "_SetClipRect", null), 
e([ t.cache ], n, "_SetClipSoftness", null), e([ t.cache ], n, "_OnEnable", null), 
e([ t.cache ], n, "_OnDisable", null), e([ t.cache ], n, "_OnTransformParentChanged", null), 
e([ t.cache ], n, "_ParentMaskStateChanged", null), e([ t.cache ], n, "_OnCanvasHierarchyChanged", null), 
e([ t.cache ], n, "_get_rootCanvasRect", null), e([ t.cache ], n, "_UpdateClipParent", null), 
e([ t.cache ], n, "_RecalculateClipping", null), e([ t.cache ], n, "_RecalculateMasking", null), 
e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_get_gameObject", null), exports.MaskableGraphicApi = n, 
Il2Cpp.Api.MaskableGraphic = n;

},{"decorator-cache-getter":513}],222:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_UI_MaskableGraphic_Impl = void 0;

const a = require("../../../../../../Material/class"), e = require("../class");

class l extends e.UnityEngine_UI_Graphic_Impl {
  m_ShouldRecalculateStencil=readBoolean(lfv(this.handle, "m_ShouldRecalculateStencil"));
  m_MaskMaterial=new a.UnityEngine_Material_Impl(lfv(this.handle, "m_MaskMaterial"));
  m_ParentMask=lfv(this.handle, "m_ParentMask");
  m_Maskable=readBoolean(lfv(this.handle, "m_Maskable"));
  m_IsMaskingGraphic=readBoolean(lfv(this.handle, "m_IsMaskingGraphic"));
  m_IncludeForMasking=readBoolean(lfv(this.handle, "m_IncludeForMasking"));
  m_OnCullStateChanged=lfv(this.handle, "m_OnCullStateChanged");
  m_ShouldRecalculate=readBoolean(lfv(this.handle, "m_ShouldRecalculate"));
  m_StencilValue=lfv(this.handle, "m_StencilValue").toInt32();
  m_Corners=lfv(this.handle, "m_Corners");
  get_onCullStateChanged() {
    return Il2Cpp.Api.MaskableGraphic._get_onCullStateChanged(this.handle);
  }
  set_onCullStateChanged(a) {
    return Il2Cpp.Api.MaskableGraphic._set_onCullStateChanged(this.handle, a);
  }
  get_maskable() {
    return Il2Cpp.Api.MaskableGraphic._get_maskable(this.handle);
  }
  set_maskable(a) {
    return Il2Cpp.Api.MaskableGraphic._set_maskable(this.handle, a);
  }
  get_isMaskingGraphic() {
    return Il2Cpp.Api.MaskableGraphic._get_isMaskingGraphic(this.handle);
  }
  set_isMaskingGraphic(a) {
    return Il2Cpp.Api.MaskableGraphic._set_isMaskingGraphic(this.handle, a);
  }
  GetModifiedMaterial(a) {
    return Il2Cpp.Api.MaskableGraphic._GetModifiedMaterial(this.handle, a);
  }
  Cull(a, e) {
    return Il2Cpp.Api.MaskableGraphic._Cull(this.handle, a, e);
  }
  UpdateCull(a) {
    return Il2Cpp.Api.MaskableGraphic._UpdateCull(this.handle, a);
  }
  SetClipRect(a, e) {
    return Il2Cpp.Api.MaskableGraphic._SetClipRect(this.handle, a, e);
  }
  SetClipSoftness(a) {
    return Il2Cpp.Api.MaskableGraphic._SetClipSoftness(this.handle, a);
  }
  OnEnable() {
    return Il2Cpp.Api.MaskableGraphic._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.MaskableGraphic._OnDisable(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.MaskableGraphic._OnTransformParentChanged(this.handle);
  }
  ParentMaskStateChanged() {
    return Il2Cpp.Api.MaskableGraphic._ParentMaskStateChanged(this.handle);
  }
  OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.MaskableGraphic._OnCanvasHierarchyChanged(this.handle);
  }
  get_rootCanvasRect() {
    return Il2Cpp.Api.MaskableGraphic._get_rootCanvasRect(this.handle);
  }
  UpdateClipParent() {
    return Il2Cpp.Api.MaskableGraphic._UpdateClipParent(this.handle);
  }
  RecalculateClipping() {
    return Il2Cpp.Api.MaskableGraphic._RecalculateClipping(this.handle);
  }
  RecalculateMasking() {
    return Il2Cpp.Api.MaskableGraphic._RecalculateMasking(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.MaskableGraphic.__ctor(this.handle);
  }
}

exports.UnityEngine_UI_MaskableGraphic_Impl = l;

},{"../../../../../../Material/class":283,"../class":225}],223:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./Image/include"), require("./Text/include"), 
require("./TMP_Text/include");

},{"./Image/include":204,"./TMP_Text/include":216,"./Text/include":220,"./api":221,"./class":222}],224:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, a = arguments.length, p = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (p = (a < 3 ? r(p) : a > 3 ? r(t, n, p) : r(t, n)) || p);
  return a > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_defaultGraphicMaterial() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_defaultGraphicMaterial", 0, "pointer", []);
  }
  static get _get_color() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_color", 0, "pointer", [ "pointer" ]);
  }
  static get _set_color() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "set_color", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_raycastTarget() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_raycastTarget", 0, "pointer", [ "pointer" ]);
  }
  static get _set_raycastTarget() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "set_raycastTarget", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_raycastPadding() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_raycastPadding", 0, "pointer", [ "pointer" ]);
  }
  static get _set_raycastPadding() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "set_raycastPadding", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_useLegacyMeshGeneration() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_useLegacyMeshGeneration", 0, "pointer", [ "pointer" ]);
  }
  static get _set_useLegacyMeshGeneration() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "set_useLegacyMeshGeneration", 1, "void", [ "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _SetAllDirty() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "SetAllDirty", 0, "void", [ "pointer" ]);
  }
  static get _SetLayoutDirty() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "SetLayoutDirty", 0, "void", [ "pointer" ]);
  }
  static get _SetVerticesDirty() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "SetVerticesDirty", 0, "void", [ "pointer" ]);
  }
  static get _SetMaterialDirty() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "SetMaterialDirty", 0, "void", [ "pointer" ]);
  }
  static get _OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnRectTransformDimensionsChange", 0, "void", [ "pointer" ]);
  }
  static get _OnBeforeTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnBeforeTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _get_depth() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_depth", 0, "pointer", [ "pointer" ]);
  }
  static get _get_rectTransform() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_rectTransform", 0, "pointer", [ "pointer" ]);
  }
  static get _get_canvas() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_canvas", 0, "pointer", [ "pointer" ]);
  }
  static get _CacheCanvas() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "CacheCanvas", 0, "void", [ "pointer" ]);
  }
  static get _get_canvasRenderer() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_canvasRenderer", 0, "pointer", [ "pointer" ]);
  }
  static get _get_defaultMaterial() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_defaultMaterial", 0, "pointer", [ "pointer" ]);
  }
  static get _get_material() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_material", 0, "pointer", [ "pointer" ]);
  }
  static get _set_material() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "set_material", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_materialForRendering() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_materialForRendering", 0, "pointer", [ "pointer" ]);
  }
  static get _get_mainTexture() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_mainTexture", 0, "pointer", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnEnable", 0, "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnDisable", 0, "void", [ "pointer" ]);
  }
  static get _OnDestroy() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnDestroy", 0, "void", [ "pointer" ]);
  }
  static get _OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnCanvasHierarchyChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnCullingChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnCullingChanged", 0, "void", [ "pointer" ]);
  }
  static get _Rebuild() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "Rebuild", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _LayoutComplete() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "LayoutComplete", 0, "void", [ "pointer" ]);
  }
  static get _GraphicUpdateComplete() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "GraphicUpdateComplete", 0, "void", [ "pointer" ]);
  }
  static get _UpdateMaterial() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UpdateMaterial", 0, "void", [ "pointer" ]);
  }
  static get _UpdateGeometry() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UpdateGeometry", 0, "void", [ "pointer" ]);
  }
  static get _DoMeshGeneration() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "DoMeshGeneration", 0, "void", [ "pointer" ]);
  }
  static get _DoLegacyMeshGeneration() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "DoLegacyMeshGeneration", 0, "void", [ "pointer" ]);
  }
  static get _get_workerMesh() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "get_workerMesh", 0, "pointer", []);
  }
  static get _OnFillVBO() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnFillVBO", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnPopulateMesh() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnPopulateMesh", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _OnPopulateMesh_vh() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnPopulateMesh", 1, [ "UnityEngine.UI.VertexHelper" ], "void", [ "pointer", "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "OnDidApplyAnimationProperties", 0, "void", [ "pointer" ]);
  }
  static get _SetNativeSize() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "SetNativeSize", 0, "void", [ "pointer" ]);
  }
  static get _Raycast() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "Raycast", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _PixelAdjustPoint() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "PixelAdjustPoint", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetPixelAdjustedRect() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "GetPixelAdjustedRect", 0, "pointer", [ "pointer" ]);
  }
  static get _CrossFadeColor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "CrossFadeColor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CrossFadeColor_targetColor_duration_ignoreTimeScale_useAlpha_useRGB() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.UI.Graphic", "CrossFadeColor", 5, [ "UnityEngine.Color", "System.Single", "System.Boolean", "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateColorFromAlpha() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "CreateColorFromAlpha", 1, "pointer", [ "pointer" ]);
  }
  static get _CrossFadeAlpha() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "CrossFadeAlpha", 3, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RegisterDirtyLayoutCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "RegisterDirtyLayoutCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _UnregisterDirtyLayoutCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UnregisterDirtyLayoutCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _RegisterDirtyVerticesCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "RegisterDirtyVerticesCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _UnregisterDirtyVerticesCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UnregisterDirtyVerticesCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _RegisterDirtyMaterialCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "RegisterDirtyMaterialCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _UnregisterDirtyMaterialCallback() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UnregisterDirtyMaterialCallback", 1, "void", [ "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", ".cctor", 0, "void", []);
  }
  static get _UnityEngine_UI_ICanvasElement_get_transform() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Graphic", "UnityEngine.UI.ICanvasElement.get_transform", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_defaultGraphicMaterial", null), e([ t.cache ], n, "_get_color", null), 
e([ t.cache ], n, "_set_color", null), e([ t.cache ], n, "_get_raycastTarget", null), 
e([ t.cache ], n, "_set_raycastTarget", null), e([ t.cache ], n, "_get_raycastPadding", null), 
e([ t.cache ], n, "_set_raycastPadding", null), e([ t.cache ], n, "_get_useLegacyMeshGeneration", null), 
e([ t.cache ], n, "_set_useLegacyMeshGeneration", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "_SetAllDirty", null), e([ t.cache ], n, "_SetLayoutDirty", null), 
e([ t.cache ], n, "_SetVerticesDirty", null), e([ t.cache ], n, "_SetMaterialDirty", null), 
e([ t.cache ], n, "_OnRectTransformDimensionsChange", null), e([ t.cache ], n, "_OnBeforeTransformParentChanged", null), 
e([ t.cache ], n, "_OnTransformParentChanged", null), e([ t.cache ], n, "_get_depth", null), 
e([ t.cache ], n, "_get_rectTransform", null), e([ t.cache ], n, "_get_canvas", null), 
e([ t.cache ], n, "_CacheCanvas", null), e([ t.cache ], n, "_get_canvasRenderer", null), 
e([ t.cache ], n, "_get_defaultMaterial", null), e([ t.cache ], n, "_get_material", null), 
e([ t.cache ], n, "_set_material", null), e([ t.cache ], n, "_get_materialForRendering", null), 
e([ t.cache ], n, "_get_mainTexture", null), e([ t.cache ], n, "_OnEnable", null), 
e([ t.cache ], n, "_OnDisable", null), e([ t.cache ], n, "_OnDestroy", null), e([ t.cache ], n, "_OnCanvasHierarchyChanged", null), 
e([ t.cache ], n, "_OnCullingChanged", null), e([ t.cache ], n, "_Rebuild", null), 
e([ t.cache ], n, "_LayoutComplete", null), e([ t.cache ], n, "_GraphicUpdateComplete", null), 
e([ t.cache ], n, "_UpdateMaterial", null), e([ t.cache ], n, "_UpdateGeometry", null), 
e([ t.cache ], n, "_DoMeshGeneration", null), e([ t.cache ], n, "_DoLegacyMeshGeneration", null), 
e([ t.cache ], n, "_get_workerMesh", null), e([ t.cache ], n, "_OnFillVBO", null), 
e([ t.cache ], n, "_OnPopulateMesh", null), e([ t.cache ], n, "_OnPopulateMesh_vh", null), 
e([ t.cache ], n, "_OnDidApplyAnimationProperties", null), e([ t.cache ], n, "_SetNativeSize", null), 
e([ t.cache ], n, "_Raycast", null), e([ t.cache ], n, "_PixelAdjustPoint", null), 
e([ t.cache ], n, "_GetPixelAdjustedRect", null), e([ t.cache ], n, "_CrossFadeColor", null), 
e([ t.cache ], n, "_CrossFadeColor_targetColor_duration_ignoreTimeScale_useAlpha_useRGB", null), 
e([ t.cache ], n, "_CreateColorFromAlpha", null), e([ t.cache ], n, "_CrossFadeAlpha", null), 
e([ t.cache ], n, "_RegisterDirtyLayoutCallback", null), e([ t.cache ], n, "_UnregisterDirtyLayoutCallback", null), 
e([ t.cache ], n, "_RegisterDirtyVerticesCallback", null), e([ t.cache ], n, "_UnregisterDirtyVerticesCallback", null), 
e([ t.cache ], n, "_RegisterDirtyMaterialCallback", null), e([ t.cache ], n, "_UnregisterDirtyMaterialCallback", null), 
e([ t.cache ], n, "__cctor", null), e([ t.cache ], n, "_UnityEngine_UI_ICanvasElement_get_transform", null), 
Il2Cpp.Api.Graphic = n;

},{"decorator-cache-getter":513}],225:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_UI_Graphic_Impl = void 0;

const e = require("../../../../../../Delegate/MulticastDelegate/UnityAction/class"), a = require("../../../../../../ValueType/Color/class"), r = require("../../../../../Material/class"), t = require("../../../../../Texture/Texture2D/class"), i = require("../../../../Transform/RectTransform/class"), n = require("../../../Canvas/class"), l = require("../class");

class p extends l.UnityEngine_EventSystems_UIBehaviour_Impl {
  s_DefaultUI=new r.UnityEngine_Material_Impl(lfv(this.handle, "s_DefaultUI"));
  s_WhiteTexture=new t.UnityEngine_Texture2D_Impl(lfv(this.handle, "s_WhiteTexture"));
  m_Material=new r.UnityEngine_Material_Impl(lfv(this.handle, "m_Material"));
  m_Color=new a.UnityEngine_Color_Impl(lfv(this.handle, "m_Color"));
  m_SkipLayoutUpdate=readBoolean(lfv(this.handle, "m_SkipLayoutUpdate"));
  m_SkipMaterialUpdate=readBoolean(lfv(this.handle, "m_SkipMaterialUpdate"));
  m_RaycastTarget=readBoolean(lfv(this.handle, "m_RaycastTarget"));
  m_RaycastPadding=lfv(this.handle, "m_RaycastPadding");
  m_RectTransform=new i.UnityEngine_RectTransform(lfv(this.handle, "m_RectTransform"));
  m_CanvasRenderer=lfv(this.handle, "m_CanvasRenderer");
  m_Canvas=new n.UnityEngine_Canvas_Impl(lfv(this.handle, "m_Canvas"));
  m_VertsDirty=readBoolean(lfv(this.handle, "m_VertsDirty"));
  m_MaterialDirty=readBoolean(lfv(this.handle, "m_MaterialDirty"));
  m_OnDirtyLayoutCallback=new e.UnityEngine_Events_UnityAction_Impl(lfv(this.handle, "m_OnDirtyLayoutCallback"));
  m_OnDirtyVertsCallback=new e.UnityEngine_Events_UnityAction_Impl(lfv(this.handle, "m_OnDirtyVertsCallback"));
  m_OnDirtyMaterialCallback=new e.UnityEngine_Events_UnityAction_Impl(lfv(this.handle, "m_OnDirtyMaterialCallback"));
  s_Mesh=lfv(this.handle, "s_Mesh");
  s_VertexHelper=lfv(this.handle, "s_VertexHelper");
  m_CachedMesh=lfv(this.handle, "m_CachedMesh");
  m_CachedUvs=lfv(this.handle, "m_CachedUvs");
  get_defaultGraphicMaterial() {
    return Il2Cpp.Api.Graphic._get_defaultGraphicMaterial();
  }
  get_color() {
    return Il2Cpp.Api.Graphic._get_color(this.handle);
  }
  set_color(e) {
    return Il2Cpp.Api.Graphic._set_color(this.handle, e);
  }
  get_raycastTarget() {
    return Il2Cpp.Api.Graphic._get_raycastTarget(this.handle);
  }
  set_raycastTarget(e) {
    return Il2Cpp.Api.Graphic._set_raycastTarget(this.handle, e);
  }
  get_raycastPadding() {
    return Il2Cpp.Api.Graphic._get_raycastPadding(this.handle);
  }
  set_raycastPadding(e) {
    return Il2Cpp.Api.Graphic._set_raycastPadding(this.handle, e);
  }
  get_useLegacyMeshGeneration() {
    return Il2Cpp.Api.Graphic._get_useLegacyMeshGeneration(this.handle);
  }
  set_useLegacyMeshGeneration(e) {
    return Il2Cpp.Api.Graphic._set_useLegacyMeshGeneration(this.handle, e);
  }
  _ctor() {
    return Il2Cpp.Api.Graphic.__ctor(this.handle);
  }
  SetAllDirty() {
    return Il2Cpp.Api.Graphic._SetAllDirty(this.handle);
  }
  SetLayoutDirty() {
    return Il2Cpp.Api.Graphic._SetLayoutDirty(this.handle);
  }
  SetVerticesDirty() {
    return Il2Cpp.Api.Graphic._SetVerticesDirty(this.handle);
  }
  SetMaterialDirty() {
    return Il2Cpp.Api.Graphic._SetMaterialDirty(this.handle);
  }
  OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.Graphic._OnRectTransformDimensionsChange(this.handle);
  }
  OnBeforeTransformParentChanged() {
    return Il2Cpp.Api.Graphic._OnBeforeTransformParentChanged(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.Graphic._OnTransformParentChanged(this.handle);
  }
  get_depth() {
    return Il2Cpp.Api.Graphic._get_depth(this.handle);
  }
  get_rectTransform() {
    return new i.UnityEngine_RectTransform(Il2Cpp.Api.Graphic._get_rectTransform(this.handle));
  }
  get_canvas() {
    return new n.UnityEngine_Canvas_Impl(Il2Cpp.Api.Graphic._get_canvas(this.handle));
  }
  CacheCanvas() {
    return Il2Cpp.Api.Graphic._CacheCanvas(this.handle);
  }
  get_canvasRenderer() {
    return Il2Cpp.Api.Graphic._get_canvasRenderer(this.handle);
  }
  get_defaultMaterial() {
    return Il2Cpp.Api.Graphic._get_defaultMaterial(this.handle);
  }
  get_material() {
    return Il2Cpp.Api.Graphic._get_material(this.handle);
  }
  set_material(e) {
    return Il2Cpp.Api.Graphic._set_material(this.handle, e);
  }
  get_materialForRendering() {
    return Il2Cpp.Api.Graphic._get_materialForRendering(this.handle);
  }
  get_mainTexture() {
    return Il2Cpp.Api.Graphic._get_mainTexture(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.Graphic._OnEnable(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.Graphic._OnDisable(this.handle);
  }
  OnDestroy() {
    return Il2Cpp.Api.Graphic._OnDestroy(this.handle);
  }
  OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.Graphic._OnCanvasHierarchyChanged(this.handle);
  }
  OnCullingChanged() {
    return Il2Cpp.Api.Graphic._OnCullingChanged(this.handle);
  }
  Rebuild(e) {
    return Il2Cpp.Api.Graphic._Rebuild(this.handle, e);
  }
  LayoutComplete() {
    return Il2Cpp.Api.Graphic._LayoutComplete(this.handle);
  }
  GraphicUpdateComplete() {
    return Il2Cpp.Api.Graphic._GraphicUpdateComplete(this.handle);
  }
  UpdateMaterial() {
    return Il2Cpp.Api.Graphic._UpdateMaterial(this.handle);
  }
  UpdateGeometry() {
    return Il2Cpp.Api.Graphic._UpdateGeometry(this.handle);
  }
  DoMeshGeneration() {
    return Il2Cpp.Api.Graphic._DoMeshGeneration(this.handle);
  }
  DoLegacyMeshGeneration() {
    return Il2Cpp.Api.Graphic._DoLegacyMeshGeneration(this.handle);
  }
  get_workerMesh() {
    return Il2Cpp.Api.Graphic._get_workerMesh();
  }
  OnFillVBO(e) {
    return Il2Cpp.Api.Graphic._OnFillVBO(this.handle, e);
  }
  OnPopulateMesh(e) {
    return Il2Cpp.Api.Graphic._OnPopulateMesh(this.handle, e);
  }
  OnPopulateMesh_vh(e) {
    return Il2Cpp.Api.Graphic._OnPopulateMesh(this.handle, e);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.Graphic._OnDidApplyAnimationProperties(this.handle);
  }
  SetNativeSize() {
    return Il2Cpp.Api.Graphic._SetNativeSize(this.handle);
  }
  Raycast(e, a) {
    return Il2Cpp.Api.Graphic._Raycast(this.handle, e, a);
  }
  PixelAdjustPoint(e) {
    return Il2Cpp.Api.Graphic._PixelAdjustPoint(this.handle, e);
  }
  GetPixelAdjustedRect() {
    return Il2Cpp.Api.Graphic._GetPixelAdjustedRect(this.handle);
  }
  CrossFadeColor_4(e, a, r, t) {
    return Il2Cpp.Api.Graphic._CrossFadeColor(this.handle, e, a, r, t);
  }
  CrossFadeColor_5(e, a, r, t, i) {
    return Il2Cpp.Api.Graphic._CrossFadeColor(this.handle, e, a, r, t, i);
  }
  CreateColorFromAlpha(e) {
    return Il2Cpp.Api.Graphic._CreateColorFromAlpha(e);
  }
  CrossFadeAlpha(e, a, r) {
    return Il2Cpp.Api.Graphic._CrossFadeAlpha(this.handle, e, a, r);
  }
  RegisterDirtyLayoutCallback(e) {
    return Il2Cpp.Api.Graphic._RegisterDirtyLayoutCallback(this.handle, e);
  }
  UnregisterDirtyLayoutCallback(e) {
    return Il2Cpp.Api.Graphic._UnregisterDirtyLayoutCallback(this.handle, e);
  }
  RegisterDirtyVerticesCallback(e) {
    return Il2Cpp.Api.Graphic._RegisterDirtyVerticesCallback(this.handle, e);
  }
  UnregisterDirtyVerticesCallback(e) {
    return Il2Cpp.Api.Graphic._UnregisterDirtyVerticesCallback(this.handle, e);
  }
  RegisterDirtyMaterialCallback(e) {
    return Il2Cpp.Api.Graphic._RegisterDirtyMaterialCallback(this.handle, e);
  }
  UnregisterDirtyMaterialCallback(e) {
    return Il2Cpp.Api.Graphic._UnregisterDirtyMaterialCallback(this.handle, e);
  }
  _cctor() {
    return Il2Cpp.Api.Graphic.__cctor();
  }
}

exports.UnityEngine_UI_Graphic_Impl = p;

},{"../../../../../../Delegate/MulticastDelegate/UnityAction/class":84,"../../../../../../ValueType/Color/class":379,"../../../../../Material/class":283,"../../../../../Texture/Texture2D/class":293,"../../../../Transform/RectTransform/class":267,"../../../Canvas/class":168,"../class":228}],226:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./MaskableGraphic/include");

},{"./MaskableGraphic/include":223,"./api":224,"./class":225}],227:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, i) {
  var r, a = arguments.length, o = a < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, n, t, i); else for (var s = e.length - 1; s >= 0; s--) (r = e[s]) && (o = (a < 3 ? r(o) : a > 3 ? r(n, t, o) : r(n, t)) || o);
  return a > 3 && o && Object.defineProperty(n, t, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _Awake() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "Awake", 0, "void", [ "pointer" ]);
  }
  static get _OnEnable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnEnable", 0, "void", [ "pointer" ]);
  }
  static get _Start() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "Start", 0, "void", [ "pointer" ]);
  }
  static get _OnDisable() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnDisable", 0, "void", [ "pointer" ]);
  }
  static get _OnDestroy() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnDestroy", 0, "void", [ "pointer" ]);
  }
  static get _IsActive() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "IsActive", 0, "pointer", [ "pointer" ]);
  }
  static get _OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnRectTransformDimensionsChange", 0, "void", [ "pointer" ]);
  }
  static get _OnBeforeTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnBeforeTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnTransformParentChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnTransformParentChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnDidApplyAnimationProperties", 0, "void", [ "pointer" ]);
  }
  static get _OnCanvasGroupChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnCanvasGroupChanged", 0, "void", [ "pointer" ]);
  }
  static get _OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "OnCanvasHierarchyChanged", 0, "void", [ "pointer" ]);
  }
  static get _IsDestroyed() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", "IsDestroyed", 0, "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.UIBehaviour", ".ctor", 0, "void", [ "pointer" ]);
  }
}

e([ n.cache ], t, "_Awake", null), e([ n.cache ], t, "_OnEnable", null), e([ n.cache ], t, "_Start", null), 
e([ n.cache ], t, "_OnDisable", null), e([ n.cache ], t, "_OnDestroy", null), e([ n.cache ], t, "_IsActive", null), 
e([ n.cache ], t, "_OnRectTransformDimensionsChange", null), e([ n.cache ], t, "_OnBeforeTransformParentChanged", null), 
e([ n.cache ], t, "_OnTransformParentChanged", null), e([ n.cache ], t, "_OnDidApplyAnimationProperties", null), 
e([ n.cache ], t, "_OnCanvasGroupChanged", null), e([ n.cache ], t, "_OnCanvasHierarchyChanged", null), 
e([ n.cache ], t, "_IsDestroyed", null), e([ n.cache ], t, "__ctor", null), Il2Cpp.Api.UIBehaviour = t;

},{"decorator-cache-getter":513}],228:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_UIBehaviour_Impl = void 0;

const e = require("../class");

class n extends e.UnityEngine_MonoBehaviour_Impl {
  constructor(e) {
    super(e);
  }
  Awake() {
    return Il2Cpp.Api.UIBehaviour._Awake(this.handle);
  }
  OnEnable() {
    return Il2Cpp.Api.UIBehaviour._OnEnable(this.handle);
  }
  Start() {
    return Il2Cpp.Api.UIBehaviour._Start(this.handle);
  }
  OnDisable() {
    return Il2Cpp.Api.UIBehaviour._OnDisable(this.handle);
  }
  OnDestroy() {
    return Il2Cpp.Api.UIBehaviour._OnDestroy(this.handle);
  }
  IsActive() {
    return Il2Cpp.Api.UIBehaviour._IsActive(this.handle);
  }
  OnRectTransformDimensionsChange() {
    return Il2Cpp.Api.UIBehaviour._OnRectTransformDimensionsChange(this.handle);
  }
  OnBeforeTransformParentChanged() {
    return Il2Cpp.Api.UIBehaviour._OnBeforeTransformParentChanged(this.handle);
  }
  OnTransformParentChanged() {
    return Il2Cpp.Api.UIBehaviour._OnTransformParentChanged(this.handle);
  }
  OnDidApplyAnimationProperties() {
    return Il2Cpp.Api.UIBehaviour._OnDidApplyAnimationProperties(this.handle);
  }
  OnCanvasGroupChanged() {
    return Il2Cpp.Api.UIBehaviour._OnCanvasGroupChanged(this.handle);
  }
  OnCanvasHierarchyChanged() {
    return Il2Cpp.Api.UIBehaviour._OnCanvasHierarchyChanged(this.handle);
  }
  IsDestroyed() {
    return Il2Cpp.Api.UIBehaviour._IsDestroyed(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.UIBehaviour.__ctor(this.handle);
  }
}

exports.UnityEngine_EventSystems_UIBehaviour_Impl = n;

},{"../class":232}],229:[function(require,module,exports){
"use strict";

},{}],230:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./Graphic/include"), 
require("./EventSystem/include"), require("./BaseInputModule/include"), require("./BaseRaycaster/include");

},{"./BaseInputModule/include":192,"./BaseRaycaster/include":195,"./EventSystem/include":199,"./Graphic/include":226,"./api":227,"./class":228,"./export":229}],231:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, o) {
  var i, r = arguments.length, u = r < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, n) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) u = Reflect.decorate(t, e, n, o); else for (var p = t.length - 1; p >= 0; p--) (i = t[p]) && (u = (r < 3 ? i(u) : r > 3 ? i(e, n, u) : i(e, n)) || u);
  return r > 3 && u && Object.defineProperty(e, n, u), u;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _CancelInvoke() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "CancelInvoke", 0, "void", [ "pointer" ]);
  }
  static get _CancelInvoke_String() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "CancelInvoke", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _InvokeRepeating() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "InvokeRepeating", 3, "void", [ "pointer", "float", "float", "float" ]);
  }
  static get _Invoke() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "Invoke", 2, "void", [ "pointer", "float", "float" ]);
  }
  static get _IsInvoking_String() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "IsInvoking", 1, "bool", [ "pointer", "pointer" ]);
  }
  static get _IsInvoking_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "IsInvoking", 0, "bool", [ "pointer" ]);
  }
  static get _print() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "print", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _StartCoroutine_IEnumerator() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 1, [ "System.Collections.IEnumerator" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _StartCoroutine_String() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _StartCoroutine_String_Object() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 2, [ "System.String", "System.Object" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _StartCoroutine_Auto() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine_Auto", 1, [ "System.Collections.IEnumerator" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _StopAllCoroutines() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopAllCoroutines", 0, "void", [ "pointer" ]);
  }
  static get _StopCoroutine_Coroutine() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, [ "System.Collections.IEnumerator" ], "void", [ "pointer", "pointer" ]);
  }
  static get _StopCoroutine_String() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _StopCoroutine_IEnumerator() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, [ "System.Collections.IEnumerator" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_useGUILayout() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "set_useGUILayout", 1, "void", [ "pointer", "bool" ]);
  }
  static get _get_useGUILayout() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "get_useGUILayout", 0, "bool", [ "pointer" ]);
  }
}

t([ e.cache ], n, "_ctor", null), t([ e.cache ], n, "_CancelInvoke", null), t([ e.cache ], n, "_CancelInvoke_String", null), 
t([ e.cache ], n, "_InvokeRepeating", null), t([ e.cache ], n, "_Invoke", null), 
t([ e.cache ], n, "_IsInvoking_String", null), t([ e.cache ], n, "_IsInvoking_0", null), 
t([ e.cache ], n, "_print", null), t([ e.cache ], n, "_StartCoroutine_IEnumerator", null), 
t([ e.cache ], n, "_StartCoroutine_String", null), t([ e.cache ], n, "_StartCoroutine_String_Object", null), 
t([ e.cache ], n, "_StartCoroutine_Auto", null), t([ e.cache ], n, "_StopAllCoroutines", null), 
t([ e.cache ], n, "_StopCoroutine_Coroutine", null), t([ e.cache ], n, "_StopCoroutine_String", null), 
t([ e.cache ], n, "_StopCoroutine_IEnumerator", null), t([ e.cache ], n, "_set_useGUILayout", null), 
t([ e.cache ], n, "_get_useGUILayout", null), Il2Cpp.Api.MonoBehaviour = n;

},{"decorator-cache-getter":513}],232:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_MonoBehaviour_Impl = void 0;

const o = require("../class");

class e extends o.UnityEngine_Behaviour_Impl {
  m_Transition=lfv(this.handle, "m_Transition");
  ctor_0() {
    return new e(Il2Cpp.Api.MonoBehaviour._ctor(alloc()));
  }
  CancelInvoke_0() {
    return Il2Cpp.Api.MonoBehaviour._CancelInvoke(this.handle);
  }
  CancelInvoke_methodName(o) {
    return Il2Cpp.Api.MonoBehaviour._CancelInvoke_String(this.handle, allocCStr(o));
  }
  InvokeRepeating(o, e, t) {
    return Il2Cpp.Api.MonoBehaviour._InvokeRepeating(this.handle, allocCStr(o), e, t);
  }
  Invoke(o, e) {
    return Il2Cpp.Api.MonoBehaviour._Invoke(this.handle, allocCStr(o), e);
  }
  IsInvoking_methodName(o) {
    return Il2Cpp.Api.MonoBehaviour._IsInvoking_String(this.handle, allocCStr(o));
  }
  IsInvoking_0() {
    return Il2Cpp.Api.MonoBehaviour._IsInvoking_0(this.handle);
  }
  print(o) {
    return Il2Cpp.Api.MonoBehaviour._print(this.handle, o);
  }
  StartCoroutine_enumerator(o) {
    return Il2Cpp.Api.MonoBehaviour._StartCoroutine_IEnumerator(this.handle, o);
  }
  StartCoroutine_methodName(o) {
    return Il2Cpp.Api.MonoBehaviour._StartCoroutine_String(this.handle, allocCStr(o));
  }
  StartCoroutine_methodName_obj(o, e) {
    return Il2Cpp.Api.MonoBehaviour._StartCoroutine_String_Object(this.handle, allocCStr(o), e);
  }
  StartCoroutine_Auto(o) {
    return Il2Cpp.Api.MonoBehaviour._StartCoroutine_Auto(this.handle, o);
  }
  StopAllCoroutines() {
    return Il2Cpp.Api.MonoBehaviour._StopAllCoroutines(this.handle);
  }
  StopCoroutine_coroutine(o) {
    return Il2Cpp.Api.MonoBehaviour._StopCoroutine_Coroutine(this.handle, o);
  }
  StopCoroutine_methodName(o) {
    return Il2Cpp.Api.MonoBehaviour._StopCoroutine_String(this.handle, allocCStr(o));
  }
  StopCoroutine_enumerator(o) {
    return Il2Cpp.Api.MonoBehaviour._StopCoroutine_IEnumerator(this.handle, o);
  }
  set_useGUILayout(o) {
    return Il2Cpp.Api.MonoBehaviour._set_useGUILayout(this.handle, o);
  }
  get_useGUILayout() {
    return Il2Cpp.Api.MonoBehaviour._get_useGUILayout(this.handle);
  }
}

exports.UnityEngine_MonoBehaviour_Impl = e, Il2Cpp.MonoBehaviour = e;

},{"../class":237}],233:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../../../../../../base/valueResolve"), e = () => {
  A(Il2Cpp.Api.MonoBehaviour._ctor, (e => {
    LOGD(`[*] Init -> ${e[0]} ${(0, t.FakeCommonType)(new Il2Cpp.Object(e[0]).class.type, e[0])}`);
  }));
}, o = () => {
  A(Il2Cpp.Api.MonoBehaviour._StartCoroutine_Auto, ((t, e, o) => {
    o.set("instance", t[0]), o.set("IEnumerator", t[1]);
  }), ((t, e, o) => {
    let n = o.get("instance"), r = o.get("IEnumerator"), i = `[*] StartCoroutine_Auto( ins='${n}'(${new Il2Cpp.Object(n).toString()}) , IEnumerator='${r} (${new Il2Cpp.Object(r).toString()})' )`;
    LOGD(`${i}`);
    try {
      LOGZ(`\tIEnumerator = ${r} | ${lfss(r)}`), LOGZ(`\tCoroutine   = ${new Il2Cpp.Coroutine(t).toFieldsString()}`);
    } catch {}
  })), A(Il2Cpp.Api.MonoBehaviour._StartCoroutine_IEnumerator, ((t, e, o) => {
    o.set("instance", t[0]), o.set("IEnumerator", t[1]);
  }), ((t, e, o) => {
    let n = o.get("instance"), r = o.get("IEnumerator"), i = `[*] StartCoroutine_IEnumerator( ins='${n}'(${new Il2Cpp.Object(n).toString()}) , IEnumerator='${r} (${new Il2Cpp.Object(r).toString()})' )`;
    LOGD(`${i}`);
    try {
      LOGZ(`\tIEnumerator = ${r} | ${lfss(r)}`), LOGZ(`\tCoroutine   = ${new Il2Cpp.Coroutine(t).toFieldsString()}`);
    } catch {}
  })), A(Il2Cpp.Api.MonoBehaviour._StartCoroutine_String, ((t, e, o) => {
    o.set("instance", t[0]), o.set("methodName", t[1]);
  }), ((t, e, o) => {
    let n = o.get("instance"), r = o.get("string"), i = `[*] StartCoroutine_String( ins='${n}' (${new Il2Cpp.Object(n).toString()}) , methodName='${readU16(r)}' )`;
    LOGD(`${i}`), LOGZ(`\tmethodName  = ${readU16(r)}}`);
    try {
      LOGZ(`\tCoroutine   = ${new Il2Cpp.Coroutine(t).toFieldsString()}`);
    } catch {}
  })), A(Il2Cpp.Api.MonoBehaviour._StartCoroutine_String, ((t, e, o) => {
    o.set("instance", t[0]), o.set("methodName", t[1]), o.set("Object", t[2]);
  }), ((t, e, o) => {
    let n = o.get("instance"), r = o.get("string"), i = o.get("Object"), p = `[*] _StartCoroutine_String( ins='${n}' (${new Il2Cpp.Object(n).toString()}) , methodName='${readU16(r)}' )`;
    LOGD(`${p}`), LOGZ(`\tIEnumerator = ${r} | ${new Il2Cpp.Object(i).toString()}`), 
    LOGZ(`\tmethodName  = ${readU16(r)}}`);
    try {
      LOGZ(`\tCoroutine   = ${new Il2Cpp.Coroutine(t).toFieldsString()}`);
    } catch {}
  })), A(Il2Cpp.Api.MonoBehaviour._StopAllCoroutines, (t => {
    LOGE(`[*] StopAllCoroutines( ins='${t[0]}' (${new Il2Cpp.Object(t[0]).toString()}) )`);
  })), A(Il2Cpp.Api.MonoBehaviour._StopCoroutine_IEnumerator, (t => {
    LOGE(`[*] StopCoroutine_IEnumerator( ins='${t[0]}' (${new Il2Cpp.Object(t[0]).toString()}) , IEnumerator='${t[1]}'(${new Il2Cpp.Object(t[1]).toString()}) )`);
  })), A(Il2Cpp.Api.MonoBehaviour._StopCoroutine_String, (t => {
    LOGE(`[*] StopCoroutine_String( ins='${t[0]}' (${new Il2Cpp.Object(t[0]).toString()}) , methodName='${readU16(t[1])}' )`);
  })), A(Il2Cpp.Api.MonoBehaviour._StopCoroutine_Coroutine, (t => {
    LOGE(`[*] StopCoroutine_Coroutine( ins='${t[0]}' (${new Il2Cpp.Object(t[0]).toString()}) , Coroutine='${t[1]}'(${new Il2Cpp.Object(t[1]).toString()}) )`);
  }));
};

globalThis.HookMonoBehavior = e, globalThis.HookCoroutine = o;

},{"../../../../../../../base/valueResolve":12}],234:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./Selectable/include"), 
require("./UIBehaviour/include");

},{"./Selectable/include":182,"./UIBehaviour/include":230,"./api":231,"./class":232,"./export":233}],235:[function(require,module,exports){
"use strict";

},{}],236:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, c = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (c = (o < 3 ? r(c) : o > 3 ? r(t, n, c) : r(t, n)) || c);
  return o > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_enabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "get_enabled", 0, "pointer", [ "pointer" ]);
  }
  static get _set_enabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "set_enabled", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_isActiveAndEnabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "get_isActiveAndEnabled", 0, "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", ".ctor", 0, "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_enabled", null), e([ t.cache ], n, "_set_enabled", null), 
e([ t.cache ], n, "_get_isActiveAndEnabled", null), e([ t.cache ], n, "__ctor", null), 
Il2Cpp.Api.Behaviour = n;

},{"decorator-cache-getter":513}],237:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Behaviour_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_Component_Impl {
  constructor(e) {
    super(e);
  }
  get_enabled() {
    return !Il2Cpp.Api.Behaviour._get_enabled(this.handle).isNull();
  }
  set_enabled(e) {
    return Il2Cpp.Api.Behaviour._set_enabled(this.handle, e ? ptr(1) : ptr(0));
  }
  get_isActiveAndEnabled() {
    return !Il2Cpp.Api.Behaviour._get_isActiveAndEnabled(this.handle).isNull();
  }
  _ctor() {
    return Il2Cpp.Api.Behaviour.__ctor(alloc());
  }
}

exports.UnityEngine_Behaviour_Impl = t, Il2Cpp.Behaviour = t;

},{"../class":275}],238:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./Animation/include"), require("./Animator/include"), 
require("./AudioSourse/include"), require("./Camera/include"), require("./Canvas/include"), 
require("./Light/include"), require("./MonoBehaviour/include"), require("./NetworkView/include");

},{"./Animation/include":159,"./Animator/include":160,"./AudioSourse/include":161,"./Camera/include":166,"./Canvas/include":170,"./Light/include":174,"./MonoBehaviour/include":234,"./NetworkView/include":235,"./api":236,"./class":237}],239:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, l = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (l = (o < 3 ? r(l) : o > 3 ? r(t, n, l) : r(t, n)) || l);
  return o > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _set_hasPopInstruction() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_hasPopInstruction", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_materialCount() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "get_materialCount", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_materialCount() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_materialCount", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_popMaterialCount() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_popMaterialCount", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_absoluteDepth() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "get_absoluteDepth", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_hasMoved() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "get_hasMoved", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_cull() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "get_cull", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_cull() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_cull", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetColor() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetColor", 1, [ "UnityEngine.Color" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetColor() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "GetColor", 0, [], "pointer", [ "pointer" ]);
  }
  static get _EnableRectClipping() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "EnableRectClipping", 1, [ "UnityEngine.Rect" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_clippingSoftness() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_clippingSoftness", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _DisableRectClipping() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "DisableRectClipping", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetMaterial", 2, [ "UnityEngine.Material", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "GetMaterial", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetPopMaterial() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetPopMaterial", 2, [ "UnityEngine.Material", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTexture() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetTexture", 1, [ "UnityEngine.Texture" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetAlphaTexture() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetAlphaTexture", 1, [ "UnityEngine.Texture" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetMesh() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetMesh", 1, [ "UnityEngine.Mesh" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Clear() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "Clear", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMaterial_material_texture() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetMaterial", 2, [ "UnityEngine.Material", "UnityEngine.Texture" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SplitUIVertexStreams() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SplitUIVertexStreams", 10, [ "System.Collections.Generic.List<UnityEngine.UIVertex>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Color32>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<System.Int32>" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateUIVertexStream() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "CreateUIVertexStream", 10, [ "System.Collections.Generic.List<UnityEngine.UIVertex>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Color32>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<System.Int32>" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _AddUIVertexStream() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "AddUIVertexStream", 9, [ "System.Collections.Generic.List<UnityEngine.UIVertex>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Color32>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector4>", "System.Collections.Generic.List<UnityEngine.Vector3>", "System.Collections.Generic.List<UnityEngine.Vector4>" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SplitIndicesStreamsInternal() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SplitIndicesStreamsInternal", 2, [ "System.Object", "System.Object" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SplitUIVertexStreamsInternal() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SplitUIVertexStreamsInternal", 9, [ "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateUIVertexStreamInternal() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "CreateUIVertexStreamInternal", 10, [ "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object", "System.Object" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SetColor_Injected() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "SetColor_Injected", 1, [ "UnityEngine.Color&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetColor_Injected() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "GetColor_Injected", 1, [ "UnityEngine.Color&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _EnableRectClipping_Injected() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "EnableRectClipping_Injected", 1, [ "UnityEngine.Rect&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_clippingSoftness_Injected() {
    return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.CanvasRenderer", "set_clippingSoftness_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_set_hasPopInstruction", null), e([ t.cache ], n, "_get_materialCount", null), 
e([ t.cache ], n, "_set_materialCount", null), e([ t.cache ], n, "_set_popMaterialCount", null), 
e([ t.cache ], n, "_get_absoluteDepth", null), e([ t.cache ], n, "_get_hasMoved", null), 
e([ t.cache ], n, "_get_cull", null), e([ t.cache ], n, "_set_cull", null), e([ t.cache ], n, "_SetColor", null), 
e([ t.cache ], n, "_GetColor", null), e([ t.cache ], n, "_EnableRectClipping", null), 
e([ t.cache ], n, "_set_clippingSoftness", null), e([ t.cache ], n, "_DisableRectClipping", null), 
e([ t.cache ], n, "_SetMaterial", null), e([ t.cache ], n, "_GetMaterial", null), 
e([ t.cache ], n, "_SetPopMaterial", null), e([ t.cache ], n, "_SetTexture", null), 
e([ t.cache ], n, "_SetAlphaTexture", null), e([ t.cache ], n, "_SetMesh", null), 
e([ t.cache ], n, "_Clear", null), e([ t.cache ], n, "_SetMaterial_material_texture", null), 
e([ t.cache ], n, "_SplitUIVertexStreams", null), e([ t.cache ], n, "_CreateUIVertexStream", null), 
e([ t.cache ], n, "_AddUIVertexStream", null), e([ t.cache ], n, "_SplitIndicesStreamsInternal", null), 
e([ t.cache ], n, "_SplitUIVertexStreamsInternal", null), e([ t.cache ], n, "_CreateUIVertexStreamInternal", null), 
e([ t.cache ], n, "_SetColor_Injected", null), e([ t.cache ], n, "_GetColor_Injected", null), 
e([ t.cache ], n, "_EnableRectClipping_Injected", null), e([ t.cache ], n, "_set_clippingSoftness_Injected", null), 
Il2Cpp.Api.CanvasRenderer = n;

},{"decorator-cache-getter":513}],240:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_CanvasRenderer_Impl = void 0;

const e = require("../../../ValueType/Color/class"), n = require("../../Material/class"), t = require("../class");

class a extends t.UnityEngine_Component_Impl {
  constructor(e) {
    super(e);
  }
  set_hasPopInstruction(e) {
    return Il2Cpp.Api.CanvasRenderer._set_hasPopInstruction(this.handle, e);
  }
  get_materialCount() {
    return Il2Cpp.Api.CanvasRenderer._get_materialCount(this.handle);
  }
  set_materialCount(e) {
    return Il2Cpp.Api.CanvasRenderer._set_materialCount(this.handle, e);
  }
  set_popMaterialCount(e) {
    return Il2Cpp.Api.CanvasRenderer._set_popMaterialCount(this.handle, e);
  }
  get_absoluteDepth() {
    return Il2Cpp.Api.CanvasRenderer._get_absoluteDepth(this.handle);
  }
  get_hasMoved() {
    return Il2Cpp.Api.CanvasRenderer._get_hasMoved(this.handle);
  }
  get_cull() {
    return Il2Cpp.Api.CanvasRenderer._get_cull(this.handle);
  }
  set_cull(e) {
    return Il2Cpp.Api.CanvasRenderer._set_cull(this.handle, e);
  }
  SetColor(e) {
    return Il2Cpp.Api.CanvasRenderer._SetColor(this.handle, e.handle);
  }
  GetColor() {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.CanvasRenderer._GetColor(this.handle));
  }
  EnableRectClipping(e) {
    return Il2Cpp.Api.CanvasRenderer._EnableRectClipping(this.handle, e.handle);
  }
  set_clippingSoftness(e) {
    return Il2Cpp.Api.CanvasRenderer._set_clippingSoftness(this.handle, e.handle);
  }
  DisableRectClipping() {
    return Il2Cpp.Api.CanvasRenderer._DisableRectClipping(this.handle);
  }
  SetMaterial(e, n) {
    return Il2Cpp.Api.CanvasRenderer._SetMaterial(this.handle, e.handle, n);
  }
  GetMaterial(e) {
    return new n.UnityEngine_Material_Impl(Il2Cpp.Api.CanvasRenderer._GetMaterial(this.handle, e));
  }
  SetPopMaterial(e, n) {
    return Il2Cpp.Api.CanvasRenderer._SetPopMaterial(this.handle, e.handle, n);
  }
  SetTexture(e) {
    return Il2Cpp.Api.CanvasRenderer._SetTexture(this.handle, e.handle);
  }
  SetAlphaTexture(e) {
    return Il2Cpp.Api.CanvasRenderer._SetAlphaTexture(this.handle, e.handle);
  }
  SetMesh(e) {
    return Il2Cpp.Api.CanvasRenderer._SetMesh(this.handle, e);
  }
  Clear() {
    return Il2Cpp.Api.CanvasRenderer._Clear(this.handle);
  }
  SetMaterial_2(e, n) {
    return Il2Cpp.Api.CanvasRenderer._SetMaterial(this.handle, e.handle, n.handle);
  }
  static SplitIndicesStreamsInternal(e, n) {
    return Il2Cpp.Api.CanvasRenderer._SplitIndicesStreamsInternal(e.handle, n.handle);
  }
  static SplitUIVertexStreamsInternal(e, n, t, a, r, l, p, i, s) {
    return Il2Cpp.Api.CanvasRenderer._SplitUIVertexStreamsInternal(e.handle, n.handle, t.handle, a.handle, r.handle, l.handle, p.handle, i.handle, s.handle);
  }
  static CreateUIVertexStreamInternal(e, n, t, a, r, l, p, i, s, d) {
    return Il2Cpp.Api.CanvasRenderer._CreateUIVertexStreamInternal(e.handle, n.handle, t.handle, a.handle, r.handle, l.handle, p.handle, i.handle, s.handle, d.handle);
  }
  SetColor_Injected(e) {
    return Il2Cpp.Api.CanvasRenderer._SetColor_Injected(this.handle, e.handle);
  }
  GetColor_Injected(e) {
    return Il2Cpp.Api.CanvasRenderer._GetColor_Injected(this.handle, e.handle);
  }
  EnableRectClipping_Injected(e) {
    return Il2Cpp.Api.CanvasRenderer._EnableRectClipping_Injected(this.handle, e.handle);
  }
  set_clippingSoftness_Injected(e) {
    return Il2Cpp.Api.CanvasRenderer._set_clippingSoftness_Injected(this.handle, e.handle);
  }
  toString() {
    return "TODO...";
  }
}

exports.UnityEngine_CanvasRenderer_Impl = a, Il2Cpp.CanvasRenderer = a;

},{"../../../ValueType/Color/class":379,"../../Material/class":283,"../class":275}],241:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Image/class"), t = require("../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class"), r = require("../Behavior/MonoBehaviour/Selectable/Button/class"), n = require("../../GameObject/export");

globalThis.showTransform = e => {
  "number" == typeof e && (e = ptr(e)), LOGO(`${getLine(15)} Transform ${getLine(15)}`);
  let t = new Il2Cpp.Transform(e);
  LOGD(`childCount\t---\x3e\t${t.get_childCount()}\t(${t.get_name()})`), PrintHierarchy(e, 1, !0), 
  LOGD("get_position\t(" + t.get_position().toString() + ")");
}, globalThis.PrintHierarchy = (i, o = 2, l = !1, a = !1) => {
  if (null == i) throw new Error("PrintHierarchy: mPtr is undefined");
  let h = checkCmdInput(i);
  if (h.isNull()) throw new Error("PrintHierarchy: mPtr is null");
  let s = (0, n.GetGameObjectFromPtr)(h).transform, c = s.get_name(), u = s.get_childCount(), g = 2 == o ? "default 2 level" : `${o} level`;
  LOG(TFM(`${c}`, LogColor.C36) + TFM(`  [ ${u} childs / ${g}]`, LogColor.C90)), 10 == o && LOGO(`${getLine(75)}\n`);
  let m = p(s);
  function f(e, t, r, n) {
    let i = listScripts(e), o = new Array;
    return i && i.length > 0 && i.forEach((e => {
      let n = "";
      try {
        n = e.toString();
      } catch (e) {}
      if (n.includes(t)) try {
        o.push(`${r}    ${e.handle} -> ${n}`);
      } catch {
        o.push(`${r}    ${e.handle} -> (→_→) ErrorToCase`);
      }
    })), o.join("\n");
  }
  function p(e) {
    for (let t = 0; t < 10; ++t) try {
      if (e.handle.isNull()) return t;
      e = e.get_parent();
    } catch (e) {
      return t;
    }
    return 0;
  }
  function d(n) {
    let i = listScripts(n), o = "";
    return i && i.length > 0 && i.forEach((n => {
      try {
        if ("Text" == n.class.name && (o = new t.Text(n.handle).m_Text), "Button" == n.class.name && (o = new r.Button(n.handle).get_onClick().m_Calls.m_PersistentCalls.itemsToString()), 
        "Image" == n.class.name) {
          const t = new e.UI_Image(n.handle).m_RectTransform.get_rect();
          o = `m_width:${t.m_Width} | m_height:${t.m_Height}`;
        }
      } catch {}
    })), o;
  }
  !function e(t) {
    let r = t.get_childCount();
    if (0 == r) return;
    for (let n = 0; n < r; ++n) {
      let r = t.GetChild(n), i = p(r) - m;
      if (i > 0 && i <= o) {
        let e = l ? "" : "\t" + getLine(i - 1, "\t"), t = r.handle + " : ", n = r.get_name(), o = a ? "" : "  " + d(r);
        LOG(TFM(`${e}${t}${n}`, LogColor.C36) + "  " + TFM(o, LogColor.C90)), a && LOGZ(`${f(r, n, e, i)}`);
      }
      e(r);
    }
  }(s), 10 == o && LOGO(`${getLine(75)}\n`);
}, globalThis.getGameObject = (e, t = !1) => {
  let r = (0, n.GetGameObjectFromPtr)(e);
  if (!t) return r.handle;
  showGameObject(r);
}, globalThis.p = globalThis.PrintHierarchy, globalThis.packTransform = e => new Il2Cpp.Transform(e), 
globalThis.PrintHierarchyWithComponents = (e, t) => PrintHierarchy(e, t, !1, !0);

},{"../../GameObject/export":280,"../Behavior/MonoBehaviour/Selectable/Button/class":176,"../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Image/class":201,"../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class":218}],242:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./export"), require("./class");

},{"./api":239,"./class":240,"./export":241}],243:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e {}

Il2Cpp.Api.CharacterController = e;

},{}],244:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_CharacterController_Impl = void 0;

const e = require("../class");

class r extends e.UnityEngine_Collider_Impl {
  constructor(e) {
    super(e);
  }
}

exports.UnityEngine_CharacterController_Impl = r, Il2Cpp.CharacterController = r;

},{"../class":247}],245:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":243,"./class":244}],246:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, l = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (l = (r < 3 ? o(l) : r > 3 ? o(t, n, l) : o(t, n)) || l);
  return r > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_enabled() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_enabled", 0, "pointer", [ "pointer" ]);
  }
  static get _set_enabled() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "set_enabled", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_attachedRigidbody() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_attachedRigidbody", 0, "pointer", [ "pointer" ]);
  }
  static get _set_isTrigger() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "set_isTrigger", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _ClosestPoint() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "ClosestPoint", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_bounds() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_bounds", 0, "pointer", [ "pointer" ]);
  }
  static get _Raycast() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast", 3, "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_hitInfo_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast", 3, [ "UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ClosestPoint_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "ClosestPoint_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_bounds_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_bounds_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Raycast_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_get_enabled", null), e([ t.cache ], n, "_set_enabled", null), 
e([ t.cache ], n, "_get_attachedRigidbody", null), e([ t.cache ], n, "_set_isTrigger", null), 
e([ t.cache ], n, "_ClosestPoint", null), e([ t.cache ], n, "_get_bounds", null), 
e([ t.cache ], n, "_Raycast", null), e([ t.cache ], n, "_Raycast_ray_hitInfo_maxDistance", null), 
e([ t.cache ], n, "_ClosestPoint_Injected", null), e([ t.cache ], n, "_get_bounds_Injected", null), 
e([ t.cache ], n, "_Raycast_Injected", null), Il2Cpp.Api.Collider = n;

},{"decorator-cache-getter":513}],247:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Collider_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_Component_Impl {
  constructor(e) {
    super(e);
  }
  get_enabled() {
    return Il2Cpp.Api.Collider._get_enabled(this.handle);
  }
  set_enabled(e) {
    return Il2Cpp.Api.Collider._set_enabled(this.handle, e);
  }
  get_attachedRigidbody() {
    return Il2Cpp.Api.Collider._get_attachedRigidbody(this.handle);
  }
  set_isTrigger(e) {
    return Il2Cpp.Api.Collider._set_isTrigger(this.handle, e);
  }
  ClosestPoint(e) {
    return Il2Cpp.Api.Collider._ClosestPoint(this.handle, e);
  }
  get_bounds() {
    return Il2Cpp.Api.Collider._get_bounds(this.handle);
  }
  Raycast(e, t, l) {
    return Il2Cpp.Api.Collider._Raycast(this.handle, e, t, l);
  }
  Raycast_3(e, t, l) {
    return Il2Cpp.Api.Collider._Raycast(this.handle, e, t, l);
  }
  ClosestPoint_Injected(e, t) {
    return Il2Cpp.Api.Collider._ClosestPoint_Injected(this.handle, e, t);
  }
  get_bounds_Injected(e) {
    return Il2Cpp.Api.Collider._get_bounds_Injected(this.handle, e);
  }
  Raycast_Injected(e, t, l, i) {
    return Il2Cpp.Api.Collider._Raycast_Injected(this.handle, e, t, l, i);
  }
}

exports.UnityEngine_Collider_Impl = t, Il2Cpp.Collider = t;

},{"../class":275}],248:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./CharacterController/include");

},{"./CharacterController/include":245,"./api":246,"./class":247}],249:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, i, n) {
  var r, l = arguments.length, c = l < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(t, e, i, n); else for (var o = t.length - 1; o >= 0; o--) (r = t[o]) && (c = (l < 3 ? r(c) : l > 3 ? r(e, i, c) : r(e, i)) || c);
  return l > 3 && c && Object.defineProperty(e, i, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class i {
  static get _Emit() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 5, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Emit_particle() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 1, [ "UnityEngine.ParticleSystem.Particle" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isPlaying() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "get_isPlaying", 0, "pointer", [ "pointer" ]);
  }
  static get _Play() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Play", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Play_() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Play", 0, [], "void", [ "pointer" ]);
  }
  static get _Stop() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Stop_withChildren() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Stop_() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 0, [], "void", [ "pointer" ]);
  }
  static get _Emit_count() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Emit_Internal() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit_Internal", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Emit_emitParams_count() {
    return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 2, [ "UnityEngine.ParticleSystem.EmitParams", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _EmitOld_Internal() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "EmitOld_Internal", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_main() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "get_main", 0, "pointer", [ "pointer" ]);
  }
  static get _Emit_Injected() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], i, "_Emit", null), t([ e.cache ], i, "_Emit_particle", null), t([ e.cache ], i, "_get_isPlaying", null), 
t([ e.cache ], i, "_Play", null), t([ e.cache ], i, "_Play_", null), t([ e.cache ], i, "_Stop", null), 
t([ e.cache ], i, "_Stop_withChildren", null), t([ e.cache ], i, "_Stop_", null), 
t([ e.cache ], i, "_Emit_count", null), t([ e.cache ], i, "_Emit_Internal", null), 
t([ e.cache ], i, "_Emit_emitParams_count", null), t([ e.cache ], i, "_EmitOld_Internal", null), 
t([ e.cache ], i, "_get_main", null), t([ e.cache ], i, "_Emit_Injected", null), 
Il2Cpp.Api.ParticleSystem = i;

},{"decorator-cache-getter":513}],250:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ParticleSystem_Impl = void 0;

const t = require("../../../ValueType/MainModule/class"), e = require("../class");

class i extends e.UnityEngine_Component_Impl {
  constructor(t) {
    super(t);
  }
  Emit(t, e, i, l, n) {
    return Il2Cpp.Api.ParticleSystem._Emit(this.handle, t, e, i, l, n.handle);
  }
  Emit_particle(t) {
    return Il2Cpp.Api.ParticleSystem._Emit(this.handle, t.handle);
  }
  get_isPlaying() {
    return Il2Cpp.Api.ParticleSystem._get_isPlaying(this.handle);
  }
  Play(t) {
    return Il2Cpp.Api.ParticleSystem._Play(this.handle, t);
  }
  Play_0() {
    return Il2Cpp.Api.ParticleSystem._Play(this.handle);
  }
  Stop(t, e) {
    return Il2Cpp.Api.ParticleSystem._Stop(this.handle, t, e);
  }
  Stop_1(t) {
    return Il2Cpp.Api.ParticleSystem._Stop(this.handle, t);
  }
  Stop_0() {
    return Il2Cpp.Api.ParticleSystem._Stop(this.handle);
  }
  Emit_count(t) {
    return Il2Cpp.Api.ParticleSystem._Emit(this.handle, t);
  }
  Emit_Internal(t) {
    return Il2Cpp.Api.ParticleSystem._Emit_Internal(this.handle, t);
  }
  Emit_2(t, e) {
    return Il2Cpp.Api.ParticleSystem._Emit(this.handle, t, e);
  }
  EmitOld_Internal(t) {
    return Il2Cpp.Api.ParticleSystem._EmitOld_Internal(this.handle, t);
  }
  get_main() {
    return new t.UnityEngine_ParticleSystem_MainModule_Impl(Il2Cpp.Api.ParticleSystem._get_main(this.handle));
  }
  Emit_Injected(t, e) {
    return Il2Cpp.Api.ParticleSystem._Emit_Injected(this.handle, t, e);
  }
}

exports.UnityEngine_ParticleSystem_Impl = i, Il2Cpp.ParticleSystem = i;

},{"../../../ValueType/MainModule/class":404,"../class":275}],251:[function(require,module,exports){
"use strict";

var t, e;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ParticleSystemGradientMode = exports.UnityEngine_ParticleSystemStopBehavior = void 0, 
function(t) {
  t[t.StopEmitting = 1] = "StopEmitting", t[t.StopEmittingAndClear = 0] = "StopEmittingAndClear";
}(t = exports.UnityEngine_ParticleSystemStopBehavior || (exports.UnityEngine_ParticleSystemStopBehavior = {})), 
function(t) {
  t[t.Color = 0] = "Color", t[t.Gradient = 1] = "Gradient", t[t.RandomColor = 4] = "RandomColor", 
  t[t.TwoColors = 2] = "TwoColors", t[t.TwoGradients = 3] = "TwoGradients";
}(e = exports.UnityEngine_ParticleSystemGradientMode || (exports.UnityEngine_ParticleSystemGradientMode = {}));

},{}],252:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.B_Particle = void 0;

const e = () => {
  D(), BF("Fx"), B("ParticleSystem"), HookSetActive(!0, !1, [ "Fx", "fx", "Blood", "blood", "Effect", "effect" ]);
};

exports.B_Particle = e, globalThis.B_Particle = exports.B_Particle;

},{}],253:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./enum"), require("./class"), require("./export");

},{"./api":249,"./class":250,"./enum":251,"./export":252}],254:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, n) {
  var o, c = arguments.length, i = c < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, n); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (i = (c < 3 ? o(i) : c > 3 ? o(t, r, i) : o(t, r)) || i);
  return c > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _DontStripMeshRenderer() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MeshRenderer", "DontStripMeshRenderer", 0, "void", [ "pointer" ]);
  }
}

e([ t.cache ], r, "_DontStripMeshRenderer", null), Il2Cpp.Api.MeshRenderer = r;

},{"decorator-cache-getter":513}],255:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_MeshRenderer_Impl = void 0;

const e = require("../class");

class r extends e.UnityEngine_Renderer_Impl {
  constructor(e) {
    super(e);
  }
  DontStripMeshRenderer() {
    return Il2Cpp.Api.MeshRenderer._DontStripMeshRenderer(this.handle);
  }
}

exports.UnityEngine_MeshRenderer_Impl = r, Il2Cpp.MeshRenderer = r;

},{"../class":259}],256:[function(require,module,exports){
"use strict";

},{}],257:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":254,"./class":255,"./export":256}],258:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, a = arguments.length, l = a < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, r); else for (var o = e.length - 1; o >= 0; o--) (i = e[o]) && (l = (a < 3 ? i(l) : a > 3 ? i(t, n, l) : i(t, n)) || l);
  return a > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_bounds() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_bounds", 0, "pointer", [ "pointer" ]);
  }
  static get _GetMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetMaterial", 0, "pointer", [ "pointer" ]);
  }
  static get _GetSharedMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetSharedMaterial", 0, "pointer", [ "pointer" ]);
  }
  static get _SetMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "SetMaterial", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetMaterialArray() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetMaterialArray", 0, "pointer", [ "pointer" ]);
  }
  static get _SetMaterialArray() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "SetMaterialArray", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_enabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_enabled", 0, "pointer", [ "pointer" ]);
  }
  static get _set_enabled() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_enabled", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_isVisible() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_isVisible", 0, "pointer", [ "pointer" ]);
  }
  static get _set_shadowCastingMode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_shadowCastingMode", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _set_receiveShadows() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_receiveShadows", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_sortingLayerID() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sortingLayerID", 0, "pointer", [ "pointer" ]);
  }
  static get _set_sortingLayerID() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sortingLayerID", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_sortingOrder() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sortingOrder", 0, "pointer", [ "pointer" ]);
  }
  static get _set_sortingOrder() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sortingOrder", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetSharedMaterialArray() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetSharedMaterialArray", 0, "pointer", [ "pointer" ]);
  }
  static get _get_materials() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_materials", 0, "pointer", [ "pointer" ]);
  }
  static get _set_materials() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_materials", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_material() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_material", 0, "pointer", [ "pointer" ]);
  }
  static get _set_material() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_material", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_sharedMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sharedMaterial", 0, "pointer", [ "pointer" ]);
  }
  static get _set_sharedMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sharedMaterial", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_sharedMaterials() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sharedMaterials", 0, "pointer", [ "pointer" ]);
  }
  static get _set_sharedMaterials() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sharedMaterials", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_bounds_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_bounds_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_get_bounds", null), e([ t.cache ], n, "_GetMaterial", null), 
e([ t.cache ], n, "_GetSharedMaterial", null), e([ t.cache ], n, "_SetMaterial", null), 
e([ t.cache ], n, "_GetMaterialArray", null), e([ t.cache ], n, "_SetMaterialArray", null), 
e([ t.cache ], n, "_get_enabled", null), e([ t.cache ], n, "_set_enabled", null), 
e([ t.cache ], n, "_get_isVisible", null), e([ t.cache ], n, "_set_shadowCastingMode", null), 
e([ t.cache ], n, "_set_receiveShadows", null), e([ t.cache ], n, "_get_sortingLayerID", null), 
e([ t.cache ], n, "_set_sortingLayerID", null), e([ t.cache ], n, "_get_sortingOrder", null), 
e([ t.cache ], n, "_set_sortingOrder", null), e([ t.cache ], n, "_GetSharedMaterialArray", null), 
e([ t.cache ], n, "_get_materials", null), e([ t.cache ], n, "_set_materials", null), 
e([ t.cache ], n, "_get_material", null), e([ t.cache ], n, "_set_material", null), 
e([ t.cache ], n, "_get_sharedMaterial", null), e([ t.cache ], n, "_set_sharedMaterial", null), 
e([ t.cache ], n, "_get_sharedMaterials", null), e([ t.cache ], n, "_set_sharedMaterials", null), 
e([ t.cache ], n, "_get_bounds_Injected", null), Il2Cpp.Api.Renderer = n;

},{"decorator-cache-getter":513}],259:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Renderer_Impl = void 0;

const e = require("../class");

class r extends e.UnityEngine_Component_Impl {
  constructor(e) {
    super(e);
  }
  get_bounds() {
    return Il2Cpp.Api.Renderer._get_bounds(this.handle);
  }
  GetMaterial() {
    return Il2Cpp.Api.Renderer._GetMaterial(this.handle);
  }
  GetSharedMaterial() {
    return Il2Cpp.Api.Renderer._GetSharedMaterial(this.handle);
  }
  SetMaterial(e) {
    return Il2Cpp.Api.Renderer._SetMaterial(this.handle, e);
  }
  GetMaterialArray() {
    return Il2Cpp.Api.Renderer._GetMaterialArray(this.handle);
  }
  SetMaterialArray(e) {
    return Il2Cpp.Api.Renderer._SetMaterialArray(this.handle, e);
  }
  get_enabled() {
    return Il2Cpp.Api.Renderer._get_enabled(this.handle);
  }
  set_enabled(e) {
    return Il2Cpp.Api.Renderer._set_enabled(this.handle, e);
  }
  get_isVisible() {
    return Il2Cpp.Api.Renderer._get_isVisible(this.handle);
  }
  set_shadowCastingMode(e) {
    return Il2Cpp.Api.Renderer._set_shadowCastingMode(this.handle, e);
  }
  set_receiveShadows(e) {
    return Il2Cpp.Api.Renderer._set_receiveShadows(this.handle, e);
  }
  get_sortingLayerID() {
    return Il2Cpp.Api.Renderer._get_sortingLayerID(this.handle);
  }
  set_sortingLayerID(e) {
    return Il2Cpp.Api.Renderer._set_sortingLayerID(this.handle, e);
  }
  get_sortingOrder() {
    return Il2Cpp.Api.Renderer._get_sortingOrder(this.handle);
  }
  set_sortingOrder(e) {
    return Il2Cpp.Api.Renderer._set_sortingOrder(this.handle, e);
  }
  GetSharedMaterialArray() {
    return Il2Cpp.Api.Renderer._GetSharedMaterialArray(this.handle);
  }
  get_materials() {
    return Il2Cpp.Api.Renderer._get_materials(this.handle);
  }
  set_materials(e) {
    return Il2Cpp.Api.Renderer._set_materials(this.handle, e);
  }
  get_material() {
    return Il2Cpp.Api.Renderer._get_material(this.handle);
  }
  set_material(e) {
    return Il2Cpp.Api.Renderer._set_material(this.handle, e);
  }
  get_sharedMaterial() {
    return Il2Cpp.Api.Renderer._get_sharedMaterial(this.handle);
  }
  set_sharedMaterial(e) {
    return Il2Cpp.Api.Renderer._set_sharedMaterial(this.handle, e);
  }
  get_sharedMaterials() {
    return Il2Cpp.Api.Renderer._get_sharedMaterials(this.handle);
  }
  set_sharedMaterials(e) {
    return Il2Cpp.Api.Renderer._set_sharedMaterials(this.handle, e);
  }
  get_bounds_Injected(e) {
    return Il2Cpp.Api.Renderer._get_bounds_Injected(this.handle, e);
  }
}

exports.UnityEngine_Renderer_Impl = r, Il2Cpp.Renderer = r;

},{"../class":275}],260:[function(require,module,exports){
"use strict";

var e;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Rendering_ShadowCastingMode = void 0, function(e) {
  e[e.Off = 0] = "Off", e[e.On = 1] = "On", e[e.ShadowsOnly = 3] = "ShadowsOnly", 
  e[e.TwoSided = 2] = "TwoSided";
}(e = exports.UnityEngine_Rendering_ShadowCastingMode || (exports.UnityEngine_Rendering_ShadowCastingMode = {}));

},{}],261:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./enum"), require("./class"), require("./MeshRenderer/include");

},{"./MeshRenderer/include":257,"./api":258,"./class":259,"./enum":260}],262:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, i, t, n) {
  var o, c = arguments.length, r = c < 3 ? i : null === n ? n = Object.getOwnPropertyDescriptor(i, t) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, i, t, n); else for (var d = e.length - 1; d >= 0; d--) (o = e[d]) && (r = (c < 3 ? o(r) : c > 3 ? o(i, t, r) : o(i, t)) || r);
  return c > 3 && r && Object.defineProperty(i, t, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const i = require("decorator-cache-getter");

class t {
  static get _get_velocity() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_velocity", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_velocity() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_velocity", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_useGravity() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_useGravity", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_isKinematic() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_isKinematic", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_freezeRotation() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_freezeRotation", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_position() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_position", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_rotation() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_rotation", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_rotation() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_rotation", 1, [ "UnityEngine.Quaternion" ], "void", [ "pointer", "pointer" ]);
  }
  static get _MovePosition() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "MovePosition", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _MoveRotation() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "MoveRotation", 1, [ "UnityEngine.Quaternion" ], "void", [ "pointer", "pointer" ]);
  }
  static get _AddForce() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "AddForce", 2, [ "UnityEngine.Vector3", "UnityEngine.ForceMode" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddForce_force() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "AddForce", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _AddTorque() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "AddTorque", 2, [ "UnityEngine.Vector3", "UnityEngine.ForceMode" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_velocity_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_velocity_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_velocity_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_velocity_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_position_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_position_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_rotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "get_rotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_rotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "set_rotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _MovePosition_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "MovePosition_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _MoveRotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "MoveRotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _AddForce_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "AddForce_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.ForceMode" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddTorque_Injected() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Rigidbody", "AddTorque_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.ForceMode" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ i.cache ], t, "_get_velocity", null), e([ i.cache ], t, "_set_velocity", null), 
e([ i.cache ], t, "_get_useGravity", null), e([ i.cache ], t, "_set_isKinematic", null), 
e([ i.cache ], t, "_set_freezeRotation", null), e([ i.cache ], t, "_get_position", null), 
e([ i.cache ], t, "_get_rotation", null), e([ i.cache ], t, "_set_rotation", null), 
e([ i.cache ], t, "_MovePosition", null), e([ i.cache ], t, "_MoveRotation", null), 
e([ i.cache ], t, "_AddForce", null), e([ i.cache ], t, "_AddForce_force", null), 
e([ i.cache ], t, "_AddTorque", null), e([ i.cache ], t, "__ctor", null), e([ i.cache ], t, "_get_velocity_Injected", null), 
e([ i.cache ], t, "_set_velocity_Injected", null), e([ i.cache ], t, "_get_position_Injected", null), 
e([ i.cache ], t, "_get_rotation_Injected", null), e([ i.cache ], t, "_set_rotation_Injected", null), 
e([ i.cache ], t, "_MovePosition_Injected", null), e([ i.cache ], t, "_MoveRotation_Injected", null), 
e([ i.cache ], t, "_AddForce_Injected", null), e([ i.cache ], t, "_AddTorque_Injected", null), 
Il2Cpp.Api.Rigidbody = t;

},{"decorator-cache-getter":513}],263:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Rigidbody_Impl = void 0;

const e = require("../../../ValueType/Quaternion/class"), i = require("../../../ValueType/Vector3/class"), t = require("../class");

class n extends t.UnityEngine_Component_Impl {
  constructor(e) {
    super(e);
  }
  get_velocity() {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Rigidbody._get_velocity(this.handle));
  }
  set_velocity(e) {
    return Il2Cpp.Api.Rigidbody._set_velocity(this.handle, e.handle);
  }
  get_useGravity() {
    return Il2Cpp.Api.Rigidbody._get_useGravity(this.handle);
  }
  set_isKinematic(e) {
    return Il2Cpp.Api.Rigidbody._set_isKinematic(this.handle, e);
  }
  set_freezeRotation(e) {
    return Il2Cpp.Api.Rigidbody._set_freezeRotation(this.handle, e);
  }
  get_position() {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Rigidbody._get_position(this.handle));
  }
  get_rotation() {
    return new e.UnityEngine_Quaternion_Impl(Il2Cpp.Api.Rigidbody._get_rotation(this.handle));
  }
  set_rotation(e) {
    return Il2Cpp.Api.Rigidbody._set_rotation(this.handle, e.handle);
  }
  MovePosition(e) {
    return Il2Cpp.Api.Rigidbody._MovePosition(this.handle, e.handle);
  }
  MoveRotation(e) {
    return Il2Cpp.Api.Rigidbody._MoveRotation(this.handle, e.handle);
  }
  AddForce(e, i) {
    return Il2Cpp.Api.Rigidbody._AddForce(this.handle, e.handle, i);
  }
  AddForce_1(e) {
    return Il2Cpp.Api.Rigidbody._AddForce(this.handle, e.handle);
  }
  AddTorque(e, i) {
    return Il2Cpp.Api.Rigidbody._AddTorque(this.handle, e.handle, i);
  }
  _ctor() {
    return Il2Cpp.Api.Rigidbody.__ctor(this.handle);
  }
  get_velocity_Injected(e) {
    return Il2Cpp.Api.Rigidbody._get_velocity_Injected(this.handle, e.handle);
  }
  set_velocity_Injected(e) {
    return Il2Cpp.Api.Rigidbody._set_velocity_Injected(this.handle, e.handle);
  }
  get_position_Injected(e) {
    return Il2Cpp.Api.Rigidbody._get_position_Injected(this.handle, e.handle);
  }
  get_rotation_Injected(e) {
    return Il2Cpp.Api.Rigidbody._get_rotation_Injected(this.handle, e.handle);
  }
  set_rotation_Injected(e) {
    return Il2Cpp.Api.Rigidbody._set_rotation_Injected(this.handle, e.handle);
  }
  MovePosition_Injected(e) {
    return Il2Cpp.Api.Rigidbody._MovePosition_Injected(this.handle, e.handle);
  }
  MoveRotation_Injected(e) {
    return Il2Cpp.Api.Rigidbody._MoveRotation_Injected(this.handle, e.handle);
  }
  AddForce_Injected(e, i) {
    return Il2Cpp.Api.Rigidbody._AddForce_Injected(this.handle, e.handle, i);
  }
  AddTorque_Injected(e, i) {
    return Il2Cpp.Api.Rigidbody._AddTorque_Injected(this.handle, e.handle, i);
  }
}

exports.UnityEngine_Rigidbody_Impl = n, Il2Cpp.Rigidbody = n;

},{"../../../ValueType/Quaternion/class":412,"../../../ValueType/Vector3/class":443,"../class":275}],264:[function(require,module,exports){
"use strict";

},{}],265:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":262,"./class":263,"./export":264}],266:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, i) {
  var r, o = arguments.length, c = o < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, n, t, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (c = (o < 3 ? r(c) : o > 3 ? r(n, t, c) : r(n, t)) || c);
  return o > 3 && c && Object.defineProperty(n, t, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _add_reapplyDrivenProperties() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "add_reapplyDrivenProperties", 1, [ "UnityEngine.RectTransform.ReapplyDrivenProperties" ], "void", [ "pointer" ]);
  }
  static get _remove_reapplyDrivenProperties() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "remove_reapplyDrivenProperties", 1, [ "UnityEngine.RectTransform.ReapplyDrivenProperties" ], "void", [ "pointer" ]);
  }
  static get _get_rect() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_rect", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_anchorMin() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMin", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_anchorMin() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMin", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchorMax() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMax", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_anchorMax() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMax", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchoredPosition() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_anchoredPosition() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_sizeDelta() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_sizeDelta", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_sizeDelta() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_sizeDelta", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pivot() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_pivot", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_pivot() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_pivot", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchoredPosition3D() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition3D", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_anchoredPosition3D() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition3D", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_offsetMin() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_offsetMin", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_offsetMin() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_offsetMin", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_offsetMax() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_offsetMax", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_offsetMax() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_offsetMax", 1, [ "UnityEngine.Vector2" ], "void", [ "pointer", "pointer" ]);
  }
  static get _ForceUpdateRectTransforms() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "ForceUpdateRectTransforms", 0, [], "void", [ "pointer" ]);
  }
  static get _GetLocalCorners() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetLocalCorners", 1, [ "UnityEngine.Vector3[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetWorldCorners() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetWorldCorners", 1, [ "UnityEngine.Vector3[]" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetSizeWithCurrentAnchors() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "SetSizeWithCurrentAnchors", 2, [ "UnityEngine.RectTransform.Axis", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SendReapplyDrivenProperties() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "SendReapplyDrivenProperties", 1, [ "UnityEngine.RectTransform" ], "void", [ "pointer" ]);
  }
  static get _GetParentSize() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetParentSize", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_rect_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_rect_Injected", 1, [ "UnityEngine.Rect&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchorMin_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMin_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_anchorMin_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMin_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchorMax_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMax_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_anchorMax_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMax_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_anchoredPosition_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_anchoredPosition_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_sizeDelta_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_sizeDelta_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_sizeDelta_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_sizeDelta_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_pivot_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_pivot_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_pivot_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_pivot_Injected", 1, [ "UnityEngine.Vector2&" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ n.cache ], t, "_add_reapplyDrivenProperties", null), e([ n.cache ], t, "_remove_reapplyDrivenProperties", null), 
e([ n.cache ], t, "_get_rect", null), e([ n.cache ], t, "_get_anchorMin", null), 
e([ n.cache ], t, "_set_anchorMin", null), e([ n.cache ], t, "_get_anchorMax", null), 
e([ n.cache ], t, "_set_anchorMax", null), e([ n.cache ], t, "_get_anchoredPosition", null), 
e([ n.cache ], t, "_set_anchoredPosition", null), e([ n.cache ], t, "_get_sizeDelta", null), 
e([ n.cache ], t, "_set_sizeDelta", null), e([ n.cache ], t, "_get_pivot", null), 
e([ n.cache ], t, "_set_pivot", null), e([ n.cache ], t, "_get_anchoredPosition3D", null), 
e([ n.cache ], t, "_set_anchoredPosition3D", null), e([ n.cache ], t, "_get_offsetMin", null), 
e([ n.cache ], t, "_set_offsetMin", null), e([ n.cache ], t, "_get_offsetMax", null), 
e([ n.cache ], t, "_set_offsetMax", null), e([ n.cache ], t, "_ForceUpdateRectTransforms", null), 
e([ n.cache ], t, "_GetLocalCorners", null), e([ n.cache ], t, "_GetWorldCorners", null), 
e([ n.cache ], t, "_SetSizeWithCurrentAnchors", null), e([ n.cache ], t, "_SendReapplyDrivenProperties", null), 
e([ n.cache ], t, "_GetParentSize", null), e([ n.cache ], t, "_get_rect_Injected", null), 
e([ n.cache ], t, "_get_anchorMin_Injected", null), e([ n.cache ], t, "_set_anchorMin_Injected", null), 
e([ n.cache ], t, "_get_anchorMax_Injected", null), e([ n.cache ], t, "_set_anchorMax_Injected", null), 
e([ n.cache ], t, "_get_anchoredPosition_Injected", null), e([ n.cache ], t, "_set_anchoredPosition_Injected", null), 
e([ n.cache ], t, "_get_sizeDelta_Injected", null), e([ n.cache ], t, "_set_sizeDelta_Injected", null), 
e([ n.cache ], t, "_get_pivot_Injected", null), e([ n.cache ], t, "_set_pivot_Injected", null), 
Il2Cpp.Api.RectTransform = t;

},{"decorator-cache-getter":513}],267:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_RectTransform = void 0;

const e = require("../../../../ValueType/Rect/class"), t = require("../../../../ValueType/Vector2/class"), n = require("../../../../ValueType/Vector3/class"), r = require("../class");

class i extends r.UnityEngine_Transform_Impl {
  reapplyDrivenProperties=lfv(this.handle, "reapplyDrivenProperties");
  constructor(e) {
    super(e);
  }
  static add_reapplyDrivenProperties(e) {
    return Il2Cpp.Api.RectTransform._add_reapplyDrivenProperties(e);
  }
  static remove_reapplyDrivenProperties(e) {
    return Il2Cpp.Api.RectTransform._remove_reapplyDrivenProperties(e);
  }
  get_rect() {
    return new e.UnityEngine_Rect(Il2Cpp.Api.RectTransform._get_rect(this.handle));
  }
  get_anchorMin() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchorMin(this.handle));
  }
  set_anchorMin(e) {
    return Il2Cpp.Api.RectTransform._set_anchorMin(this.handle, e.handle);
  }
  get_anchorMax() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchorMax(this.handle));
  }
  set_anchorMax(e) {
    return Il2Cpp.Api.RectTransform._set_anchorMax(this.handle, e.handle);
  }
  get_anchoredPosition() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchoredPosition(this.handle));
  }
  set_anchoredPosition(e) {
    return Il2Cpp.Api.RectTransform._set_anchoredPosition(this.handle, e.handle);
  }
  get_sizeDelta() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_sizeDelta(this.handle));
  }
  set_sizeDelta(e) {
    return Il2Cpp.Api.RectTransform._set_sizeDelta(this.handle, e.handle);
  }
  get_pivot() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_pivot(this.handle));
  }
  set_pivot(e) {
    return Il2Cpp.Api.RectTransform._set_pivot(this.handle, e.handle);
  }
  get_anchoredPosition3D() {
    return new n.UnityEngine_Vector3_Impl(Il2Cpp.Api.RectTransform._get_anchoredPosition3D(this.handle));
  }
  set_anchoredPosition3D(e) {
    return Il2Cpp.Api.RectTransform._set_anchoredPosition3D(this.handle, e.handle);
  }
  get_offsetMin() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_offsetMin(this.handle));
  }
  set_offsetMin(e) {
    return Il2Cpp.Api.RectTransform._set_offsetMin(this.handle, e.handle);
  }
  get_offsetMax() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_offsetMax(this.handle));
  }
  set_offsetMax(e) {
    return Il2Cpp.Api.RectTransform._set_offsetMax(this.handle, e.handle);
  }
  ForceUpdateRectTransforms() {
    return Il2Cpp.Api.RectTransform._ForceUpdateRectTransforms(this.handle);
  }
  GetLocalCorners(e) {
    return Il2Cpp.Api.RectTransform._GetLocalCorners(this.handle, e);
  }
  GetWorldCorners(e) {
    return Il2Cpp.Api.RectTransform._GetWorldCorners(this.handle, e);
  }
  SetSizeWithCurrentAnchors(e, t) {
    return Il2Cpp.Api.RectTransform._SetSizeWithCurrentAnchors(this.handle, e, t);
  }
  static SendReapplyDrivenProperties(e) {
    return Il2Cpp.Api.RectTransform._SendReapplyDrivenProperties(e);
  }
  GetParentSize() {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._GetParentSize(this.handle));
  }
  get_rect_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_rect_Injected(this.handle, e.handle);
  }
  get_anchorMin_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_anchorMin_Injected(this.handle, e.handle);
  }
  set_anchorMin_Injected(e) {
    return Il2Cpp.Api.RectTransform._set_anchorMin_Injected(this.handle, e.handle);
  }
  get_anchorMax_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_anchorMax_Injected(this.handle, e.handle);
  }
  set_anchorMax_Injected(e) {
    return Il2Cpp.Api.RectTransform._set_anchorMax_Injected(this.handle, e.handle);
  }
  get_anchoredPosition_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_anchoredPosition_Injected(this.handle, e.handle);
  }
  set_anchoredPosition_Injected(e) {
    return Il2Cpp.Api.RectTransform._set_anchoredPosition_Injected(this.handle, e.handle);
  }
  get_sizeDelta_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_sizeDelta_Injected(this.handle, e.handle);
  }
  set_sizeDelta_Injected(e) {
    return Il2Cpp.Api.RectTransform._set_sizeDelta_Injected(this.handle, e.handle);
  }
  get_pivot_Injected(e) {
    return Il2Cpp.Api.RectTransform._get_pivot_Injected(this.handle, e.handle);
  }
  set_pivot_Injected(e) {
    return Il2Cpp.Api.RectTransform._set_pivot_Injected(this.handle, e.handle);
  }
}

exports.UnityEngine_RectTransform = i, Il2Cpp.RectTransform = i;

},{"../../../../ValueType/Rect/class":426,"../../../../ValueType/Vector2/class":439,"../../../../ValueType/Vector3/class":443,"../class":271}],268:[function(require,module,exports){
"use strict";

},{}],269:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":266,"./class":267,"./export":268}],270:[function(require,module,exports){
"use strict";

var n = this && this.__decorate || function(n, e, t, i) {
  var o, r = arguments.length, l = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(n, e, t, i); else for (var a = n.length - 1; a >= 0; a--) (o = n[a]) && (l = (r < 3 ? o(l) : r > 3 ? o(e, t, l) : o(e, t)) || l);
  return r > 3 && l && Object.defineProperty(e, t, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class t {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _get_position() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_position", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_position() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_position", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localPosition() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localPosition", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_localPosition() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localPosition", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_eulerAngles() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_eulerAngles", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_eulerAngles() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_eulerAngles", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localEulerAngles() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localEulerAngles", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_up() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_up", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_forward() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_forward", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_forward() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_forward", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_rotation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_rotation", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_rotation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_rotation", 1, [ "UnityEngine.Quaternion" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localRotation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localRotation", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_localRotation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localRotation", 1, [ "UnityEngine.Quaternion" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localScale() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localScale", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_localScale() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localScale", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_parent() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_parent", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_parent() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_parent", 1, [ "UnityEngine.Transform" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_parentInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_parentInternal", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_parentInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_parentInternal", 1, [ "UnityEngine.Transform" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetParent() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetParent", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetParent() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetParent", 1, [ "UnityEngine.Transform" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetParent_parent_worldPositionStays() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetParent", 2, [ "UnityEngine.Transform", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_worldToLocalMatrix() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_worldToLocalMatrix", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_localToWorldMatrix() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localToWorldMatrix", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetPositionAndRotation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetPositionAndRotation", 2, [ "UnityEngine.Vector3", "UnityEngine.Quaternion" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Translate() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Translate", 2, [ "UnityEngine.Vector3", "UnityEngine.Space" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Rotate() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 2, [ "UnityEngine.Vector3", "UnityEngine.Space" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Rotate_eulers() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Rotate_xAngle_yAngle_zAngle() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 3, [ "System.Single", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RotateAroundInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAroundInternal", 2, [ "UnityEngine.Vector3", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RotateAround() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAround", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _LookAt() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 1, [ "UnityEngine.Transform" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LookAt_worldPosition_worldUp() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 2, [ "UnityEngine.Vector3", "UnityEngine.Vector3" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _LookAt_worldPosition() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 1, [ "UnityEngine.Vector3" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Internal_LookAt() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Internal_LookAt", 2, [ "UnityEngine.Vector3", "UnityEngine.Vector3" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TransformDirection() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _TransformDirection_x_y_z() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection", 3, [ "System.Single", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _InverseTransformDirection() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformDirection", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _TransformVector() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformVector", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InverseTransformVector() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformVector", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _TransformPoint() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformPoint", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InverseTransformPoint() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformPoint", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_childCount() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_childCount", 0, [], "int32", [ "pointer" ]);
  }
  static get _SetAsFirstSibling() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetAsFirstSibling", 0, [], "void", [ "pointer" ]);
  }
  static get _FindRelativeTransformWithPath() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "FindRelativeTransformWithPath", 3, [ "UnityEngine.Transform", "System.String", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Find() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Find", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_lossyScale() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_lossyScale", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsChildOf() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "IsChildOf", 1, [ "UnityEngine.Transform" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_hasChanged() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_hasChanged", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetEnumerator() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetEnumerator", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetChild() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetChild", 1, [ "System.Int32" ], "pointer", [ "pointer", "int32" ]);
  }
  static get _get_position_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_position_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_position_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_position_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localPosition_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localPosition_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_localPosition_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localPosition_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_rotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_rotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_rotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_rotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localRotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localRotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_localRotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localRotation_Injected", 1, [ "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localScale_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localScale_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_localScale_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localScale_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_worldToLocalMatrix_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_worldToLocalMatrix_Injected", 1, [ "UnityEngine.Matrix4x4&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_localToWorldMatrix_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localToWorldMatrix_Injected", 1, [ "UnityEngine.Matrix4x4&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetPositionAndRotation_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetPositionAndRotation_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Quaternion&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RotateAroundInternal_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAroundInternal_Injected", 2, [ "UnityEngine.Vector3&", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Internal_LookAt_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Internal_LookAt_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TransformDirection_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InverseTransformDirection_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformDirection_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TransformVector_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformVector_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InverseTransformVector_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformVector_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TransformPoint_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformPoint_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _InverseTransformPoint_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformPoint_Injected", 2, [ "UnityEngine.Vector3&", "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_lossyScale_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_lossyScale_Injected", 1, [ "UnityEngine.Vector3&" ], "void", [ "pointer", "pointer" ]);
  }
}

n([ e.cache ], t, "__ctor", null), n([ e.cache ], t, "_get_position", null), n([ e.cache ], t, "_set_position", null), 
n([ e.cache ], t, "_get_localPosition", null), n([ e.cache ], t, "_set_localPosition", null), 
n([ e.cache ], t, "_get_eulerAngles", null), n([ e.cache ], t, "_set_eulerAngles", null), 
n([ e.cache ], t, "_get_localEulerAngles", null), n([ e.cache ], t, "_get_up", null), 
n([ e.cache ], t, "_get_forward", null), n([ e.cache ], t, "_set_forward", null), 
n([ e.cache ], t, "_get_rotation", null), n([ e.cache ], t, "_set_rotation", null), 
n([ e.cache ], t, "_get_localRotation", null), n([ e.cache ], t, "_set_localRotation", null), 
n([ e.cache ], t, "_get_localScale", null), n([ e.cache ], t, "_set_localScale", null), 
n([ e.cache ], t, "_get_parent", null), n([ e.cache ], t, "_set_parent", null), 
n([ e.cache ], t, "_get_parentInternal", null), n([ e.cache ], t, "_set_parentInternal", null), 
n([ e.cache ], t, "_GetParent", null), n([ e.cache ], t, "_SetParent", null), n([ e.cache ], t, "_SetParent_parent_worldPositionStays", null), 
n([ e.cache ], t, "_get_worldToLocalMatrix", null), n([ e.cache ], t, "_get_localToWorldMatrix", null), 
n([ e.cache ], t, "_SetPositionAndRotation", null), n([ e.cache ], t, "_Translate", null), 
n([ e.cache ], t, "_Rotate", null), n([ e.cache ], t, "_Rotate_eulers", null), n([ e.cache ], t, "_Rotate_xAngle_yAngle_zAngle", null), 
n([ e.cache ], t, "_RotateAroundInternal", null), n([ e.cache ], t, "_RotateAround", null), 
n([ e.cache ], t, "_LookAt", null), n([ e.cache ], t, "_LookAt_worldPosition_worldUp", null), 
n([ e.cache ], t, "_LookAt_worldPosition", null), n([ e.cache ], t, "_Internal_LookAt", null), 
n([ e.cache ], t, "_TransformDirection", null), n([ e.cache ], t, "_TransformDirection_x_y_z", null), 
n([ e.cache ], t, "_InverseTransformDirection", null), n([ e.cache ], t, "_TransformVector", null), 
n([ e.cache ], t, "_InverseTransformVector", null), n([ e.cache ], t, "_TransformPoint", null), 
n([ e.cache ], t, "_InverseTransformPoint", null), n([ e.cache ], t, "_get_childCount", null), 
n([ e.cache ], t, "_SetAsFirstSibling", null), n([ e.cache ], t, "_FindRelativeTransformWithPath", null), 
n([ e.cache ], t, "_Find", null), n([ e.cache ], t, "_get_lossyScale", null), n([ e.cache ], t, "_IsChildOf", null), 
n([ e.cache ], t, "_set_hasChanged", null), n([ e.cache ], t, "_GetEnumerator", null), 
n([ e.cache ], t, "_GetChild", null), n([ e.cache ], t, "_get_position_Injected", null), 
n([ e.cache ], t, "_set_position_Injected", null), n([ e.cache ], t, "_get_localPosition_Injected", null), 
n([ e.cache ], t, "_set_localPosition_Injected", null), n([ e.cache ], t, "_get_rotation_Injected", null), 
n([ e.cache ], t, "_set_rotation_Injected", null), n([ e.cache ], t, "_get_localRotation_Injected", null), 
n([ e.cache ], t, "_set_localRotation_Injected", null), n([ e.cache ], t, "_get_localScale_Injected", null), 
n([ e.cache ], t, "_set_localScale_Injected", null), n([ e.cache ], t, "_get_worldToLocalMatrix_Injected", null), 
n([ e.cache ], t, "_get_localToWorldMatrix_Injected", null), n([ e.cache ], t, "_SetPositionAndRotation_Injected", null), 
n([ e.cache ], t, "_RotateAroundInternal_Injected", null), n([ e.cache ], t, "_Internal_LookAt_Injected", null), 
n([ e.cache ], t, "_TransformDirection_Injected", null), n([ e.cache ], t, "_InverseTransformDirection_Injected", null), 
n([ e.cache ], t, "_TransformVector_Injected", null), n([ e.cache ], t, "_InverseTransformVector_Injected", null), 
n([ e.cache ], t, "_TransformPoint_Injected", null), n([ e.cache ], t, "_InverseTransformPoint_Injected", null), 
n([ e.cache ], t, "_get_lossyScale_Injected", null), Il2Cpp.Api.Transform = t;

},{"decorator-cache-getter":513}],271:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Transform_Impl = void 0;

const n = require("../../../ValueType/Matrix4x4/class"), e = require("../../../ValueType/Quaternion/class"), t = require("../../../ValueType/Vector3/class"), r = require("../class");

class a extends r.UnityEngine_Component_Impl {
  constructor(n) {
    super(n);
  }
  _ctor() {
    return Il2Cpp.Api.Transform.__ctor(alloc());
  }
  get_position() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_position(this.handle));
  }
  set_position(n) {
    return Il2Cpp.Api.Transform._set_position(this.handle, n.handle);
  }
  get_localPosition() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localPosition(this.handle));
  }
  set_localPosition(n) {
    return Il2Cpp.Api.Transform._set_localPosition(this.handle, n.handle);
  }
  get_eulerAngles() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_eulerAngles(this.handle));
  }
  set_eulerAngles(n) {
    return Il2Cpp.Api.Transform._set_eulerAngles(this.handle, n.handle);
  }
  get_localEulerAngles() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localEulerAngles(this.handle));
  }
  get_up() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_up(this.handle));
  }
  get_forward() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_forward(this.handle));
  }
  set_forward(n) {
    return Il2Cpp.Api.Transform._set_forward(this.handle, n.handle);
  }
  get_rotation() {
    return new e.UnityEngine_Quaternion_Impl(Il2Cpp.Api.Transform._get_rotation(this.handle));
  }
  set_rotation(n) {
    return Il2Cpp.Api.Transform._set_rotation(this.handle, n.handle);
  }
  get_localRotation() {
    return new e.UnityEngine_Quaternion_Impl(Il2Cpp.Api.Transform._get_localRotation(this.handle));
  }
  set_localRotation(n) {
    return Il2Cpp.Api.Transform._set_localRotation(this.handle, n.handle);
  }
  get_localScale() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localScale(this.handle));
  }
  set_localScale(n) {
    return Il2Cpp.Api.Transform._set_localScale(this.handle, n.handle);
  }
  get_parent() {
    return new a(Il2Cpp.Api.Transform._get_parent(this.handle));
  }
  set_parent(n) {
    return Il2Cpp.Api.Transform._set_parent(this.handle, n.handle);
  }
  get_parentInternal() {
    return new a(Il2Cpp.Api.Transform._get_parentInternal(this.handle));
  }
  set_parentInternal(n) {
    return Il2Cpp.Api.Transform._set_parentInternal(this.handle, n.handle);
  }
  GetParent() {
    return new a(Il2Cpp.Api.Transform._GetParent(this.handle));
  }
  SetParent(n) {
    return Il2Cpp.Api.Transform._SetParent(this.handle, n.handle);
  }
  SetParent_2(n, e) {
    return Il2Cpp.Api.Transform._SetParent(this.handle, n.handle, e);
  }
  get_worldToLocalMatrix() {
    return new n.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Transform._get_worldToLocalMatrix(this.handle));
  }
  get_localToWorldMatrix() {
    return new n.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Transform._get_localToWorldMatrix(this.handle));
  }
  SetPositionAndRotation(n, e) {
    return Il2Cpp.Api.Transform._SetPositionAndRotation(this.handle, n.handle, e.handle);
  }
  Translate(n, e) {
    return Il2Cpp.Api.Transform._Translate(this.handle, n.handle, e);
  }
  Rotate(n, e) {
    return Il2Cpp.Api.Transform._Rotate(this.handle, n.handle, e);
  }
  Rotate_1(n) {
    return Il2Cpp.Api.Transform._Rotate(this.handle, n.handle);
  }
  Rotate_3(n, e, t) {
    return Il2Cpp.Api.Transform._Rotate(this.handle, n, e, t);
  }
  RotateAroundInternal(n, e) {
    return Il2Cpp.Api.Transform._RotateAroundInternal(this.handle, n.handle, e);
  }
  RotateAround(n, e, t) {
    return Il2Cpp.Api.Transform._RotateAround(this.handle, n.handle, e.handle, t);
  }
  LookAt(n) {
    return Il2Cpp.Api.Transform._LookAt(this.handle, n.handle);
  }
  LookAt_2(n, e) {
    return Il2Cpp.Api.Transform._LookAt(this.handle, n.handle, e.handle);
  }
  LookAt_1(n) {
    return Il2Cpp.Api.Transform._LookAt(this.handle, n.handle);
  }
  Internal_LookAt(n, e) {
    return Il2Cpp.Api.Transform._Internal_LookAt(this.handle, n.handle, e.handle);
  }
  TransformDirection(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformDirection(this.handle, n.handle));
  }
  TransformDirection_3(n, e, r) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformDirection(this.handle, n, e, r));
  }
  InverseTransformDirection(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformDirection(this.handle, n));
  }
  TransformVector(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformVector(this.handle, n.handle));
  }
  InverseTransformVector(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformVector(this.handle, n.handle));
  }
  TransformPoint(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformPoint(this.handle, n.handle));
  }
  InverseTransformPoint(n) {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformPoint(this.handle, n.handle));
  }
  get_childCount() {
    return Il2Cpp.Api.Transform._get_childCount(this.handle);
  }
  get childCount() {
    return this.get_childCount();
  }
  SetAsFirstSibling() {
    return Il2Cpp.Api.Transform._SetAsFirstSibling(this.handle);
  }
  static FindRelativeTransformWithPath(n, e, t) {
    return new a(Il2Cpp.Api.Transform._FindRelativeTransformWithPath(n, e, t));
  }
  Find(n) {
    return new a(Il2Cpp.Api.Transform._Find(this.handle, allocUStr(n)));
  }
  get_lossyScale() {
    return new t.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_lossyScale(this.handle));
  }
  IsChildOf(n) {
    return !Il2Cpp.Api.Transform._IsChildOf(this.handle, n.handle).isNull();
  }
  set_hasChanged(n) {
    return Il2Cpp.Api.Transform._set_hasChanged(this.handle, n);
  }
  GetChild(n) {
    return new a(Il2Cpp.Api.Transform._GetChild(this.handle, n));
  }
  get_position_Injected(n) {
    return Il2Cpp.Api.Transform._get_position_Injected(this.handle, n.handle);
  }
  set_position_Injected(n) {
    return Il2Cpp.Api.Transform._set_position_Injected(this.handle, n.handle);
  }
  get_localPosition_Injected(n) {
    return Il2Cpp.Api.Transform._get_localPosition_Injected(this.handle, n.handle);
  }
  set_localPosition_Injected(n) {
    return Il2Cpp.Api.Transform._set_localPosition_Injected(this.handle, n.handle);
  }
  get_rotation_Injected(n) {
    return Il2Cpp.Api.Transform._get_rotation_Injected(this.handle, n.handle);
  }
  set_rotation_Injected(n) {
    return Il2Cpp.Api.Transform._set_rotation_Injected(this.handle, n.handle);
  }
  get_localRotation_Injected(n) {
    return Il2Cpp.Api.Transform._get_localRotation_Injected(this.handle, n.handle);
  }
  set_localRotation_Injected(n) {
    return Il2Cpp.Api.Transform._set_localRotation_Injected(this.handle, n.handle);
  }
  get_localScale_Injected(n) {
    return Il2Cpp.Api.Transform._get_localScale_Injected(this.handle, n.handle);
  }
  set_localScale_Injected(n) {
    return Il2Cpp.Api.Transform._set_localScale_Injected(this.handle, n.handle);
  }
  get_worldToLocalMatrix_Injected(n) {
    return Il2Cpp.Api.Transform._get_worldToLocalMatrix_Injected(this.handle, n.handle);
  }
  get_localToWorldMatrix_Injected(n) {
    return Il2Cpp.Api.Transform._get_localToWorldMatrix_Injected(this.handle, n.handle);
  }
  SetPositionAndRotation_Injected(n, e) {
    return Il2Cpp.Api.Transform._SetPositionAndRotation_Injected(this.handle, n.handle, e.handle);
  }
  RotateAroundInternal_Injected(n, e) {
    return Il2Cpp.Api.Transform._RotateAroundInternal_Injected(this.handle, n.handle, e);
  }
  Internal_LookAt_Injected(n, e) {
    return Il2Cpp.Api.Transform._Internal_LookAt_Injected(this.handle, n.handle, e.handle);
  }
  TransformDirection_Injected(n, e) {
    return Il2Cpp.Api.Transform._TransformDirection_Injected(this.handle, n.handle, e.handle);
  }
  InverseTransformDirection_Injected(n, e) {
    return Il2Cpp.Api.Transform._InverseTransformDirection_Injected(this.handle, n.handle, e.handle);
  }
  TransformVector_Injected(n, e) {
    return Il2Cpp.Api.Transform._TransformVector_Injected(this.handle, n.handle, e.handle);
  }
  InverseTransformVector_Injected(n, e) {
    return Il2Cpp.Api.Transform._InverseTransformVector_Injected(this.handle, n.handle, e.handle);
  }
  TransformPoint_Injected(n, e) {
    return Il2Cpp.Api.Transform._TransformPoint_Injected(this.handle, n.handle, e.handle);
  }
  InverseTransformPoint_Injected(n, e) {
    return Il2Cpp.Api.Transform._InverseTransformPoint_Injected(this.handle, n.handle, e.handle);
  }
  get_lossyScale_Injected(n) {
    return Il2Cpp.Api.Transform._get_lossyScale_Injected(this.handle, n.handle);
  }
  forEach(n) {
    0 == this.childCount && LOGE(`Transform.forEach: childCount = ${this.childCount}`);
    for (let e = 0; e < this.childCount; e++) try {
      n(this.GetChild(e), e);
    } catch (n) {
      LOGE(n);
    }
  }
}

exports.UnityEngine_Transform_Impl = a, Il2Cpp.Transform = a;

},{"../../../ValueType/Matrix4x4/class":408,"../../../ValueType/Quaternion/class":412,"../../../ValueType/Vector3/class":443,"../class":275}],272:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Image/class"), t = require("../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class"), r = require("../Behavior/MonoBehaviour/Selectable/Button/class"), n = require("../../GameObject/export");

globalThis.showTransform = e => {
  "number" == typeof e && (e = ptr(e)), LOGO(`${getLine(15)} Transform ${getLine(15)}`);
  let t = new Il2Cpp.Transform(e);
  LOGD(`childCount\t---\x3e\t${t.get_childCount()}\t(${t.get_name()})`), PrintHierarchy(e, 1, !0), 
  LOGD("get_position\t(" + t.get_position().toString() + ")");
}, globalThis.PrintHierarchy = (i, o = 2, l = !1, a = !1) => {
  if (null == i) throw new Error("PrintHierarchy: mPtr is undefined");
  let h = checkCmdInput(i);
  if (h.isNull()) throw new Error("PrintHierarchy: mPtr is null");
  let s = (0, n.GetGameObjectFromPtr)(h).transform, c = s.get_name(), u = s.get_childCount(), g = 2 == o ? "default 2 level" : `${o} level`;
  LOG(TFM(`${c}`, LogColor.C36) + TFM(`  [ ${u} childs / ${g}]`, LogColor.C90)), 10 == o && LOGO(`${getLine(75)}\n`);
  let m = p(s);
  function f(e, t, r, n) {
    let i = listScripts(e), o = new Array;
    return i && i.length > 0 && i.forEach((e => {
      let n = "";
      try {
        n = e.toString();
      } catch (e) {}
      if (n.includes(t)) try {
        o.push(`${r}    ${e.handle} -> ${n}`);
      } catch {
        o.push(`${r}    ${e.handle} -> (→_→) ErrorToCase`);
      }
    })), o.join("\n");
  }
  function p(e) {
    for (let t = 0; t < 10; ++t) try {
      if (e.handle.isNull()) return t;
      e = e.get_parent();
    } catch (e) {
      return t;
    }
    return 0;
  }
  function d(n) {
    let i = listScripts(n), o = "";
    return i && i.length > 0 && i.forEach((n => {
      try {
        if ("Text" == n.class.name && (o = new t.Text(n.handle).m_Text), "Button" == n.class.name && (o = new r.Button(n.handle).get_onClick().m_Calls.m_PersistentCalls.itemsToString()), 
        "Image" == n.class.name) {
          const t = new e.UI_Image(n.handle).m_RectTransform.get_rect();
          o = `m_width:${t.m_Width} | m_height:${t.m_Height}`;
        }
      } catch {}
    })), o;
  }
  !function e(t) {
    let r = t.get_childCount();
    if (0 == r) return;
    for (let n = 0; n < r; ++n) {
      let r = t.GetChild(n), i = p(r) - m;
      if (i > 0 && i <= o) {
        let e = l ? "" : "\t" + getLine(i - 1, "\t"), t = r.handle + " : ", n = r.get_name(), o = a ? "" : "  " + d(r);
        LOG(TFM(`${e}${t}${n}`, LogColor.C36) + "  " + TFM(o, LogColor.C90)), a && LOGZ(`${f(r, n, e, i)}`);
      }
      e(r);
    }
  }(s), 10 == o && LOGO(`${getLine(75)}\n`);
}, globalThis.getGameObject = (e, t = !1) => {
  let r = (0, n.GetGameObjectFromPtr)(e);
  if (!t) return r.handle;
  showGameObject(r);
}, globalThis.p = globalThis.PrintHierarchy, globalThis.packTransform = e => new Il2Cpp.Transform(e), 
globalThis.PrintHierarchyWithComponents = (e, t) => PrintHierarchy(e, t, !1, !0);

},{"../../GameObject/export":280,"../Behavior/MonoBehaviour/Selectable/Button/class":176,"../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Image/class":201,"../Behavior/MonoBehaviour/UIBehaviour/Graphic/MaskableGraphic/Text/class":218}],273:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./export"), require("./class"), require("./RectTransform/include");

},{"./RectTransform/include":269,"./api":270,"./class":271,"./export":272}],274:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, o) {
  var i, r = arguments.length, p = r < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, n) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, o); else for (var c = e.length - 1; c >= 0; c--) (i = e[c]) && (p = (r < 3 ? i(p) : r > 3 ? i(t, n, p) : i(t, n)) || p);
  return r > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _ctor_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _CompareTag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "CompareTag", 1, "bool", [ "pointer", "pointer" ]);
  }
  static get _GetComponent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponent", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponentInChildren() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponentInChildren", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetComponentInParent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponentInParent", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponents() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponents", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_gameObject() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "get_gameObject", 0, "pointer", [ "pointer" ]);
  }
  static get _set_tag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "set_tag", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_transform() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "get_transform", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_ctor_0", null), e([ t.cache ], n, "_CompareTag", null), e([ t.cache ], n, "_GetComponent", null), 
e([ t.cache ], n, "_GetComponentInChildren", null), e([ t.cache ], n, "_GetComponentInParent", null), 
e([ t.cache ], n, "_GetComponents", null), e([ t.cache ], n, "_get_gameObject", null), 
e([ t.cache ], n, "_set_tag", null), e([ t.cache ], n, "_get_transform", null), 
Il2Cpp.Api.Component = n;

},{"decorator-cache-getter":513}],275:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Component_Impl = void 0;

const e = require("../class"), t = require("../GameObject/class");

class n extends e.UnityEngine_Object {
  constructor(e) {
    super(e);
  }
  __ctor__() {
    return new n(Il2Cpp.Api.Component._ctor_0(allocP()));
  }
  CompareTag(e) {
    return !Il2Cpp.Api.Component._CompareTag(this.handle, allocUStr(e)).isNull();
  }
  GetComponent(e) {
    return new n(Il2Cpp.Api.Component._GetComponent(this.handle, e.handle));
  }
  GetComponentInChildren(e, t) {
    return new n(Il2Cpp.Api.Component._GetComponentInChildren(this.handle, e.handle, t ? ptr(1) : ptr(0)));
  }
  GetComponentInParent(e) {
    return new n(Il2Cpp.Api.Component._GetComponentInParent(this.handle, e.handle));
  }
  get_gameObject() {
    return new t.GameObjectImpl(Il2Cpp.Api.Component._get_gameObject(this.handle));
  }
  set_tag(e) {
    return Il2Cpp.Api.Component._set_tag(this.handle, allocUStr(e));
  }
  get_transform() {
    return new Il2Cpp.Transform(Il2Cpp.Api.Component._get_transform(this.handle));
  }
  get gameobject() {
    return this.get_gameObject();
  }
  get gameobject_handle() {
    return this.gameobject.handle;
  }
  get transform() {
    return this.get_transform();
  }
  get transform_handle() {
    return this.transform.handle;
  }
}

exports.UnityEngine_Component_Impl = n, Il2Cpp.Component = n;

},{"../GameObject/class":279,"../class":303}],276:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.setActiveTChange = exports.setActiveT = void 0;

const e = (e, t = !1) => e.get_gameObject().SetActive(t);

exports.setActiveT = e;

const t = e => e.get_gameObject().SetActive(!e.get_gameObject().get_activeSelf());

exports.setActiveTChange = t;

},{}],277:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./Behavior/include"), require("./CanvasRenderer/include"), require("./Collider/include"), 
require("./ParticleSystem/include"), require("./Renderer/include"), require("./Rigidbody/include"), 
require("./Renderer/include"), require("./Transform/include"), require("./api"), 
require("./class"), require("./export");

},{"./Behavior/include":238,"./CanvasRenderer/include":242,"./Collider/include":248,"./ParticleSystem/include":253,"./Renderer/include":261,"./Rigidbody/include":265,"./Transform/include":273,"./api":274,"./class":275,"./export":276}],278:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _ctor_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _ctor_1() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ctor_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddComponent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "AddComponent", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponent", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponentInChildren() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentInChildren", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetComponentInParent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentInParent", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponentsInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentsInternal", 6, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SendMessage() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "SendMessage", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetActive() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "SetActive", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetComponentFastPath() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "TryGetComponentFastPath", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "CompareTag", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_transform() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_transform", 0, "pointer", [ "pointer" ]);
  }
  static get _get_tag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_tag", 0, "pointer", [ "pointer" ]);
  }
  static get _get_layer() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_layer", 0, "int32", [ "pointer" ]);
  }
  static get _set_layer() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "set_layer", 1, "pointer", [ "pointer", "int32" ]);
  }
  static get _get_gameObject() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_gameObject", 0, "pointer", [ "pointer" ]);
  }
  static get _get_activeSelf() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_activeSelf", 0, "bool", [ "pointer" ]);
  }
  static get _Find() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "Find", 1, "pointer", [ "pointer" ]);
  }
  static get _FindGameObjectsWithTag_A() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindGameObjectsWithTag", 1, "pointer", [ "pointer" ]);
  }
  static get _FindGameObjectWithTag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindGameObjectWithTag", 1, "pointer", [ "pointer" ]);
  }
  static get _FindWithTag() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindWithTag", 1, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_ctor_0", null), e([ t.cache ], n, "_ctor_1", null), e([ t.cache ], n, "_ctor_2", null), 
e([ t.cache ], n, "_AddComponent", null), e([ t.cache ], n, "_GetComponent", null), 
e([ t.cache ], n, "_GetComponentInChildren", null), e([ t.cache ], n, "_GetComponentInParent", null), 
e([ t.cache ], n, "_GetComponentsInternal", null), e([ t.cache ], n, "_SendMessage", null), 
e([ t.cache ], n, "_SetActive", null), e([ t.cache ], n, "_GetComponentFastPath", null), 
e([ t.cache ], n, "_CompareTag", null), e([ t.cache ], n, "_get_transform", null), 
e([ t.cache ], n, "_get_tag", null), e([ t.cache ], n, "_get_layer", null), e([ t.cache ], n, "_set_layer", null), 
e([ t.cache ], n, "_get_gameObject", null), e([ t.cache ], n, "_get_activeSelf", null), 
e([ t.cache ], n, "_Find", null), e([ t.cache ], n, "_FindGameObjectsWithTag_A", null), 
e([ t.cache ], n, "_FindGameObjectWithTag", null), e([ t.cache ], n, "_FindWithTag", null), 
Il2Cpp.Api.GameObject = n;

},{"decorator-cache-getter":513}],279:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.GameObjectImpl = void 0;

const e = require("../class"), t = require("../Component/class");

class n extends e.UnityEngine_Object {
  constructor(e) {
    super(e);
  }
  ctor_0() {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._ctor_0(alloc()));
  }
  ctor_1(e) {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._ctor_1(alloc(), allocUStr(e)));
  }
  AddComponent(e) {
    return Il2Cpp.Api.GameObject._AddComponent(this.handle, e.handle);
  }
  GetComponent(e) {
    return new t.UnityEngine_Component_Impl(Il2Cpp.Api.GameObject._GetComponent(this.handle, e.handle));
  }
  GetComponentInChildren(e, n) {
    return new t.UnityEngine_Component_Impl(Il2Cpp.Api.GameObject._GetComponentInChildren(this.handle, e.handle, n ? ptr(1) : ptr(0)));
  }
  GetComponentInParent(e, n) {
    return new t.UnityEngine_Component_Impl(Il2Cpp.Api.GameObject._GetComponentInParent(this.handle, e.handle, n ? ptr(1) : ptr(0)));
  }
  GetComponentsInternal(e, t = !0, n = !0, r = !0, p = !0, a = ptr(0)) {
    a = alloc(32);
    let l = Il2Cpp.Api.GameObject._GetComponentsInternal(this.handle, e.handle, t ? ptr(1) : ptr(0), n ? ptr(1) : ptr(0), r ? ptr(1) : ptr(0), p ? ptr(1) : ptr(0), a);
    return seeHexA(a), l;
  }
  SendMessage(e, t) {
    return Il2Cpp.Api.GameObject._SendMessage(this.handle, allocUStr(e), t);
  }
  SetActive(e) {
    return Il2Cpp.Api.GameObject._SetActive(this.handle, e ? ptr(1) : ptr(0));
  }
  GetComponentFastPath(e, t) {
    return Il2Cpp.Api.GameObject._GetComponentFastPath(this.handle, e.handle, t);
  }
  CompareTag(e) {
    return Il2Cpp.Api.GameObject._CompareTag(this.handle, allocUStr(e));
  }
  get_transform() {
    if (this.handle.isNull()) throw new Error("get_transform : GameObject is null");
    return new Il2Cpp.Transform(Il2Cpp.Api.GameObject._get_transform(this.handle));
  }
  get transform() {
    return this.get_transform();
  }
  get_tag() {
    return readU16(Il2Cpp.Api.GameObject._get_tag(this.handle));
  }
  get tag() {
    return this.get_tag();
  }
  set_layer(e) {
    return Il2Cpp.Api.GameObject._set_layer(this.handle, e);
  }
  set layer(e) {
    this.set_layer(e);
  }
  get_layer() {
    return Il2Cpp.Api.GameObject._get_layer(this.handle);
  }
  get layer() {
    return this.get_layer();
  }
  get_gameObject() {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._get_gameObject(this.handle));
  }
  get gameObject() {
    return this.get_gameObject();
  }
  get_activeSelf() {
    return Il2Cpp.Api.GameObject._get_activeSelf(this.handle);
  }
  get_activeInHierarchy() {
    return Il2Cpp.Api.GameObject._get_activeSelf(this.handle);
  }
  static Find(e) {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._Find(allocUStr(e)));
  }
  static FindGameObjectWithTag(e) {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._FindGameObjectWithTag(allocUStr(e)));
  }
  static FindWithTag(e) {
    return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._FindWithTag(allocUStr(e)));
  }
  showSelf() {
    this.handle.isNull() || showGameObject(this.handle);
  }
}

exports.GameObjectImpl = n, Il2Cpp.GameObject = n;

},{"../Component/class":275,"../class":303}],280:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookSendMessage = exports.getTransform = exports.HookSetActive = exports.showGameObject = exports.findGameObject = exports.GetGameObjectFromPtr = void 0;

const e = require("../../../../../utils/common"), t = require("../../../../../bridge/fix/packer/packArray"), n = require("../../../../../bridge/fix/packer/packList"), r = require("../Component/export"), o = require("../../ValueType/exports"), i = require("../../../../../utils/alloc");

function a(e) {
  if (null == e) throw new Error("mPtr is undefined");
  if (e instanceof Il2Cpp.GameObject) return e;
  if (e instanceof Il2Cpp.Transform || e instanceof Il2Cpp.Component) return e.gameobject;
  if (!(e instanceof NativePointer || "number" == typeof e)) throw new Error("mPtr is not a valid instance of the specified type");
  {
    const t = checkCmdInput(e), n = getTypeName(t);
    if ((0, o.checkExtends)(t, "Component")) return new Il2Cpp.Component(t).gameobject;
    if ("GameObject" == n) return new Il2Cpp.GameObject(t);
  }
}

globalThis.HookSetActive = (t = !0, n = !1, r = "") => {
  let o = find_method("UnityEngine.CoreModule", "GameObject", "SetActive", 1);
  try {
    A(o, ((e, t, n) => {
      i(e[0], t);
    }));
  } catch {
    A(o.add(3 * p_size), ((e, t, n) => {
      i(getPlatformCtxWithArgV(t, 0), t);
    }));
  }
  function i(o, i) {
    if (o.isNull()) return;
    let a = new Il2Cpp.GameObject(ptr(o));
    if ("" != r) if (r instanceof Array) {
      let e = !1;
      for (let t = 0; t < r.length; t++) if (-1 != a.get_name().indexOf(r[t])) {
        e = !0;
        break;
      }
      if (!e) return;
    } else if ("" != r && -1 == a.get_name().indexOf(r)) return;
    if (-1 != (0, e.filterDuplicateOBJ)(a.toString())) {
      if (t && !o.isNull()) {
        let e = "public extern void SetActive( " + (0 == o.toInt32() ? "false" : "true") + " );  LR:" + checkCtx(i);
        LOGW("\n" + getLine(e.length)), LOGD(e), LOGO(getLine(e.length / 2)), showGameObject(o);
      }
      n && PrintStackTraceN(i);
    }
  }
}, globalThis.HookSendMessage = () => {
  A(Module.findExportByName("libunity.so", "UnitySendMessage"), (e => {
    LOGW("\n--------------\tCalled UnitySendMessage\t--------------"), LOGD("UnitySendMessage => " + e[0].readCString() + " " + e[1].readCString() + " " + e[2].readCString());
  }));
}, exports.GetGameObjectFromPtr = a, globalThis.showGameObject = e => {
  if (null == e || e instanceof NativePointer && e.isNull()) return;
  let t = a(e);
  LOGO("--------- GameObject ---------"), LOGD("gameObj\t\t---\x3e\t" + t.handle), 
  LOGD("getName\t\t---\x3e\t" + t.get_name()), LOGD("getLayer\t---\x3e\t" + t.get_layer());
  let n = t.get_transform();
  LOGD("getTransform\t---\x3e\t" + n.handle);
  let r = "";
  for (var o = 0; o < 10 && !n.handle.isNull(); o++) {
    r = r + ("" == r ? "" : " <--- ") + n.get_gameObject().get_name() + "(" + n.handle + ")", 
    n = n.get_parent();
  }
  LOGD("hierarchy\t---\x3e\t" + r);
}, globalThis.getTransform = e => a(e).transform.handle, globalThis.setActive = (e, t = !1) => {
  if ((e = l(e)) instanceof Il2Cpp.GameObject) s(e, t); else {
    if (!(e instanceof Il2Cpp.Transform)) throw new Error("setActive: mPtr is not GameObject or Transform or number or string");
    (0, r.setActiveT)(e, t);
  }
}, globalThis.setActiveC = (e, t = !1) => {
  if ((e = l(e)) instanceof Il2Cpp.GameObject) c(e); else {
    if (!(e instanceof Il2Cpp.Transform)) throw new Error("setActive: mPtr is not GameObject or Transform or number or string");
    (0, r.setActiveTChange)(e);
  }
};

const l = e => {
  let t;
  if ("number" == typeof e || "string" == typeof e || e instanceof NativePointer) {
    t = checkCmdInput(e);
    let n = getTypeName(t);
    if (n.includes("Transform")) e = new Il2Cpp.Transform(t); else {
      if (!n.includes("GameObject")) throw new Error("setActive: mPtr is not GameObject or Transform");
      e = new Il2Cpp.GameObject(t);
    }
  }
  return e;
}, s = (e, t = !1) => e.SetActive(t), c = e => e.SetActive(!e.get_activeSelf());

function m(e, t) {
  if (null == e) throw new Error("findGameObject: path is undefined");
  try {
    if (null == t) {
      if (null != arguments[2]) {
        let t = Il2Cpp.GameObject.Find(e);
        if (t.handle.isNull()) throw "Not Found ...";
        return showGameObject(t.handle), t.handle;
      }
      showGameObject(callFunction([ "UnityEngine.CoreModule", "GameObject", "Find", 1 ], allocCStr(e)));
    } else if (-1 != getType(t).name.indexOf("Transform")) {
      if (null != arguments[2]) return callFunction([ "UnityEngine.CoreModule", "Transform", "Find", 1 ], t, allocCStr(e));
      {
        let n = getGameObject(callFunction([ "UnityEngine.CoreModule", "Transform", "Find", 1 ], t, allocCStr(e)));
        null != n && showGameObject(n);
      }
    } else LOGE("\narguments[1] Need a Transform Ptr\n");
  } catch (e) {
    LOGE("\nNot Found ...\n");
  }
}

function f(e) {
  const t = getTypeParent(e.handle);
  return t.find((e => "Component" === e.name))?.handle ?? ptr(0);
}

globalThis.findGameObject = m, exports.findGameObject = m;

var p = ptr(0);

function u(e) {
  (e instanceof Il2Cpp.GameObject || e instanceof Il2Cpp.Object) && (e = e.handle);
  let n = new Il2Cpp.GameObject(checkCmdInput(e)), r = ptr(0), o = f(n.get_transform());
  if (r = find_method("UnityEngine.CoreModule", "GameObject", "GetComponents", 1), 
  !r.isNull()) return new t.PackArray(callFunction(r, n.handle, o));
  if (r = find_method("UnityEngine.CoreModule", "GameObject", "GetComponentsInternal", 6), 
  !r.isNull()) return new t.PackArray(callFunctionLong(r, n.handle, o, 1, 1, 0, p));
  throw new Error("list_Components_GameObject: not found method");
}

const d = 4096;

function h(e) {
  e instanceof Il2Cpp.Component && (e = e.handle);
  let r = new Il2Cpp.Component(checkCmdInput(e)), o = ptr(0), a = f(r.get_transform());
  if (o = find_method("UnityEngine.CoreModule", "Component", "GetComponents", 2), 
  o.isNull() && (o = find_method("UnityEngine.CoreModule", "Component", "GetComponentsForListInternal", 2)), 
  !o.isNull()) return p = (0, i.allocP)(d), callFunction(o, r.handle, a, p), new t.PackArray(n.PackList.localArray(p));
  throw new Error("list_Components_Component: not found method");
}

globalThis.listScripts = e => {
  if (e instanceof Il2Cpp.GameObject) return u(e.handle);
  if (e instanceof Il2Cpp.Transform) return u(e.get_gameObject());
  if (e instanceof Il2Cpp.Component) return h(e.handle);
  let t = checkCmdInput(e), n = getTypeName(t);
  if ("GameObject" == n) return u(t);
  if ("RectTransform" == n) return h(t);
  if ((0, o.checkExtends)(t)) return h(t);
  throw new Error("listScripts: unsport type");
}, globalThis.showComponents = e => {
  let t = listScripts(e);
  t && t.length > 0 && (LOGO("--------- Components ---------"), t.forEach((e => {
    try {
      LOGD(`${e.handle} -> ${e}`);
    } catch {
      LOGE(`${e.handle} -> (→_→) ErrorToCase `);
    }
  })));
}, globalThis.s = globalThis.showComponents;

},{"../../../../../bridge/fix/packer/packArray":27,"../../../../../bridge/fix/packer/packList":29,"../../../../../utils/alloc":498,"../../../../../utils/common":502,"../../ValueType/exports":452,"../Component/export":276}],281:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":278,"./class":279,"./export":280}],282:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, l = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (l = (o < 3 ? r(l) : o > 3 ? r(t, n, l) : r(t, n)) || l);
  return o > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _CreateWithShader() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "CreateWithShader", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _CreateWithMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "CreateWithMaterial", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _CreateWithString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "CreateWithString", 1, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", ".ctor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_source() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", ".ctor", 1, [ "UnityEngine.Material" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_contents() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", ".ctor", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_shader() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "set_shader", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_color() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "get_color", 0, "pointer", [ "pointer" ]);
  }
  static get _set_color() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "set_color", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_mainTexture() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "get_mainTexture", 0, "pointer", [ "pointer" ]);
  }
  static get _set_mainTextureScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "set_mainTextureScale", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetFirstPropertyNameIdByAttribute() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetFirstPropertyNameIdByAttribute", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _HasProperty() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "HasProperty", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _HasProperty_name() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "HasProperty", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_renderQueue() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "set_renderQueue", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _EnableKeyword() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "EnableKeyword", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _DisableKeyword() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "DisableKeyword", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_passCount() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "get_passCount", 0, "pointer", [ "pointer" ]);
  }
  static get _SetPass() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetPass", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _CopyPropertiesFromMaterial() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "CopyPropertiesFromMaterial", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetShaderKeywords() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetShaderKeywords", 0, "pointer", [ "pointer" ]);
  }
  static get _SetShaderKeywords() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetShaderKeywords", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_shaderKeywords() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "get_shaderKeywords", 0, "pointer", [ "pointer" ]);
  }
  static get _set_shaderKeywords() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "set_shaderKeywords", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _ComputeCRC() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "ComputeCRC", 0, "pointer", [ "pointer" ]);
  }
  static get _SetFloatImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetFloatImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetColorImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetColorImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetMatrixImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetMatrixImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetFloatImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetFloatImpl", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetColorImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetColorImpl", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTextureImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTextureImpl", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTextureScaleAndOffsetImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTextureScaleAndOffsetImpl", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetTextureOffsetImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureOffsetImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureScaleImpl() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureScaleImpl", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetFloat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetFloat", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetFloat_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetFloat", 2, [ "System.Int32", "System.Single" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetInt() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetInt", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetColor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetColor", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetColor_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetColor", 2, [ "System.Int32", "UnityEngine.Color" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetVector() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetVector", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetVector_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetVector", 2, [ "System.Int32", "UnityEngine.Vector4" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetMatrix() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetMatrix", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetMatrix_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetMatrix", 2, [ "System.Int32", "UnityEngine.Matrix4x4" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTexture() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTexture", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTexture_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetTexture", 2, [ "System.Int32", "UnityEngine.Texture" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetFloat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetFloat", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloat_nameID() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "GetFloat", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetColor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetColor", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetColor_nameID() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "GetColor", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetVector() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetVector", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTexture() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTexture", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTexture_nameID() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "GetTexture", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetTextureOffset() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureOffset", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureScale", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureScale_nameID_value() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureScale", 2, [ "System.Int32", "UnityEngine.Vector2" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetTextureOffset() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTextureOffset", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTextureScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTextureScale", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetColorImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetColorImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetMatrixImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetMatrixImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetColorImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetColorImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetTextureScaleAndOffsetImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "GetTextureScaleAndOffsetImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureOffsetImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureOffsetImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTextureScaleImpl_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Material", "SetTextureScaleImpl_Injected", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_CreateWithShader", null), e([ t.cache ], n, "_CreateWithMaterial", null), 
e([ t.cache ], n, "_CreateWithString", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "__ctor_source", null), e([ t.cache ], n, "__ctor_contents", null), 
e([ t.cache ], n, "_set_shader", null), e([ t.cache ], n, "_get_color", null), e([ t.cache ], n, "_set_color", null), 
e([ t.cache ], n, "_get_mainTexture", null), e([ t.cache ], n, "_set_mainTextureScale", null), 
e([ t.cache ], n, "_GetFirstPropertyNameIdByAttribute", null), e([ t.cache ], n, "_HasProperty", null), 
e([ t.cache ], n, "_HasProperty_name", null), e([ t.cache ], n, "_set_renderQueue", null), 
e([ t.cache ], n, "_EnableKeyword", null), e([ t.cache ], n, "_DisableKeyword", null), 
e([ t.cache ], n, "_get_passCount", null), e([ t.cache ], n, "_SetPass", null), 
e([ t.cache ], n, "_CopyPropertiesFromMaterial", null), e([ t.cache ], n, "_GetShaderKeywords", null), 
e([ t.cache ], n, "_SetShaderKeywords", null), e([ t.cache ], n, "_get_shaderKeywords", null), 
e([ t.cache ], n, "_set_shaderKeywords", null), e([ t.cache ], n, "_ComputeCRC", null), 
e([ t.cache ], n, "_SetFloatImpl", null), e([ t.cache ], n, "_SetColorImpl", null), 
e([ t.cache ], n, "_SetMatrixImpl", null), e([ t.cache ], n, "_SetTextureImpl", null), 
e([ t.cache ], n, "_GetFloatImpl", null), e([ t.cache ], n, "_GetColorImpl", null), 
e([ t.cache ], n, "_GetTextureImpl", null), e([ t.cache ], n, "_GetTextureScaleAndOffsetImpl", null), 
e([ t.cache ], n, "_SetTextureOffsetImpl", null), e([ t.cache ], n, "_SetTextureScaleImpl", null), 
e([ t.cache ], n, "_SetFloat", null), e([ t.cache ], n, "_SetFloat_nameID_value", null), 
e([ t.cache ], n, "_SetInt", null), e([ t.cache ], n, "_SetColor", null), e([ t.cache ], n, "_SetColor_nameID_value", null), 
e([ t.cache ], n, "_SetVector", null), e([ t.cache ], n, "_SetVector_nameID_value", null), 
e([ t.cache ], n, "_SetMatrix", null), e([ t.cache ], n, "_SetMatrix_nameID_value", null), 
e([ t.cache ], n, "_SetTexture", null), e([ t.cache ], n, "_SetTexture_nameID_value", null), 
e([ t.cache ], n, "_GetFloat", null), e([ t.cache ], n, "_GetFloat_nameID", null), 
e([ t.cache ], n, "_GetColor", null), e([ t.cache ], n, "_GetColor_nameID", null), 
e([ t.cache ], n, "_GetVector", null), e([ t.cache ], n, "_GetTexture", null), e([ t.cache ], n, "_GetTexture_nameID", null), 
e([ t.cache ], n, "_SetTextureOffset", null), e([ t.cache ], n, "_SetTextureScale", null), 
e([ t.cache ], n, "_SetTextureScale_nameID_value", null), e([ t.cache ], n, "_GetTextureOffset", null), 
e([ t.cache ], n, "_GetTextureScale", null), e([ t.cache ], n, "_SetColorImpl_Injected", null), 
e([ t.cache ], n, "_SetMatrixImpl_Injected", null), e([ t.cache ], n, "_GetColorImpl_Injected", null), 
e([ t.cache ], n, "_GetTextureScaleAndOffsetImpl_Injected", null), e([ t.cache ], n, "_SetTextureOffsetImpl_Injected", null), 
e([ t.cache ], n, "_SetTextureScaleImpl_Injected", null), Il2Cpp.Api.Material = n;

},{"decorator-cache-getter":513}],283:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Material_Impl = void 0;

const e = require("../../ValueType/Color/class"), t = require("../../ValueType/Vector2/class"), r = require("../../ValueType/Vector4/class"), l = require("../class"), a = require("../Texture/class");

class i extends l.UnityEngine_Object {
  constructor(e) {
    super(e);
  }
  static CreateWithShader(e, t) {
    return Il2Cpp.Api.Material._CreateWithShader(e.handle, t.handle);
  }
  static CreateWithMaterial(e, t) {
    return Il2Cpp.Api.Material._CreateWithMaterial(e.handle, t.handle);
  }
  static CreateWithString(e) {
    return Il2Cpp.Api.Material._CreateWithString(e.handle);
  }
  _ctor(e) {
    return Il2Cpp.Api.Material.__ctor(this.handle, e.handle);
  }
  _ctor_source(e) {
    return Il2Cpp.Api.Material.__ctor(this.handle, e.handle);
  }
  _ctor_contents(e) {
    return Il2Cpp.Api.Material.__ctor(this.handle, allocUStr(e));
  }
  set_shader(e) {
    return Il2Cpp.Api.Material._set_shader(this.handle, e.handle);
  }
  get_color() {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Material._get_color(this.handle));
  }
  set_color(e) {
    return Il2Cpp.Api.Material._set_color(this.handle, e.handle);
  }
  get_mainTexture() {
    return new a.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._get_mainTexture(this.handle));
  }
  set_mainTextureScale(e) {
    return Il2Cpp.Api.Material._set_mainTextureScale(this.handle, e.handle);
  }
  GetFirstPropertyNameIdByAttribute(e) {
    return Il2Cpp.Api.Material._GetFirstPropertyNameIdByAttribute(this.handle, e);
  }
  HasProperty(e) {
    return Il2Cpp.Api.Material._HasProperty(this.handle, e);
  }
  HasProperty_1(e) {
    return Il2Cpp.Api.Material._HasProperty(this.handle, allocUStr(e));
  }
  set_renderQueue(e) {
    return Il2Cpp.Api.Material._set_renderQueue(this.handle, e);
  }
  EnableKeyword(e) {
    return Il2Cpp.Api.Material._EnableKeyword(this.handle, allocUStr(e));
  }
  DisableKeyword(e) {
    return Il2Cpp.Api.Material._DisableKeyword(this.handle, allocUStr(e));
  }
  get_passCount() {
    return Il2Cpp.Api.Material._get_passCount(this.handle);
  }
  SetPass(e) {
    return Il2Cpp.Api.Material._SetPass(this.handle, e);
  }
  CopyPropertiesFromMaterial(e) {
    return Il2Cpp.Api.Material._CopyPropertiesFromMaterial(this.handle, e.handle);
  }
  GetShaderKeywords() {
    return Il2Cpp.Api.Material._GetShaderKeywords(this.handle);
  }
  SetShaderKeywords(e) {
    return Il2Cpp.Api.Material._SetShaderKeywords(this.handle, e);
  }
  get_shaderKeywords() {
    return Il2Cpp.Api.Material._get_shaderKeywords(this.handle);
  }
  set_shaderKeywords(e) {
    return Il2Cpp.Api.Material._set_shaderKeywords(this.handle, e);
  }
  ComputeCRC() {
    return Il2Cpp.Api.Material._ComputeCRC(this.handle);
  }
  SetFloatImpl(e, t) {
    return Il2Cpp.Api.Material._SetFloatImpl(this.handle, e, t);
  }
  SetColorImpl(e, t) {
    return Il2Cpp.Api.Material._SetColorImpl(this.handle, e, t.handle);
  }
  SetMatrixImpl(e, t) {
    return Il2Cpp.Api.Material._SetMatrixImpl(this.handle, e, t.handle);
  }
  SetTextureImpl(e, t) {
    return Il2Cpp.Api.Material._SetTextureImpl(this.handle, e, t.handle);
  }
  GetFloatImpl(e) {
    return Il2Cpp.Api.Material._GetFloatImpl(this.handle, e);
  }
  GetColorImpl(t) {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColorImpl(this.handle, t));
  }
  GetTextureImpl(e) {
    return new a.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTextureImpl(this.handle, e));
  }
  GetTextureScaleAndOffsetImpl(e) {
    return new r.UnityEngine_Vector4_Impl(Il2Cpp.Api.Material._GetTextureScaleAndOffsetImpl(this.handle, e));
  }
  SetTextureOffsetImpl(e, t) {
    return Il2Cpp.Api.Material._SetTextureOffsetImpl(this.handle, e, t.handle);
  }
  SetTextureScaleImpl(e, t) {
    return Il2Cpp.Api.Material._SetTextureScaleImpl(this.handle, e, t.handle);
  }
  SetFloat(e, t) {
    return Il2Cpp.Api.Material._SetFloat(this.handle, allocUStr(e), t);
  }
  SetFloat_2(e, t) {
    return Il2Cpp.Api.Material._SetFloat(this.handle, e, t);
  }
  SetInt(e, t) {
    return Il2Cpp.Api.Material._SetInt(this.handle, allocUStr(e), t);
  }
  SetColor(e, t) {
    return Il2Cpp.Api.Material._SetColor(this.handle, allocUStr(e), t.handle);
  }
  SetColor_2(e, t) {
    return Il2Cpp.Api.Material._SetColor(this.handle, e, t.handle);
  }
  SetVector(e, t) {
    return Il2Cpp.Api.Material._SetVector(this.handle, allocUStr(e), t.handle);
  }
  SetVector_2(e, t) {
    return Il2Cpp.Api.Material._SetVector(this.handle, e, t.handle);
  }
  SetMatrix(e, t) {
    return Il2Cpp.Api.Material._SetMatrix(this.handle, allocUStr(e), t.handle);
  }
  SetMatrix_2(e, t) {
    return Il2Cpp.Api.Material._SetMatrix(this.handle, e, t.handle);
  }
  SetTexture(e, t) {
    return Il2Cpp.Api.Material._SetTexture(this.handle, allocUStr(e), t.handle);
  }
  SetTexture_2(e, t) {
    return Il2Cpp.Api.Material._SetTexture(this.handle, e, t.handle);
  }
  GetFloat(e) {
    return Il2Cpp.Api.Material._GetFloat(this.handle, allocUStr(e));
  }
  GetFloat_1(e) {
    return Il2Cpp.Api.Material._GetFloat(this.handle, e);
  }
  GetColor(t) {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColor(this.handle, allocUStr(t)));
  }
  GetColor_1(t) {
    return new e.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColor(this.handle, t));
  }
  GetVector(e) {
    return new r.UnityEngine_Vector4_Impl(Il2Cpp.Api.Material._GetVector(this.handle, e));
  }
  GetTexture(e) {
    return new a.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTexture(this.handle, allocUStr(e)));
  }
  GetTexture_1(e) {
    return new a.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTexture(this.handle, e));
  }
  SetTextureOffset(e, t) {
    return Il2Cpp.Api.Material._SetTextureOffset(this.handle, e, t.handle);
  }
  SetTextureScale(e, t) {
    return Il2Cpp.Api.Material._SetTextureScale(this.handle, allocUStr(e), t.handle);
  }
  SetTextureScale_2(e, t) {
    return Il2Cpp.Api.Material._SetTextureScale(this.handle, e, t.handle);
  }
  GetTextureOffset(e) {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.Material._GetTextureOffset(this.handle, e));
  }
  GetTextureScale(e) {
    return new t.UnityEngine_Vector2_Impl(Il2Cpp.Api.Material._GetTextureScale(this.handle, e));
  }
  SetColorImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._SetColorImpl_Injected(this.handle, e, t.handle);
  }
  SetMatrixImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._SetMatrixImpl_Injected(this.handle, e, t.handle);
  }
  GetColorImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._GetColorImpl_Injected(this.handle, e, t.handle);
  }
  GetTextureScaleAndOffsetImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._GetTextureScaleAndOffsetImpl_Injected(this.handle, e, t.handle);
  }
  SetTextureOffsetImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._SetTextureOffsetImpl_Injected(this.handle, e, t.handle);
  }
  SetTextureScaleImpl_Injected(e, t) {
    return Il2Cpp.Api.Material._SetTextureScaleImpl_Injected(this.handle, e, t.handle);
  }
}

exports.UnityEngine_Material_Impl = i, Il2Cpp.Material = i;

},{"../../ValueType/Color/class":379,"../../ValueType/Vector2/class":439,"../../ValueType/Vector4/class":447,"../Texture/class":298,"../class":303}],284:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":282,"./class":283}],285:[function(require,module,exports){
"use strict";

},{}],286:[function(require,module,exports){
"use strict";

},{}],287:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, n) {
  var o, i = arguments.length, c = i < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, r, n); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (c = (i < 3 ? o(c) : i > 3 ? o(t, r, c) : o(t, r)) || c);
  return i > 3 && c && Object.defineProperty(t, r, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _Find() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", "Find", 1, "pointer", [ "pointer" ]);
  }
  static get _PropertyToID() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", "PropertyToID", 1, "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", ".ctor", 0, "void", [ "pointer" ]);
  }
}

e([ t.cache ], r, "_Find", null), e([ t.cache ], r, "_PropertyToID", null), e([ t.cache ], r, "__ctor", null), 
Il2Cpp.Api.Shader = r;

},{"decorator-cache-getter":513}],288:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Shader_Impl = void 0;

const e = require("../class");

class r extends e.UnityEngine_Object {
  constructor(e) {
    super(e);
  }
  static Find(e) {
    return Il2Cpp.Api.Shader._Find(e);
  }
  static PropertyToID(e) {
    return Il2Cpp.Api.Shader._PropertyToID(e);
  }
  _ctor() {
    return Il2Cpp.Api.Shader.__ctor(this.handle);
  }
}

exports.UnityEngine_Shader_Impl = r, Il2Cpp.Shader = r;

},{"../class":303}],289:[function(require,module,exports){
"use strict";

},{}],290:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":287,"./class":288,"./export":289}],291:[function(require,module,exports){
"use strict";

},{}],292:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_whiteTexture() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "get_whiteTexture", 0, [], "pointer", []);
  }
  static get _Internal_CreateImpl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Internal_CreateImpl", 7, [ "UnityEngine.Texture2D", "System.Int32", "System.Int32", "System.Int32", "UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.TextureCreationFlags", "System.IntPtr" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Internal_Create() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Internal_Create", 7, [ "UnityEngine.Texture2D", "System.Int32", "System.Int32", "System.Int32", "UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.TextureCreationFlags", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_isReadable() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "get_isReadable", 0, [], "bool", [ "pointer" ]);
  }
  static get _ApplyImpl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "ApplyImpl", 2, [ "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ResizeImpl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "ResizeImpl", 2, [ "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetPixelBilinearImpl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "GetPixelBilinearImpl", 3, [ "System.Int32", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ResizeWithFormatImpl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "ResizeWithFormatImpl", 4, [ "System.Int32", "System.Int32", "UnityEngine.Experimental.Rendering.GraphicsFormat", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetPixels32() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "GetPixels32", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetPixels32_() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "GetPixels32", 0, [], "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", ".ctor", 6, [ "System.Int32", "System.Int32", "UnityEngine.TextureFormat", "System.Int32", "System.Boolean", "System.IntPtr" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_width_height_textureFormat_mipChain() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", ".ctor", 4, [ "System.Int32", "System.Int32", "UnityEngine.TextureFormat", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_width_height() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", ".ctor", 2, [ "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetPixelBilinear() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "GetPixelBilinear", 2, [ "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Apply() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Apply", 2, [ "System.Boolean", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Apply_() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Apply", 0, [], "void", [ "pointer" ]);
  }
  static get _Resize() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Resize", 2, [ "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Resize_width_height_format_hasMipMap() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "Resize", 4, [ "System.Int32", "System.Int32", "UnityEngine.TextureFormat", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetPixelBilinearImpl_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture2D", "GetPixelBilinearImpl_Injected", 4, [ "System.Int32", "System.Single", "System.Single", "UnityEngine.Color&" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_get_whiteTexture", null), e([ t.cache ], n, "_Internal_CreateImpl", null), 
e([ t.cache ], n, "_Internal_Create", null), e([ t.cache ], n, "_get_isReadable", null), 
e([ t.cache ], n, "_ApplyImpl", null), e([ t.cache ], n, "_ResizeImpl", null), e([ t.cache ], n, "_GetPixelBilinearImpl", null), 
e([ t.cache ], n, "_ResizeWithFormatImpl", null), e([ t.cache ], n, "_GetPixels32", null), 
e([ t.cache ], n, "_GetPixels32_", null), e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "__ctor_width_height_textureFormat_mipChain", null), 
e([ t.cache ], n, "__ctor_width_height", null), e([ t.cache ], n, "_GetPixelBilinear", null), 
e([ t.cache ], n, "_Apply", null), e([ t.cache ], n, "_Apply_", null), e([ t.cache ], n, "_Resize", null), 
e([ t.cache ], n, "_Resize_width_height_format_hasMipMap", null), e([ t.cache ], n, "_GetPixelBilinearImpl_Injected", null), 
Il2Cpp.Api.Texture2D = n;

},{"decorator-cache-getter":513}],293:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Texture2D_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_Texture_Impl {
  constructor(e) {
    super(e);
  }
  static get_whiteTexture() {
    return new t(Il2Cpp.Api.Texture2D._get_whiteTexture());
  }
  static Internal_CreateImpl(e, t, r, p, l, i, n) {
    return Il2Cpp.Api.Texture2D._Internal_CreateImpl(e.handle, t, r, p, l, i, n);
  }
  static Internal_Create(e, t, r, p, l, i, n) {
    return Il2Cpp.Api.Texture2D._Internal_Create(e.handle, t, r, p, l, i, n);
  }
  get_isReadable() {
    return Il2Cpp.Api.Texture2D._get_isReadable(this.handle);
  }
  ApplyImpl(e, t) {
    return Il2Cpp.Api.Texture2D._ApplyImpl(this.handle, e, t);
  }
  ResizeImpl(e, t) {
    return Il2Cpp.Api.Texture2D._ResizeImpl(this.handle, e, t);
  }
  GetPixelBilinearImpl(e, t, r) {
    return Il2Cpp.Api.Texture2D._GetPixelBilinearImpl(this.handle, e, t, r);
  }
  ResizeWithFormatImpl(e, t, r, p) {
    return Il2Cpp.Api.Texture2D._ResizeWithFormatImpl(this.handle, e, t, r, p);
  }
  GetPixels32(e) {
    return Il2Cpp.Api.Texture2D._GetPixels32(this.handle, e);
  }
  GetPixels32_0() {
    return Il2Cpp.Api.Texture2D._GetPixels32(this.handle);
  }
  _ctor_6(e, t, r, p, l, i) {
    return Il2Cpp.Api.Texture2D.__ctor(this.handle, e, t, r, p, l, i);
  }
  _ctor_4(e, t, r, p) {
    return Il2Cpp.Api.Texture2D.__ctor(this.handle, e, t, r, p);
  }
  _ctor_2(e, t) {
    return Il2Cpp.Api.Texture2D.__ctor(this.handle, e, t);
  }
  GetPixelBilinear(e, t) {
    return Il2Cpp.Api.Texture2D._GetPixelBilinear(this.handle, e, t);
  }
  Apply(e, t) {
    return Il2Cpp.Api.Texture2D._Apply(this.handle, e, t);
  }
  Apply_0() {
    return Il2Cpp.Api.Texture2D._Apply(this.handle);
  }
  Resize(e, t) {
    return Il2Cpp.Api.Texture2D._Resize(this.handle, e, t);
  }
  Resize_4(e, t, r, p) {
    return Il2Cpp.Api.Texture2D._Resize(this.handle, e, t, r, p);
  }
  GetPixelBilinearImpl_Injected(e, t, r, p) {
    return Il2Cpp.Api.Texture2D._GetPixelBilinearImpl_Injected(this.handle, e, t, r, p);
  }
}

exports.UnityEngine_Texture2D_Impl = t, Il2Cpp.Texture2D = t;

},{"../class":298}],294:[function(require,module,exports){
"use strict";

var R, G;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_TextureFormat = exports.TextureFormat = void 0, function(R) {
  R[R.Alpha8 = 1] = "Alpha8", R[R.ARGB4444 = 2] = "ARGB4444", R[R.RGB24 = 3] = "RGB24", 
  R[R.RGBA32 = 4] = "RGBA32", R[R.ARGB32 = 5] = "ARGB32", R[R.RGB565 = 7] = "RGB565", 
  R[R.R16 = 9] = "R16", R[R.DXT1 = 10] = "DXT1", R[R.DXT5 = 12] = "DXT5", R[R.RGBA4444 = 13] = "RGBA4444", 
  R[R.BGRA32 = 14] = "BGRA32", R[R.RHalf = 15] = "RHalf", R[R.RGHalf = 16] = "RGHalf", 
  R[R.RGBAHalf = 17] = "RGBAHalf", R[R.RFloat = 18] = "RFloat", R[R.RGFloat = 19] = "RGFloat", 
  R[R.RGBAFloat = 20] = "RGBAFloat", R[R.YUY2 = 21] = "YUY2", R[R.PVRTC_RGB2 = 22] = "PVRTC_RGB2", 
  R[R.PVRTC_RGBA2 = 23] = "PVRTC_RGBA2", R[R.PVRTC_RGB4 = 24] = "PVRTC_RGB4", R[R.PVRTC_RGBA4 = 25] = "PVRTC_RGBA4", 
  R[R.ETC_RGB4 = 26] = "ETC_RGB4", R[R.ATC_RGB4 = 27] = "ATC_RGB4", R[R.ATC_RGBA8 = 28] = "ATC_RGBA8", 
  R[R.EAC_R = 41] = "EAC_R";
}(R = exports.TextureFormat || (exports.TextureFormat = {})), function(R) {
  R[R.Alpha8 = 1] = "Alpha8", R[R.ARGB4444 = 5] = "ARGB4444", R[R.ARGB32 = 2] = "ARGB32", 
  R[R.ASTC_RGB_4x4 = 53] = "ASTC_RGB_4x4", R[R.ASTC_RGB_5x5 = 60] = "ASTC_RGB_5x5", 
  R[R.ASTC_RGB_6x6 = 50] = "ASTC_RGB_6x6", R[R.ASTC_RGB_8x8 = 51] = "ASTC_RGB_8x8", 
  R[R.ASTC_RGBA_10x10 = 58] = "ASTC_RGBA_10x10", R[R.ASTC_RGBA_12x12 = 59] = "ASTC_RGBA_12x12", 
  R[R.ASTC_RGBA_4x4 = 54] = "ASTC_RGBA_4x4", R[R.ASTC_RGBA_5x5 = 55] = "ASTC_RGBA_5x5", 
  R[R.ASTC_RGBA_6x6 = 56] = "ASTC_RGBA_6x6", R[R.ASTC_RGBA_8x8 = 57] = "ASTC_RGBA_8x8", 
  R[R.BC4 = 26] = "BC4", R[R.BC5 = 27] = "BC5", R[R.BC6H = 24] = "BC6H", R[R.BC7 = 25] = "BC7", 
  R[R.BGRA32 = 14] = "BGRA32", R[R.DXT1 = 10] = "DXT1", R[R.DXT1Crunched = 28] = "DXT1Crunched", 
  R[R.DXT5 = 12] = "DXT5", R[R.DXT5Crunched = 29] = "DXT5Crunched", R[R.EAC_R = 41] = "EAC_R", 
  R[R.IGNED = 42] = "IGNED", R[R.EAC_RG = 43] = "EAC_RG", R[R.EAC_RG_SIGNED = 44] = "EAC_RG_SIGNED", 
  R[R.ETC_RGB4 = 34] = "ETC_RGB4", R[R.ETC_RGB4_3DS = 60] = "ETC_RGB4_3DS", R[R.ETC_RGB4Crunched = 64] = "ETC_RGB4Crunched", 
  R[R.ETC_RGBA8_3DS = 61] = "ETC_RGBA8_3DS", R[R.ETC2_RGB = 45] = "ETC2_RGB", R[R.ETC2_RGBA1 = 46] = "ETC2_RGBA1", 
  R[R.ETC2_RGBA8 = 47] = "ETC2_RGBA8", R[R.ETC2_RGBA8Crunched = 65] = "ETC2_RGBA8Crunched", 
  R[R.PVRTC_RGB2 = 30] = "PVRTC_RGB2", R[R.PVRTC_RGB4 = 32] = "PVRTC_RGB4", R[R.PVRTC_RGBA2 = 31] = "PVRTC_RGBA2", 
  R[R.PVRTC_RGBA4 = 33] = "PVRTC_RGBA4", R[R.R16 = 9] = "R16", R[R.R8 = 63] = "R8", 
  R[R.RFloat = 18] = "RFloat", R[R.RG16 = 62] = "RG16", R[R.RG32 = 72] = "RG32", R[R.RGB24 = 3] = "RGB24", 
  R[R.RGB48 = 73] = "RGB48", R[R.RGB565 = 7] = "RGB565", R[R.RGB9e5Float = 22] = "RGB9e5Float";
}(G = exports.UnityEngine_TextureFormat || (exports.UnityEngine_TextureFormat = {}));

},{}],295:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.B_Texture2D = void 0, globalThis.B_Texture2D = () => {
  setTimeout((() => {
    Il2Cpp.perform((() => {
      let e = Module.findBaseAddress("libil2cpp.so"), l = Module.findBaseAddress("libunity.so");
      LOGD(`\nlibil2cpp -> ${e} | libunity -> ${l}`);
      let t = Module.findExportByName("libil2cpp.so", "il2cpp_resolve_icall"), i = callNp(t, allocCStr("UnityEngine.Texture::get_isReadable()"));
      if (i.isNull()) throw new Error("get_isReadable is null");
      let n = i.sub(l);
      LOGD("get_isReadable ->" + i + " | " + n);
      let o = callNp(t, allocCStr("UnityEngine.ImageConversion::EncodeToJPG(UnityEngine.Texture2D,System.Int32)"));
      if (o.isNull()) throw new Error("EncodeToJPG is null");
      let r = o.sub(l);
      LOGD("EncodeToJPG ->" + o + " | " + r);
      let s = Il2Cpp.Domain.assembly("UnityEngine.UI").image.class("UnityEngine.UI.Image").method("get_mainTexture").virtualAddress;
      LOGD("get_mainTexture => " + s);
      let d = [];
      A(s, void 0, (e => {
        let l = new Il2Cpp.Texture2D(e);
        d.push(l);
        let t = l.get_width(), i = l.get_height();
        if (LOGD("\nheight " + t + " width " + i), callOnce(newLine), e.isNull()) return;
        ptr(0);
        let n = find_method("UnityEngine.CoreModule", "Texture", "get_width"), o = find_method("UnityEngine.CoreModule", "Texture", "get_height"), r = find_method("UnityEngine.CoreModule", "Texture", "get_isReadable");
        if (n.isNull() || o.isNull() || r.isNull()) throw new Error("get_width or get_height or get_isReadable is null");
        LOGO(`ret\t${e} \n\t${new Il2Cpp.Object(e).toString()}\n\tw: ${callNp(n, e)} h: ${callNp(o, e)} readable: ${callFunction(r, e)}`), 
        Il2Cpp.perform((() => {
          let l = find_method("UnityEngine.ImageConversionModule", "ImageConversion", "EncodeToJPG");
          if (l.isNull()) throw new Error("EncodeToJPG is null");
          let t = callNp(l, e);
          LOGO(`\tEncodeToJPG -> ${t}`), t.isNull() || LOG(hexdump(t, {
            length: 48,
            ansi: !0
          }));
        })), Il2Cpp.perform((() => {
          let l = find_method("UnityEngine.ImageConversionModule", "ImageConversion", "EncodeToPNG");
          if (l.isNull()) throw new Error("EncodeToPNG is null");
          let t = callNp(l, e);
          LOGO(`\tEncodeToPNG -> ${t}`), t.isNull() || LOG(hexdump(t, {
            length: 48,
            ansi: !0
          }));
        }));
      }));
    }));
  }), 200);
};

},{}],296:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum"), require("./export");

},{"./api":292,"./class":293,"./enum":294,"./export":295}],297:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, a = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (a = (o < 3 ? r(a) : o > 3 ? r(t, n, a) : r(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Texture_API = void 0;

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _GetDataWidth() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "GetDataWidth", 0, "pointer", [ "pointer" ]);
  }
  static get _GetDataHeight() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "GetDataHeight", 0, "pointer", [ "pointer" ]);
  }
  static get _get_width() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_width", 0, "pointer", [ "pointer" ]);
  }
  static get _set_width() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "set_width", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_height() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_height", 0, "pointer", [ "pointer" ]);
  }
  static get _set_height() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "set_height", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_isReadable() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_isReadable", 0, "pointer", [ "pointer" ]);
  }
  static get _get_wrapMode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_wrapMode", 0, "pointer", [ "pointer" ]);
  }
  static get _get_texelSize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_texelSize", 0, "pointer", [ "pointer" ]);
  }
  static get _Internal_GetActiveTextureColorSpace() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "Internal_GetActiveTextureColorSpace", 0, "pointer", [ "pointer" ]);
  }
  static get _get_activeTextureColorSpace() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_activeTextureColorSpace", 0, "pointer", [ "pointer" ]);
  }
  static get _ValidateFormat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "ValidateFormat", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ValidateFormat_format_usage() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture", "ValidateFormat", 2, [ "UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.FormatUsage" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _CreateNonReadableException() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "CreateNonReadableException", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", ".cctor", 0, "void", []);
  }
  static get _get_texelSize_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_texelSize_Injected", 1, "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_GetDataWidth", null), e([ t.cache ], n, "_GetDataHeight", null), 
e([ t.cache ], n, "_get_width", null), e([ t.cache ], n, "_set_width", null), e([ t.cache ], n, "_get_height", null), 
e([ t.cache ], n, "_set_height", null), e([ t.cache ], n, "_get_isReadable", null), 
e([ t.cache ], n, "_get_wrapMode", null), e([ t.cache ], n, "_get_texelSize", null), 
e([ t.cache ], n, "_Internal_GetActiveTextureColorSpace", null), e([ t.cache ], n, "_get_activeTextureColorSpace", null), 
e([ t.cache ], n, "_ValidateFormat", null), e([ t.cache ], n, "_ValidateFormat_format_usage", null), 
e([ t.cache ], n, "_CreateNonReadableException", null), e([ t.cache ], n, "__cctor", null), 
e([ t.cache ], n, "_get_texelSize_Injected", null), exports.UnityEngine_Texture_API = n, 
Il2Cpp.Api.Texture = n;

},{"decorator-cache-getter":513}],298:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Texture_Impl = void 0;

const e = require("../../ValueType/Vector2/class"), t = require("../class"), n = require("./api");

class r extends t.UnityEngine_Object {
  GenerateAllMips=lfv(this.handle, "GenerateAllMips");
  constructor(e) {
    super(e);
  }
  _ctor() {
    return n.UnityEngine_Texture_API.__ctor(allocP());
  }
  GetDataWidth() {
    return n.UnityEngine_Texture_API._GetDataWidth(this.handle);
  }
  GetDataHeight() {
    return n.UnityEngine_Texture_API._GetDataHeight(this.handle);
  }
  get_width() {
    return n.UnityEngine_Texture_API._get_width(this.handle).toInt32();
  }
  set_width(e) {
    return n.UnityEngine_Texture_API._set_width(this.handle, ptr(e));
  }
  get_height() {
    return n.UnityEngine_Texture_API._get_height(this.handle).toInt32();
  }
  set_height(e) {
    return n.UnityEngine_Texture_API._set_height(this.handle, ptr(e));
  }
  get_isReadable() {
    return n.UnityEngine_Texture_API._get_isReadable(this.handle);
  }
  get_wrapMode() {
    return n.UnityEngine_Texture_API._get_wrapMode(this.handle);
  }
  get_texelSize() {
    return new e.UnityEngine_Vector2_Impl(n.UnityEngine_Texture_API._get_texelSize(this.handle));
  }
  Internal_GetActiveTextureColorSpace() {
    return n.UnityEngine_Texture_API._Internal_GetActiveTextureColorSpace(this.handle);
  }
  get_activeTextureColorSpace() {
    return n.UnityEngine_Texture_API._get_activeTextureColorSpace(this.handle);
  }
  ValidateFormat(e) {
    return n.UnityEngine_Texture_API._ValidateFormat(this.handle, e);
  }
  ValidateFormat_2(e, t) {
    return n.UnityEngine_Texture_API._ValidateFormat(this.handle, e, t);
  }
  CreateNonReadableException(e) {
    return n.UnityEngine_Texture_API._CreateNonReadableException(this.handle, e.handle);
  }
  static _cctor() {
    return n.UnityEngine_Texture_API.__cctor();
  }
  get_texelSize_Injected(e) {
    return n.UnityEngine_Texture_API._get_texelSize_Injected(this.handle, e);
  }
}

exports.UnityEngine_Texture_Impl = r, Il2Cpp.Texture = r;

},{"../../ValueType/Vector2/class":439,"../class":303,"./api":297}],299:[function(require,module,exports){
"use strict";

var _, R, a, G, B;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Experimental_Rendering_TextureCreationFlags = exports.UnityEngine_Experimental_Rendering_DefaultFormat = exports.UnityEngine_Experimental_Rendering_GraphicsFormat = exports.UnityEngine_Experimental_Rendering_FormatUsage = exports.UnityEngine_ColorSpace = void 0, 
function(_) {
  _[_.Gamma = 0] = "Gamma", _[_.Linear = 1] = "Linear", _[_.Uninitialized = -1] = "Uninitialized";
}(_ = exports.UnityEngine_ColorSpace || (exports.UnityEngine_ColorSpace = {})), 
function(_) {
  _[_.Blend = 5] = "Blend", _[_.GetPixels = 6] = "GetPixels", _[_.Linear = 1] = "Linear", 
  _[_.LoadStore = 10] = "LoadStore", _[_.MSAA2x = 11] = "MSAA2x", _[_.MSAA4x = 12] = "MSAA4x", 
  _[_.MSAA8x = 13] = "MSAA8x", _[_.ReadPixels = 9] = "ReadPixels", _[_.Render = 4] = "Render", 
  _[_.Sample = 0] = "Sample", _[_.SetPixels = 7] = "SetPixels", _[_.SetPixels32 = 8] = "SetPixels32", 
  _[_.Sparse = 2] = "Sparse", _[_.StencilSampling = 15] = "StencilSampling";
}(R = exports.UnityEngine_Experimental_Rendering_FormatUsage || (exports.UnityEngine_Experimental_Rendering_FormatUsage = {})), 
function(_) {
  _[_.R8_UNorm = 0] = "R8_UNorm", _[_.R8_SNorm = 1] = "R8_SNorm", _[_.R8_UScaled = 2] = "R8_UScaled", 
  _[_.R8_SScaled = 3] = "R8_SScaled", _[_.R8_UInt = 4] = "R8_UInt", _[_.R8_SInt = 5] = "R8_SInt", 
  _[_.R8_SRGB = 6] = "R8_SRGB", _[_.R8G8_UNorm = 7] = "R8G8_UNorm", _[_.R8G8_SNorm = 8] = "R8G8_SNorm", 
  _[_.R8G8_UScaled = 9] = "R8G8_UScaled", _[_.R8G8_SScaled = 10] = "R8G8_SScaled", 
  _[_.R8G8_UInt = 11] = "R8G8_UInt", _[_.R8G8_SInt = 12] = "R8G8_SInt", _[_.R8G8_SRGB = 13] = "R8G8_SRGB", 
  _[_.R8G8B8_UNorm = 14] = "R8G8B8_UNorm", _[_.R8G8B8_SNorm = 15] = "R8G8B8_SNorm", 
  _[_.R8G8B8_UScaled = 16] = "R8G8B8_UScaled", _[_.R8G8B8_SScaled = 17] = "R8G8B8_SScaled", 
  _[_.R8G8B8_UInt = 18] = "R8G8B8_UInt", _[_.R8G8B8_SInt = 19] = "R8G8B8_SInt", _[_.R8G8B8_SRGB = 20] = "R8G8B8_SRGB", 
  _[_.B8G8R8_UNorm = 21] = "B8G8R8_UNorm", _[_.B8G8R8_SNorm = 22] = "B8G8R8_SNorm", 
  _[_.B8G8R8_UScaled = 23] = "B8G8R8_UScaled", _[_.B8G8R8_SScaled = 24] = "B8G8R8_SScaled", 
  _[_.B8G8R8_UInt = 25] = "B8G8R8_UInt", _[_.B8G8R8_SInt = 26] = "B8G8R8_SInt", _[_.B8G8R8_SRGB = 27] = "B8G8R8_SRGB", 
  _[_.R8G8B8A8_UNorm = 28] = "R8G8B8A8_UNorm", _[_.R8G8B8A8_SNorm = 29] = "R8G8B8A8_SNorm", 
  _[_.R8G8B8A8_UScaled = 30] = "R8G8B8A8_UScaled", _[_.R8G8B8A8_SScaled = 31] = "R8G8B8A8_SScaled", 
  _[_.R8G8B8A8_UInt = 32] = "R8G8B8A8_UInt", _[_.R8G8B8A8_SInt = 33] = "R8G8B8A8_SInt", 
  _[_.R8G8B8A8_SRGB = 34] = "R8G8B8A8_SRGB", _[_.B8G8R8A8_UNorm = 35] = "B8G8R8A8_UNorm", 
  _[_.B8G8R8A8_SNorm = 36] = "B8G8R8A8_SNorm", _[_.B8G8R8A8_UScaled = 37] = "B8G8R8A8_UScaled", 
  _[_.B8G8R8A8_SScaled = 38] = "B8G8R8A8_SScaled", _[_.B8G8R8A8_UInt = 39] = "B8G8R8A8_UInt", 
  _[_.B8G8R8A8_SInt = 40] = "B8G8R8A8_SInt", _[_.B8G8R8A8_SRGB = 41] = "B8G8R8A8_SRGB", 
  _[_.R10G10B10_A2_UNorm = 42] = "R10G10B10_A2_UNorm", _[_.R10G10B10_A2_UInt = 43] = "R10G10B10_A2_UInt", 
  _[_.R10G10B10_A2_SNorm = 44] = "R10G10B10_A2_SNorm", _[_.R10G10B10_A2_SInt = 45] = "R10G10B10_A2_SInt", 
  _[_.R10G10B10_Xr_Bias_A2_UNorm = 46] = "R10G10B10_Xr_Bias_A2_UNorm", _[_.R10G10B10_Xr_Bias_A2_UInt = 47] = "R10G10B10_Xr_Bias_A2_UInt", 
  _[_.R10G10B10_Xr_Bias_A2_SNorm = 48] = "R10G10B10_Xr_Bias_A2_SNorm", _[_.R10G10B10_Xr_Bias_A2_SInt = 49] = "R10G10B10_Xr_Bias_A2_SInt", 
  _[_.R10G10B10_A2_UNormPack32 = 53] = "R10G10B10_A2_UNormPack32", _[_.R10G10B10_A2_UIntPack32 = 54] = "R10G10B10_A2_UIntPack32", 
  _[_.R10G10B10_A2_SNormPack32 = 55] = "R10G10B10_A2_SNormPack32", _[_.R10G10B10_A2_SIntPack32 = 56] = "R10G10B10_A2_SIntPack32", 
  _[_.R11G11B10_UFloat = 57] = "R11G11B10_UFloat", _[_.R9G9B9E5_UFloat = 58] = "R9G9B9E5_UFloat", 
  _[_.R11G11B10_SFloat = 59] = "R11G11B10_SFloat", _[_.R9G9B9E5_SFloat = 60] = "R9G9B9E5_SFloat", 
  _[_.R8_UNorm_Pack8 = 61] = "R8_UNorm_Pack8", _[_.R8_SNorm_Pack8 = 62] = "R8_SNorm_Pack8", 
  _[_.R8_UScaled_Pack8 = 63] = "R8_UScaled_Pack8", _[_.R8_SScaled_Pack8 = 64] = "R8_SScaled_Pack8", 
  _[_.R8_UInt_Pack8 = 65] = "R8_UInt_Pack8", _[_.R8_SInt_Pack8 = 66] = "R8_SInt_Pack8", 
  _[_.R8_SRGB_Pack8 = 67] = "R8_SRGB_Pack8", _[_.R8G8_UNorm_Pack16 = 68] = "R8G8_UNorm_Pack16", 
  _[_.R8G8_SNorm_Pack16 = 69] = "R8G8_SNorm_Pack16", _[_.R8G8_UScaled_Pack16 = 70] = "R8G8_UScaled_Pack16", 
  _[_.R8G8_SScaled_Pack16 = 71] = "R8G8_SScaled_Pack16", _[_.R8G8_UInt_Pack16 = 72] = "R8G8_UInt_Pack16", 
  _[_.R8G8_SInt_Pack16 = 73] = "R8G8_SInt_Pack16", _[_.R8G8_SRGB_Pack16 = 74] = "R8G8_SRGB_Pack16", 
  _[_.R8G8B8_UNorm_Pack24 = 75] = "R8G8B8_UNorm_Pack24", _[_.R8G8B8_SNorm_Pack24 = 76] = "R8G8B8_SNorm_Pack24", 
  _[_.R8G8B8_UScaled_Pack24 = 77] = "R8G8B8_UScaled_Pack24", _[_.R8G8B8_SScaled_Pack24 = 78] = "R8G8B8_SScaled_Pack24", 
  _[_.R8G8B8_UInt_Pack24 = 79] = "R8G8B8_UInt_Pack24", _[_.R8G8B8_SInt_Pack24 = 80] = "R8G8B8_SInt_Pack24", 
  _[_.R8G8B8_SRGB_Pack24 = 81] = "R8G8B8_SRGB_Pack24", _[_.R8G8B8_UNorm_Pack32 = 82] = "R8G8B8_UNorm_Pack32", 
  _[_.R8G8B8_SNorm_Pack32 = 83] = "R8G8B8_SNorm_Pack32", _[_.R8G8B8_UScaled_Pack32 = 84] = "R8G8B8_UScaled_Pack32", 
  _[_.R8G8B8_SScaled_Pack32 = 85] = "R8G8B8_SScaled_Pack32", _[_.R8G8B8_UInt_Pack32 = 86] = "R8G8B8_UInt_Pack32", 
  _[_.R8G8B8_SInt_Pack32 = 87] = "R8G8B8_SInt_Pack32", _[_.R8G8B8_SRGB_Pack32 = 88] = "R8G8B8_SRGB_Pack32", 
  _[_.B8G8R8_UNorm_Pack32 = 89] = "B8G8R8_UNorm_Pack32", _[_.B8G8R8_SNorm_Pack32 = 90] = "B8G8R8_SNorm_Pack32", 
  _[_.B8G8R8_UScaled_Pack32 = 91] = "B8G8R8_UScaled_Pack32", _[_.B8G8R8_SScaled_Pack32 = 92] = "B8G8R8_SScaled_Pack32", 
  _[_.B8G8R8_UInt_Pack32 = 93] = "B8G8R8_UInt_Pack32", _[_.B8G8R8_SInt_Pack32 = 94] = "B8G8R8_SInt_Pack32", 
  _[_.B8G8R8_SRGB_Pack32 = 95] = "B8G8R8_SRGB_Pack32", _[_.R9G9B9E5_UFloat_Pack32 = 96] = "R9G9B9E5_UFloat_Pack32", 
  _[_.R8G8B8A8_UNorm_Pack32 = 97] = "R8G8B8A8_UNorm_Pack32", _[_.R8G8B8A8_SNorm_Pack32 = 98] = "R8G8B8A8_SNorm_Pack32", 
  _[_.R8G8B8A8_UScaled_Pack32 = 99] = "R8G8B8A8_UScaled_Pack32", _[_.R8G8B8A8_SScaled_Pack32 = 100] = "R8G8B8A8_SScaled_Pack32", 
  _[_.R8G8B8A8_UInt_Pack32 = 101] = "R8G8B8A8_UInt_Pack32", _[_.R8G8B8A8_SInt_Pack32 = 102] = "R8G8B8A8_SInt_Pack32", 
  _[_.R8G8B8A8_SRGB_Pack32 = 103] = "R8G8B8A8_SRGB_Pack32", _[_.B8G8R8A8_UNorm_Pack32 = 104] = "B8G8R8A8_UNorm_Pack32", 
  _[_.B8G8R8A8_SNorm_Pack32 = 105] = "B8G8R8A8_SNorm_Pack32", _[_.B8G8R8A8_UScaled_Pack32 = 106] = "B8G8R8A8_UScaled_Pack32", 
  _[_.B8G8R8A8_SScaled_Pack32 = 107] = "B8G8R8A8_SScaled_Pack32", _[_.B8G8R8A8_UInt_Pack32 = 108] = "B8G8R8A8_UInt_Pack32", 
  _[_.B8G8R8A8_SInt_Pack32 = 109] = "B8G8R8A8_SInt_Pack32", _[_.B8G8R8A8_SRGB_Pack32 = 110] = "B8G8R8A8_SRGB_Pack32", 
  _[_.A8B8G8R8_UNorm_Pack32 = 111] = "A8B8G8R8_UNorm_Pack32", _[_.A8B8G8R8_SNorm_Pack32 = 112] = "A8B8G8R8_SNorm_Pack32", 
  _[_.A8B8G8R8_UScaled_Pack32 = 113] = "A8B8G8R8_UScaled_Pack32", _[_.A8B8G8R8_SScaled_Pack32 = 114] = "A8B8G8R8_SScaled_Pack32", 
  _[_.A8B8G8R8_UInt_Pack32 = 115] = "A8B8G8R8_UInt_Pack32", _[_.A8B8G8R8_SInt_Pack32 = 116] = "A8B8G8R8_SInt_Pack32", 
  _[_.A8B8G8R8_SRGB_Pack32 = 117] = "A8B8G8R8_SRGB_Pack32", _[_.A2R10G10B10_UNorm_Pack32 = 118] = "A2R10G10B10_UNorm_Pack32", 
  _[_.A2R10G10B10_UInt_Pack32 = 119] = "A2R10G10B10_UInt_Pack32", _[_.A2R10G10B10_SNorm_Pack32 = 120] = "A2R10G10B10_SNorm_Pack32", 
  _[_.A2R10G10B10_SInt_Pack32 = 121] = "A2R10G10B10_SInt_Pack32", _[_.A2B10G10R10_UNorm_Pack32 = 122] = "A2B10G10R10_UNorm_Pack32", 
  _[_.A2B10G10R10_UInt_Pack32 = 123] = "A2B10G10R10_UInt_Pack32", _[_.A2B10G10R10_SNorm_Pack32 = 124] = "A2B10G10R10_SNorm_Pack32", 
  _[_.A2B10G10R10_SInt_Pack32 = 125] = "A2B10G10R10_SInt_Pack32", _[_.R16_UNorm = 126] = "R16_UNorm", 
  _[_.R16_SNorm = 127] = "R16_SNorm", _[_.R16_UInt = 128] = "R16_UInt", _[_.R16_SInt = 129] = "R16_SInt", 
  _[_.R16_SFloat = 130] = "R16_SFloat", _[_.R16G16_UNorm = 131] = "R16G16_UNorm", 
  _[_.R16G16_SNorm = 132] = "R16G16_SNorm", _[_.R16G16_UInt = 133] = "R16G16_UInt", 
  _[_.R16G16_SInt = 134] = "R16G16_SInt", _[_.R16G16_SFloat = 135] = "R16G16_SFloat", 
  _[_.R16G16B16_UNorm = 136] = "R16G16B16_UNorm", _[_.R16G16B16_SNorm = 137] = "R16G16B16_SNorm", 
  _[_.R16G16B16_UInt = 138] = "R16G16B16_UInt", _[_.R16G16B16_SInt = 139] = "R16G16B16_SInt", 
  _[_.R16G16B16_SFloat = 140] = "R16G16B16_SFloat";
}(a = exports.UnityEngine_Experimental_Rendering_GraphicsFormat || (exports.UnityEngine_Experimental_Rendering_GraphicsFormat = {})), 
function(_) {
  _[_.HDR = 1] = "HDR", _[_.LDR = 0] = "LDR";
}(G = exports.UnityEngine_Experimental_Rendering_DefaultFormat || (exports.UnityEngine_Experimental_Rendering_DefaultFormat = {})), 
function(_) {
  _[_.Crunch = 64] = "Crunch", _[_.MipChain = 1] = "MipChain", _[_.None = 0] = "None";
}(B = exports.UnityEngine_Experimental_Rendering_TextureCreationFlags || (exports.UnityEngine_Experimental_Rendering_TextureCreationFlags = {}));

},{}],300:[function(require,module,exports){
"use strict";

},{}],301:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./enum"), require("./class"), require("./export"), 
require("./Texture2D/include");

},{"./Texture2D/include":296,"./api":297,"./class":298,"./enum":299,"./export":300}],302:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, c = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (c = (o < 3 ? r(c) : o > 3 ? r(t, n, c) : r(t, n)) || c);
  return o > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.il2cppObjAPI = void 0;

const t = require("decorator-cache-getter");

class n {
  static get _ctor_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "GetHashCode", 0, "int32", [ "pointer" ]);
  }
  static get _GetInstanceID() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "GetInstanceID", 0, "int32", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _set_name() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "set_name", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_name() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "get_name", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Equals", 1, "bool", [ "pointer" ]);
  }
  static get _Destroy_1() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Destroy", 1, "void", [ "pointer" ]);
  }
  static get _Destroy_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Destroy", 2, "void", [ "pointer", "float" ]);
  }
  static get _DestroyImmediate() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "DestroyImmediate", 1, "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_ctor_0", null), e([ t.cache ], n, "_GetHashCode", null), e([ t.cache ], n, "_GetInstanceID", null), 
e([ t.cache ], n, "_ToString", null), e([ t.cache ], n, "_set_name", null), e([ t.cache ], n, "_get_name", null), 
e([ t.cache ], n, "_Equals", null), e([ t.cache ], n, "_Destroy_1", null), e([ t.cache ], n, "_Destroy_2", null), 
e([ t.cache ], n, "_DestroyImmediate", null), exports.il2cppObjAPI = n, Il2Cpp.Api.il2cppObj = n;

},{"decorator-cache-getter":513}],303:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Object = void 0;

class e extends Il2Cpp.Object {
  constructor(e) {
    super(e);
  }
  ctor() {
    return Il2Cpp.Api.il2cppObj._ctor_0(allocP(1));
  }
  Equals(e) {
    return Il2Cpp.Api.il2cppObj._Equals(this.handle, e.handle);
  }
  GetHashCode() {
    return Il2Cpp.Api.il2cppObj._GetHashCode(this.handle);
  }
  GetInstanceID() {
    return Il2Cpp.Api.il2cppObj._GetInstanceID(this.handle);
  }
  ToString() {
    return Il2Cpp.Api.il2cppObj._ToString(this.handle);
  }
  set_name(e) {
    return Il2Cpp.Api.il2cppObj._set_name(this.handle, allocUStr(e));
  }
  get_name() {
    return readU16(Il2Cpp.Api.il2cppObj._get_name(this.handle));
  }
  static Destroy_1(e) {
    return Il2Cpp.Api.il2cppObj._Destroy_1(e);
  }
  static Destroy_2(e, t) {
    return Il2Cpp.Api.il2cppObj._Destroy_2(e, t);
  }
  static DestroyImmediate(e) {
    return Il2Cpp.Api.il2cppObj._DestroyImmediate(e);
  }
}

class t extends e {}

exports.UnityEngine_Object = t;

},{}],304:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getObjClass = exports.getObjName = void 0;

const e = require("../class"), t = require("./class"), s = t => t instanceof NativePointer && !t.isNull() ? new e.mscorlib_System_Object_impl(t).toString() : "number" == typeof t && 0 != t ? new e.mscorlib_System_Object_impl(ptr(t)).toString() : "";

exports.getObjName = s;

const r = e => ("number" == typeof e && (e = ptr(e)), new t.UnityEngine_Object(e).class.handle);

exports.getObjClass = r, globalThis.getObjName = s, globalThis.getObjClass = r;

},{"../class":468,"./class":303}],305:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./interface"), require("./AssetBundle/include"), 
require("./AudioClip/include"), require("./Avatar/include"), require("./Component/include"), 
require("./GameObject/include"), require("./Material/include"), require("./Mesh/include"), 
require("./Montion/include"), require("./Shader/include"), require("./Sprite/include"), 
require("./Texture/include");

},{"./AssetBundle/include":153,"./AudioClip/include":157,"./Avatar/include":158,"./Component/include":277,"./GameObject/include":281,"./Material/include":284,"./Mesh/include":285,"./Montion/include":286,"./Shader/include":290,"./Sprite/include":291,"./Texture/include":301,"./api":302,"./class":303,"./interface":306}],306:[function(require,module,exports){
"use strict";

},{}],307:[function(require,module,exports){
"use strict";

var n = this && this.__decorate || function(n, t, i, e) {
  var r, a = arguments.length, o = a < 3 ? t : null === e ? e = Object.getOwnPropertyDescriptor(t, i) : e;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(n, t, i, e); else for (var s = n.length - 1; s >= 0; s--) (r = n[s]) && (o = (a < 3 ? r(o) : a > 3 ? r(t, i, o) : r(t, i)) || o);
  return a > 3 && o && Object.defineProperty(t, i, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _get_gravity() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_gravity", 0, "pointer", []);
  }
  static get _set_gravity() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "set_gravity", 1, "void", [ "pointer" ]);
  }
  static get _get_defaultPhysicsScene() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_defaultPhysicsScene", 0, "pointer", []);
  }
  static get _IgnoreCollision() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreCollision", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _IgnoreLayerCollision() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreLayerCollision", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _IgnoreLayerCollision_layer1_layer2() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreLayerCollision", 2, [ "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Raycast() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, [ "UnityEngine.Vector3", "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 6, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_hitInfo_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_hitInfo_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_origin_direction_hitInfo() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, [ "UnityEngine.Ray", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, [ "UnityEngine.Ray", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, [ "UnityEngine.Ray", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Raycast_ray() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 1, [ "UnityEngine.Ray" ], "pointer", [ "pointer" ]);
  }
  static get _Raycast_ray_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, [ "UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_hitInfo_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, [ "UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_hitInfo_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, [ "UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Raycast_ray_hitInfo() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, [ "UnityEngine.Ray", "UnityEngine.RaycastHit&" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Linecast() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Linecast", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Linecast_start_end_hitInfo() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Linecast", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCast() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 7, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCast_origin_radius_direction_hitInfo_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 5, [ "UnityEngine.Vector3", "System.Single", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCast_origin_radius_direction_hitInfo() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 4, [ "UnityEngine.Vector3", "System.Single", "UnityEngine.Vector3", "UnityEngine.RaycastHit&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCast_ray_radius_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 6, [ "UnityEngine.Ray", "System.Single", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCast_ray_radius_hitInfo_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 5, [ "UnityEngine.Ray", "System.Single", "UnityEngine.RaycastHit&", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _BoxCast() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "BoxCast", 8, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _BoxCast_center_halfExtents_direction_hitInfo_orientation_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "BoxCast", 7, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "UnityEngine.Quaternion", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Internal_RaycastAll() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Internal_RaycastAll", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll_origin_direction_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 4, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll_origin_direction_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll_origin_direction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 2, [ "UnityEngine.Vector3", "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _RaycastAll_ray_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 4, [ "UnityEngine.Ray", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll_ray_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 3, [ "UnityEngine.Ray", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastAll_ray_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 2, [ "UnityEngine.Ray", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _RaycastAll_ray() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 1, [ "UnityEngine.Ray" ], "pointer", [ "pointer" ]);
  }
  static get _RaycastNonAlloc() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_ray_results_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 4, [ "UnityEngine.Ray", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_ray_results_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 3, [ "UnityEngine.Ray", "UnityEngine.RaycastHit[]", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_ray_results() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 2, [ "UnityEngine.Ray", "UnityEngine.RaycastHit[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_origin_direction_results_maxDistance_layerMask_queryTriggerInteraction() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 6, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_origin_direction_results_maxDistance_layerMask() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 5, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_origin_direction_results_maxDistance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 4, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _RaycastNonAlloc_origin_direction_results() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 3, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Query_ComputePenetration() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Query_ComputePenetration", 8, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ComputePenetration() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "ComputePenetration", 8, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _OverlapSphereNonAlloc() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "OverlapSphereNonAlloc", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SphereCastNonAlloc() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCastNonAlloc", 7, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_gravity_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_gravity_Injected", 1, "void", [ "pointer" ]);
  }
  static get _set_gravity_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "set_gravity_Injected", 1, "void", [ "pointer" ]);
  }
  static get _get_defaultPhysicsScene_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_defaultPhysicsScene_Injected", 1, "void", [ "pointer" ]);
  }
  static get _Internal_RaycastAll_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Internal_RaycastAll_Injected", 5, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Query_ComputePenetration_Injected() {
    return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Query_ComputePenetration_Injected", 8, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
}

n([ t.cache ], i, "_get_gravity", null), n([ t.cache ], i, "_set_gravity", null), 
n([ t.cache ], i, "_get_defaultPhysicsScene", null), n([ t.cache ], i, "_IgnoreCollision", null), 
n([ t.cache ], i, "_IgnoreLayerCollision", null), n([ t.cache ], i, "_IgnoreLayerCollision_layer1_layer2", null), 
n([ t.cache ], i, "_Raycast", null), n([ t.cache ], i, "_Raycast_origin_direction_maxDistance_layerMask", null), 
n([ t.cache ], i, "_Raycast_origin_direction_maxDistance", null), n([ t.cache ], i, "_Raycast_origin_direction", null), 
n([ t.cache ], i, "_Raycast_origin_direction_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_Raycast_origin_direction_hitInfo_maxDistance_layerMask", null), 
n([ t.cache ], i, "_Raycast_origin_direction_hitInfo_maxDistance", null), n([ t.cache ], i, "_Raycast_origin_direction_hitInfo", null), 
n([ t.cache ], i, "_Raycast_ray_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_Raycast_ray_maxDistance_layerMask", null), n([ t.cache ], i, "_Raycast_ray_maxDistance", null), 
n([ t.cache ], i, "_Raycast_ray", null), n([ t.cache ], i, "_Raycast_ray_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_Raycast_ray_hitInfo_maxDistance_layerMask", null), n([ t.cache ], i, "_Raycast_ray_hitInfo_maxDistance", null), 
n([ t.cache ], i, "_Raycast_ray_hitInfo", null), n([ t.cache ], i, "_Linecast", null), 
n([ t.cache ], i, "_Linecast_start_end_hitInfo", null), n([ t.cache ], i, "_SphereCast", null), 
n([ t.cache ], i, "_SphereCast_origin_radius_direction_hitInfo_maxDistance", null), 
n([ t.cache ], i, "_SphereCast_origin_radius_direction_hitInfo", null), n([ t.cache ], i, "_SphereCast_ray_radius_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_SphereCast_ray_radius_hitInfo_maxDistance_layerMask", null), 
n([ t.cache ], i, "_BoxCast", null), n([ t.cache ], i, "_BoxCast_center_halfExtents_direction_hitInfo_orientation_maxDistance_layerMask", null), 
n([ t.cache ], i, "_Internal_RaycastAll", null), n([ t.cache ], i, "_RaycastAll", null), 
n([ t.cache ], i, "_RaycastAll_origin_direction_maxDistance_layerMask", null), n([ t.cache ], i, "_RaycastAll_origin_direction_maxDistance", null), 
n([ t.cache ], i, "_RaycastAll_origin_direction", null), n([ t.cache ], i, "_RaycastAll_ray_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_RaycastAll_ray_maxDistance_layerMask", null), n([ t.cache ], i, "_RaycastAll_ray_maxDistance", null), 
n([ t.cache ], i, "_RaycastAll_ray", null), n([ t.cache ], i, "_RaycastNonAlloc", null), 
n([ t.cache ], i, "_RaycastNonAlloc_ray_results_maxDistance_layerMask", null), n([ t.cache ], i, "_RaycastNonAlloc_ray_results_maxDistance", null), 
n([ t.cache ], i, "_RaycastNonAlloc_ray_results", null), n([ t.cache ], i, "_RaycastNonAlloc_origin_direction_results_maxDistance_layerMask_queryTriggerInteraction", null), 
n([ t.cache ], i, "_RaycastNonAlloc_origin_direction_results_maxDistance_layerMask", null), 
n([ t.cache ], i, "_RaycastNonAlloc_origin_direction_results_maxDistance", null), 
n([ t.cache ], i, "_RaycastNonAlloc_origin_direction_results", null), n([ t.cache ], i, "_Query_ComputePenetration", null), 
n([ t.cache ], i, "_ComputePenetration", null), n([ t.cache ], i, "_OverlapSphereNonAlloc", null), 
n([ t.cache ], i, "_SphereCastNonAlloc", null), n([ t.cache ], i, "_get_gravity_Injected", null), 
n([ t.cache ], i, "_set_gravity_Injected", null), n([ t.cache ], i, "_get_defaultPhysicsScene_Injected", null), 
n([ t.cache ], i, "_Internal_RaycastAll_Injected", null), n([ t.cache ], i, "_Query_ComputePenetration_Injected", null), 
Il2Cpp.Api.Physics = i;

},{"decorator-cache-getter":513}],308:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Physics_Impl = void 0;

const t = require("../class");

class s extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  static get_gravity() {
    return Il2Cpp.Api.Physics._get_gravity();
  }
  static set_gravity(t) {
    return Il2Cpp.Api.Physics._set_gravity(t);
  }
  static get_defaultPhysicsScene() {
    return Il2Cpp.Api.Physics._get_defaultPhysicsScene();
  }
  static IgnoreCollision(t, s, a) {
    return Il2Cpp.Api.Physics._IgnoreCollision(t, s, a);
  }
  static IgnoreLayerCollision(t, s, a) {
    return Il2Cpp.Api.Physics._IgnoreLayerCollision(t, s, a);
  }
  static IgnoreLayerCollision_2(t, s) {
    return Il2Cpp.Api.Physics._IgnoreLayerCollision(t, s);
  }
  static Raycast(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c, i);
  }
  static Raycast_4(t, s, a, c) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c);
  }
  static Raycast_3(t, s, a) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a);
  }
  static Raycast_2(t, s) {
    return Il2Cpp.Api.Physics._Raycast(t, s);
  }
  static Raycast_6(t, s, a, c, i, p) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c, i, p);
  }
  static Raycast_v3_dir_hit_max_layer(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c, i);
  }
  static Raycast_org_v3_hit_dis(t, s, a, c) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c);
  }
  static Raycast_v3_v3_hit(t, s, a) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a);
  }
  static Raycast_ray_num_num_query(t, s, a, c) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c);
  }
  static Raycast_ray_num_num(t, s, a) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a);
  }
  static Raycast_ray_num(t, s) {
    return Il2Cpp.Api.Physics._Raycast(t, s);
  }
  static Raycast_ray(t) {
    return Il2Cpp.Api.Physics._Raycast(t);
  }
  static Raycast_5(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c, i);
  }
  static Raycast_Ray_RaycastHit_Int32_layerMask(t, s, a, c) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a, c);
  }
  static Raycast_Ray_RaycastHit_Int32(t, s, a) {
    return Il2Cpp.Api.Physics._Raycast(t, s, a);
  }
  static Raycast_Ray_RaycastHit(t, s) {
    return Il2Cpp.Api.Physics._Raycast(t, s);
  }
  static Linecast(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Linecast(t, s, a, c, i);
  }
  static Linecast_3(t, s, a) {
    return Il2Cpp.Api.Physics._Linecast(t, s, a);
  }
  static SphereCast(t, s, a, c, i, p, e) {
    return Il2Cpp.Api.Physics._SphereCast(t, s, a, c, i, p, e);
  }
  static SphereCast_v3_num_v3_hit_num(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._SphereCast(t, s, a, c, i);
  }
  static SphereCast_4(t, s, a, c) {
    return Il2Cpp.Api.Physics._SphereCast(t, s, a, c);
  }
  static SphereCast_6(t, s, a, c, i, p) {
    return Il2Cpp.Api.Physics._SphereCast(t, s, a, c, i, p);
  }
  static SphereCast_5(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._SphereCast(t, s, a, c, i);
  }
  static BoxCast(t, s, a, c, i, p, e, r) {
    return Il2Cpp.Api.Physics._BoxCast(t, s, a, c, i, p, e, r);
  }
  static BoxCast_7(t, s, a, c, i, p, e) {
    return Il2Cpp.Api.Physics._BoxCast(t, s, a, c, i, p, e);
  }
  static Internal_RaycastAll(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Internal_RaycastAll(t, s, a, c, i);
  }
  static RaycastAll(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s, a, c, i);
  }
  static RaycastAll_4_1(t, s, a, c) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s, a, c);
  }
  static RaycastAll_3_1(t, s, a) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s, a);
  }
  static RaycastAll_2_1(t, s) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s);
  }
  static RaycastAll_4(t, s, a, c) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s, a, c);
  }
  static RaycastAll_3(t, s, a) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s, a);
  }
  static RaycastAll_2_2(t, s) {
    return Il2Cpp.Api.Physics._RaycastAll(t, s);
  }
  static RaycastAll_1(t) {
    return Il2Cpp.Api.Physics._RaycastAll(t);
  }
  static RaycastNonAlloc(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a, c, i);
  }
  static RaycastNonAlloc_4_1(t, s, a, c) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a, c);
  }
  static RaycastNonAlloc_3_1(t, s, a) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a);
  }
  static RaycastNonAlloc_2(t, s) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s);
  }
  static RaycastNonAlloc_6(t, s, a, c, i, p) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a, c, i, p);
  }
  static RaycastNonAlloc_5(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a, c, i);
  }
  static RaycastNonAlloc_4(t, s, a, c) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a, c);
  }
  static RaycastNonAlloc_3(t, s, a) {
    return Il2Cpp.Api.Physics._RaycastNonAlloc(t, s, a);
  }
  static Query_ComputePenetration(t, s, a, c, i, p, e, r) {
    return Il2Cpp.Api.Physics._Query_ComputePenetration(t, s, a, c, i, p, e, r);
  }
  static ComputePenetration(t, s, a, c, i, p, e, r) {
    return Il2Cpp.Api.Physics._ComputePenetration(t, s, a, c, i, p, e, r);
  }
  static OverlapSphereNonAlloc(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._OverlapSphereNonAlloc(t, s, a, c, i);
  }
  static SphereCastNonAlloc(t, s, a, c, i, p, e) {
    return Il2Cpp.Api.Physics._SphereCastNonAlloc(t, s, a, c, i, p, e);
  }
  static get_gravity_Injected(t) {
    return Il2Cpp.Api.Physics._get_gravity_Injected(t);
  }
  static set_gravity_Injected(t) {
    return Il2Cpp.Api.Physics._set_gravity_Injected(t);
  }
  static get_defaultPhysicsScene_Injected(t) {
    return Il2Cpp.Api.Physics._get_defaultPhysicsScene_Injected(t);
  }
  static Internal_RaycastAll_Injected(t, s, a, c, i) {
    return Il2Cpp.Api.Physics._Internal_RaycastAll_Injected(t, s, a, c, i);
  }
  static Query_ComputePenetration_Injected(t, s, a, c, i, p, e, r) {
    return Il2Cpp.Api.Physics._Query_ComputePenetration_Injected(t, s, a, c, i, p, e, r);
  }
}

exports.UnityEngine_Physics_Impl = s, Il2Cpp.Physics = s;

},{"../class":468}],309:[function(require,module,exports){
"use strict";

},{}],310:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":307,"./class":308,"./export":309}],311:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, r) {
  var i, l = arguments.length, o = l < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, n, r); else for (var p = e.length - 1; p >= 0; p--) (i = e[p]) && (o = (l < 3 ? i(o) : l > 3 ? i(t, n, o) : i(t, n)) || o);
  return l > 3 && o && Object.defineProperty(t, n, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _DeleteAll() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "DeleteAll", 0, "pointer", [ "pointer" ]);
  }
  static get _DeleteKey() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "DeleteKey", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetFloat", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetFloat_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetFloat", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetInt() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetInt", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetInt_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetInt", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetString", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetString_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetString", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _HasKey() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "HasKey", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Save() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "Save", 0, "pointer", [ "pointer" ]);
  }
  static get _SetFloat() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetFloat", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetInt() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetInt", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetString", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_DeleteAll", null), e([ t.cache ], n, "_DeleteKey", null), e([ t.cache ], n, "_GetFloat", null), 
e([ t.cache ], n, "_GetFloat_2", null), e([ t.cache ], n, "_GetInt", null), e([ t.cache ], n, "_GetInt_2", null), 
e([ t.cache ], n, "_GetString", null), e([ t.cache ], n, "_GetString_2", null), 
e([ t.cache ], n, "_HasKey", null), e([ t.cache ], n, "_Save", null), e([ t.cache ], n, "_SetFloat", null), 
e([ t.cache ], n, "_SetInt", null), e([ t.cache ], n, "_SetString", null), Il2Cpp.Api.PlayerPrefs = n;

},{"decorator-cache-getter":513}],312:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.PlayerPrefsImpl = void 0;

const e = require("../Object/class");

class t extends e.UnityEngine_Object {
  DeleteAll() {
    return Il2Cpp.Api.PlayerPrefs._DeleteAll(this.handle);
  }
  DeleteKey(e) {
    return Il2Cpp.Api.PlayerPrefs._DeleteKey(this.handle, allocCStr(e));
  }
  GetFloat(e) {
    return Il2Cpp.Api.PlayerPrefs._GetFloat(this.handle, allocCStr(e));
  }
  GetFloat_2(e, t = 0) {
    return Il2Cpp.Api.PlayerPrefs._GetFloat_2(this.handle, allocCStr(e), t);
  }
  GetInt(e) {
    return Il2Cpp.Api.PlayerPrefs._GetInt(this.handle, allocCStr(e));
  }
  GetInt_2(e, t = 0) {
    return Il2Cpp.Api.PlayerPrefs._GetInt_2(this.handle, allocCStr(e), t);
  }
  GetString(e) {
    return Il2Cpp.Api.PlayerPrefs._GetString(this.handle, allocCStr(e));
  }
  GetString_2(e, t = "") {
    return Il2Cpp.Api.PlayerPrefs._GetString_2(this.handle, allocCStr(e), allocCStr(t));
  }
  HasKey(e) {
    return Il2Cpp.Api.PlayerPrefs._HasKey(this.handle, allocCStr(e));
  }
  Save() {
    return Il2Cpp.Api.PlayerPrefs._Save(this.handle);
  }
  SetFloat(e, t = 0) {
    return Il2Cpp.Api.PlayerPrefs._SetFloat(this.handle, allocCStr(e), t);
  }
  SetInt(e, t = 0) {
    return Il2Cpp.Api.PlayerPrefs._SetInt(this.handle, allocCStr(e), t);
  }
  SetString(e, t = "") {
    return Il2Cpp.Api.PlayerPrefs._SetString(this.handle, allocCStr(e), allocCStr(t));
  }
}

exports.PlayerPrefsImpl = t, Il2Cpp.PlayerPrefs = t;

},{"../Object/class":303}],313:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookPlayerPrefs = void 0;

const e = require("../../../../utils/common"), t = (t = !1, r = !0) => {
  A(Il2Cpp.Api.PlayerPrefs._GetFloat_2, ((e, t, r) => {
    r.set("arg0", readU16(e[0])), r.set("arg1", e[1]);
  }), ((l, a, o) => {
    LOGD("\n[*] '" + l + "' = GetFloat('" + o.get("arg0") + "'," + o.get("arg1") + ")");
    let n = `\n[*] ${l} = GetFloat(${o.get("arg0")},${o.get("arg1")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)));
  })), A(Il2Cpp.Api.PlayerPrefs._GetInt_2, ((e, t, r) => {
    r.set("arg0", readU16(e[0])), r.set("arg1", e[1]);
  }), ((l, a, o) => {
    let n = `\n[*] ${l.toInt32()} = GetInt(${o.get("arg0")},${o.get("arg1")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)), -1 != o.get("arg0").indexOf("SaleBoughted") && l.replace(ptr(1)));
  })), A(Il2Cpp.Api.PlayerPrefs._GetString, ((e, t, r) => {
    r.set("arg0", readU16(e[0]));
  }), ((l, a, o) => {
    let n = `\n[*] ${readU16(l)} = GetString(${o.get("arg0")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)));
  })), A(Il2Cpp.Api.PlayerPrefs._SetFloat, ((e, t, r) => {
    r.set("arg0", readU16(e[0])), r.set("arg1", e[1].isNull() ? 0 : readSingle(e[1]));
  }), ((l, a, o) => {
    let n = `\n[*] SetFloat(${o.get("arg0")},${o.get("arg1")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)));
  })), A(Il2Cpp.Api.PlayerPrefs._SetInt, ((e, t, r) => {
    r.set("arg0", readU16(e[0])), r.set("arg1", e[1]);
  }), ((l, a, o) => {
    let n = `\n[*] SetInt(${o.get("arg0")},${o.get("arg1")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)));
  })), A(Il2Cpp.Api.PlayerPrefs._SetString, ((e, t, r) => {
    r.set("arg0", readU16(e[0])), r.set("arg1", readU16(e[1]));
  }), ((l, a, o) => {
    let n = `\n[*] SetString(${o.get("arg0")},${o.get("arg1")})`;
    (0, e.filterDuplicateOBJ)(n, 10) || (LOGD(n), r && LOGZ("\t\t { LR:" + checkCtx(a) + " } | { PC:" + checkCtx(a, "PC") + " }"), 
    t && LOGZ(GetStackTraceN(a)));
  }));
};

exports.HookPlayerPrefs = t, globalThis.SetInt = (e, t) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetInt", 2, !0), allocUStr(e), t), 
globalThis.SetFloat = (e, t) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetFloat", 2, !0), allocUStr(e), t), 
globalThis.SetString = (e, t) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetString", 2, !0), allocUStr(e), allocUStr(t)), 
globalThis.GetInt = e => {
  let t = callFunctionRI(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetInt", 2, !0), allocUStr(e), 0);
  LOG("\n[*] GetInt('" + e + "')\t---\x3e\t" + t + "\n", LogColor.C95);
}, globalThis.GetFloat = e => {
  let t = callFunctionRF(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetFloat", 2, !0), allocUStr(e), 0);
  LOG("\n[*] GetFloat('" + e + "')\t---\x3e\t" + t + "\n", LogColor.C95);
}, globalThis.GetString = e => {
  let t = callFunctionRUS(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetString", 1), allocUStr(e));
  LOG("\n[*] GetString('" + e + "')\t---\x3e\t" + t + "\n", LogColor.C95);
}, globalThis.HookPlayerPrefs = t;

},{"../../../../utils/common":502}],314:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./interface");

},{"./api":311,"./class":312,"./export":313,"./interface":315}],315:[function(require,module,exports){
"use strict";

},{}],316:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, a) {
  var r, c = arguments.length, s = c < 3 ? t : null === a ? a = Object.getOwnPropertyDescriptor(t, n) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, a); else for (var i = e.length - 1; i >= 0; i--) (r = e[i]) && (s = (c < 3 ? r(s) : c > 3 ? r(t, n, s) : r(t, n)) || s);
  return c > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _AddRaycaster() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycasterManager", "AddRaycaster", 1, [ "UnityEngine.EventSystems.BaseRaycaster" ], "void", [ "pointer" ]);
  }
  static get _GetRaycasters() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycasterManager", "GetRaycasters", 0, [], "pointer", []);
  }
  static get _RemoveRaycasters() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycasterManager", "RemoveRaycasters", 1, [ "UnityEngine.EventSystems.BaseRaycaster" ], "void", [ "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycasterManager", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], n, "_AddRaycaster", null), e([ t.cache ], n, "_GetRaycasters", null), 
e([ t.cache ], n, "_RemoveRaycasters", null), e([ t.cache ], n, "__cctor", null), 
Il2Cpp.Api.RaycasterManager = n;

},{"decorator-cache-getter":513}],317:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_RaycasterManager_Impl = void 0;

const e = require("../../../../bridge/fix/packer/packList"), a = require("../class");

class t extends a.mscorlib_System_Object_impl {
  s_Raycasters=new e.PackList(lfv(this.handle, "s_Raycasters"));
  constructor(e) {
    super(e);
  }
  static AddRaycaster(e) {
    return Il2Cpp.Api.RaycasterManager._AddRaycaster(e);
  }
  static GetRaycasters() {
    return new e.PackList(Il2Cpp.Api.RaycasterManager._GetRaycasters());
  }
  static RemoveRaycasters(e) {
    return Il2Cpp.Api.RaycasterManager._RemoveRaycasters(e);
  }
  static _cctor() {
    return Il2Cpp.Api.RaycasterManager.__cctor();
  }
}

exports.UnityEngine_EventSystems_RaycasterManager_Impl = t, Il2Cpp.RaycasterManager = t;

},{"../../../../bridge/fix/packer/packList":29,"../class":468}],318:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":316,"./class":317}],319:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, c = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (c = (o < 3 ? r(c) : o > 3 ? r(t, n, c) : r(t, n)) || c);
  return o > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", ".cctor", 0, "pointer", [ "pointer" ]);
  }
  static get _get_ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _FindObjectsOfTypeAll() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "FindObjectsOfTypeAll", 1, "pointer", [ "pointer" ]);
  }
  static get _FindShaderByName() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "FindShaderByName", 1, "pointer", [ "pointer" ]);
  }
  static get _Load() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "Load", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadAll() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "LoadAll", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadAsync() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "LoadAsync", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _UnloadAsset() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "UnloadAsset", 1, "pointer", [ "pointer" ]);
  }
  static get _get_ActiveAPI() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "get_ActiveAPI", 0, "pointer", [ "pointer" ]);
  }
  static get _get_overrideAPI() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "get_overrideAPI", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_cctor", null), e([ t.cache ], n, "_get_ctor", null), e([ t.cache ], n, "_FindObjectsOfTypeAll", null), 
e([ t.cache ], n, "_FindShaderByName", null), e([ t.cache ], n, "_Load", null), 
e([ t.cache ], n, "_LoadAll", null), e([ t.cache ], n, "_LoadAsync", null), e([ t.cache ], n, "_UnloadAsset", null), 
e([ t.cache ], n, "_get_ActiveAPI", null), e([ t.cache ], n, "_get_overrideAPI", null), 
mscorlib.Api.ResourcesAPI = n;

},{"decorator-cache-getter":513}],320:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.ResourcesApi_impl = void 0;

const e = require("../Type/class");

require("./interface");

class s extends e.mscorlib_System_Type_impl {
  s_DefaultAPI=new s(lfv(this.handle, "s_DefaultAPI"));
  FindObjectsOfTypeAll(e) {
    return mscorlib.Api.ResourcesAPI._FindObjectsOfTypeAll(this.handle, e);
  }
  FindShaderByName(e) {
    return mscorlib.Api.ResourcesAPI._FindShaderByName(this.handle, e);
  }
  Load(e, s) {
    return new Il2Cpp.Object(mscorlib.Api.ResourcesAPI._Load(this.handle, e, s));
  }
  LoadAll(e, s) {
    return mscorlib.Api.ResourcesAPI._LoadAll(this.handle, e, s);
  }
  LoadAsync(e, s) {
    return mscorlib.Api.ResourcesAPI._LoadAsync(this.handle, e, s);
  }
  UnloadAsset(e) {
    return mscorlib.Api.ResourcesAPI._UnloadAsset(this.handle, e);
  }
  get ActiveAPI() {
    return mscorlib.Api.ResourcesAPI._get_ActiveAPI();
  }
  get overrideAPI() {
    return mscorlib.Api.ResourcesAPI._get_overrideAPI();
  }
}

exports.ResourcesApi_impl = s, mscorlib.ResourcesAPI = s;

},{"../Type/class":356,"./interface":323}],321:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), globalThis.HookResourceLoad = () => {
  A(mscorlib.Api.ResourcesAPI._Load, (e => {
    LOGD("\n[*] ResourcesAPI.load"), LOGZ(`   | ARG ---\x3e ins:'${e[0]}',name:'${readU16(e[1])}', type:'${e[2]}'`);
  }), (e => {
    LOGZ(`   | RET ---\x3e ${e} --- {${new Il2Cpp.Object(e).toString()}}`);
  }));
};

},{}],322:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./interface"), require("./export");

},{"./api":319,"./class":320,"./export":321,"./interface":323}],323:[function(require,module,exports){
"use strict";

},{}],324:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, n) {
  var o, c = arguments.length, i = c < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, n); else for (var s = e.length - 1; s >= 0; s--) (o = e[s]) && (i = (c < 3 ? o(i) : c > 3 ? o(t, r, i) : o(t, r)) || i);
  return c > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _get_ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _get_asset() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", "get_asset", 0, "pointer", [ "pointer" ]);
  }
  static get _GetResult() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", "GetResult", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], r, "_get_ctor", null), e([ t.cache ], r, "_get_asset", null), e([ t.cache ], r, "_GetResult", null), 
mscorlib.Api.ResourcesRequest = r;

},{"decorator-cache-getter":513}],325:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.ResourcesRequest_impl = void 0;

const e = require("../Type/class");

class s extends e.mscorlib_System_Type_impl {}

exports.ResourcesRequest_impl = s, mscorlib.ResourcesRequest = s;

},{"../Type/class":356}],326:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":324,"./class":325}],327:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
  return o > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _ConvertObjects() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "ConvertObjects", 1, "pointer", [ "pointer" ]);
  }
  static get _FindObjectsOfTypeAll() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "FindObjectsOfTypeAll", 1, "pointer", [ "pointer" ]);
  }
  static get _FindObjectsOfTypeAll_() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "FindObjectsOfTypeAll", 0, [], "pointer", []);
  }
  static get _Load() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 1, "pointer", [ "pointer" ]);
  }
  static get _Load_path() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _Load_path_systemTypeInstance() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 2, [ "System.String", "System.Type" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetBuiltinResource() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "GetBuiltinResource", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetBuiltinResource_path() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "GetBuiltinResource", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _UnloadUnusedAssets() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "UnloadUnusedAssets", 0, "pointer", []);
  }
}

e([ t.cache ], n, "_ConvertObjects", null), e([ t.cache ], n, "_FindObjectsOfTypeAll", null), 
e([ t.cache ], n, "_FindObjectsOfTypeAll_", null), e([ t.cache ], n, "_Load", null), 
e([ t.cache ], n, "_Load_path", null), e([ t.cache ], n, "_Load_path_systemTypeInstance", null), 
e([ t.cache ], n, "_GetBuiltinResource", null), e([ t.cache ], n, "_GetBuiltinResource_path", null), 
e([ t.cache ], n, "_UnloadUnusedAssets", null), Il2Cpp.Api.Resources = n;

},{"decorator-cache-getter":513}],328:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Resources_Impl = void 0;

const e = require("../class"), s = require("../Object/class"), t = require("../YieldInstruction/AsyncOperation/class");

class n extends e.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  static FindObjectsOfTypeAll(e) {
    return Il2Cpp.Api.Resources._FindObjectsOfTypeAll(e);
  }
  static Load(e) {
    return new s.UnityEngine_Object(Il2Cpp.Api.Resources._Load(e));
  }
  static Load_2(e, t) {
    return new s.UnityEngine_Object(Il2Cpp.Api.Resources._Load(e, t));
  }
  static GetBuiltinResource(e, t) {
    return new s.UnityEngine_Object(Il2Cpp.Api.Resources._GetBuiltinResource(e, t));
  }
  static UnloadUnusedAssets() {
    return new t.UnityEngine_AsyncOperation_Impl(Il2Cpp.Api.Resources._UnloadUnusedAssets());
  }
}

exports.UnityEngine_Resources_Impl = n, Il2Cpp.Resources = n;

},{"../Object/class":303,"../YieldInstruction/AsyncOperation/class":459,"../class":468}],329:[function(require,module,exports){
"use strict";

},{}],330:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":327,"./class":328,"./export":329}],331:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e {}

mscorlib.Api.RuntimeTypeHandle = e;

},{}],332:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_RuntimeTypeHandle_impl = void 0;

const e = require("../class");

require("./interface");

class s extends e.mscorlib_System_Object_impl {}

exports.mscorlib_System_RuntimeTypeHandle_impl = s, mscorlib.RuntimeTypeHandle = s;

},{"../class":468,"./interface":334}],333:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./interface");

},{"./api":331,"./class":332,"./interface":334}],334:[function(require,module,exports){
"use strict";

},{}],335:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, p) {
  var r, n = arguments.length, l = n < 3 ? t : null === p ? p = Object.getOwnPropertyDescriptor(t, i) : p;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, i, p); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (l = (n < 3 ? r(l) : n > 3 ? r(t, i, l) : r(t, i)) || l);
  return n > 3 && l && Object.defineProperty(t, i, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _get_AssemblyQualifiedName() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_AssemblyQualifiedName", 0, "pointer", [ "pointer" ]);
  }
  static get _get_BaseType() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_BaseType", 0, "pointer", [ "pointer" ]);
  }
  static get _get_DeclaringType() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_DeclaringType", 0, "pointer", [ "pointer" ]);
  }
  static get _get_FullName() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_FullName", 0, "pointer", [ "pointer" ]);
  }
  static get _get_IsEnum() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsEnum", 0, "bool", [ "pointer" ]);
  }
  static get _get_IsGenericParameter() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsGenericParameter", 0, "bool", [ "pointer" ]);
  }
  static get _get_IsGenericType() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsGenericType", 0, "bool", [ "pointer" ]);
  }
  static get _get_Name() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Name", 0, "pointer", [ "pointer" ]);
  }
  static get _get_Namespace() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Namespace", 0, "pointer", [ "pointer" ]);
  }
  static get _get_ReflectedType() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ReflectedType", 0, "pointer", [ "pointer" ]);
  }
  static get _get_TypeHandle() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_TypeHandle", 0, "pointer", [ "pointer" ]);
  }
  static get _get_UnderlyingSystemType() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_UnderlyingSystemType", 0, "pointer", [ "pointer" ]);
  }
  static get _get_Module() {
    return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Module", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], i, "_get_AssemblyQualifiedName", null), e([ t.cache ], i, "_get_BaseType", null), 
e([ t.cache ], i, "_get_DeclaringType", null), e([ t.cache ], i, "_get_FullName", null), 
e([ t.cache ], i, "_get_IsEnum", null), e([ t.cache ], i, "_get_IsGenericParameter", null), 
e([ t.cache ], i, "_get_IsGenericType", null), e([ t.cache ], i, "_get_Name", null), 
e([ t.cache ], i, "_get_Namespace", null), e([ t.cache ], i, "_get_ReflectedType", null), 
e([ t.cache ], i, "_get_TypeHandle", null), e([ t.cache ], i, "_get_UnderlyingSystemType", null), 
e([ t.cache ], i, "_get_Module", null), mscorlib.Api.RuntimeType = i;

},{"decorator-cache-getter":513}],336:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_RuntimeType_impl = void 0;

const e = require("../Module/class"), i = require("../RuntimeTypeHandle/class"), t = require("../Type/class");

class l extends t.mscorlib_System_Type_impl {
  _DelegateType=new t.mscorlib_System_Type_impl(lfv(this.handle, "DelegateType"));
  _EnumType=new t.mscorlib_System_Type_impl(lfv(this.handle, "EnumType"));
  GenericCache=lfv(this.handle, "GenericCache");
  m_serializationCtor=lfv(this.handle, "m_serializationCtor");
  _ObjectType=new t.mscorlib_System_Type_impl(lfv(this.handle, "ObjectType"));
  _StringType=new t.mscorlib_System_Type_impl(lfv(this.handle, "StringType"));
  type_info=lfv(this.handle, "type_info");
  _ValueType=new t.mscorlib_System_Type_impl(lfv(this.handle, "ValueType"));
  get_AssemblyQualifiedName() {
    return readU16(mscorlib.Api.RuntimeType._get_AssemblyQualifiedName(this.handle));
  }
  get_BaseType() {
    return new t.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_BaseType(this.handle));
  }
  get_DeclaringType() {
    return new t.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_DeclaringType(this.handle));
  }
  get_FullName() {
    return readU16(mscorlib.Api.RuntimeType._get_FullName(this.handle));
  }
  get_IsEnum() {
    return mscorlib.Api.RuntimeType._get_IsEnum(this.handle);
  }
  get_IsGenericParameter() {
    return mscorlib.Api.RuntimeType._get_IsGenericParameter(this.handle);
  }
  get_IsGenericType() {
    return mscorlib.Api.RuntimeType._get_IsGenericType(this.handle);
  }
  get_Name() {
    return readU16(mscorlib.Api.RuntimeType._get_Name(this.handle));
  }
  get_Namespace() {
    return readU16(mscorlib.Api.RuntimeType._get_Namespace(this.handle));
  }
  get_ReflectedType() {
    return new t.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_ReflectedType(this.handle));
  }
  get_TypeHandle() {
    return new i.mscorlib_System_RuntimeTypeHandle_impl(mscorlib.Api.RuntimeType._get_TypeHandle(this.handle));
  }
  get_UnderlyingSystemType() {
    return new t.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_UnderlyingSystemType(this.handle));
  }
  get_Module() {
    return new e.mscorlib_System_Reflection_Module_impl(mscorlib.Api.RuntimeType._get_Module(this.handle));
  }
}

exports.mscorlib_System_RuntimeType_impl = l, mscorlib.RuntimeType = l;

},{"../Module/class":151,"../RuntimeTypeHandle/class":332,"../Type/class":356}],337:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":335,"./class":336}],338:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, a) {
  var c, i = arguments.length, r = i < 3 ? n : null === a ? a = Object.getOwnPropertyDescriptor(n, t) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, n, t, a); else for (var o = e.length - 1; o >= 0; o--) (c = e[o]) && (r = (i < 3 ? c(r) : i > 3 ? c(n, t, r) : c(n, t)) || r);
  return i > 3 && r && Object.defineProperty(n, t, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _get_sceneCount() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "get_sceneCount", 0, [], "pointer", []);
  }
  static get _GetActiveScene() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetActiveScene", 0, [], "pointer", []);
  }
  static get _SetActiveScene() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "SetActiveScene", 1, [ "UnityEngine.SceneManagement.Scene" ], "pointer", [ "pointer" ]);
  }
  static get _GetSceneByName() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneByName", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetSceneAt() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneAt", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _CreateScene() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "CreateScene", 2, [ "System.String", "UnityEngine.SceneManagement.CreateSceneParameters" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _UnloadSceneAsyncInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "UnloadSceneAsyncInternal", 2, [ "UnityEngine.SceneManagement.Scene", "UnityEngine.SceneManagement.UnloadSceneOptions" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadSceneAsyncNameIndexInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsyncNameIndexInternal", 4, [ "System.String", "System.Int32", "UnityEngine.SceneManagement.LoadSceneParameters", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _UnloadSceneNameIndexInternal() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "UnloadSceneNameIndexInternal", 5, [ "System.String", "System.Int32", "System.Boolean", "UnityEngine.SceneManagement.UnloadSceneOptions", "System.Boolean&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _CreateScene_sceneName() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "CreateScene", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _LoadScene() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, [ "System.String", "UnityEngine.SceneManagement.LoadSceneMode" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LoadScene_sceneName_parameters() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, [ "System.String", "UnityEngine.SceneManagement.LoadSceneParameters" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadScene_sceneBuildIndex_mode() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, [ "System.Int32", "UnityEngine.SceneManagement.LoadSceneMode" ], "void", [ "pointer", "pointer" ]);
  }
  static get _LoadScene_sceneBuildIndex_parameters() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, [ "System.Int32", "UnityEngine.SceneManagement.LoadSceneParameters" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadSceneAsync() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsync", 2, [ "System.String", "UnityEngine.SceneManagement.LoadSceneMode" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _LoadSceneAsync_sceneName_parameters() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsync", 2, [ "System.String", "UnityEngine.SceneManagement.LoadSceneParameters" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _UnloadSceneAsync() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "UnloadSceneAsync", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _UnloadSceneAsync_scene() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "UnloadSceneAsync", 1, [ "UnityEngine.SceneManagement.Scene" ], "pointer", [ "pointer" ]);
  }
  static get _Internal_SceneLoaded() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_SceneLoaded", 2, [ "UnityEngine.SceneManagement.Scene", "UnityEngine.SceneManagement.LoadSceneMode" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Internal_SceneUnloaded() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_SceneUnloaded", 1, [ "UnityEngine.SceneManagement.Scene" ], "void", [ "pointer" ]);
  }
  static get _Internal_ActiveSceneChanged() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_ActiveSceneChanged", 2, [ "UnityEngine.SceneManagement.Scene", "UnityEngine.SceneManagement.Scene" ], "void", [ "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", ".cctor", 0, [], "void", []);
  }
  static get _GetActiveScene_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetActiveScene_Injected", 1, [ "UnityEngine.SceneManagement.Scene&" ], "void", [ "pointer" ]);
  }
  static get _SetActiveScene_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "SetActiveScene_Injected", 1, [ "UnityEngine.SceneManagement.Scene&" ], "pointer", [ "pointer" ]);
  }
  static get _GetSceneByName_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneByName_Injected", 2, [ "System.String", "UnityEngine.SceneManagement.Scene&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetSceneAt_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneAt_Injected", 2, [ "System.Int32", "UnityEngine.SceneManagement.Scene&" ], "void", [ "pointer", "pointer" ]);
  }
  static get _CreateScene_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "CreateScene_Injected", 3, [ "System.String", "UnityEngine.SceneManagement.CreateSceneParameters&", "UnityEngine.SceneManagement.Scene&" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _UnloadSceneAsyncInternal_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "UnloadSceneAsyncInternal_Injected", 2, [ "UnityEngine.SceneManagement.Scene&", "UnityEngine.SceneManagement.UnloadSceneOptions" ], "pointer", [ "pointer", "pointer" ]);
  }
}

e([ n.cache ], t, "_get_sceneCount", null), e([ n.cache ], t, "_GetActiveScene", null), 
e([ n.cache ], t, "_SetActiveScene", null), e([ n.cache ], t, "_GetSceneByName", null), 
e([ n.cache ], t, "_GetSceneAt", null), e([ n.cache ], t, "_CreateScene", null), 
e([ n.cache ], t, "_UnloadSceneAsyncInternal", null), e([ n.cache ], t, "_LoadSceneAsyncNameIndexInternal", null), 
e([ n.cache ], t, "_UnloadSceneNameIndexInternal", null), e([ n.cache ], t, "_CreateScene_sceneName", null), 
e([ n.cache ], t, "_LoadScene", null), e([ n.cache ], t, "_LoadScene_sceneName_parameters", null), 
e([ n.cache ], t, "_LoadScene_sceneBuildIndex_mode", null), e([ n.cache ], t, "_LoadScene_sceneBuildIndex_parameters", null), 
e([ n.cache ], t, "_LoadSceneAsync", null), e([ n.cache ], t, "_LoadSceneAsync_sceneName_parameters", null), 
e([ n.cache ], t, "_UnloadSceneAsync", null), e([ n.cache ], t, "_UnloadSceneAsync_scene", null), 
e([ n.cache ], t, "_Internal_SceneLoaded", null), e([ n.cache ], t, "_Internal_SceneUnloaded", null), 
e([ n.cache ], t, "_Internal_ActiveSceneChanged", null), e([ n.cache ], t, "__cctor", null), 
e([ n.cache ], t, "_GetActiveScene_Injected", null), e([ n.cache ], t, "_SetActiveScene_Injected", null), 
e([ n.cache ], t, "_GetSceneByName_Injected", null), e([ n.cache ], t, "_GetSceneAt_Injected", null), 
e([ n.cache ], t, "_CreateScene_Injected", null), e([ n.cache ], t, "_UnloadSceneAsyncInternal_Injected", null), 
Il2Cpp.Api.SceneManager = t;

},{"decorator-cache-getter":513}],339:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.SceneManager_Impl = void 0;

const e = require("../class");

class n extends e.mscorlib_System_Object_impl {
  s_AllowLoadScene=lfv(this.handle, "s_AllowLoadScene");
  sceneLoaded=lfv(this.handle, "sceneLoaded");
  sceneUnloaded=lfv(this.handle, "sceneUnloaded");
  activeSceneChanged=lfv(this.handle, "activeSceneChanged");
  constructor(e) {
    super(e);
  }
  static get_sceneCount() {
    return Il2Cpp.Api.SceneManager._get_sceneCount();
  }
  static GetActiveScene() {
    return Il2Cpp.Api.SceneManager._GetActiveScene();
  }
  static SetActiveScene(e) {
    return Il2Cpp.Api.SceneManager._SetActiveScene(e);
  }
  static GetSceneByName(e) {
    return Il2Cpp.Api.SceneManager._GetSceneByName(e);
  }
  static GetSceneAt(e) {
    return Il2Cpp.Api.SceneManager._GetSceneAt(e);
  }
  static CreateScene(e, n) {
    return Il2Cpp.Api.SceneManager._CreateScene(allocUStr(e), n);
  }
  static UnloadSceneAsyncInternal(e, n) {
    return Il2Cpp.Api.SceneManager._UnloadSceneAsyncInternal(e, n);
  }
  static LoadSceneAsyncNameIndexInternal(e, n, t, c) {
    return Il2Cpp.Api.SceneManager._LoadSceneAsyncNameIndexInternal(e, n, t, c);
  }
  static UnloadSceneNameIndexInternal(e, n, t, c, a) {
    return Il2Cpp.Api.SceneManager._UnloadSceneNameIndexInternal(e, n, t, c, a);
  }
  static CreateScene_1(e) {
    return Il2Cpp.Api.SceneManager._CreateScene(e);
  }
  static LoadScene(e, n) {
    return Il2Cpp.Api.SceneManager._LoadScene(e, n);
  }
  static LoadScene_string_Para(e, n) {
    return Il2Cpp.Api.SceneManager._LoadScene(e, n);
  }
  static LoadScene_string_Mode(e, n) {
    return Il2Cpp.Api.SceneManager._LoadScene(e, n);
  }
  static LoadScene_Int_Para(e, n) {
    return Il2Cpp.Api.SceneManager._LoadScene(e, n);
  }
  static LoadSceneAsync(e, n) {
    return Il2Cpp.Api.SceneManager._LoadSceneAsync(e, n);
  }
  static LoadSceneAsync_2(e, n) {
    return Il2Cpp.Api.SceneManager._LoadSceneAsync(e, n);
  }
  static UnloadSceneAsync(e) {
    return Il2Cpp.Api.SceneManager._UnloadSceneAsync(e);
  }
  static UnloadSceneAsync_1(e) {
    return Il2Cpp.Api.SceneManager._UnloadSceneAsync(e);
  }
  static Internal_SceneLoaded(e, n) {
    return Il2Cpp.Api.SceneManager._Internal_SceneLoaded(e, n);
  }
  static Internal_SceneUnloaded(e) {
    return Il2Cpp.Api.SceneManager._Internal_SceneUnloaded(e);
  }
  static Internal_ActiveSceneChanged(e, n) {
    return Il2Cpp.Api.SceneManager._Internal_ActiveSceneChanged(e, n);
  }
  static _cctor() {
    return Il2Cpp.Api.SceneManager.__cctor();
  }
  static GetActiveScene_Injected(e) {
    return Il2Cpp.Api.SceneManager._GetActiveScene_Injected(e);
  }
  static SetActiveScene_Injected(e) {
    return Il2Cpp.Api.SceneManager._SetActiveScene_Injected(e);
  }
  static GetSceneByName_Injected(e, n) {
    return Il2Cpp.Api.SceneManager._GetSceneByName_Injected(e, n);
  }
  static GetSceneAt_Injected(e, n) {
    return Il2Cpp.Api.SceneManager._GetSceneAt_Injected(e, n);
  }
  static CreateScene_Injected(e, n, t) {
    return Il2Cpp.Api.SceneManager._CreateScene_Injected(e, n, t);
  }
  static UnloadSceneAsyncInternal_Injected(e, n) {
    return Il2Cpp.Api.SceneManager._UnloadSceneAsyncInternal_Injected(e, n);
  }
}

exports.SceneManager_Impl = n, Il2Cpp.SceneManager = n;

},{"../class":468}],340:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), globalThis.HookLoadScene = () => {
  A(Il2Cpp.Api.SceneManager._LoadScene, ((e, a) => {
    LOGD(`[*] LoadScene( sceneName = '${readU16(e[0])}' )`);
  })), A(Il2Cpp.Api.SceneManager._LoadScene, ((e, a) => {
    LOGD(`[*] LoadScene( sceneName = '${readU16(e[0])}' )`);
  })), A(Il2Cpp.Api.SceneManager._LoadScene_sceneName_parameters, ((e, a) => {
    LOGZ(`\t[*] LoadScene( sceneName = '${readU16(e[0])}', LoadSceneParameters = '${e[1]}' )`);
  }));
};

},{}],341:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":338,"./class":339,"./export":340}],342:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, c = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (c = (o < 3 ? r(c) : o > 3 ? r(t, n, c) : r(t, n)) || c);
  return o > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_width() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "get_width", 0, [], "pointer", []);
  }
  static get _get_height() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "get_height", 0, [], "pointer", []);
  }
  static get _get_dpi() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "get_dpi", 0, [], "pointer", []);
  }
  static get _GetScreenOrientation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "GetScreenOrientation", 0, [], "pointer", []);
  }
  static get _get_orientation() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "get_orientation", 0, [], "pointer", []);
  }
  static get _set_sleepTimeout() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "set_sleepTimeout", 1, [ "System.Int32" ], "void", [ "pointer" ]);
  }
  static get _get_fullScreenMode() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Screen", "get_fullScreenMode", 0, [], "pointer", []);
  }
}

e([ t.cache ], n, "_get_width", null), e([ t.cache ], n, "_get_height", null), e([ t.cache ], n, "_get_dpi", null), 
e([ t.cache ], n, "_GetScreenOrientation", null), e([ t.cache ], n, "_get_orientation", null), 
e([ t.cache ], n, "_set_sleepTimeout", null), e([ t.cache ], n, "_get_fullScreenMode", null), 
Il2Cpp.Api.Screen = n;

},{"decorator-cache-getter":513}],343:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Screen_Impl = void 0;

const e = require("../../../../bridge/fix/enum"), t = require("../class");

class n extends t.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  static get_width() {
    return Il2Cpp.Api.Screen._get_width().toInt32();
  }
  static get_height() {
    return Il2Cpp.Api.Screen._get_height().toInt32();
  }
  static get_dpi() {
    return readSingle(Il2Cpp.Api.Screen._get_dpi());
  }
  static GetScreenOrientation() {
    return Il2Cpp.Api.Screen._GetScreenOrientation();
  }
  static GetScreenOrientation_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.Screen._GetScreenOrientation(), "ScreenOrientation");
  }
  static get_fullScreenMode() {
    return Il2Cpp.Api.Screen._get_fullScreenMode();
  }
  static get_fullScreenMode_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.Screen._get_fullScreenMode(), "FullScreenMode");
  }
  static get_orientation() {
    return Il2Cpp.Api.Screen._get_orientation();
  }
  static get_orientation_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.Screen._get_orientation(), "ScreenOrientation");
  }
  static set_sleepTimeout(e) {
    return Il2Cpp.Api.Screen._set_sleepTimeout(e);
  }
}

exports.UnityEngine_Screen_Impl = n, Il2Cpp.Screen = n;

},{"../../../../bridge/fix/enum":19,"../class":468}],344:[function(require,module,exports){
"use strict";

var e, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ScreenOrientation = exports.UnityEngine_FullScreenMode = void 0, 
function(e) {
  e[e.ExclusiveFullScreen = 0] = "ExclusiveFullScreen", e[e.FullScreenWindow = 1] = "FullScreenWindow", 
  e[e.MaximizedWindow = 2] = "MaximizedWindow", e[e.Windowed = 3] = "Windowed";
}(e = exports.UnityEngine_FullScreenMode || (exports.UnityEngine_FullScreenMode = {})), 
function(e) {
  e[e.AutoRotation = 5] = "AutoRotation", e[e.Landscape = 3] = "Landscape", e[e.LandscapeLeft = 3] = "LandscapeLeft", 
  e[e.LandscapeRight = 4] = "LandscapeRight", e[e.Portrait = 1] = "Portrait", e[e.PortraitUpsideDown = 2] = "PortraitUpsideDown", 
  e[e.Unknown = 0] = "Unknown";
}(n = exports.UnityEngine_ScreenOrientation || (exports.UnityEngine_ScreenOrientation = {}));

},{}],345:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":342,"./class":343,"./enum":344}],346:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var s = e.length - 1; s >= 0; s--) (r = e[s]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_operatingSystem() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_operatingSystem", 0, [], "pointer", []);
  }
  static get _get_operatingSystemFamily() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_operatingSystemFamily", 0, [], "pointer", []);
  }
  static get _get_processorType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_processorType", 0, [], "pointer", []);
  }
  static get _get_deviceUniqueIdentifier() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceUniqueIdentifier", 0, [], "pointer", []);
  }
  static get _get_deviceName() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceName", 0, [], "pointer", []);
  }
  static get _get_deviceModel() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceModel", 0, [], "pointer", []);
  }
  static get _get_deviceType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceType", 0, [], "pointer", []);
  }
  static get _get_graphicsMemorySize() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsMemorySize", 0, [], "pointer", []);
  }
  static get _get_graphicsDeviceVendor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceVendor", 0, [], "pointer", []);
  }
  static get _get_graphicsDeviceType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceType", 0, [], "pointer", []);
  }
  static get _get_graphicsUVStartsAtTop() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsUVStartsAtTop", 0, [], "pointer", []);
  }
  static get _get_graphicsDeviceVersion() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceVersion", 0, [], "pointer", []);
  }
  static get _get_graphicsShaderLevel() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsShaderLevel", 0, [], "pointer", []);
  }
  static get _get_hasHiddenSurfaceRemovalOnGPU() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_hasHiddenSurfaceRemovalOnGPU", 0, [], "pointer", []);
  }
  static get _get_supportsShadows() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsShadows", 0, [], "pointer", []);
  }
  static get _get_copyTextureSupport() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_copyTextureSupport", 0, [], "pointer", []);
  }
  static get _get_supportsRenderTargetArrayIndexFromVertexShader() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsRenderTargetArrayIndexFromVertexShader", 0, [], "pointer", []);
  }
  static get _get_supportedRenderTargetCount() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportedRenderTargetCount", 0, [], "pointer", []);
  }
  static get _get_supportsMultisampledTextures() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsMultisampledTextures", 0, [], "pointer", []);
  }
  static get _get_supportsMultisampleAutoResolve() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsMultisampleAutoResolve", 0, [], "pointer", []);
  }
  static get _get_usesReversedZBuffer() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_usesReversedZBuffer", 0, [], "pointer", []);
  }
  static get _IsValidEnumValue() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "IsValidEnumValue", 1, [ "System.Enum" ], "pointer", [ "pointer" ]);
  }
  static get _SupportsRenderTextureFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsRenderTextureFormat", 1, [ "UnityEngine.RenderTextureFormat" ], "pointer", [ "pointer" ]);
  }
  static get _SupportsTextureFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsTextureFormat", 1, [ "UnityEngine.TextureFormat" ], "pointer", [ "pointer" ]);
  }
  static get _get_supportsGraphicsFence() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsGraphicsFence", 0, [], "pointer", []);
  }
  static get _get_supportsMultiview() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsMultiview", 0, [], "pointer", []);
  }
  static get _get_supportsStoreAndResolveAction() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsStoreAndResolveAction", 0, [], "pointer", []);
  }
  static get _GetOperatingSystem() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetOperatingSystem", 0, [], "pointer", []);
  }
  static get _GetOperatingSystemFamily() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetOperatingSystemFamily", 0, [], "pointer", []);
  }
  static get _GetProcessorType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetProcessorType", 0, [], "pointer", []);
  }
  static get _GetDeviceUniqueIdentifier() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceUniqueIdentifier", 0, [], "pointer", []);
  }
  static get _GetDeviceName() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceName", 0, [], "pointer", []);
  }
  static get _GetDeviceModel() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceModel", 0, [], "pointer", []);
  }
  static get _GetDeviceType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceType", 0, [], "pointer", []);
  }
  static get _GetGraphicsMemorySize() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsMemorySize", 0, [], "pointer", []);
  }
  static get _GetGraphicsDeviceVendor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceVendor", 0, [], "pointer", []);
  }
  static get _GetGraphicsDeviceType() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceType", 0, [], "pointer", []);
  }
  static get _GetGraphicsUVStartsAtTop() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsUVStartsAtTop", 0, [], "pointer", []);
  }
  static get _GetGraphicsDeviceVersion() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceVersion", 0, [], "pointer", []);
  }
  static get _GetGraphicsShaderLevel() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsShaderLevel", 0, [], "pointer", []);
  }
  static get _HasHiddenSurfaceRemovalOnGPU() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "HasHiddenSurfaceRemovalOnGPU", 0, [], "pointer", []);
  }
  static get _SupportsShadows() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsShadows", 0, [], "pointer", []);
  }
  static get _GetCopyTextureSupport() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetCopyTextureSupport", 0, [], "pointer", []);
  }
  static get _SupportsRenderTargetArrayIndexFromVertexShader() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsRenderTargetArrayIndexFromVertexShader", 0, [], "pointer", []);
  }
  static get _SupportedRenderTargetCount() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportedRenderTargetCount", 0, [], "pointer", []);
  }
  static get _SupportsMultisampledTextures() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsMultisampledTextures", 0, [], "pointer", []);
  }
  static get _SupportsMultisampleAutoResolve() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsMultisampleAutoResolve", 0, [], "pointer", []);
  }
  static get _UsesReversedZBuffer() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "UsesReversedZBuffer", 0, [], "pointer", []);
  }
  static get _HasRenderTextureNative() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "HasRenderTextureNative", 1, [ "UnityEngine.RenderTextureFormat" ], "pointer", [ "pointer" ]);
  }
  static get _SupportsTextureFormatNative() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsTextureFormatNative", 1, [ "UnityEngine.TextureFormat" ], "pointer", [ "pointer" ]);
  }
  static get _SupportsGPUFence() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsGPUFence", 0, [], "pointer", []);
  }
  static get _IsFormatSupported() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "IsFormatSupported", 2, [ "UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.FormatUsage" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetCompatibleFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetCompatibleFormat", 2, [ "UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.FormatUsage" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetGraphicsFormat() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsFormat", 1, [ "UnityEngine.Experimental.Rendering.DefaultFormat" ], "pointer", [ "pointer" ]);
  }
  static get _GetRenderTextureSupportedMSAASampleCount() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetRenderTextureSupportedMSAASampleCount", 1, [ "UnityEngine.RenderTextureDescriptor" ], "pointer", [ "pointer" ]);
  }
  static get _SupportsMultiview() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsMultiview", 0, [], "pointer", []);
  }
  static get _SupportsStoreAndResolveAction() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsStoreAndResolveAction", 0, [], "pointer", []);
  }
  static get _GetRenderTextureSupportedMSAASampleCount_Injected() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetRenderTextureSupportedMSAASampleCount_Injected", 1, [ "UnityEngine.RenderTextureDescriptor&" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_operatingSystem", null), e([ t.cache ], n, "_get_operatingSystemFamily", null), 
e([ t.cache ], n, "_get_processorType", null), e([ t.cache ], n, "_get_deviceUniqueIdentifier", null), 
e([ t.cache ], n, "_get_deviceName", null), e([ t.cache ], n, "_get_deviceModel", null), 
e([ t.cache ], n, "_get_deviceType", null), e([ t.cache ], n, "_get_graphicsMemorySize", null), 
e([ t.cache ], n, "_get_graphicsDeviceVendor", null), e([ t.cache ], n, "_get_graphicsDeviceType", null), 
e([ t.cache ], n, "_get_graphicsUVStartsAtTop", null), e([ t.cache ], n, "_get_graphicsDeviceVersion", null), 
e([ t.cache ], n, "_get_graphicsShaderLevel", null), e([ t.cache ], n, "_get_hasHiddenSurfaceRemovalOnGPU", null), 
e([ t.cache ], n, "_get_supportsShadows", null), e([ t.cache ], n, "_get_copyTextureSupport", null), 
e([ t.cache ], n, "_get_supportsRenderTargetArrayIndexFromVertexShader", null), 
e([ t.cache ], n, "_get_supportedRenderTargetCount", null), e([ t.cache ], n, "_get_supportsMultisampledTextures", null), 
e([ t.cache ], n, "_get_supportsMultisampleAutoResolve", null), e([ t.cache ], n, "_get_usesReversedZBuffer", null), 
e([ t.cache ], n, "_IsValidEnumValue", null), e([ t.cache ], n, "_SupportsRenderTextureFormat", null), 
e([ t.cache ], n, "_SupportsTextureFormat", null), e([ t.cache ], n, "_get_supportsGraphicsFence", null), 
e([ t.cache ], n, "_get_supportsMultiview", null), e([ t.cache ], n, "_get_supportsStoreAndResolveAction", null), 
e([ t.cache ], n, "_GetOperatingSystem", null), e([ t.cache ], n, "_GetOperatingSystemFamily", null), 
e([ t.cache ], n, "_GetProcessorType", null), e([ t.cache ], n, "_GetDeviceUniqueIdentifier", null), 
e([ t.cache ], n, "_GetDeviceName", null), e([ t.cache ], n, "_GetDeviceModel", null), 
e([ t.cache ], n, "_GetDeviceType", null), e([ t.cache ], n, "_GetGraphicsMemorySize", null), 
e([ t.cache ], n, "_GetGraphicsDeviceVendor", null), e([ t.cache ], n, "_GetGraphicsDeviceType", null), 
e([ t.cache ], n, "_GetGraphicsUVStartsAtTop", null), e([ t.cache ], n, "_GetGraphicsDeviceVersion", null), 
e([ t.cache ], n, "_GetGraphicsShaderLevel", null), e([ t.cache ], n, "_HasHiddenSurfaceRemovalOnGPU", null), 
e([ t.cache ], n, "_SupportsShadows", null), e([ t.cache ], n, "_GetCopyTextureSupport", null), 
e([ t.cache ], n, "_SupportsRenderTargetArrayIndexFromVertexShader", null), e([ t.cache ], n, "_SupportedRenderTargetCount", null), 
e([ t.cache ], n, "_SupportsMultisampledTextures", null), e([ t.cache ], n, "_SupportsMultisampleAutoResolve", null), 
e([ t.cache ], n, "_UsesReversedZBuffer", null), e([ t.cache ], n, "_HasRenderTextureNative", null), 
e([ t.cache ], n, "_SupportsTextureFormatNative", null), e([ t.cache ], n, "_SupportsGPUFence", null), 
e([ t.cache ], n, "_IsFormatSupported", null), e([ t.cache ], n, "_GetCompatibleFormat", null), 
e([ t.cache ], n, "_GetGraphicsFormat", null), e([ t.cache ], n, "_GetRenderTextureSupportedMSAASampleCount", null), 
e([ t.cache ], n, "_SupportsMultiview", null), e([ t.cache ], n, "_SupportsStoreAndResolveAction", null), 
e([ t.cache ], n, "_GetRenderTextureSupportedMSAASampleCount_Injected", null), Il2Cpp.Api.SystemInfo = n;

},{"decorator-cache-getter":513}],347:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SystemInfo_Impl = void 0;

const e = require("../../../../bridge/fix/enum"), t = require("../class");

class p extends t.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  static get_operatingSystem() {
    return readU16(Il2Cpp.Api.SystemInfo._get_operatingSystem());
  }
  static get_operatingSystemFamily() {
    return Il2Cpp.Api.SystemInfo._get_operatingSystemFamily();
  }
  static get_operatingSystemFamily_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._get_operatingSystemFamily(), "OperatingSystemFamily");
  }
  static get_processorType() {
    return readU16(Il2Cpp.Api.SystemInfo._get_processorType());
  }
  static get_deviceUniqueIdentifier() {
    return readU16(Il2Cpp.Api.SystemInfo._get_deviceUniqueIdentifier());
  }
  static get_deviceName() {
    return readU16(Il2Cpp.Api.SystemInfo._get_deviceName());
  }
  static get_deviceModel() {
    return readU16(Il2Cpp.Api.SystemInfo._get_deviceModel());
  }
  static get_deviceType() {
    return Il2Cpp.Api.SystemInfo._get_deviceType();
  }
  static get_deviceType_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._get_deviceType(), "DeviceType");
  }
  static get_graphicsMemorySize() {
    return Il2Cpp.Api.SystemInfo._get_graphicsMemorySize().toInt32();
  }
  static get_graphicsDeviceVendor() {
    return readU16(Il2Cpp.Api.SystemInfo._get_graphicsDeviceVendor());
  }
  static get_graphicsDeviceType() {
    return Il2Cpp.Api.SystemInfo._get_graphicsDeviceType();
  }
  static get_graphicsDeviceType_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._get_graphicsDeviceType(), "GraphicsDeviceType");
  }
  static get_graphicsUVStartsAtTop() {
    return 1 == Il2Cpp.Api.SystemInfo._get_graphicsUVStartsAtTop();
  }
  static get_graphicsDeviceVersion() {
    return readU16(Il2Cpp.Api.SystemInfo._get_graphicsDeviceVersion());
  }
  static get_graphicsShaderLevel() {
    return Il2Cpp.Api.SystemInfo._get_graphicsShaderLevel().toInt32();
  }
  static get_hasHiddenSurfaceRemovalOnGPU() {
    return 1 == Il2Cpp.Api.SystemInfo._get_hasHiddenSurfaceRemovalOnGPU();
  }
  static get_supportsShadows() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsShadows();
  }
  static get_copyTextureSupport() {
    return Il2Cpp.Api.SystemInfo._get_copyTextureSupport();
  }
  static get_supportsRenderTargetArrayIndexFromVertexShader() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsRenderTargetArrayIndexFromVertexShader();
  }
  static get_supportedRenderTargetCount() {
    return Il2Cpp.Api.SystemInfo._get_supportedRenderTargetCount();
  }
  static get_supportsMultisampledTextures() {
    return Il2Cpp.Api.SystemInfo._get_supportsMultisampledTextures();
  }
  static get_supportsMultisampleAutoResolve() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsMultisampleAutoResolve();
  }
  static get_usesReversedZBuffer() {
    return 1 == Il2Cpp.Api.SystemInfo._get_usesReversedZBuffer();
  }
  static IsValidEnumValue(e) {
    return 1 == Il2Cpp.Api.SystemInfo._IsValidEnumValue(e);
  }
  static SupportsRenderTextureFormat(e) {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsRenderTextureFormat(e);
  }
  static SupportsTextureFormat(e) {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsTextureFormat(e);
  }
  static get_supportsGraphicsFence() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsGraphicsFence();
  }
  static get_supportsMultiview() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsMultiview();
  }
  static get_supportsStoreAndResolveAction() {
    return 1 == Il2Cpp.Api.SystemInfo._get_supportsStoreAndResolveAction();
  }
  static GetOperatingSystem() {
    return readU16(Il2Cpp.Api.SystemInfo._GetOperatingSystem());
  }
  static GetOperatingSystemFamily() {
    return Il2Cpp.Api.SystemInfo._GetOperatingSystemFamily();
  }
  static GetOperatingSystemFamily_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._GetOperatingSystemFamily(), "OperatingSystemFamily");
  }
  static GetProcessorType() {
    return readU16(Il2Cpp.Api.SystemInfo._GetProcessorType());
  }
  static GetDeviceUniqueIdentifier() {
    return readU16(Il2Cpp.Api.SystemInfo._GetDeviceUniqueIdentifier());
  }
  static GetDeviceName() {
    return readU16(Il2Cpp.Api.SystemInfo._GetDeviceName());
  }
  static GetDeviceModel() {
    return readU16(Il2Cpp.Api.SystemInfo._GetDeviceModel());
  }
  static GetDeviceType() {
    return Il2Cpp.Api.SystemInfo._GetDeviceType();
  }
  static GetDeviceType_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._GetDeviceType(), "DeviceType");
  }
  static GetGraphicsMemorySize() {
    return Il2Cpp.Api.SystemInfo._GetGraphicsMemorySize().toInt32();
  }
  static GetGraphicsDeviceVendor() {
    return readU16(Il2Cpp.Api.SystemInfo._GetGraphicsDeviceVendor());
  }
  static GetGraphicsDeviceType() {
    return Il2Cpp.Api.SystemInfo._GetGraphicsDeviceType();
  }
  static GetGraphicsDeviceType_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._GetGraphicsDeviceType(), "GraphicsDeviceType");
  }
  static GetGraphicsUVStartsAtTop() {
    return 1 == Il2Cpp.Api.SystemInfo._GetGraphicsUVStartsAtTop();
  }
  static GetGraphicsDeviceVersion() {
    return readU16(Il2Cpp.Api.SystemInfo._GetGraphicsDeviceVersion());
  }
  static GetGraphicsShaderLevel() {
    return Il2Cpp.Api.SystemInfo._GetGraphicsShaderLevel().toInt32();
  }
  static HasHiddenSurfaceRemovalOnGPU() {
    return 1 == Il2Cpp.Api.SystemInfo._HasHiddenSurfaceRemovalOnGPU();
  }
  static SupportsShadows() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsShadows();
  }
  static GetCopyTextureSupport() {
    return Il2Cpp.Api.SystemInfo._GetCopyTextureSupport();
  }
  static GetCopyTextureSupport_toString() {
    return (0, e.enumNumToName)(Il2Cpp.Api.SystemInfo._GetCopyTextureSupport(), "CopyTextureSupport");
  }
  static SupportsRenderTargetArrayIndexFromVertexShader() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsRenderTargetArrayIndexFromVertexShader();
  }
  static SupportedRenderTargetCount() {
    return Il2Cpp.Api.SystemInfo._SupportedRenderTargetCount().toInt32();
  }
  static SupportsMultisampledTextures() {
    return Il2Cpp.Api.SystemInfo._SupportsMultisampledTextures().toInt32();
  }
  static SupportsMultisampleAutoResolve() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsMultisampleAutoResolve();
  }
  static UsesReversedZBuffer() {
    return Il2Cpp.Api.SystemInfo._UsesReversedZBuffer();
  }
  static HasRenderTextureNative(e) {
    return 1 == Il2Cpp.Api.SystemInfo._HasRenderTextureNative(e);
  }
  static SupportsTextureFormatNative(e) {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsTextureFormatNative(e);
  }
  static SupportsGPUFence() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsGPUFence();
  }
  static IsFormatSupported(e, t) {
    return 1 == Il2Cpp.Api.SystemInfo._IsFormatSupported(e, t);
  }
  static GetCompatibleFormat(e, t) {
    return Il2Cpp.Api.SystemInfo._GetCompatibleFormat(e, t);
  }
  static GetGraphicsFormat(e) {
    return Il2Cpp.Api.SystemInfo._GetGraphicsFormat(e);
  }
  static GetRenderTextureSupportedMSAASampleCount(e) {
    return Il2Cpp.Api.SystemInfo._GetRenderTextureSupportedMSAASampleCount(e);
  }
  static SupportsMultiview() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsMultiview();
  }
  static SupportsStoreAndResolveAction() {
    return 1 == Il2Cpp.Api.SystemInfo._SupportsStoreAndResolveAction();
  }
  static GetRenderTextureSupportedMSAASampleCount_Injected(e) {
    return Il2Cpp.Api.SystemInfo._GetRenderTextureSupportedMSAASampleCount_Injected(e);
  }
}

exports.UnityEngine_SystemInfo_Impl = p, Il2Cpp.SystemInfo = p;

},{"../../../../bridge/fix/enum":19,"../class":468}],348:[function(require,module,exports){
"use strict";

var e, t, o, a, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.GraphicsDeviceType = exports.OperatingSystemFamily = exports.DeviceType = exports.CopyTextureSupport = exports.RenderTextureFormat = void 0, 
function(e) {
  e[e.ARGB1555 = 6] = "ARGB1555", e[e.ARGB2101010 = 8] = "ARGB2101010", e[e.ARGB32 = 0] = "ARGB32", 
  e[e.ARGB4444 = 5] = "ARGB4444", e[e.ARGB64 = 10] = "ARGB64", e[e.ARGBFloat = 11] = "ARGBFloat", 
  e[e.ARGBHalf = 2] = "ARGBHalf", e[e.ARGBInt = 17] = "ARGBInt", e[e.BGR101010_XR = 27] = "BGR101010_XR", 
  e[e.BGRA10101010_XR = 26] = "BGRA10101010_XR", e[e.BGRA32 = 20] = "BGRA32", e[e.Default = 7] = "Default", 
  e[e.DefaultHDR = 9] = "DefaultHDR", e[e.Depth = 1] = "Depth", e[e.R16 = 28] = "R16", 
  e[e.R8 = 16] = "R8", e[e.RFloat = 14] = "RFloat", e[e.RG16 = 25] = "RG16", e[e.RG32 = 23] = "RG32", 
  e[e.RGB111110Float = 22] = "RGB111110Float", e[e.RGB565 = 4] = "RGB565", e[e.RGBAUShort = 24] = "RGBAUShort", 
  e[e.RGFloat = 12] = "RGFloat", e[e.RGHalf = 13] = "RGHalf", e[e.RGInt = 18] = "RGInt", 
  e[e.RHalf = 15] = "RHalf", e[e.RInt = 19] = "RInt", e[e.Shadowmap = 3] = "Shadowmap";
}(e = exports.RenderTextureFormat || (exports.RenderTextureFormat = {})), function(e) {
  e[e.Basic = 1] = "Basic", e[e.Copy3D = 2] = "Copy3D", e[e.DifferentTypes = 4] = "DifferentTypes", 
  e[e.None = 0] = "None", e[e.RTToTexture = 16] = "RTToTexture", e[e.TextureToRT = 8] = "TextureToRT";
}(t = exports.CopyTextureSupport || (exports.CopyTextureSupport = {})), function(e) {
  e[e.Console = 2] = "Console", e[e.Desktop = 3] = "Desktop", e[e.Handheld = 1] = "Handheld", 
  e[e.Unknown = 0] = "Unknown";
}(o = exports.DeviceType || (exports.DeviceType = {})), function(e) {
  e[e.Linux = 3] = "Linux", e[e.MacOSX = 1] = "MacOSX", e[e.Other = 0] = "Other", 
  e[e.Windows = 2] = "Windows";
}(a = exports.OperatingSystemFamily || (exports.OperatingSystemFamily = {})), function(e) {
  e[e.Null = 4] = "Null", e[e.Direct3D9 = 1] = "Direct3D9", e[e.Direct3D11 = 2] = "Direct3D11", 
  e[e.PlayStation3 = 3] = "PlayStation3", e[e.Xbox360 = 6] = "Xbox360", e[e.OpenGL2 = 0] = "OpenGL2", 
  e[e.OpenGLES2 = 8] = "OpenGLES2", e[e.OpenGLES3 = 11] = "OpenGLES3", e[e.PlayStationVita = 12] = "PlayStationVita", 
  e[e.PlayStation4 = 13] = "PlayStation4", e[e.XboxOne = 14] = "XboxOne", e[e.Vulkan = 21] = "Vulkan", 
  e[e.Switch = 22] = "Switch", e[e.XboxOneD3D12 = 23] = "XboxOneD3D12", e[e.GameCoreXboxOne = 24] = "GameCoreXboxOne", 
  e[e.GameCoreXboxSeries = 25] = "GameCoreXboxSeries", e[e.Metal = 16] = "Metal", 
  e[e.OpenGLCore = 17] = "OpenGLCore", e[e.Direct3D12 = 18] = "Direct3D12", e[e.N3DS = 19] = "N3DS", 
  e[e.PlayStationMobile = 15] = "PlayStationMobile", e[e.PlayStation5 = 26] = "PlayStation5", 
  e[e.PlayStation5NGGC = 27] = "PlayStation5NGGC";
}(n = exports.GraphicsDeviceType || (exports.GraphicsDeviceType = {}));

},{}],349:[function(require,module,exports){
"use strict";

function e() {
  LOGE(`${getLine(20)} SystemInfo ${getLine(20)}`), LOGD(`[*] deviceModel\t\t\t\t${Il2Cpp.SystemInfo.get_deviceModel()}\n${getLine(20)}`), 
  LOGD(`[*] deviceName\t\t\t\t${Il2Cpp.SystemInfo.get_deviceName()}\n${getLine(20)}`), 
  LOGD(`[*] deviceType\t\t\t\t${Il2Cpp.SystemInfo.get_deviceType_toString()}\n${getLine(20)}`), 
  LOGD(`[*] graphicsDeviceVendor\t\t${Il2Cpp.SystemInfo.get_graphicsDeviceVendor()}\n${getLine(20)}`), 
  LOGD(`[*] getgraphicsUVStartsAtTop\t\t${Il2Cpp.SystemInfo.get_graphicsUVStartsAtTop()}\n${getLine(20)}`), 
  LOGD(`[*] hasHiddenSurfaceRemovalOnGPU\t${Il2Cpp.SystemInfo.get_hasHiddenSurfaceRemovalOnGPU()}\n${getLine(20)}`), 
  LOGD(`[*] deviceUniqueIdentifier\t\t${Il2Cpp.SystemInfo.get_deviceUniqueIdentifier()}\n${getLine(20)}`), 
  LOGD(`[*] graphicsDeviceVersion\t\t${Il2Cpp.SystemInfo.get_graphicsDeviceVersion()}\n${getLine(20)}`), 
  LOGD(`[*] graphicsShaderLevel\t\t\t${Il2Cpp.SystemInfo.get_graphicsShaderLevel()}\n${getLine(20)}`), 
  LOGD(`[*] graphicsMemorySize\t\t\t${Il2Cpp.SystemInfo.get_graphicsMemorySize()}\n${getLine(20)}`), 
  LOGD(`[*] operatingSystem\t\t\t${Il2Cpp.SystemInfo.get_operatingSystem()}\n${getLine(20)}`), 
  LOGD(`[*] operatingSystemFamily\t\t${Il2Cpp.SystemInfo.get_operatingSystemFamily_toString()}\n${getLine(20)}`), 
  LOGD(`[*] processorType\t\t\t${Il2Cpp.SystemInfo.get_processorType()}\n${getLine(20)}`), 
  LOGD(`[*] supportedRenderTargetCount\t\t${Il2Cpp.SystemInfo.get_supportedRenderTargetCount()}\n${getLine(20)}`), 
  LOGD(`[*] supportsMultisampledTextures\t${Il2Cpp.SystemInfo.get_supportsMultisampledTextures()}\n${getLine(20)}`), 
  LOGD(`[*] supportsGPUFence\t\t\t${Il2Cpp.SystemInfo.SupportsGPUFence()}\n${getLine(20)}`), 
  LOGD(`[*] supportsGraphicsFence\t\t${Il2Cpp.SystemInfo.get_supportsGraphicsFence()}\n${getLine(20)}`), 
  LOGD(`[*] supportsShadows\t\t\t${Il2Cpp.SystemInfo.SupportsShadows()}\n${getLine(20)}`), 
  LOGD(`[*] supportsMultisampleAutoResolve\t${Il2Cpp.SystemInfo.SupportsMultisampleAutoResolve()}\n${getLine(20)}`), 
  LOGD(`[*] SupportsMultiview\t\t\t${Il2Cpp.SystemInfo.SupportsMultiview()}\n${getLine(20)}`), 
  LOGD(`[*] SupportsStoreAndResolveAction\t${Il2Cpp.SystemInfo.SupportsStoreAndResolveAction()}\n${getLine(20)}`);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.SystemInfo = void 0, exports.SystemInfo = e;

},{}],350:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum"), require("./export");

},{"./api":346,"./class":347,"./enum":348,"./export":349}],351:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, n) {
  var l, a = arguments.length, c = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, i, n); else for (var g = e.length - 1; g >= 0; g--) (l = e[g]) && (c = (a < 3 ? l(c) : a > 3 ? l(t, i, c) : l(t, i)) || c);
  return a > 3 && c && Object.defineProperty(t, i, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get _get_time() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_time", 0, "float", []);
  }
  static get _get_deltaTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_deltaTime", 0, "float", []);
  }
  static get _get_unscaledTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_unscaledTime", 0, "float", []);
  }
  static get _get_fixedUnscaledTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_fixedUnscaledTime", 0, "float", []);
  }
  static get _get_unscaledDeltaTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_unscaledDeltaTime", 0, "float", []);
  }
  static get _get_fixedDeltaTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_fixedDeltaTime", 0, "float", []);
  }
  static get _get_smoothDeltaTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_smoothDeltaTime", 0, "float", []);
  }
  static get _get_timeScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_timeScale", 0, "float", []);
  }
  static get _set_timeScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "set_timeScale", 1, "void", [ "float" ]);
  }
  static get _get_frameCount() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_frameCount", 0, "int", []);
  }
  static get _get_realtimeSinceStartup() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_realtimeSinceStartup", 0, "float", []);
  }
  static get _get_timeSinceLevelLoad() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_timeSinceLevelLoad", 0, "float", []);
  }
  static get _get_fixedTime() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_fixedTime", 0, "float", []);
  }
  static get _get_fixedTimeScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Time", "get_fixedTimeScale", 0, "float", []);
  }
}

e([ t.cache ], i, "_get_time", null), e([ t.cache ], i, "_get_deltaTime", null), 
e([ t.cache ], i, "_get_unscaledTime", null), e([ t.cache ], i, "_get_fixedUnscaledTime", null), 
e([ t.cache ], i, "_get_unscaledDeltaTime", null), e([ t.cache ], i, "_get_fixedDeltaTime", null), 
e([ t.cache ], i, "_get_smoothDeltaTime", null), e([ t.cache ], i, "_get_timeScale", null), 
e([ t.cache ], i, "_set_timeScale", null), e([ t.cache ], i, "_get_frameCount", null), 
e([ t.cache ], i, "_get_realtimeSinceStartup", null), e([ t.cache ], i, "_get_timeSinceLevelLoad", null), 
e([ t.cache ], i, "_get_fixedTime", null), e([ t.cache ], i, "_get_fixedTimeScale", null), 
Il2Cpp.Api.Time = i;

},{"decorator-cache-getter":513}],352:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Time_impl = void 0;

class e extends Il2Cpp.Object {
  static get get_time() {
    return Il2Cpp.Api.Time._get_time();
  }
  static get get_deltaTime() {
    return Il2Cpp.Api.Time._get_deltaTime();
  }
  static get get_unscaledTime() {
    return Il2Cpp.Api.Time._get_unscaledTime();
  }
  static get get_fixedUnscaledTime() {
    return Il2Cpp.Api.Time._get_fixedUnscaledTime();
  }
  static get get_unscaledDeltaTime() {
    return Il2Cpp.Api.Time._get_unscaledDeltaTime();
  }
  static get get_fixedDeltaTime() {
    try {
      return Il2Cpp.Api.Time._get_fixedDeltaTime();
    } catch (e) {
      return -1;
    }
  }
  static get get_smoothDeltaTime() {
    return Il2Cpp.Api.Time._get_smoothDeltaTime();
  }
  static get get_timeScale() {
    return Il2Cpp.Api.Time._get_timeScale();
  }
  static set_timeScale(e) {
    Il2Cpp.Api.Time._set_timeScale(e);
  }
  static get get_frameCount() {
    return Il2Cpp.Api.Time._get_frameCount();
  }
  static get get_realtimeSinceStartup() {
    return Il2Cpp.Api.Time._get_realtimeSinceStartup();
  }
}

exports.UnityEngine_Time_impl = e, Il2Cpp.Time = e;

},{}],353:[function(require,module,exports){
"use strict";

function e() {
  LOG(`${getLine(20)} TIME ${getLine(20)}`, LogColor.RED), LOGD(`[*] get_time\t\t\t\t${Il2Cpp.Time.get_time}\n${getLine(20)}`), 
  LOGD(`[*] get_deltaTime\t\t\t${Il2Cpp.Time.get_deltaTime}\n${getLine(20)}`), LOGD(`[*] get_fixedDeltaTime\t\t\t${Il2Cpp.Time.get_fixedDeltaTime}\n${getLine(20)}`), 
  LOGD(`[*] get_realtimeSinceStartup\t\t${Il2Cpp.Time.get_realtimeSinceStartup}\n${getLine(20)}`), 
  LOGD(`[*] get_smoothDeltaTime\t\t\t${Il2Cpp.Time.get_smoothDeltaTime}\n${getLine(20)}`), 
  LOGD(`[*] get_timeScale\t\t\t${Il2Cpp.Time.get_timeScale}\n${getLine(20)}`), LOGD(`[*] get_unscaledDeltaTime\t\t${Il2Cpp.Time.get_unscaledDeltaTime}\n${getLine(20)}`), 
  LOGD(`[*] get_frameCount\t\t\t${Il2Cpp.Time.get_frameCount}\n${getLine(20)}`);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Time = void 0, exports.Time = e;

},{}],354:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":351,"./class":352,"./export":353}],355:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, p) {
  var n, o = arguments.length, i = o < 3 ? t : null === p ? p = Object.getOwnPropertyDescriptor(t, r) : p;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, p); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (i = (o < 3 ? n(i) : o > 3 ? n(t, r, i) : n(t, r)) || i);
  return o > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _Equals_obj() {
    return Il2Cpp.Api.o("mscorlib", "System.Type", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_type() {
    return Il2Cpp.Api.o("mscorlib", "System.Type", "Equals", 1, [ "System.Type" ], "bool", [ "pointer", "pointer" ]);
  }
  static get _GetArrayRank() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetArrayRank", 0, "int", [ "pointer" ]);
  }
  static get _GetConstructor() {
    return Il2Cpp.Api.o("mscorlib", "System.Type", "GetConstructor", 1, [ "System.Type[]" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetEnumName() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetEnumName", 0, "pointer", [ "pointer" ]);
  }
  static get _GetEnumNames() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetEnumNames", 0, "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetHashCode", 0, "int", [ "pointer" ]);
  }
  static get _GetType_0() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetType", 0, "pointer", [ "pointer" ]);
  }
  static get _GetType_1() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "GetType", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("mscorlib", "System.Type", "ToString", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], r, "_Equals_obj", null), e([ t.cache ], r, "_Equals_type", null), 
e([ t.cache ], r, "_GetArrayRank", null), e([ t.cache ], r, "_GetConstructor", null), 
e([ t.cache ], r, "_GetEnumName", null), e([ t.cache ], r, "_GetEnumNames", null), 
e([ t.cache ], r, "_GetHashCode", null), e([ t.cache ], r, "_GetType_0", null), 
e([ t.cache ], r, "_GetType_1", null), e([ t.cache ], r, "_ToString", null), mscorlib.Api.Type = r;

},{"decorator-cache-getter":513}],356:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_Type_impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  Delimiter=lfvt(this.handle, "Delimiter", findClass("Type"));
  EmptyTypes=lfvt(this.handle, "EmptyTypes", findClass("Type"));
  FilterAttribute=lfvt(this.handle, "FilterAttribute", findClass("Type"));
  FilterName=lfvt(this.handle, "FilterName", findClass("Type"));
  FilterNameIgnoreCase=lfvt(this.handle, "FilterNameIgnoreCase", findClass("Type"));
  Missing=new mscorlib.Object(lfvt(this.handle, "Missing", findClass("Type")));
  Equals_obj(e) {
    return mscorlib.Api.Type._Equals_obj(this.handle, e);
  }
  Equals_type(e) {
    return mscorlib.Api.Type._Equals_type(this.handle, e.handle);
  }
  GetArrayRank() {
    return mscorlib.Api.Type._GetArrayRank(this.handle).toInt32();
  }
  GetConstructor(e) {
    return mscorlib.Api.Type._GetConstructor(this.handle, e[0].handle);
  }
  GetEnumName(e) {
    return readU16(mscorlib.Api.Type._GetEnumName(this.handle, e));
  }
  GetEnumNames() {
    return mscorlib.Api.Type._GetEnumNames(this.handle);
  }
  GetHashCode() {
    return mscorlib.Api.Type._GetHashCode(this.handle).toInt32();
  }
  GetType_0() {
    return new t(mscorlib.Api.Type._GetType_0(this.handle));
  }
  GetType_1(e) {
    return new t(mscorlib.Api.Type._GetType_1(this.handle, e));
  }
  toString() {
    return `${this.handle} -> ${readU16(mscorlib.Api.Type._ToString(this.handle))}`;
  }
  get name() {
    return this.toString().split("Type: ")[1];
  }
  get class() {
    return findClass(this.name);
  }
  get caseToRuntimeType() {
    return new mscorlib.RuntimeType(this.handle);
  }
}

exports.mscorlib_System_Type_impl = t, mscorlib.Type = t;

},{"../class":468}],357:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":355,"./class":356}],358:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_UI_Button_ButtonClickedEvent_Impl = void 0;

const t = require("../class");

class e extends t.UnityEngine_Events_UnityEvent_Impl {
  constructor(t) {
    super(t);
  }
}

exports.UnityEngine_UI_Button_ButtonClickedEvent_Impl = e, Il2Cpp.ButtonClickedEvent = e;

},{"../class":360}],359:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, c = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (o = e[l]) && (c = (r < 3 ? o(c) : r > 3 ? o(t, n, c) : o(t, n)) || c);
  return r > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _AddListener() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "AddListener", 1, [ "UnityEngine.Events.UnityAction" ], "void", [ "pointer", "pointer" ]);
  }
  static get _RemoveListener() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "RemoveListener", 1, [ "UnityEngine.Events.UnityAction" ], "void", [ "pointer", "pointer" ]);
  }
  static get _FindMethod_Impl() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "FindMethod_Impl", 2, [ "System.String", "System.Object" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetDelegate() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "GetDelegate", 2, [ "System.Object", "System.Reflection.MethodInfo" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetDelegate_action() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "GetDelegate", 1, [ "UnityEngine.Events.UnityAction" ], "pointer", [ "pointer" ]);
  }
  static get _Invoke() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "Invoke", 0, [], "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_AddListener", null), e([ t.cache ], n, "_RemoveListener", null), 
e([ t.cache ], n, "_FindMethod_Impl", null), e([ t.cache ], n, "_GetDelegate", null), 
e([ t.cache ], n, "_GetDelegate_action", null), e([ t.cache ], n, "_Invoke", null), 
Il2Cpp.Api.UnityEvent = n;

},{"decorator-cache-getter":513}],360:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Events_UnityEvent_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_Events_UnityEventBase_Impl {
  m_InvokeArray=lfv(this.handle, "m_InvokeArray");
  constructor(e) {
    super(e);
  }
  _ctor_UnityEvent() {
    return Il2Cpp.Api.UnityEvent.__ctor(this.handle);
  }
  AddListener(e) {
    return Il2Cpp.Api.UnityEvent._AddListener(this.handle, e);
  }
  RemoveListener(e) {
    return Il2Cpp.Api.UnityEvent._RemoveListener(this.handle, e);
  }
  FindMethod_Impl(e, t) {
    return Il2Cpp.Api.UnityEvent._FindMethod_Impl(this.handle, e, t);
  }
  GetDelegate(e, t) {
    return Il2Cpp.Api.UnityEvent._GetDelegate(this.handle, e, t);
  }
  static GetDelegate_1(e) {
    return Il2Cpp.Api.UnityEvent._GetDelegate(e);
  }
  Invoke() {
    return Il2Cpp.Api.UnityEvent._Invoke(this.handle);
  }
}

exports.UnityEngine_Events_UnityEvent_Impl = t, Il2Cpp.UnityEvent = t;

},{"../class":364}],361:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookAddListener = void 0;

const e = require("../../Object/Component/Behavior/MonoBehaviour/UIBehaviour/EventSystem/export"), t = () => {
  let t = Il2Cpp.Api.UnityEvent._AddListener;
  t.isNull() || A(t, (t => {
    let o = new Il2Cpp.Object(t[0]), n = t[1], r = new mscorlib.Delegate(n).toString(), i = (0, 
    e.getEventSystem)().get_currentSelectedGameObject();
    LOGD(`\n[*] HookAddListener : ${getObjName(o.handle)} @ ${o.handle}`), LOGZ(`\tAction\t\t->  ${r}`), 
    null != i && LOGZ(`\tGameObject\t->  ${i.toString()} @ ${i.handle}`);
  }));
};

exports.HookAddListener = t, globalThis.HookAddListener_UnityEvent = exports.HookAddListener;

},{"../../Object/Component/Behavior/MonoBehaviour/UIBehaviour/EventSystem/export":198}],362:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":359,"./class":360,"./export":361}],363:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, l = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (l = (o < 3 ? r(l) : o > 3 ? r(t, n, l) : r(t, n)) || l);
  return o > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _ctor_0() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _AddCall() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "AddCall", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _DirtyPersistentCalls() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "DirtyPersistentCalls", 0, "void", [ "pointer" ]);
  }
  static get _FindMethod() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "FindMethod", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _FindMethod_2() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "FindMethod", 4, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetValidMethodInfo() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "GetValidMethodInfo", 3, "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _PrepareInvoke() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "PrepareInvoke", 0, "pointer", [ "pointer" ]);
  }
  static get _RebuildPersistentCallsIfNeeded() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "RebuildPersistentCallsIfNeeded", 0, "void", [ "pointer" ]);
  }
  static get _RemoveListener() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "RemoveListener", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "ToString", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_ctor_0", null), e([ t.cache ], n, "_AddCall", null), e([ t.cache ], n, "_DirtyPersistentCalls", null), 
e([ t.cache ], n, "_FindMethod", null), e([ t.cache ], n, "_FindMethod_2", null), 
e([ t.cache ], n, "_GetValidMethodInfo", null), e([ t.cache ], n, "_PrepareInvoke", null), 
e([ t.cache ], n, "_RebuildPersistentCallsIfNeeded", null), e([ t.cache ], n, "_RemoveListener", null), 
e([ t.cache ], n, "_ToString", null), mscorlib.Api.UnityEventBase = n;

},{"decorator-cache-getter":513}],364:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEventBase = exports.UnityEngine_Events_UnityEventBase_Impl = void 0;

const e = require("../class"), t = require("../InvokableCallList/class");

class s extends e.mscorlib_System_Object_impl {
  m_Calls=new t.InvokableCallList_impl(lfv(this.handle, "m_Calls", findClass("UnityEventBase", [ "UnityEngine.CoreModule" ])));
  m_CallsDirty=lfv(this.handle, "m_CallsDirty", findClass("UnityEventBase", [ "UnityEngine.CoreModule" ]));
  m_PersistentCalls=lfv(this.handle, "m_PersistentCalls", findClass("UnityEventBase", [ "UnityEngine.CoreModule" ]));
  constructor(e) {
    super(e);
  }
  ctor_UnityEventBase() {
    return new s(mscorlib.Api.UnityEventBase._ctor_0(alloc()));
  }
  AddListener(e) {
    return mscorlib.Api.UnityEventBase._AddCall(this.handle, e);
  }
  DirtyPersistentCalls() {
    return mscorlib.Api.UnityEventBase._DirtyPersistentCalls(this.handle);
  }
  Findmethod(e, t) {
    return mscorlib.Api.UnityEventBase._FindMethod(this.handle, e, t);
  }
  Findmethod_2(e, t) {
    return mscorlib.Api.UnityEventBase._FindMethod_2(this.handle, e, t);
  }
  get_Calls() {
    return this.m_Calls;
  }
  get_CallsDirty() {
    return this.m_CallsDirty;
  }
  get_PersistentCalls() {
    return this.m_PersistentCalls;
  }
}

exports.UnityEngine_Events_UnityEventBase_Impl = s, exports.UnityEventBase = s, 
mscorlib.UnityEventBase = s;

},{"../InvokableCallList/class":142,"../class":468}],365:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./UnityEvent/include");

},{"./UnityEvent/include":362,"./api":363,"./class":364}],366:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (o = e[l]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s);
  return r > 3 && s && Object.defineProperty(t, n, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _GetWebErrorString() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetWebErrorString", 1, [ "UnityEngine.Networking.UnityWebRequest.UnityWebRequestError" ], "pointer", [ "pointer" ]);
  }
  static get _GetHTTPStatusString() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetHTTPStatusString", 1, [ "System.Int64" ], "pointer", [ "pointer" ]);
  }
  static get _get_disposeCertificateHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_disposeCertificateHandlerOnDispose", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_disposeCertificateHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_disposeCertificateHandlerOnDispose", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_disposeDownloadHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_disposeDownloadHandlerOnDispose", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_disposeDownloadHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_disposeDownloadHandlerOnDispose", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_disposeUploadHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_disposeUploadHandlerOnDispose", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_disposeUploadHandlerOnDispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_disposeUploadHandlerOnDispose", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Create() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Create", 0, [], "pointer", []);
  }
  static get _Release() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Release", 0, [], "void", [ "pointer" ]);
  }
  static get _InternalDestroy() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalDestroy", 0, [], "void", [ "pointer" ]);
  }
  static get _InternalSetDefaults() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalSetDefaults", 0, [], "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", ".ctor", 2, [ "System.String", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_url_method_downloadHandler_uploadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", ".ctor", 4, [ "System.String", "System.String", "UnityEngine.Networking.DownloadHandler", "UnityEngine.Networking.UploadHandler" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Finalize", 0, [], "void", [ "pointer" ]);
  }
  static get _Dispose() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Dispose", 0, [], "void", [ "pointer" ]);
  }
  static get _DisposeHandlers() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "DisposeHandlers", 0, [], "void", [ "pointer" ]);
  }
  static get _BeginWebRequest() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "BeginWebRequest", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SendWebRequest() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SendWebRequest", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Abort() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Abort", 0, [], "void", [ "pointer" ]);
  }
  static get _SetMethod() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetMethod", 1, [ "UnityEngine.Networking.UnityWebRequest.UnityWebRequestMethod" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InternalSetMethod() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalSetMethod", 1, [ "UnityEngine.Networking.UnityWebRequest.UnityWebRequestMethod" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetCustomMethod() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetCustomMethod", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InternalSetCustomMethod() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalSetCustomMethod", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _set_method() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_method", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetError() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetError", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_error() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_error", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_url() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_url", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_url() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_url", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _GetUrl() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetUrl", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetUrl() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetUrl", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _InternalSetUrl() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalSetUrl", 1, [ "System.String" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_responseCode() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_responseCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetUploadProgress() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetUploadProgress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsExecuting() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "IsExecuting", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_uploadProgress() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_uploadProgress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isModifiable() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_isModifiable", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isDone() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_isDone", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isNetworkError() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_isNetworkError", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_isHttpError() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_isHttpError", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_result() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_result", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetDownloadProgress() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetDownloadProgress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_downloadProgress() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_downloadProgress", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetChunked() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetChunked", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_chunkedTransfer() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_chunkedTransfer", 1, [ "System.Boolean" ], "void", [ "pointer", "pointer" ]);
  }
  static get _InternalSetRequestHeader() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "InternalSetRequestHeader", 2, [ "System.String", "System.String" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetRequestHeader() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetRequestHeader", 2, [ "System.String", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetResponseHeader() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetResponseHeader", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetResponseHeaderKeys() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetResponseHeaderKeys", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetResponseHeaders() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "GetResponseHeaders", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetUploadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetUploadHandler", 1, [ "UnityEngine.Networking.UploadHandler" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_uploadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_uploadHandler", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_uploadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_uploadHandler", 1, [ "UnityEngine.Networking.UploadHandler" ], "void", [ "pointer", "pointer" ]);
  }
  static get _SetDownloadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetDownloadHandler", 1, [ "UnityEngine.Networking.DownloadHandler" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_downloadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_downloadHandler", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_downloadHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_downloadHandler", 1, [ "UnityEngine.Networking.DownloadHandler" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_certificateHandler() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "get_certificateHandler", 0, [], "pointer", [ "pointer" ]);
  }
  static get _SetTimeoutMsec() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetTimeoutMsec", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_timeout() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "set_timeout", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get _Get() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Get", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _Post() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "Post", 2, [ "System.String", "UnityEngine.WWWForm" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _SetupPost() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.Networking.UnityWebRequest", "SetupPost", 2, [ "UnityEngine.Networking.UnityWebRequest", "UnityEngine.WWWForm" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_GetWebErrorString", null), e([ t.cache ], n, "_GetHTTPStatusString", null), 
e([ t.cache ], n, "_get_disposeCertificateHandlerOnDispose", null), e([ t.cache ], n, "_set_disposeCertificateHandlerOnDispose", null), 
e([ t.cache ], n, "_get_disposeDownloadHandlerOnDispose", null), e([ t.cache ], n, "_set_disposeDownloadHandlerOnDispose", null), 
e([ t.cache ], n, "_get_disposeUploadHandlerOnDispose", null), e([ t.cache ], n, "_set_disposeUploadHandlerOnDispose", null), 
e([ t.cache ], n, "_Create", null), e([ t.cache ], n, "_Release", null), e([ t.cache ], n, "_InternalDestroy", null), 
e([ t.cache ], n, "_InternalSetDefaults", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "__ctor_url_method_downloadHandler_uploadHandler", null), e([ t.cache ], n, "_Finalize", null), 
e([ t.cache ], n, "_Dispose", null), e([ t.cache ], n, "_DisposeHandlers", null), 
e([ t.cache ], n, "_BeginWebRequest", null), e([ t.cache ], n, "_SendWebRequest", null), 
e([ t.cache ], n, "_Abort", null), e([ t.cache ], n, "_SetMethod", null), e([ t.cache ], n, "_InternalSetMethod", null), 
e([ t.cache ], n, "_SetCustomMethod", null), e([ t.cache ], n, "_InternalSetCustomMethod", null), 
e([ t.cache ], n, "_set_method", null), e([ t.cache ], n, "_GetError", null), e([ t.cache ], n, "_get_error", null), 
e([ t.cache ], n, "_get_url", null), e([ t.cache ], n, "_set_url", null), e([ t.cache ], n, "_GetUrl", null), 
e([ t.cache ], n, "_SetUrl", null), e([ t.cache ], n, "_InternalSetUrl", null), 
e([ t.cache ], n, "_get_responseCode", null), e([ t.cache ], n, "_GetUploadProgress", null), 
e([ t.cache ], n, "_IsExecuting", null), e([ t.cache ], n, "_get_uploadProgress", null), 
e([ t.cache ], n, "_get_isModifiable", null), e([ t.cache ], n, "_get_isDone", null), 
e([ t.cache ], n, "_get_isNetworkError", null), e([ t.cache ], n, "_get_isHttpError", null), 
e([ t.cache ], n, "_get_result", null), e([ t.cache ], n, "_GetDownloadProgress", null), 
e([ t.cache ], n, "_get_downloadProgress", null), e([ t.cache ], n, "_SetChunked", null), 
e([ t.cache ], n, "_set_chunkedTransfer", null), e([ t.cache ], n, "_InternalSetRequestHeader", null), 
e([ t.cache ], n, "_SetRequestHeader", null), e([ t.cache ], n, "_GetResponseHeader", null), 
e([ t.cache ], n, "_GetResponseHeaderKeys", null), e([ t.cache ], n, "_GetResponseHeaders", null), 
e([ t.cache ], n, "_SetUploadHandler", null), e([ t.cache ], n, "_get_uploadHandler", null), 
e([ t.cache ], n, "_set_uploadHandler", null), e([ t.cache ], n, "_SetDownloadHandler", null), 
e([ t.cache ], n, "_get_downloadHandler", null), e([ t.cache ], n, "_set_downloadHandler", null), 
e([ t.cache ], n, "_get_certificateHandler", null), e([ t.cache ], n, "_SetTimeoutMsec", null), 
e([ t.cache ], n, "_set_timeout", null), e([ t.cache ], n, "_Get", null), e([ t.cache ], n, "_Post", null), 
e([ t.cache ], n, "_SetupPost", null), Il2Cpp.Api.UnityWebRequest = n;

},{"decorator-cache-getter":513}],367:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_UnityWebRequest_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  m_Ptr=lfv(this.handle, "m_Ptr");
  m_DownloadHandler=lfv(this.handle, "m_DownloadHandler");
  m_UploadHandler=lfv(this.handle, "m_UploadHandler");
  m_CertificateHandler=lfv(this.handle, "m_CertificateHandler");
  m_Uri=lfv(this.handle, "m_Uri");
  constructor(e) {
    super(e);
  }
  static GetWebErrorString(e) {
    return readU16(Il2Cpp.Api.UnityWebRequest._GetWebErrorString(e));
  }
  static GetHTTPStatusString(e) {
    return readU16(Il2Cpp.Api.UnityWebRequest._GetHTTPStatusString(e));
  }
  get_disposeCertificateHandlerOnDispose() {
    return Il2Cpp.Api.UnityWebRequest._get_disposeCertificateHandlerOnDispose(this.handle);
  }
  set_disposeCertificateHandlerOnDispose(e) {
    return Il2Cpp.Api.UnityWebRequest._set_disposeCertificateHandlerOnDispose(this.handle, e);
  }
  get_disposeDownloadHandlerOnDispose() {
    return Il2Cpp.Api.UnityWebRequest._get_disposeDownloadHandlerOnDispose(this.handle);
  }
  set_disposeDownloadHandlerOnDispose(e) {
    return Il2Cpp.Api.UnityWebRequest._set_disposeDownloadHandlerOnDispose(this.handle, e);
  }
  get_disposeUploadHandlerOnDispose() {
    return Il2Cpp.Api.UnityWebRequest._get_disposeUploadHandlerOnDispose(this.handle);
  }
  set_disposeUploadHandlerOnDispose(e) {
    return Il2Cpp.Api.UnityWebRequest._set_disposeUploadHandlerOnDispose(this.handle, e);
  }
  static Create() {
    return Il2Cpp.Api.UnityWebRequest._Create();
  }
  Release() {
    return Il2Cpp.Api.UnityWebRequest._Release(this.handle);
  }
  InternalDestroy() {
    return Il2Cpp.Api.UnityWebRequest._InternalDestroy(this.handle);
  }
  InternalSetDefaults() {
    return Il2Cpp.Api.UnityWebRequest._InternalSetDefaults(this.handle);
  }
  _ctor(e, t) {
    return Il2Cpp.Api.UnityWebRequest.__ctor(this.handle, e, t);
  }
  _ctor_4(e, t, n, s) {
    return Il2Cpp.Api.UnityWebRequest.__ctor(this.handle, e, t, n, s);
  }
  Finalize() {
    return Il2Cpp.Api.UnityWebRequest._Finalize(this.handle);
  }
  Dispose() {
    return Il2Cpp.Api.UnityWebRequest._Dispose(this.handle);
  }
  DisposeHandlers() {
    return Il2Cpp.Api.UnityWebRequest._DisposeHandlers(this.handle);
  }
  BeginWebRequest() {
    return Il2Cpp.Api.UnityWebRequest._BeginWebRequest(this.handle);
  }
  SendWebRequest() {
    return Il2Cpp.Api.UnityWebRequest._SendWebRequest(this.handle);
  }
  Abort() {
    return Il2Cpp.Api.UnityWebRequest._Abort(this.handle);
  }
  SetMethod(e) {
    return Il2Cpp.Api.UnityWebRequest._SetMethod(this.handle, e);
  }
  InternalSetMethod(e) {
    return Il2Cpp.Api.UnityWebRequest._InternalSetMethod(this.handle, e);
  }
  SetCustomMethod(e) {
    return Il2Cpp.Api.UnityWebRequest._SetCustomMethod(this.handle, e);
  }
  InternalSetCustomMethod(e) {
    return Il2Cpp.Api.UnityWebRequest._InternalSetCustomMethod(this.handle, e);
  }
  set_method(e) {
    return Il2Cpp.Api.UnityWebRequest._set_method(this.handle, e);
  }
  GetError() {
    return Il2Cpp.Api.UnityWebRequest._GetError(this.handle);
  }
  get_error() {
    return readU16(Il2Cpp.Api.UnityWebRequest._get_error(this.handle));
  }
  get_url() {
    return readU16(Il2Cpp.Api.UnityWebRequest._get_url(this.handle));
  }
  set_url(e) {
    return Il2Cpp.Api.UnityWebRequest._set_url(this.handle, e);
  }
  GetUrl() {
    return readU16(Il2Cpp.Api.UnityWebRequest._GetUrl(this.handle));
  }
  SetUrl(e) {
    return Il2Cpp.Api.UnityWebRequest._SetUrl(this.handle, e);
  }
  InternalSetUrl(e) {
    return Il2Cpp.Api.UnityWebRequest._InternalSetUrl(this.handle, e);
  }
  get_responseCode() {
    return Il2Cpp.Api.UnityWebRequest._get_responseCode(this.handle);
  }
  GetUploadProgress() {
    return Il2Cpp.Api.UnityWebRequest._GetUploadProgress(this.handle);
  }
  IsExecuting() {
    return Il2Cpp.Api.UnityWebRequest._IsExecuting(this.handle);
  }
  get_uploadProgress() {
    return Il2Cpp.Api.UnityWebRequest._get_uploadProgress(this.handle);
  }
  get_isModifiable() {
    return Il2Cpp.Api.UnityWebRequest._get_isModifiable(this.handle);
  }
  get_isDone() {
    return Il2Cpp.Api.UnityWebRequest._get_isDone(this.handle);
  }
  get_isNetworkError() {
    return Il2Cpp.Api.UnityWebRequest._get_isNetworkError(this.handle);
  }
  get_isHttpError() {
    return Il2Cpp.Api.UnityWebRequest._get_isHttpError(this.handle);
  }
  get_result() {
    return Il2Cpp.Api.UnityWebRequest._get_result(this.handle);
  }
  GetDownloadProgress() {
    return Il2Cpp.Api.UnityWebRequest._GetDownloadProgress(this.handle);
  }
  get_downloadProgress() {
    return Il2Cpp.Api.UnityWebRequest._get_downloadProgress(this.handle);
  }
  SetChunked(e) {
    return Il2Cpp.Api.UnityWebRequest._SetChunked(this.handle, e);
  }
  set_chunkedTransfer(e) {
    return Il2Cpp.Api.UnityWebRequest._set_chunkedTransfer(this.handle, e);
  }
  InternalSetRequestHeader(e, t) {
    return Il2Cpp.Api.UnityWebRequest._InternalSetRequestHeader(this.handle, e, t);
  }
  SetRequestHeader(e, t) {
    return Il2Cpp.Api.UnityWebRequest._SetRequestHeader(this.handle, e, t);
  }
  GetResponseHeader(e) {
    return readU16(Il2Cpp.Api.UnityWebRequest._GetResponseHeader(this.handle, e));
  }
  GetResponseHeaderKeys() {
    return Il2Cpp.Api.UnityWebRequest._GetResponseHeaderKeys(this.handle);
  }
  SetUploadHandler(e) {
    return Il2Cpp.Api.UnityWebRequest._SetUploadHandler(this.handle, e);
  }
  get_uploadHandler() {
    return Il2Cpp.Api.UnityWebRequest._get_uploadHandler(this.handle);
  }
  set_uploadHandler(e) {
    return Il2Cpp.Api.UnityWebRequest._set_uploadHandler(this.handle, e);
  }
  SetDownloadHandler(e) {
    return Il2Cpp.Api.UnityWebRequest._SetDownloadHandler(this.handle, e);
  }
  get_downloadHandler() {
    return Il2Cpp.Api.UnityWebRequest._get_downloadHandler(this.handle);
  }
  set_downloadHandler(e) {
    return Il2Cpp.Api.UnityWebRequest._set_downloadHandler(this.handle, e);
  }
  get_certificateHandler() {
    return Il2Cpp.Api.UnityWebRequest._get_certificateHandler(this.handle);
  }
  SetTimeoutMsec(e) {
    return Il2Cpp.Api.UnityWebRequest._SetTimeoutMsec(this.handle, e);
  }
  set_timeout(e) {
    return Il2Cpp.Api.UnityWebRequest._set_timeout(this.handle, e);
  }
  static Get(e) {
    return Il2Cpp.Api.UnityWebRequest._Get(allocUStr(e));
  }
  static Post(e, t) {
    return Il2Cpp.Api.UnityWebRequest._Post(allocUStr(e), t);
  }
  static SetupPost(e, t) {
    return Il2Cpp.Api.UnityWebRequest._SetupPost(e, t);
  }
}

exports.UnityEngine_Networking_UnityWebRequest_Impl = t, Il2Cpp.UnityWebRequest = t;

},{"../class":468}],368:[function(require,module,exports){
"use strict";

var e, t, o;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestError = exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestMethod = exports.UnityEngine_Networking_UnityWebRequest_Result = void 0, 
function(e) {
  e[e.InProgress = 0] = "InProgress", e[e.Success = 1] = "Success", e[e.ConnectionError = 2] = "ConnectionError", 
  e[e.ProtocolError = 3] = "ProtocolError", e[e.DataProcessingError = 4] = "DataProcessingError";
}(e = exports.UnityEngine_Networking_UnityWebRequest_Result || (exports.UnityEngine_Networking_UnityWebRequest_Result = {})), 
function(e) {
  e[e.Get = 0] = "Get", e[e.Post = 1] = "Post", e[e.Put = 2] = "Put", e[e.Head = 3] = "Head", 
  e[e.Custom = 4] = "Custom";
}(t = exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestMethod || (exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestMethod = {})), 
function(e) {
  e[e.OK = 0] = "OK", e[e.Unknown = 1] = "Unknown", e[e.SDKError = 2] = "SDKError", 
  e[e.MalformattedUrl = 4] = "MalformattedUrl", e[e.CannotResolveProxy = 5] = "CannotResolveProxy", 
  e[e.CannotResolveHost = 6] = "CannotResolveHost", e[e.CannotConnectToHost = 7] = "CannotConnectToHost", 
  e[e.AccessDenied = 8] = "AccessDenied", e[e.GenericHttpError = 9] = "GenericHttpError", 
  e[e.WriteError = 10] = "WriteError", e[e.ReadError = 11] = "ReadError", e[e.OutOfMemory = 12] = "OutOfMemory", 
  e[e.Timeout = 13] = "Timeout", e[e.HTTPPostError = 14] = "HTTPPostError", e[e.SSLCannotConnect = 15] = "SSLCannotConnect", 
  e[e.FailedToSendData = 16] = "FailedToSendData", e[e.Aborted = 16] = "Aborted", 
  e[e.FailedToReceiveData = 21] = "FailedToReceiveData", e[e.SSLCertificateError = 22] = "SSLCertificateError", 
  e[e.SSLCipherNotAvailable = 23] = "SSLCipherNotAvailable", e[e.SSLCACertError = 24] = "SSLCACertError", 
  e[e.UnrecognizedContentEncoding = 25] = "UnrecognizedContentEncoding", e[e.LoginFailed = 26] = "LoginFailed", 
  e[e.SSLShutdownFailed = 27] = "SSLShutdownFailed", e[e.NoInternetConnection = 28] = "NoInternetConnection", 
  e[e.TooManyRedirects = 17] = "TooManyRedirects", e[e.ReceivedNoData = 18] = "ReceivedNoData", 
  e[e.SSLNotSupported = 19] = "SSLNotSupported";
}(o = exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestError || (exports.UnityEngine_Networking_UnityWebRequest_UnityWebRequestError = {}));

},{}],369:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => {
  Il2Cpp.perform((() => {
    D(), B("HttpWebRequest"), B("UnityWebRequest"), B("WWW"), BM("UnityWebRequest");
  }));
};

globalThis.B_network = e;

},{}],370:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./enum");

},{"./api":366,"./class":367,"./enum":368,"./export":369}],371:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, o, r) {
  var i, n = arguments.length, l = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, o) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, o, r); else for (var p = e.length - 1; p >= 0; p--) (i = e[p]) && (l = (n < 3 ? i(l) : n > 3 ? i(t, o, l) : i(t, o)) || l);
  return n > 3 && l && Object.defineProperty(t, o, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class o {
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "ToString", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_obj() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Equals", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTo() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "CompareTo", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTo_value() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "CompareTo", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Parse() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Parse", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _TryParse() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "TryParse", 2, [ "System.String", "System.Boolean&" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _TrimWhiteSpaceAndNull() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "TrimWhiteSpaceAndNull", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _GetTypeCode() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "GetTypeCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _System_IConvertible_ToBoolean() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToBoolean", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToChar() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToChar", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSByte() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToSByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToByte() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSingle() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToSingle", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDouble() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDouble", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDecimal() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDecimal", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDateTime() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDateTime", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToType() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToType", 2, [ "System.Type", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("mscorlib", "System.Boolean", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], o, "_GetHashCode", null), e([ t.cache ], o, "_ToString", null), e([ t.cache ], o, "_ToString_provider", null), 
e([ t.cache ], o, "_Equals", null), e([ t.cache ], o, "_Equals_obj", null), e([ t.cache ], o, "_CompareTo", null), 
e([ t.cache ], o, "_CompareTo_value", null), e([ t.cache ], o, "_Parse", null), 
e([ t.cache ], o, "_TryParse", null), e([ t.cache ], o, "_TrimWhiteSpaceAndNull", null), 
e([ t.cache ], o, "_GetTypeCode", null), e([ t.cache ], o, "_System_IConvertible_ToBoolean", null), 
e([ t.cache ], o, "_System_IConvertible_ToChar", null), e([ t.cache ], o, "_System_IConvertible_ToSByte", null), 
e([ t.cache ], o, "_System_IConvertible_ToByte", null), e([ t.cache ], o, "_System_IConvertible_ToInt16", null), 
e([ t.cache ], o, "_System_IConvertible_ToUInt16", null), e([ t.cache ], o, "_System_IConvertible_ToInt32", null), 
e([ t.cache ], o, "_System_IConvertible_ToUInt32", null), e([ t.cache ], o, "_System_IConvertible_ToInt64", null), 
e([ t.cache ], o, "_System_IConvertible_ToUInt64", null), e([ t.cache ], o, "_System_IConvertible_ToSingle", null), 
e([ t.cache ], o, "_System_IConvertible_ToDouble", null), e([ t.cache ], o, "_System_IConvertible_ToDecimal", null), 
e([ t.cache ], o, "_System_IConvertible_ToDateTime", null), e([ t.cache ], o, "_System_IConvertible_ToType", null), 
e([ t.cache ], o, "__cctor", null), mscorlib.Api.Boolean = o;

},{"decorator-cache-getter":513}],372:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Boolean_Impl = void 0;

const e = require("../class");

class o extends e.System_ValueType_Impl {
  m_value=!lfv(this.handle, "m_value").isNull();
  True=lfv(this.handle, "True").toInt32();
  False=lfv(this.handle, "False").toInt32();
  TrueLiteral=readU16(lfv(this.handle, "TrueLiteral"));
  FalseLiteral=readU16(lfv(this.handle, "FalseLiteral"));
  TrueString=readU16(lfv(this.handle, "TrueString"));
  FalseString=readU16(lfv(this.handle, "FalseString"));
  constructor(e) {
    super(e);
  }
  GetHashCode() {
    return mscorlib.Api.Boolean._GetHashCode(this.handle);
  }
  ToString() {
    return readU16(mscorlib.Api.Boolean._ToString(this.handle));
  }
  ToString_1(e) {
    return readU16(mscorlib.Api.Boolean._ToString(this.handle, e));
  }
  Equals(e) {
    return !mscorlib.Api.Boolean._Equals(this.handle, e.handle).isNull();
  }
  Equals_1(e) {
    return mscorlib.Api.Boolean._Equals(this.handle, e);
  }
  CompareTo(e) {
    return mscorlib.Api.Boolean._CompareTo(this.handle, e.handle);
  }
  CompareTo_1(e) {
    return mscorlib.Api.Boolean._CompareTo(this.handle, e);
  }
  static Parse(e) {
    return !mscorlib.Api.Boolean._Parse(allocUStr(e)).isNull();
  }
  static TryParse(e, o) {
    return !mscorlib.Api.Boolean._TryParse(allocUStr(e), o).isNull();
  }
  static TrimWhiteSpaceAndNull(e) {
    return readU16(mscorlib.Api.Boolean._TrimWhiteSpaceAndNull(e));
  }
  GetTypeCode() {
    return mscorlib.Api.Boolean._GetTypeCode(this.handle);
  }
  System_IConvertible_ToBoolean(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToBoolean(this.handle, e);
  }
  System_IConvertible_ToChar(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToChar(this.handle, e);
  }
  System_IConvertible_ToSByte(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToSByte(this.handle, e);
  }
  System_IConvertible_ToByte(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToByte(this.handle, e);
  }
  System_IConvertible_ToInt16(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToInt16(this.handle, e);
  }
  System_IConvertible_ToUInt16(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToUInt16(this.handle, e);
  }
  System_IConvertible_ToInt32(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToInt32(this.handle, e);
  }
  System_IConvertible_ToUInt32(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToUInt32(this.handle, e);
  }
  System_IConvertible_ToInt64(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToInt64(this.handle, e);
  }
  System_IConvertible_ToUInt64(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToUInt64(this.handle, e);
  }
  System_IConvertible_ToSingle(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToSingle(this.handle, e);
  }
  System_IConvertible_ToDouble(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToDouble(this.handle, e);
  }
  System_IConvertible_ToDecimal(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToDecimal(this.handle, e);
  }
  System_IConvertible_ToDateTime(e) {
    return mscorlib.Api.Boolean._System_IConvertible_ToDateTime(this.handle, e);
  }
  System_IConvertible_ToType(e, o) {
    return mscorlib.Api.Boolean._System_IConvertible_ToType(this.handle, e, o);
  }
  static _cctor() {
    return mscorlib.Api.Boolean.__cctor();
  }
}

exports.System_Boolean_Impl = o, mscorlib.Boolean = o;

},{"../class":451}],373:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":371,"./class":372}],374:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, r, i) {
  var o, n = arguments.length, p = n < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, r, i); else for (var l = t.length - 1; l >= 0; l--) (o = t[l]) && (p = (n < 3 ? o(p) : n > 3 ? o(e, r, p) : o(e, r)) || p);
  return n > 3 && p && Object.defineProperty(e, r, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _op_Implicit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "op_Implicit", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Implicit_c() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color32", "op_Implicit", 1, [ "UnityEngine.Color32" ], "pointer", [ "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "Lerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color32", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], r, "__ctor", null), t([ e.cache ], r, "_op_Implicit", null), t([ e.cache ], r, "_op_Implicit_c", null), 
t([ e.cache ], r, "_Lerp", null), t([ e.cache ], r, "_ToString", null), t([ e.cache ], r, "_ToString_format_formatProvider", null), 
Il2Cpp.Api.Color32 = r;

},{"decorator-cache-getter":513}],375:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Color32_Impl = void 0;

const r = require("../class"), l = require("../Color/class");

class e extends r.System_ValueType_Impl {
  rgba=lfv(this.handle, "rgba");
  r=lfv(this.handle, "r");
  g=lfv(this.handle, "g");
  b=lfv(this.handle, "b");
  a=lfv(this.handle, "a");
  constructor(r) {
    super(r);
  }
  __ctor(r, l, e, t) {
    return Il2Cpp.Api.Color32.__ctor(this.handle, r, l, e, t);
  }
  static op_Implicit(r) {
    return new l.UnityEngine_Color_Impl(Il2Cpp.Api.Color32._op_Implicit(r));
  }
  static op_Implicit_1(r) {
    return new l.UnityEngine_Color_Impl(Il2Cpp.Api.Color32._op_Implicit(r));
  }
  static Lerp(r, l, t) {
    return new e(Il2Cpp.Api.Color32._Lerp(r, l, t));
  }
  ToString() {
    return readU16(Il2Cpp.Api.Color32._ToString(this.handle));
  }
  ToString_2(r, l) {
    return readU16(Il2Cpp.Api.Color32._ToString(this.handle, r, l));
  }
}

exports.UnityEngine_Color32_Impl = e, Il2Cpp.Color32 = e;

},{"../Color/class":379,"../class":451}],376:[function(require,module,exports){
"use strict";

},{}],377:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":374,"./class":375,"./export":376}],378:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, l = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var p = e.length - 1; p >= 0; p--) (o = e[p]) && (l = (r < 3 ? o(l) : r > 3 ? o(t, n, l) : o(t, n)) || l);
  return r > 3 && l && Object.defineProperty(t, n, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_r_g_b() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", ".ctor", 3, [ "System.Single", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "Equals", 1, [ "UnityEngine.Color" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Addition() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Addition", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Subtraction", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply_a_b() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "op_Multiply", 2, [ "UnityEngine.Color", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "Lerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _RGBMultiplied() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "RGBMultiplied", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_red() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_red", 0, "pointer", []);
  }
  static get _get_green() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_green", 0, "pointer", []);
  }
  static get _get_blue() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_blue", 0, "pointer", []);
  }
  static get _get_white() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_white", 0, "pointer", []);
  }
  static get _get_black() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_black", 0, "pointer", []);
  }
  static get _get_yellow() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_yellow", 0, "pointer", []);
  }
  static get _get_magenta() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_magenta", 0, "pointer", []);
  }
  static get _get_gray() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_gray", 0, "pointer", []);
  }
  static get _get_clear() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_clear", 0, "pointer", []);
  }
  static get _get_linear() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_linear", 0, "pointer", [ "pointer" ]);
  }
  static get _get_maxColorComponent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_maxColorComponent", 0, "pointer", [ "pointer" ]);
  }
  static get _op_Implicit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Implicit", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Implicit_v() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "op_Implicit", 1, [ "UnityEngine.Vector4" ], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "__ctor_r_g_b", null), e([ t.cache ], n, "_ToString", null), 
e([ t.cache ], n, "_ToString_format_formatProvider", null), e([ t.cache ], n, "_GetHashCode", null), 
e([ t.cache ], n, "_Equals", null), e([ t.cache ], n, "_Equals_other", null), e([ t.cache ], n, "_op_Addition", null), 
e([ t.cache ], n, "_op_Subtraction", null), e([ t.cache ], n, "_op_Multiply", null), 
e([ t.cache ], n, "_op_Multiply_a_b", null), e([ t.cache ], n, "_op_Equality", null), 
e([ t.cache ], n, "_Lerp", null), e([ t.cache ], n, "_RGBMultiplied", null), e([ t.cache ], n, "_get_red", null), 
e([ t.cache ], n, "_get_green", null), e([ t.cache ], n, "_get_blue", null), e([ t.cache ], n, "_get_white", null), 
e([ t.cache ], n, "_get_black", null), e([ t.cache ], n, "_get_yellow", null), e([ t.cache ], n, "_get_magenta", null), 
e([ t.cache ], n, "_get_gray", null), e([ t.cache ], n, "_get_clear", null), e([ t.cache ], n, "_get_linear", null), 
e([ t.cache ], n, "_get_maxColorComponent", null), e([ t.cache ], n, "_op_Implicit", null), 
e([ t.cache ], n, "_op_Implicit_v", null), Il2Cpp.Api.Color = n;

},{"decorator-cache-getter":513}],379:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Color_Impl = void 0;

const t = require("../class");

class r extends t.System_ValueType_Impl {
  r=lfv(this.handle, "r");
  g=lfv(this.handle, "g");
  b=lfv(this.handle, "b");
  a=lfv(this.handle, "a");
  constructor(t) {
    super(t);
  }
  _ctor_rgba(t, r, l, p) {
    return Il2Cpp.Api.Color.__ctor(this.handle, t, r, l, p);
  }
  _ctor_rgb(t, r, l) {
    return Il2Cpp.Api.Color.__ctor(this.handle, t, r, l);
  }
  ToString() {
    return "TODO...";
  }
  toString() {
    return "TODO...";
  }
  ToString_2(t, r) {
    return readU16(Il2Cpp.Api.Color._ToString(this.handle, t, r));
  }
  GetHashCode() {
    return Il2Cpp.Api.Color._GetHashCode(this.handle);
  }
  Equals_obj(t) {
    return Il2Cpp.Api.Color._Equals(this.handle, t);
  }
  Equals_color(t) {
    return Il2Cpp.Api.Color._Equals(this.handle, t);
  }
  static op_Addition(t, r) {
    return Il2Cpp.Api.Color._op_Addition(t, r);
  }
  static op_Subtraction(t, r) {
    return Il2Cpp.Api.Color._op_Subtraction(t, r);
  }
  static op_Multiply_color_color(t, r) {
    return Il2Cpp.Api.Color._op_Multiply(t, r);
  }
  static op_Multiply_color_number(t, r) {
    return Il2Cpp.Api.Color._op_Multiply(t, r);
  }
  static op_Equality(t, r) {
    return Il2Cpp.Api.Color._op_Equality(t, r);
  }
  static Lerp(t, r, l) {
    return Il2Cpp.Api.Color._Lerp(t, r, l);
  }
  RGBMultiplied(t) {
    return Il2Cpp.Api.Color._RGBMultiplied(this.handle, t);
  }
  static get_red() {
    return Il2Cpp.Api.Color._get_red();
  }
  static get_green() {
    return Il2Cpp.Api.Color._get_green();
  }
  static get_blue() {
    return Il2Cpp.Api.Color._get_blue();
  }
  static get_white() {
    return Il2Cpp.Api.Color._get_white();
  }
  static get_black() {
    return Il2Cpp.Api.Color._get_black();
  }
  static get_yellow() {
    return Il2Cpp.Api.Color._get_yellow();
  }
  static get_magenta() {
    return Il2Cpp.Api.Color._get_magenta();
  }
  static get_gray() {
    return Il2Cpp.Api.Color._get_gray();
  }
  static get_clear() {
    return Il2Cpp.Api.Color._get_clear();
  }
  get_linear() {
    return Il2Cpp.Api.Color._get_linear(this.handle);
  }
  get_maxColorComponent() {
    return Il2Cpp.Api.Color._get_maxColorComponent(this.handle);
  }
  static op_Implicit_UnityEngine_Color_Impl(t) {
    return Il2Cpp.Api.Color._op_Implicit(t);
  }
  static op_Implicit_UnityEngine_Vector4(t) {
    return Il2Cpp.Api.Color._op_Implicit(t);
  }
}

exports.UnityEngine_Color_Impl = r, Il2Cpp.Color = r;

},{"../class":451}],380:[function(require,module,exports){
"use strict";

},{}],381:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./interface");

},{"./api":378,"./class":379,"./export":380,"./interface":382}],382:[function(require,module,exports){
"use strict";

},{}],383:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, r) {
  var o, n = arguments.length, p = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, i, r); else for (var s = e.length - 1; s >= 0; s--) (o = e[s]) && (p = (n < 3 ? o(p) : n > 3 ? o(t, i, p) : o(t, i)) || p);
  return n > 3 && p && Object.defineProperty(t, i, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class i {
  static get __ctor() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 1, [ "System.Int64" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_dateData() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 1, [ "System.UInt64" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_ticks_kind() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 2, [ "System.Int64", "System.DateTimeKind" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_ticks_kind_isAmbiguousDst() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 3, [ "System.Int64", "System.DateTimeKind", "System.Boolean" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_year_month_day() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 3, [ "System.Int32", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_year_month_day_hour_minute_second() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 6, [ "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_year_month_day_hour_minute_second_millisecond() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 7, [ "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_year_month_day_hour_minute_second_millisecond_kind() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 8, [ "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.DateTimeKind" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_info_context() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_InternalTicks() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_InternalTicks", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_InternalKind() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_InternalKind", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Add() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Add", 1, [ "System.TimeSpan" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Add_value_scale() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Add", 2, [ "System.Double", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddDays() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddDays", 1, [ "System.Double" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddHours() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddHours", 1, [ "System.Double" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddMilliseconds() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMilliseconds", 1, [ "System.Double" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddMinutes() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMinutes", 1, [ "System.Double" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddMonths() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMonths", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddSeconds() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddSeconds", 1, [ "System.Double" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddTicks() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddTicks", 1, [ "System.Int64" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _AddYears() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddYears", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTo() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "CompareTo", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTo_value() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "CompareTo", 1, [ "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _DateToTicks() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "DateToTicks", 3, [ "System.Int32", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TimeToTicks() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TimeToTicks", 3, [ "System.Int32", "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DaysInMonth() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "DaysInMonth", 2, [ "System.Int32", "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_value() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Equals", 1, [ "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _FromBinary() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "FromBinary", 1, [ "System.Int64" ], "pointer", [ "pointer" ]);
  }
  static get _FromBinaryRaw() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "FromBinaryRaw", 1, [ "System.Int64" ], "pointer", [ "pointer" ]);
  }
  static get _System_Runtime_Serialization_ISerializable_GetObjectData() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.Runtime.Serialization.ISerializable.GetObjectData", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SpecifyKind() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "SpecifyKind", 2, [ "System.DateTime", "System.DateTimeKind" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToBinaryRaw() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToBinaryRaw", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Date() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Date", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetDatePart() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetDatePart", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_Day() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Day", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_DayOfWeek() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_DayOfWeek", 0, [], "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Hour() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Hour", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Kind() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Kind", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Millisecond() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Millisecond", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Minute() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Minute", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Month() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Month", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Now() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Now", 0, [], "pointer", []);
  }
  static get _get_UtcNow() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_UtcNow", 0, [], "pointer", []);
  }
  static get _GetSystemTimeAsFileTime() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetSystemTimeAsFileTime", 0, [], "pointer", []);
  }
  static get _get_Second() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Second", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Ticks() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Ticks", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_TimeOfDay() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_TimeOfDay", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Today() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Today", 0, [], "pointer", []);
  }
  static get _get_Year() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Year", 0, [], "pointer", [ "pointer" ]);
  }
  static get _IsLeapYear() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "IsLeapYear", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _Parse() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Parse", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _Parse_s_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Parse", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ParseExact() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ParseExact", 3, [ "System.String", "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ParseExact_s_format_provider_style() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ParseExact", 4, [ "System.String", "System.String", "System.IFormatProvider", "System.Globalization.DateTimeStyles" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Subtract() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Subtract", 1, [ "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToLocalTime() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToLocalTime", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToLocalTime_throwOnOverflow() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToLocalTime", 1, [ "System.Boolean" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString_format_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _ToUniversalTime() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToUniversalTime", 0, [], "pointer", [ "pointer" ]);
  }
  static get _TryParse() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TryParse", 4, [ "System.String", "System.IFormatProvider", "System.Globalization.DateTimeStyles", "System.DateTime&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _op_Addition() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Addition", 2, [ "System.DateTime", "System.TimeSpan" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Subtraction", 2, [ "System.DateTime", "System.TimeSpan" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction_d1_d2() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Subtraction", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Equality", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Inequality", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_LessThan() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_LessThan", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_LessThanOrEqual() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_LessThanOrEqual", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_GreaterThan() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_GreaterThan", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_GreaterThanOrEqual() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_GreaterThanOrEqual", 2, [ "System.DateTime", "System.DateTime" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetTypeCode() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetTypeCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _System_IConvertible_ToBoolean() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToBoolean", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToChar() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToChar", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSByte() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToSByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToByte() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSingle() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToSingle", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDouble() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDouble", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDecimal() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDecimal", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDateTime() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDateTime", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToType() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToType", 2, [ "System.Type", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TryCreate() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TryCreate", 8, [ "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.DateTime&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".cctor", 0, [], "void", []);
  }
}

e([ t.cache ], i, "__ctor", null), e([ t.cache ], i, "__ctor_dateData", null), e([ t.cache ], i, "__ctor_ticks_kind", null), 
e([ t.cache ], i, "__ctor_ticks_kind_isAmbiguousDst", null), e([ t.cache ], i, "__ctor_year_month_day", null), 
e([ t.cache ], i, "__ctor_year_month_day_hour_minute_second", null), e([ t.cache ], i, "__ctor_year_month_day_hour_minute_second_millisecond", null), 
e([ t.cache ], i, "__ctor_year_month_day_hour_minute_second_millisecond_kind", null), 
e([ t.cache ], i, "__ctor_info_context", null), e([ t.cache ], i, "_get_InternalTicks", null), 
e([ t.cache ], i, "_get_InternalKind", null), e([ t.cache ], i, "_Add", null), e([ t.cache ], i, "_Add_value_scale", null), 
e([ t.cache ], i, "_AddDays", null), e([ t.cache ], i, "_AddHours", null), e([ t.cache ], i, "_AddMilliseconds", null), 
e([ t.cache ], i, "_AddMinutes", null), e([ t.cache ], i, "_AddMonths", null), e([ t.cache ], i, "_AddSeconds", null), 
e([ t.cache ], i, "_AddTicks", null), e([ t.cache ], i, "_AddYears", null), e([ t.cache ], i, "_CompareTo", null), 
e([ t.cache ], i, "_CompareTo_value", null), e([ t.cache ], i, "_DateToTicks", null), 
e([ t.cache ], i, "_TimeToTicks", null), e([ t.cache ], i, "_DaysInMonth", null), 
e([ t.cache ], i, "_Equals", null), e([ t.cache ], i, "_Equals_value", null), e([ t.cache ], i, "_FromBinary", null), 
e([ t.cache ], i, "_FromBinaryRaw", null), e([ t.cache ], i, "_System_Runtime_Serialization_ISerializable_GetObjectData", null), 
e([ t.cache ], i, "_SpecifyKind", null), e([ t.cache ], i, "_ToBinaryRaw", null), 
e([ t.cache ], i, "_get_Date", null), e([ t.cache ], i, "_GetDatePart", null), e([ t.cache ], i, "_get_Day", null), 
e([ t.cache ], i, "_get_DayOfWeek", null), e([ t.cache ], i, "_GetHashCode", null), 
e([ t.cache ], i, "_get_Hour", null), e([ t.cache ], i, "_get_Kind", null), e([ t.cache ], i, "_get_Millisecond", null), 
e([ t.cache ], i, "_get_Minute", null), e([ t.cache ], i, "_get_Month", null), e([ t.cache ], i, "_get_Now", null), 
e([ t.cache ], i, "_get_UtcNow", null), e([ t.cache ], i, "_GetSystemTimeAsFileTime", null), 
e([ t.cache ], i, "_get_Second", null), e([ t.cache ], i, "_get_Ticks", null), e([ t.cache ], i, "_get_TimeOfDay", null), 
e([ t.cache ], i, "_get_Today", null), e([ t.cache ], i, "_get_Year", null), e([ t.cache ], i, "_IsLeapYear", null), 
e([ t.cache ], i, "_Parse", null), e([ t.cache ], i, "_Parse_s_provider", null), 
e([ t.cache ], i, "_ParseExact", null), e([ t.cache ], i, "_ParseExact_s_format_provider_style", null), 
e([ t.cache ], i, "_Subtract", null), e([ t.cache ], i, "_ToLocalTime", null), e([ t.cache ], i, "_ToLocalTime_throwOnOverflow", null), 
e([ t.cache ], i, "_ToString", null), e([ t.cache ], i, "_ToString_provider", null), 
e([ t.cache ], i, "_ToString_format_provider", null), e([ t.cache ], i, "_ToUniversalTime", null), 
e([ t.cache ], i, "_TryParse", null), e([ t.cache ], i, "_op_Addition", null), e([ t.cache ], i, "_op_Subtraction", null), 
e([ t.cache ], i, "_op_Subtraction_d1_d2", null), e([ t.cache ], i, "_op_Equality", null), 
e([ t.cache ], i, "_op_Inequality", null), e([ t.cache ], i, "_op_LessThan", null), 
e([ t.cache ], i, "_op_LessThanOrEqual", null), e([ t.cache ], i, "_op_GreaterThan", null), 
e([ t.cache ], i, "_op_GreaterThanOrEqual", null), e([ t.cache ], i, "_GetTypeCode", null), 
e([ t.cache ], i, "_System_IConvertible_ToBoolean", null), e([ t.cache ], i, "_System_IConvertible_ToChar", null), 
e([ t.cache ], i, "_System_IConvertible_ToSByte", null), e([ t.cache ], i, "_System_IConvertible_ToByte", null), 
e([ t.cache ], i, "_System_IConvertible_ToInt16", null), e([ t.cache ], i, "_System_IConvertible_ToUInt16", null), 
e([ t.cache ], i, "_System_IConvertible_ToInt32", null), e([ t.cache ], i, "_System_IConvertible_ToUInt32", null), 
e([ t.cache ], i, "_System_IConvertible_ToInt64", null), e([ t.cache ], i, "_System_IConvertible_ToUInt64", null), 
e([ t.cache ], i, "_System_IConvertible_ToSingle", null), e([ t.cache ], i, "_System_IConvertible_ToDouble", null), 
e([ t.cache ], i, "_System_IConvertible_ToDecimal", null), e([ t.cache ], i, "_System_IConvertible_ToDateTime", null), 
e([ t.cache ], i, "_System_IConvertible_ToType", null), e([ t.cache ], i, "_TryCreate", null), 
e([ t.cache ], i, "__cctor", null), mscorlib.Api.DateTime = i;

},{"decorator-cache-getter":513}],384:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_DateTime_Impl = void 0;

const e = require("../class");

class t extends e.System_ValueType_Impl {
  TicksPerMillisecond=lfv(this.handle, "TicksPerMillisecond");
  TicksPerSecond=lfv(this.handle, "TicksPerSecond");
  TicksPerMinute=lfv(this.handle, "TicksPerMinute");
  TicksPerHour=lfv(this.handle, "TicksPerHour");
  TicksPerDay=lfv(this.handle, "TicksPerDay");
  MillisPerSecond=lfv(this.handle, "MillisPerSecond");
  MillisPerMinute=lfv(this.handle, "MillisPerMinute");
  MillisPerHour=lfv(this.handle, "MillisPerHour");
  MillisPerDay=lfv(this.handle, "MillisPerDay");
  DaysPerYear=lfv(this.handle, "DaysPerYear");
  DaysPer4Years=lfv(this.handle, "DaysPer4Years");
  DaysPer100Years=lfv(this.handle, "DaysPer100Years");
  DaysPer400Years=lfv(this.handle, "DaysPer400Years");
  DaysTo1601=lfv(this.handle, "DaysTo1601");
  DaysTo1899=lfv(this.handle, "DaysTo1899");
  DaysTo1970=lfv(this.handle, "DaysTo1970");
  DaysTo10000=lfv(this.handle, "DaysTo10000");
  MinTicks=lfv(this.handle, "MinTicks");
  MaxTicks=lfv(this.handle, "MaxTicks");
  MaxMillis=lfv(this.handle, "MaxMillis");
  FileTimeOffset=lfv(this.handle, "FileTimeOffset");
  DoubleDateOffset=lfv(this.handle, "DoubleDateOffset");
  OADateMinAsTicks=lfv(this.handle, "OADateMinAsTicks");
  OADateMinAsDouble=lfv(this.handle, "OADateMinAsDouble");
  OADateMaxAsDouble=lfv(this.handle, "OADateMaxAsDouble");
  DatePartYear=lfv(this.handle, "DatePartYear");
  DatePartDayOfYear=lfv(this.handle, "DatePartDayOfYear");
  DatePartMonth=lfv(this.handle, "DatePartMonth");
  DatePartDay=lfv(this.handle, "DatePartDay");
  DaysToMonth365=lfv(this.handle, "DaysToMonth365");
  DaysToMonth366=lfv(this.handle, "DaysToMonth366");
  MinValue=new t(lfv(this.handle, "MinValue"));
  MaxValue=new t(lfv(this.handle, "MaxValue"));
  TicksMask=lfv(this.handle, "TicksMask");
  FlagsMask=lfv(this.handle, "FlagsMask");
  LocalMask=lfv(this.handle, "LocalMask");
  TicksCeiling=lfv(this.handle, "TicksCeiling");
  KindUnspecified=lfv(this.handle, "KindUnspecified");
  KindUtc=lfv(this.handle, "KindUtc");
  KindLocal=lfv(this.handle, "KindLocal");
  KindLocalAmbiguousDst=lfv(this.handle, "KindLocalAmbiguousDst");
  KindShift=lfv(this.handle, "KindShift");
  TicksField=lfv(this.handle, "TicksField");
  DateDataField=lfv(this.handle, "DateDataField");
  dateData=lfv(this.handle, "dateData");
  constructor(e) {
    super(e);
  }
  _ctor_System_Int32(e) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e);
  }
  _ctor_Uint64(e) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e);
  }
  _ctor_num_kid(e, t) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t);
  }
  _ctor_3(e, t, i) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t, i);
  }
  _ctor_year_month_day(e, t, i) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t, i);
  }
  _ctor_6(e, t, i, r, a, s) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t, i, r, a, s);
  }
  _ctor_7(e, t, i, r, a, s, l) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t, i, r, a, s, l);
  }
  _ctor_8(e, t, i, r, a, s, l, n) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t, i, r, a, s, l, n);
  }
  _ctor_2(e, t) {
    return mscorlib.Api.DateTime.__ctor(this.handle, e, t);
  }
  get_InternalTicks() {
    return mscorlib.Api.DateTime._get_InternalTicks(this.handle);
  }
  get_InternalKind() {
    return mscorlib.Api.DateTime._get_InternalKind(this.handle);
  }
  Add(e) {
    return mscorlib.Api.DateTime._Add(this.handle, e);
  }
  Add_2(e, t) {
    return mscorlib.Api.DateTime._Add(this.handle, e, t);
  }
  AddDays(e) {
    return mscorlib.Api.DateTime._AddDays(this.handle, e);
  }
  AddHours(e) {
    return mscorlib.Api.DateTime._AddHours(this.handle, e);
  }
  AddMilliseconds(e) {
    return mscorlib.Api.DateTime._AddMilliseconds(this.handle, e);
  }
  AddMinutes(e) {
    return mscorlib.Api.DateTime._AddMinutes(this.handle, e);
  }
  AddMonths(e) {
    return mscorlib.Api.DateTime._AddMonths(this.handle, e);
  }
  AddSeconds(e) {
    return mscorlib.Api.DateTime._AddSeconds(this.handle, e);
  }
  AddTicks(e) {
    return mscorlib.Api.DateTime._AddTicks(this.handle, e);
  }
  AddYears(e) {
    return mscorlib.Api.DateTime._AddYears(this.handle, e);
  }
  CompareTo(e) {
    return mscorlib.Api.DateTime._CompareTo(this.handle, e);
  }
  CompareTo_1(e) {
    return mscorlib.Api.DateTime._CompareTo(this.handle, e);
  }
  static DateToTicks(e, t, i) {
    return mscorlib.Api.DateTime._DateToTicks(e.handle, t.handle, i.handle);
  }
  static TimeToTicks(e, t, i) {
    return mscorlib.Api.DateTime._TimeToTicks(e, t, i);
  }
  static DaysInMonth(e, t) {
    return mscorlib.Api.DateTime._DaysInMonth(e, t);
  }
  Equals(e) {
    return mscorlib.Api.DateTime._Equals(this.handle, e);
  }
  Equals_1(e) {
    return mscorlib.Api.DateTime._Equals(this.handle, e);
  }
  static FromBinary(e) {
    return mscorlib.Api.DateTime._FromBinary(e);
  }
  static FromBinaryRaw(e) {
    return mscorlib.Api.DateTime._FromBinaryRaw(e);
  }
  static SpecifyKind(e, t) {
    return mscorlib.Api.DateTime._SpecifyKind(e, t);
  }
  ToBinaryRaw() {
    return mscorlib.Api.DateTime._ToBinaryRaw(this.handle);
  }
  get_Date() {
    return mscorlib.Api.DateTime._get_Date(this.handle);
  }
  GetDatePart(e) {
    return mscorlib.Api.DateTime._GetDatePart(this.handle, e);
  }
  get_Day() {
    return mscorlib.Api.DateTime._get_Day(this.handle);
  }
  get_DayOfWeek() {
    return mscorlib.Api.DateTime._get_DayOfWeek(this.handle);
  }
  GetHashCode() {
    return mscorlib.Api.DateTime._GetHashCode(this.handle);
  }
  get_Hour() {
    return mscorlib.Api.DateTime._get_Hour(this.handle);
  }
  get_Kind() {
    return mscorlib.Api.DateTime._get_Kind(this.handle);
  }
  get_Millisecond() {
    return mscorlib.Api.DateTime._get_Millisecond(this.handle);
  }
  get_Minute() {
    return mscorlib.Api.DateTime._get_Minute(this.handle);
  }
  get_Month() {
    return mscorlib.Api.DateTime._get_Month(this.handle);
  }
  static get_Now() {
    return mscorlib.Api.DateTime._get_Now();
  }
  static get_UtcNow() {
    return mscorlib.Api.DateTime._get_UtcNow();
  }
  static GetSystemTimeAsFileTime() {
    return mscorlib.Api.DateTime._GetSystemTimeAsFileTime();
  }
  get_Second() {
    return mscorlib.Api.DateTime._get_Second(this.handle);
  }
  get_Ticks() {
    return mscorlib.Api.DateTime._get_Ticks(this.handle);
  }
  get_TimeOfDay() {
    return mscorlib.Api.DateTime._get_TimeOfDay(this.handle);
  }
  static get_Today() {
    return mscorlib.Api.DateTime._get_Today();
  }
  get_Year() {
    return mscorlib.Api.DateTime._get_Year(this.handle);
  }
  static IsLeapYear(e) {
    return mscorlib.Api.DateTime._IsLeapYear(e);
  }
  static Parse(e) {
    return mscorlib.Api.DateTime._Parse(e);
  }
  static Parse_2(e, t) {
    return mscorlib.Api.DateTime._Parse(e, t);
  }
  static ParseExact(e, t, i) {
    return mscorlib.Api.DateTime._ParseExact(e, t, i);
  }
  static ParseExact_4(e, t, i, r) {
    return mscorlib.Api.DateTime._ParseExact(e, t, i, r);
  }
  Subtract(e) {
    return mscorlib.Api.DateTime._Subtract(this.handle, e);
  }
  ToLocalTime() {
    return mscorlib.Api.DateTime._ToLocalTime(this.handle);
  }
  ToLocalTime_1(e) {
    return mscorlib.Api.DateTime._ToLocalTime(this.handle, e);
  }
  ToString() {
    return readU16(mscorlib.Api.DateTime._ToString(this.handle));
  }
  ToString_1(e) {
    return readU16(mscorlib.Api.DateTime._ToString(this.handle, e));
  }
  ToString_2(e, t) {
    return readU16(mscorlib.Api.DateTime._ToString(this.handle, e, t));
  }
  ToUniversalTime() {
    return mscorlib.Api.DateTime._ToUniversalTime(this.handle);
  }
  static TryParse(e, t, i, r) {
    return mscorlib.Api.DateTime._TryParse(e, t, i, r);
  }
  static op_Addition(e, t) {
    return mscorlib.Api.DateTime._op_Addition(e, t);
  }
  static op_Subtraction(e, t) {
    return mscorlib.Api.DateTime._op_Subtraction(e, t);
  }
  static op_Subtraction_2(e, t) {
    return mscorlib.Api.DateTime._op_Subtraction(e, t);
  }
  static op_Equality(e, t) {
    return mscorlib.Api.DateTime._op_Equality(e, t);
  }
  static op_Inequality(e, t) {
    return mscorlib.Api.DateTime._op_Inequality(e, t);
  }
  static op_LessThan(e, t) {
    return mscorlib.Api.DateTime._op_LessThan(e, t);
  }
  static op_LessThanOrEqual(e, t) {
    return mscorlib.Api.DateTime._op_LessThanOrEqual(e, t);
  }
  static op_GreaterThan(e, t) {
    return mscorlib.Api.DateTime._op_GreaterThan(e, t);
  }
  static op_GreaterThanOrEqual(e, t) {
    return mscorlib.Api.DateTime._op_GreaterThanOrEqual(e, t);
  }
  GetTypeCode() {
    return mscorlib.Api.DateTime._GetTypeCode(this.handle);
  }
  System_IConvertible_ToBoolean(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToBoolean(this.handle, e);
  }
  System_IConvertible_ToChar(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToChar(this.handle, e);
  }
  System_IConvertible_ToSByte(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToSByte(this.handle, e);
  }
  System_IConvertible_ToByte(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToByte(this.handle, e);
  }
  System_IConvertible_ToInt16(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToInt16(this.handle, e);
  }
  System_IConvertible_ToUInt16(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToUInt16(this.handle, e);
  }
  System_IConvertible_ToInt32(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToInt32(this.handle, e);
  }
  System_IConvertible_ToUInt32(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToUInt32(this.handle, e);
  }
  System_IConvertible_ToInt64(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToInt64(this.handle, e);
  }
  System_IConvertible_ToUInt64(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToUInt64(this.handle, e);
  }
  System_IConvertible_ToSingle(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToSingle(this.handle, e);
  }
  System_IConvertible_ToDouble(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToDouble(this.handle, e);
  }
  System_IConvertible_ToDecimal(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToDecimal(this.handle, e);
  }
  System_IConvertible_ToDateTime(e) {
    return mscorlib.Api.DateTime._System_IConvertible_ToDateTime(this.handle, e);
  }
  System_IConvertible_ToType(e, t) {
    return mscorlib.Api.DateTime._System_IConvertible_ToType(this.handle, e, t);
  }
  static TryCreate(e, t, i, r, a, s, l, n) {
    return mscorlib.Api.DateTime._TryCreate(e, t, i, r, a, s, l, n);
  }
  static _cctor() {
    return mscorlib.Api.DateTime.__cctor();
  }
}

exports.System_DateTime_Impl = t, mscorlib.DateTime = t;

},{"../class":451}],385:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":383,"./class":384}],386:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var c, i = arguments.length, n = i < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(e, t, r, o); else for (var l = e.length - 1; l >= 0; l--) (c = e[l]) && (n = (i < 3 ? c(n) : i > 3 ? c(t, r, n) : c(t, r)) || n);
  return i > 3 && n && Object.defineProperty(t, r, n), n;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.o("mscorlib", "System.Collections.DictionaryEntry", ".ctor", 2, [ "System.Object", "System.Object" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_Key() {
    return Il2Cpp.Api.o("mscorlib", "System.Collections.DictionaryEntry", "get_Key", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_Value() {
    return Il2Cpp.Api.o("mscorlib", "System.Collections.DictionaryEntry", "get_Value", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], r, "__ctor", null), e([ t.cache ], r, "_get_Key", null), e([ t.cache ], r, "_get_Value", null), 
mscorlib.Api.DictionaryEntry = r;

},{"decorator-cache-getter":513}],387:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Collections_DictionaryEntry = void 0;

const t = require("../class");

class e extends t.System_ValueType_Impl {
  _key=lfv(this.handle, "_key");
  _value=lfv(this.handle, "_value");
  constructor(t) {
    super(t);
  }
  _ctor_DictionaryEntry(t, e) {
    return mscorlib.Api.DictionaryEntry.__ctor(this.handle, t, e);
  }
  get_Key() {
    return mscorlib.Api.DictionaryEntry._get_Key(this.handle);
  }
  get_Value() {
    return mscorlib.Api.DictionaryEntry._get_Value(this.handle);
  }
}

exports.System_Collections_DictionaryEntry = e, mscorlib.DictionaryEntry = e;

},{"../class":451}],388:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":386,"./class":387}],389:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e {}

Il2Cpp.Api.EmitParams = e;

},{}],390:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ParticleSystem_EmitParams_Impl = void 0;

const t = require("../../Object/Component/ParticleSystem/class"), e = require("../class");

class i extends e.System_ValueType_Impl {
  m_Particle=new t.UnityEngine_ParticleSystem_Impl(lfv(this.handle, "m_Particle"));
  m_PositionSet=lfv(this.handle, "m_PositionSet");
  m_VelocitySet=lfv(this.handle, "m_VelocitySet");
  m_AxisOfRotationSet=lfv(this.handle, "m_AxisOfRotationSet");
  m_RotationSet=lfv(this.handle, "m_RotationSet");
  m_AngularVelocitySet=lfv(this.handle, "m_AngularVelocitySet");
  m_StartSizeSet=lfv(this.handle, "m_StartSizeSet");
  m_StartColorSet=lfv(this.handle, "m_StartColorSet");
  m_RandomSeedSet=lfv(this.handle, "m_RandomSeedSet");
  m_StartLifetimeSet=lfv(this.handle, "m_StartLifetimeSet");
  m_MeshIndexSet=lfv(this.handle, "m_MeshIndexSet");
  m_ApplyShapeToPosition=lfv(this.handle, "m_ApplyShapeToPosition");
  constructor(t) {
    super(t);
  }
}

exports.UnityEngine_ParticleSystem_EmitParams_Impl = i, Il2Cpp.EmitParams = i;

},{"../../Object/Component/ParticleSystem/class":250,"../class":451}],391:[function(require,module,exports){
"use strict";

},{}],392:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":389,"./class":390,"./export":391}],393:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var i, n = arguments.length, s = n < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, o); else for (var l = e.length - 1; l >= 0; l--) (i = e[l]) && (s = (n < 3 ? i(s) : n > 3 ? i(t, r, s) : i(t, r)) || s);
  return n > 3 && s && Object.defineProperty(t, r, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _CompareTo() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "CompareTo", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _CompareTo_value() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "CompareTo", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_obj() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Equals", 1, [ "System.Int32" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString_format() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString_format_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Parse() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 1, [ "System.String" ], "pointer", [ "pointer" ]);
  }
  static get _Parse_s_style() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 2, [ "System.String", "System.Globalization.NumberStyles" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Parse_s_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Parse_s_style_provider() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 3, [ "System.String", "System.Globalization.NumberStyles", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _TryParse() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "TryParse", 2, [ "System.String", "System.Int32&" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _TryParse_s_style_provider_result() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "TryParse", 4, [ "System.String", "System.Globalization.NumberStyles", "System.IFormatProvider", "System.Int32&" ], "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetTypeCode() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "GetTypeCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _System_IConvertible_ToBoolean() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToBoolean", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToChar() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToChar", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSByte() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToSByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToByte() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToByte", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt16() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt16", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt32() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt32", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToUInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt64", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToSingle() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToSingle", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDouble() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDouble", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDecimal() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDecimal", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToDateTime() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDateTime", 1, [ "System.IFormatProvider" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _System_IConvertible_ToType() {
    return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToType", 2, [ "System.Type", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], r, "_CompareTo", null), e([ t.cache ], r, "_CompareTo_value", null), 
e([ t.cache ], r, "_Equals", null), e([ t.cache ], r, "_Equals_obj", null), e([ t.cache ], r, "_GetHashCode", null), 
e([ t.cache ], r, "_ToString", null), e([ t.cache ], r, "_ToString_format", null), 
e([ t.cache ], r, "_ToString_provider", null), e([ t.cache ], r, "_ToString_format_provider", null), 
e([ t.cache ], r, "_Parse", null), e([ t.cache ], r, "_Parse_s_style", null), e([ t.cache ], r, "_Parse_s_provider", null), 
e([ t.cache ], r, "_Parse_s_style_provider", null), e([ t.cache ], r, "_TryParse", null), 
e([ t.cache ], r, "_TryParse_s_style_provider_result", null), e([ t.cache ], r, "_GetTypeCode", null), 
e([ t.cache ], r, "_System_IConvertible_ToBoolean", null), e([ t.cache ], r, "_System_IConvertible_ToChar", null), 
e([ t.cache ], r, "_System_IConvertible_ToSByte", null), e([ t.cache ], r, "_System_IConvertible_ToByte", null), 
e([ t.cache ], r, "_System_IConvertible_ToInt16", null), e([ t.cache ], r, "_System_IConvertible_ToUInt16", null), 
e([ t.cache ], r, "_System_IConvertible_ToInt32", null), e([ t.cache ], r, "_System_IConvertible_ToUInt32", null), 
e([ t.cache ], r, "_System_IConvertible_ToInt64", null), e([ t.cache ], r, "_System_IConvertible_ToUInt64", null), 
e([ t.cache ], r, "_System_IConvertible_ToSingle", null), e([ t.cache ], r, "_System_IConvertible_ToDouble", null), 
e([ t.cache ], r, "_System_IConvertible_ToDecimal", null), e([ t.cache ], r, "_System_IConvertible_ToDateTime", null), 
e([ t.cache ], r, "_System_IConvertible_ToType", null), mscorlib.Api.Int32 = r;

},{"decorator-cache-getter":513}],394:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_Int32_Impl = void 0;

const e = require("../class");

class t extends e.System_ValueType_Impl {
  m_value=lfv(this.handle, "m_value").toInt32();
  MaxValue=lfv(this.handle, "MaxValue").toInt32();
  MinValue=lfv(this.handle, "MinValue").toInt32();
  constructor(e) {
    super(e);
  }
  CompareTo(e) {
    return mscorlib.Api.Int32._CompareTo(this.handle, e.handle).toInt32();
  }
  CompareTo_1(e) {
    return mscorlib.Api.Int32._CompareTo(this.handle, e.handle).toInt32();
  }
  Equals(e) {
    return !mscorlib.Api.Int32._Equals(this.handle, e.handle).isNull();
  }
  Equals_1(e) {
    return !mscorlib.Api.Int32._Equals(this.handle, e).isNull();
  }
  GetHashCode() {
    return mscorlib.Api.Int32._GetHashCode(this.handle).toInt32();
  }
  ToString() {
    return readU16(mscorlib.Api.Int32._ToString(this.handle));
  }
  ToString_formart(e) {
    return readU16(mscorlib.Api.Int32._ToString(this.handle, allocUStr(e)));
  }
  ToString_provider(e) {
    return readU16(mscorlib.Api.Int32._ToString(this.handle, e));
  }
  ToString_2(e, t) {
    return readU16(mscorlib.Api.Int32._ToString(this.handle, e, t));
  }
  static Parse(e) {
    return mscorlib.Api.Int32._Parse(allocUStr(e));
  }
  static Parse_2(e, t) {
    return mscorlib.Api.Int32._Parse(e, t);
  }
  static Parse_s_p(e, t) {
    return mscorlib.Api.Int32._Parse(e, t);
  }
  static Parse_3(e, t, r) {
    return mscorlib.Api.Int32._Parse(e, t, r);
  }
  static TryParse(e, t) {
    return mscorlib.Api.Int32._TryParse(e, t.handle);
  }
  static TryParse_4(e, t, r, n) {
    return mscorlib.Api.Int32._TryParse(e, t, r, n);
  }
  GetTypeCode() {
    return mscorlib.Api.Int32._GetTypeCode(this.handle);
  }
  System_IConvertible_ToBoolean(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToBoolean(this.handle, e);
  }
  System_IConvertible_ToChar(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToChar(this.handle, e);
  }
  System_IConvertible_ToSByte(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToSByte(this.handle, e);
  }
  System_IConvertible_ToByte(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToByte(this.handle, e);
  }
  System_IConvertible_ToInt16(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToInt16(this.handle, e);
  }
  System_IConvertible_ToUInt16(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToUInt16(this.handle, e);
  }
  System_IConvertible_ToInt32(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToInt32(this.handle, e);
  }
  System_IConvertible_ToUInt32(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToUInt32(this.handle, e);
  }
  System_IConvertible_ToInt64(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToInt64(this.handle, e);
  }
  System_IConvertible_ToUInt64(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToUInt64(this.handle, e);
  }
  System_IConvertible_ToSingle(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToSingle(this.handle, e);
  }
  System_IConvertible_ToDouble(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToDouble(this.handle, e);
  }
  System_IConvertible_ToDecimal(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToDecimal(this.handle, e);
  }
  System_IConvertible_ToDateTime(e) {
    return mscorlib.Api.Int32._System_IConvertible_ToDateTime(this.handle, e);
  }
  System_IConvertible_ToType(e, t) {
    return mscorlib.Api.Int32._System_IConvertible_ToType(this.handle, e, t);
  }
}

exports.System_Int32_Impl = t, mscorlib.Int32 = t;

},{"../class":451}],395:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":393,"./class":394}],396:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, i, r) {
  var o, n = arguments.length, l = n < 3 ? e : null === r ? r = Object.getOwnPropertyDescriptor(e, i) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(t, e, i, r); else for (var p = t.length - 1; p >= 0; p--) (o = t[p]) && (l = (n < 3 ? o(l) : n > 3 ? o(e, i, l) : o(e, i)) || l);
  return n > 3 && l && Object.defineProperty(e, i, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class i {
  static get __ctor_Int32() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", ".ctor", 1, [ "System.Int32" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_value_Int64() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", ".ctor", 1, [ "System.Int64" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_value_void_() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", ".ctor", 1, [ "System.Void*" ], "void", [ "pointer", "pointer" ]);
  }
  static get __ctor_info_context() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", ".ctor", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_Size() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "get_Size", 0, [], "pointer", []);
  }
  static get _System_Runtime_Serialization_ISerializable_GetObjectData() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "System.Runtime.Serialization.ISerializable.GetObjectData", 2, [ "System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "Equals", 1, [ "System.Object" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "GetHashCode", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToInt64() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "ToInt64", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToPointer() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "ToPointer", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
  static get _ToString_format() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "ToString", 1, [ "System.String" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Equality", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Inequality", 2, [ "System.IntPtr", "System.IntPtr" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Explicit() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Explicit", 1, [ "System.Int32" ], "pointer", [ "pointer" ]);
  }
  static get _op_Explicit_value() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Explicit", 1, [ "System.Int64" ], "pointer", [ "pointer" ]);
  }
  static get _op_Explicit_value_IntPtr() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Explicit", 1, [ "System.Void*" ], "pointer", [ "pointer" ]);
  }
  static get _op_Explicit_value_Int32() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Explicit", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _op_Explicit_value_void_() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "op_Explicit", 1, [ "System.IntPtr" ], "pointer", [ "pointer" ]);
  }
  static get _IsNull() {
    return Il2Cpp.Api.o("mscorlib", "System.IntPtr", "IsNull", 0, [], "pointer", [ "pointer" ]);
  }
}

t([ e.cache ], i, "__ctor_Int32", null), t([ e.cache ], i, "__ctor_value_Int64", null), 
t([ e.cache ], i, "__ctor_value_void_", null), t([ e.cache ], i, "__ctor_info_context", null), 
t([ e.cache ], i, "_get_Size", null), t([ e.cache ], i, "_System_Runtime_Serialization_ISerializable_GetObjectData", null), 
t([ e.cache ], i, "_Equals", null), t([ e.cache ], i, "_GetHashCode", null), t([ e.cache ], i, "_ToInt64", null), 
t([ e.cache ], i, "_ToPointer", null), t([ e.cache ], i, "_ToString", null), t([ e.cache ], i, "_ToString_format", null), 
t([ e.cache ], i, "_op_Equality", null), t([ e.cache ], i, "_op_Inequality", null), 
t([ e.cache ], i, "_op_Explicit", null), t([ e.cache ], i, "_op_Explicit_value", null), 
t([ e.cache ], i, "_op_Explicit_value_IntPtr", null), t([ e.cache ], i, "_op_Explicit_value_Int32", null), 
t([ e.cache ], i, "_op_Explicit_value_void_", null), t([ e.cache ], i, "_IsNull", null), 
mscorlib.Api.IntPtr = i;

},{"decorator-cache-getter":513}],397:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_IntPtr_Impl = void 0;

const t = require("../class");

class r extends t.System_ValueType_Impl {
  m_value=lfv(this.handle, "m_value");
  Zero=new r(lfv(this.handle, "Zero"));
  constructor(t) {
    super(t);
  }
  _ctor_Int32(t) {
    return mscorlib.Api.IntPtr.__ctor_Int32(this.handle, t);
  }
  _ctor_Int64(t) {
    return mscorlib.Api.IntPtr.__ctor_value_Int64(this.handle, t);
  }
  _ctor_1(t) {
    return mscorlib.Api.IntPtr.__ctor_value_void_(this.handle, t);
  }
  _ctor_2(t, r) {
    return mscorlib.Api.IntPtr.__ctor_info_context(this.handle, t, r);
  }
  static get_Size() {
    return mscorlib.Api.IntPtr._get_Size().tpInt32();
  }
  Equals(t) {
    return mscorlib.Api.IntPtr._Equals(this.handle, t);
  }
  GetHashCode() {
    return mscorlib.Api.IntPtr._GetHashCode(this.handle);
  }
  ToInt64() {
    return mscorlib.Api.IntPtr._ToInt64(this.handle);
  }
  ToPointer() {
    return mscorlib.Api.IntPtr._ToPointer(this.handle);
  }
  ToString() {
    return readU16(mscorlib.Api.IntPtr._ToString(this.handle));
  }
  ToString_1(t) {
    return readU16(mscorlib.Api.IntPtr._ToString(this.handle, t));
  }
  static op_Equality(t, r) {
    return mscorlib.Api.IntPtr._op_Equality(t.handle, r.handle);
  }
  static op_Inequality(t, r) {
    return mscorlib.Api.IntPtr._op_Inequality(t.handle, r.handle);
  }
  static op_Explicit(t) {
    return mscorlib.Api.IntPtr._op_Explicit(t);
  }
  static op_Explicit_Int64(t) {
    return mscorlib.Api.IntPtr._op_Explicit(t);
  }
  static op_Explicit_void_(t) {
    return mscorlib.Api.IntPtr._op_Explicit(t);
  }
  static op_Explicit_ret_Int32(t) {
    return mscorlib.Api.IntPtr._op_Explicit(t.handle);
  }
  static op_Explicit_ret_Void_xin(t) {
    return mscorlib.Api.IntPtr._op_Explicit(t.handle);
  }
  IsNull() {
    return mscorlib.Api.IntPtr._IsNull(this.handle);
  }
}

exports.System_IntPtr_Impl = r, mscorlib.IntPtr = r;

},{"../class":451}],398:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":396,"./class":397}],399:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, c) {
  var o, n = arguments.length, a = n < 3 ? t : null === c ? c = Object.getOwnPropertyDescriptor(t, r) : c;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, c); else for (var i = e.length - 1; i >= 0; i--) (o = e[i]) && (a = (n < 3 ? o(a) : n > 3 ? o(t, r, a) : o(t, r)) || a);
  return n > 3 && a && Object.defineProperty(t, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.LoadSceneParameters", ".ctor", 1, "void", [ "pointer", "pointer" ]);
  }
}

e([ t.cache ], r, "__ctor", null), Il2Cpp.Api.LoadSceneParameters = r;

},{"decorator-cache-getter":513}],400:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SceneManagement_LoadSceneParameters_Impl = void 0;

const e = require("../class");

class a extends e.System_ValueType_Impl {
  m_LoadSceneMode=lfv(this.handle, "m_LoadSceneMode");
  m_LocalPhysicsMode=lfv(this.handle, "m_LocalPhysicsMode");
  constructor(e) {
    super(e);
  }
  __ctor(e) {
    return Il2Cpp.Api.LoadSceneParameters.__ctor(this.handle, e);
  }
}

exports.UnityEngine_SceneManagement_LoadSceneParameters_Impl = a, Il2Cpp.LoadSceneParameters = a;

},{"../class":451}],401:[function(require,module,exports){
"use strict";

var e, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0, 
function(e) {
  e[e.None = 0] = "None", e[e.Physics2D = 1] = "Physics2D", e[e.Physics3D = 2] = "Physics3D";
}(e = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {})), 
function(e) {
  e[e.Single = 0] = "Single", e[e.Additive = 1] = "Additive";
}(n = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));

},{}],402:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":399,"./class":400,"./enum":401}],403:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, r, o) {
  var n, i = arguments.length, l = i < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(t, e, r, o); else for (var c = t.length - 1; c >= 0; c--) (n = t[c]) && (l = (i < 3 ? n(l) : i > 3 ? n(e, r, l) : n(e, r)) || l);
  return i > 3 && l && Object.defineProperty(e, r, l), l;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", ".ctor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_startColor() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "get_startColor", 0, "pointer", [ "pointer" ]);
  }
  static get _set_startColor() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "set_startColor", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_startColor_Injected() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "get_startColor_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _set_startColor_Injected() {
    return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "set_startColor_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
}

t([ e.cache ], r, "__ctor", null), t([ e.cache ], r, "_get_startColor", null), t([ e.cache ], r, "_set_startColor", null), 
t([ e.cache ], r, "_get_startColor_Injected", null), t([ e.cache ], r, "_set_startColor_Injected", null), 
Il2Cpp.Api.MainModule = r;

},{"decorator-cache-getter":513}],404:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_ParticleSystem_MainModule_Impl = void 0;

const t = require("../class");

class e extends t.System_ValueType_Impl {
  m_ParticleSystem=lfv(this.handle, "m_ParticleSystem");
  constructor(t) {
    super(t);
  }
  __ctor(t) {
    return Il2Cpp.Api.MainModule.__ctor(this.handle, t);
  }
  get_startColor() {
    return Il2Cpp.Api.MainModule._get_startColor(this.handle);
  }
  set_startColor(t) {
    return Il2Cpp.Api.MainModule._set_startColor(this.handle, t);
  }
  static get_startColor_Injected(t, e) {
    return Il2Cpp.Api.MainModule._get_startColor_Injected(t, e);
  }
  static set_startColor_Injected(t, e) {
    return Il2Cpp.Api.MainModule._set_startColor_Injected(t, e);
  }
}

exports.UnityEngine_ParticleSystem_MainModule_Impl = e, Il2Cpp.MainModule = e;

},{"../class":451}],405:[function(require,module,exports){
"use strict";

},{}],406:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":403,"./class":404,"./export":405}],407:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, o = arguments.length, p = o < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, n, i); else for (var l = t.length - 1; l >= 0; l--) (r = t[l]) && (p = (o < 3 ? r(p) : o > 3 ? r(e, n, p) : r(e, n)) || p);
  return o > 3 && p && Object.defineProperty(e, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _GetLossyScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetLossyScale", 0, "pointer", [ "pointer" ]);
  }
  static get _get_lossyScale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_lossyScale", 0, "pointer", [ "pointer" ]);
  }
  static get _TRS() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "TRS", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SetTRS() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "SetTRS", 3, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Inverse() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Inverse", 1, "pointer", [ "pointer" ]);
  }
  static get _get_inverse() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_inverse", 0, "pointer", [ "pointer" ]);
  }
  static get _Transpose() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Transpose", 1, "pointer", [ "pointer" ]);
  }
  static get _get_transpose() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_transpose", 0, "pointer", [ "pointer" ]);
  }
  static get _Perspective() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Perspective", 4, "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Equals", 1, [ "UnityEngine.Matrix4x4" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply_lhs_vector() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Multiply", 2, [ "UnityEngine.Matrix4x4", "UnityEngine.Vector4" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetColumn() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetColumn", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _MultiplyPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyPoint", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _MultiplyPoint3x4() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyPoint3x4", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _MultiplyVector() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyVector", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Translate() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Translate", 1, "pointer", [ "pointer" ]);
  }
  static get _Rotate() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Rotate", 1, "pointer", [ "pointer" ]);
  }
  static get _get_identity() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_identity", 0, "pointer", []);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", ".cctor", 0, "void", []);
  }
  static get _GetLossyScale_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetLossyScale_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _TRS_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "TRS_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Inverse_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Inverse_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _Transpose_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Transpose_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _Perspective_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Perspective_Injected", 5, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], n, "_GetLossyScale", null), t([ e.cache ], n, "_get_lossyScale", null), 
t([ e.cache ], n, "_TRS", null), t([ e.cache ], n, "_SetTRS", null), t([ e.cache ], n, "_Inverse", null), 
t([ e.cache ], n, "_get_inverse", null), t([ e.cache ], n, "_Transpose", null), 
t([ e.cache ], n, "_get_transpose", null), t([ e.cache ], n, "_Perspective", null), 
t([ e.cache ], n, "__ctor", null), t([ e.cache ], n, "_GetHashCode", null), t([ e.cache ], n, "_Equals", null), 
t([ e.cache ], n, "_Equals_other", null), t([ e.cache ], n, "_op_Multiply", null), 
t([ e.cache ], n, "_op_Multiply_lhs_vector", null), t([ e.cache ], n, "_op_Equality", null), 
t([ e.cache ], n, "_GetColumn", null), t([ e.cache ], n, "_MultiplyPoint", null), 
t([ e.cache ], n, "_MultiplyPoint3x4", null), t([ e.cache ], n, "_MultiplyVector", null), 
t([ e.cache ], n, "_Translate", null), t([ e.cache ], n, "_Rotate", null), t([ e.cache ], n, "_get_identity", null), 
t([ e.cache ], n, "_ToString", null), t([ e.cache ], n, "_ToString_format_formatProvider", null), 
t([ e.cache ], n, "__cctor", null), t([ e.cache ], n, "_GetLossyScale_Injected", null), 
t([ e.cache ], n, "_TRS_Injected", null), t([ e.cache ], n, "_Inverse_Injected", null), 
t([ e.cache ], n, "_Transpose_Injected", null), t([ e.cache ], n, "_Perspective_Injected", null), 
Il2Cpp.Api.Matrix4x4 = n;

},{"decorator-cache-getter":513}],408:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Matrix4x4_Impl = void 0;

const t = require("../class");

class e extends t.System_ValueType_Impl {
  m00=lfv(this.handle, "m00");
  m10=lfv(this.handle, "m10");
  m20=lfv(this.handle, "m20");
  m30=lfv(this.handle, "m30");
  m01=lfv(this.handle, "m01");
  m11=lfv(this.handle, "m11");
  m21=lfv(this.handle, "m21");
  m31=lfv(this.handle, "m31");
  m02=lfv(this.handle, "m02");
  m12=lfv(this.handle, "m12");
  m22=lfv(this.handle, "m22");
  m32=lfv(this.handle, "m32");
  m03=lfv(this.handle, "m03");
  m13=lfv(this.handle, "m13");
  m23=lfv(this.handle, "m23");
  m33=lfv(this.handle, "m33");
  zeroMatrix=lfv(this.handle, "zeroMatrix");
  identityMatrix=lfv(this.handle, "identityMatrix");
  constructor(t) {
    super(t);
  }
  GetLossyScale() {
    return Il2Cpp.Api.Matrix4x4._GetLossyScale(this.handle);
  }
  get_lossyScale() {
    return Il2Cpp.Api.Matrix4x4._get_lossyScale(this.handle);
  }
  static TRS(t, e, i) {
    return Il2Cpp.Api.Matrix4x4._TRS(t, e, i);
  }
  SetTRS(t, e, i) {
    return Il2Cpp.Api.Matrix4x4._SetTRS(this.handle, t, e, i);
  }
  static Inverse(t) {
    return Il2Cpp.Api.Matrix4x4._Inverse(t);
  }
  get_inverse() {
    return Il2Cpp.Api.Matrix4x4._get_inverse(this.handle);
  }
  static Transpose(t) {
    return Il2Cpp.Api.Matrix4x4._Transpose(t);
  }
  get_transpose() {
    return Il2Cpp.Api.Matrix4x4._get_transpose(this.handle);
  }
  static Perspective(t, e, i, r) {
    return Il2Cpp.Api.Matrix4x4._Perspective(t, e, i, r);
  }
  __ctor(t, e, i, r) {
    return Il2Cpp.Api.Matrix4x4.__ctor(this.handle, t, e, i, r);
  }
  GetHashCode() {
    return Il2Cpp.Api.Matrix4x4._GetHashCode(this.handle);
  }
  Equals(t) {
    return Il2Cpp.Api.Matrix4x4._Equals(this.handle, t);
  }
  Equals_1(t) {
    return Il2Cpp.Api.Matrix4x4._Equals(this.handle, t);
  }
  static op_Multiply(t, e) {
    return Il2Cpp.Api.Matrix4x4._op_Multiply(t, e);
  }
  static op_Multiply_2(t, e) {
    return Il2Cpp.Api.Matrix4x4._op_Multiply(t, e);
  }
  static op_Equality(t, e) {
    return Il2Cpp.Api.Matrix4x4._op_Equality(t, e);
  }
  GetColumn(t) {
    return Il2Cpp.Api.Matrix4x4._GetColumn(this.handle, t);
  }
  MultiplyPoint(t) {
    return Il2Cpp.Api.Matrix4x4._MultiplyPoint(this.handle, t);
  }
  MultiplyPoint3x4(t) {
    return Il2Cpp.Api.Matrix4x4._MultiplyPoint3x4(this.handle, t);
  }
  MultiplyVector(t) {
    return Il2Cpp.Api.Matrix4x4._MultiplyVector(this.handle, t);
  }
  static Translate(t) {
    return Il2Cpp.Api.Matrix4x4._Translate(t);
  }
  static Rotate(t) {
    return Il2Cpp.Api.Matrix4x4._Rotate(t);
  }
  static get_identity() {
    return Il2Cpp.Api.Matrix4x4._get_identity();
  }
  ToString() {
    return readU16(Il2Cpp.Api.Matrix4x4._ToString(this.handle));
  }
  ToString_2(t, e) {
    return readU16(Il2Cpp.Api.Matrix4x4._ToString(this.handle, t, e));
  }
  static _cctor() {
    return Il2Cpp.Api.Matrix4x4.__cctor();
  }
  static GetLossyScale_Injected(t, e) {
    return Il2Cpp.Api.Matrix4x4._GetLossyScale_Injected(t, e);
  }
  static TRS_Injected(t, e, i, r) {
    return Il2Cpp.Api.Matrix4x4._TRS_Injected(t, e, i, r);
  }
  static Inverse_Injected(t, e) {
    return Il2Cpp.Api.Matrix4x4._Inverse_Injected(t, e);
  }
  static Transpose_Injected(t, e) {
    return Il2Cpp.Api.Matrix4x4._Transpose_Injected(t, e);
  }
  static Perspective_Injected(t, e, i, r, p) {
    return Il2Cpp.Api.Matrix4x4._Perspective_Injected(t, e, i, r, p);
  }
}

exports.UnityEngine_Matrix4x4_Impl = e, Il2Cpp.Matrix4x4 = e;

},{"../class":451}],409:[function(require,module,exports){
"use strict";

var e, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0, 
function(e) {
  e[e.None = 0] = "None", e[e.Physics2D = 1] = "Physics2D", e[e.Physics3D = 2] = "Physics3D";
}(e = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {})), 
function(e) {
  e[e.Single = 0] = "Single", e[e.Additive = 1] = "Additive";
}(n = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));

},{}],410:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":407,"./class":408,"./enum":409}],411:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, i) {
  var r, o = arguments.length, p = o < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, n, t, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (p = (o < 3 ? r(p) : o > 3 ? r(n, t, p) : r(n, t)) || p);
  return o > 3 && p && Object.defineProperty(n, t, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _FromToRotation() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "FromToRotation", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Inverse() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Inverse", 1, "pointer", [ "pointer" ]);
  }
  static get _Slerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Slerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SlerpUnclamped() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "SlerpUnclamped", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Lerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Internal_FromEulerRad() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_FromEulerRad", 1, "pointer", [ "pointer" ]);
  }
  static get _Internal_ToEulerRad() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_ToEulerRad", 1, "pointer", [ "pointer" ]);
  }
  static get _AngleAxis() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "AngleAxis", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _LookRotation() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _LookRotation_forward() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_identity() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_identity", 0, "pointer", []);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply_rotation_point() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Multiply", 2, [ "UnityEngine.Quaternion", "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _IsEqualUsingDot() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "IsEqualUsingDot", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Inequality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Dot() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Dot", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Angle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Angle", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Internal_MakePositive() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_MakePositive", 1, "pointer", [ "pointer" ]);
  }
  static get _get_eulerAngles() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_eulerAngles", 0, "pointer", [ "pointer" ]);
  }
  static get _Euler() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Euler", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Euler_euler() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Euler", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer" ]);
  }
  static get _Normalize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Normalize", 1, "pointer", [ "pointer" ]);
  }
  static get _get_normalized() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_normalized", 0, "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Equals", 1, [ "UnityEngine.Quaternion" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", ".cctor", 0, "void", []);
  }
  static get _FromToRotation_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "FromToRotation_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Inverse_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Inverse_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _Slerp_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Slerp_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SlerpUnclamped_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "SlerpUnclamped_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Lerp_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Lerp_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Internal_FromEulerRad_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_FromEulerRad_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _Internal_ToEulerRad_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_ToEulerRad_Injected", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _AngleAxis_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "AngleAxis_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _LookRotation_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation_Injected", 3, "void", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ n.cache ], t, "_FromToRotation", null), e([ n.cache ], t, "_Inverse", null), 
e([ n.cache ], t, "_Slerp", null), e([ n.cache ], t, "_SlerpUnclamped", null), e([ n.cache ], t, "_Lerp", null), 
e([ n.cache ], t, "_Internal_FromEulerRad", null), e([ n.cache ], t, "_Internal_ToEulerRad", null), 
e([ n.cache ], t, "_AngleAxis", null), e([ n.cache ], t, "_LookRotation", null), 
e([ n.cache ], t, "_LookRotation_forward", null), e([ n.cache ], t, "__ctor", null), 
e([ n.cache ], t, "_get_identity", null), e([ n.cache ], t, "_op_Multiply", null), 
e([ n.cache ], t, "_op_Multiply_rotation_point", null), e([ n.cache ], t, "_IsEqualUsingDot", null), 
e([ n.cache ], t, "_op_Equality", null), e([ n.cache ], t, "_op_Inequality", null), 
e([ n.cache ], t, "_Dot", null), e([ n.cache ], t, "_Angle", null), e([ n.cache ], t, "_Internal_MakePositive", null), 
e([ n.cache ], t, "_get_eulerAngles", null), e([ n.cache ], t, "_Euler", null), 
e([ n.cache ], t, "_Euler_euler", null), e([ n.cache ], t, "_Normalize", null), 
e([ n.cache ], t, "_get_normalized", null), e([ n.cache ], t, "_GetHashCode", null), 
e([ n.cache ], t, "_Equals", null), e([ n.cache ], t, "_Equals_other", null), e([ n.cache ], t, "_ToString", null), 
e([ n.cache ], t, "_ToString_format_formatProvider", null), e([ n.cache ], t, "__cctor", null), 
e([ n.cache ], t, "_FromToRotation_Injected", null), e([ n.cache ], t, "_Inverse_Injected", null), 
e([ n.cache ], t, "_Slerp_Injected", null), e([ n.cache ], t, "_SlerpUnclamped_Injected", null), 
e([ n.cache ], t, "_Lerp_Injected", null), e([ n.cache ], t, "_Internal_FromEulerRad_Injected", null), 
e([ n.cache ], t, "_Internal_ToEulerRad_Injected", null), e([ n.cache ], t, "_AngleAxis_Injected", null), 
e([ n.cache ], t, "_LookRotation_Injected", null), Il2Cpp.Api.Quaternion = t;

},{"decorator-cache-getter":513}],412:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Quaternion_Impl = void 0;

const e = require("../class");

class n extends e.System_ValueType_Impl {
  x=lfv(this.handle, "x");
  y=lfv(this.handle, "y");
  z=lfv(this.handle, "z");
  w=lfv(this.handle, "w");
  identityQuaternion=lfv(this.handle, "identityQuaternion");
  kEpsilon=lfv(this.handle, "kEpsilon");
  constructor(e) {
    super(e);
  }
  FromToRotation(e, n) {
    return Il2Cpp.Api.Quaternion._FromToRotation(e, n);
  }
  Inverse(e) {
    return Il2Cpp.Api.Quaternion._Inverse(e);
  }
  Slerp(e, n, t) {
    return Il2Cpp.Api.Quaternion._Slerp(e, n, t);
  }
  SlerpUnclamped(e, n, t) {
    return Il2Cpp.Api.Quaternion._SlerpUnclamped(e, n, t);
  }
  Lerp(e, n, t) {
    return Il2Cpp.Api.Quaternion._Lerp(e, n, t);
  }
  Internal_FromEulerRad(e) {
    return Il2Cpp.Api.Quaternion._Internal_FromEulerRad(e);
  }
  Internal_ToEulerRad(e) {
    return Il2Cpp.Api.Quaternion._Internal_ToEulerRad(e);
  }
  AngleAxis(e, n) {
    return Il2Cpp.Api.Quaternion._AngleAxis(e, n);
  }
  LookRotation_2(e, n) {
    return Il2Cpp.Api.Quaternion._LookRotation(e, n);
  }
  LookRotation_1(e) {
    return Il2Cpp.Api.Quaternion._LookRotation(e);
  }
  _ctor_4(e, n, t, r) {
    return Il2Cpp.Api.Quaternion.__ctor(this.handle, e, n, t, r);
  }
  get_identity() {
    return Il2Cpp.Api.Quaternion._get_identity();
  }
  op_Multiply(e, n) {
    return Il2Cpp.Api.Quaternion._op_Multiply(e, n);
  }
  op_Multiply_rotation_point(e, n) {
    return Il2Cpp.Api.Quaternion._op_Multiply(e, n);
  }
  IsEqualUsingDot(e) {
    return Il2Cpp.Api.Quaternion._IsEqualUsingDot(e);
  }
  op_Equality(e, n) {
    return Il2Cpp.Api.Quaternion._op_Equality(e, n);
  }
  op_Inequality(e, n) {
    return Il2Cpp.Api.Quaternion._op_Inequality(e, n);
  }
  Dot(e, n) {
    return Il2Cpp.Api.Quaternion._Dot(e, n);
  }
  Angle(e, n) {
    return Il2Cpp.Api.Quaternion._Angle(e, n);
  }
  Internal_MakePositive(e) {
    return Il2Cpp.Api.Quaternion._Internal_MakePositive(e);
  }
  get_eulerAngles() {
    return Il2Cpp.Api.Quaternion._get_eulerAngles(this.handle);
  }
  Euler_3(e, n, t) {
    return Il2Cpp.Api.Quaternion._Euler(e, n, t);
  }
  Euler_1(e) {
    return Il2Cpp.Api.Quaternion._Euler(e);
  }
  Normalize(e) {
    return Il2Cpp.Api.Quaternion._Normalize(e);
  }
  get_normalized() {
    return Il2Cpp.Api.Quaternion._get_normalized(this.handle);
  }
  GetHashCode() {
    return Il2Cpp.Api.Quaternion._GetHashCode(this.handle);
  }
  Equals_System_Object(e) {
    return Il2Cpp.Api.Quaternion._Equals(this.handle, e);
  }
  Equals_Quaternion(e) {
    return Il2Cpp.Api.Quaternion._Equals(this.handle, e);
  }
  ToString() {
    return readU16(Il2Cpp.Api.Quaternion._ToString(this.handle));
  }
  ToString_2(e, n) {
    return readU16(Il2Cpp.Api.Quaternion._ToString(this.handle, e, n));
  }
  _cctor() {
    return Il2Cpp.Api.Quaternion.__cctor();
  }
  FromToRotation_Injected(e, n, t) {
    return Il2Cpp.Api.Quaternion._FromToRotation_Injected(e, n, t);
  }
  Inverse_Injected(e, n) {
    return Il2Cpp.Api.Quaternion._Inverse_Injected(e, n);
  }
  Slerp_Injected(e, n, t, r) {
    return Il2Cpp.Api.Quaternion._Slerp_Injected(e, n, t, r);
  }
  SlerpUnclamped_Injected(e, n, t, r) {
    return Il2Cpp.Api.Quaternion._SlerpUnclamped_Injected(e, n, t, r);
  }
  Lerp_Injected(e, n, t, r) {
    return Il2Cpp.Api.Quaternion._Lerp_Injected(e, n, t, r);
  }
  Internal_FromEulerRad_Injected(e, n) {
    return Il2Cpp.Api.Quaternion._Internal_FromEulerRad_Injected(e, n);
  }
  Internal_ToEulerRad_Injected(e, n) {
    return Il2Cpp.Api.Quaternion._Internal_ToEulerRad_Injected(e, n);
  }
  AngleAxis_Injected(e, n, t) {
    return Il2Cpp.Api.Quaternion._AngleAxis_Injected(e, n, t);
  }
  LookRotation_Injected(e, n, t) {
    return Il2Cpp.Api.Quaternion._LookRotation_Injected(e, n, t);
  }
}

exports.UnityEngine_Quaternion_Impl = n, Il2Cpp.Quaternion = n;

},{"../class":451}],413:[function(require,module,exports){
"use strict";

},{}],414:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":411,"./class":412,"./export":413}],415:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, i, n) {
  var r, o = arguments.length, p = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, i, n); else for (var c = t.length - 1; c >= 0; c--) (r = t[c]) && (p = (o < 3 ? r(p) : o > 3 ? r(e, i, p) : r(e, i)) || p);
  return o > 3 && p && Object.defineProperty(e, i, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class i {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", ".ctor", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _get_origin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "get_origin", 0, "pointer", [ "pointer" ]);
  }
  static get _set_origin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "set_origin", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_direction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "get_direction", 0, "pointer", [ "pointer" ]);
  }
  static get _set_direction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "set_direction", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _GetPoint() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "GetPoint", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Ray", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

t([ e.cache ], i, "__ctor", null), t([ e.cache ], i, "_get_origin", null), t([ e.cache ], i, "_set_origin", null), 
t([ e.cache ], i, "_get_direction", null), t([ e.cache ], i, "_set_direction", null), 
t([ e.cache ], i, "_GetPoint", null), t([ e.cache ], i, "_ToString", null), t([ e.cache ], i, "_ToString_format_formatProvider", null), 
Il2Cpp.Api.Ray = i;

},{"decorator-cache-getter":513}],416:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Ray_Impl = void 0;

const e = require("../class"), i = require("../Vector3/class");

class t extends e.System_ValueType_Impl {
  m_Origin=lfv(this.handle, "m_Origin");
  m_Direction=lfv(this.handle, "m_Direction");
  constructor(e) {
    super(e);
  }
  __ctor(e, i) {
    return Il2Cpp.Api.Ray.__ctor(this.handle, e.handle, i.handle);
  }
  get_origin() {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._get_origin(this.handle));
  }
  set_origin(e) {
    return Il2Cpp.Api.Ray._set_origin(this.handle, e.handle);
  }
  get_direction() {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._get_direction(this.handle));
  }
  set_direction(e) {
    return Il2Cpp.Api.Ray._set_direction(this.handle, e);
  }
  GetPoint(e) {
    return new i.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._GetPoint(this.handle, e));
  }
  ToString() {
    return readU16(Il2Cpp.Api.Ray._ToString(this.handle));
  }
  ToString_2(e, i) {
    return readU16(Il2Cpp.Api.Ray._ToString(this.handle, e, i));
  }
}

exports.UnityEngine_Ray_Impl = t, Il2Cpp.Ray = t;

},{"../Vector3/class":443,"../class":451}],417:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":415,"./class":416}],418:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, i, n) {
  var r, c = arguments.length, o = c < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var a = t.length - 1; a >= 0; a--) (r = t[a]) && (o = (c < 3 ? r(o) : c > 3 ? r(e, i, o) : r(e, i)) || o);
  return c > 3 && o && Object.defineProperty(e, i, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class i {
  static get _get_collider() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_collider", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_point() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_point", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_normal() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_normal", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_distance() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_distance", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_triangleIndex() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_triangleIndex", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_transform() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_transform", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_rigidbody() {
    return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.RaycastHit", "get_rigidbody", 0, [], "pointer", [ "pointer" ]);
  }
}

t([ e.cache ], i, "_get_collider", null), t([ e.cache ], i, "_get_point", null), 
t([ e.cache ], i, "_get_normal", null), t([ e.cache ], i, "_get_distance", null), 
t([ e.cache ], i, "_get_triangleIndex", null), t([ e.cache ], i, "_get_transform", null), 
t([ e.cache ], i, "_get_rigidbody", null), Il2Cpp.Api.RaycastHit = i;

},{"decorator-cache-getter":513}],419:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_RaycastHit_Impl = void 0;

const e = require("../../Object/Component/Collider/class"), t = require("../../Object/Component/Rigidbody/class"), n = require("../../Object/Component/Transform/class"), i = require("../class"), l = require("../Vector2/class"), r = require("../Vector3/class");

class a extends i.System_ValueType_Impl {
  m_Point=new r.UnityEngine_Vector3_Impl(lfv(this.handle, "m_Point"));
  m_Normal=new r.UnityEngine_Vector3_Impl(lfv(this.handle, "m_Normal"));
  m_FaceID=lfv(this.handle, "m_FaceID").toInt32();
  m_Distance=readSingle(lfv(this.handle, "m_Distance"));
  m_UV=new l.UnityEngine_Vector2_Impl(lfv(this.handle, "m_UV"));
  m_Collider=lfv(this.handle, "m_Collider").toInt32();
  constructor(e) {
    super(e);
  }
  get_collider() {
    return new e.UnityEngine_Collider_Impl(Il2Cpp.Api.RaycastHit._get_collider(this.handle));
  }
  get_point() {
    return new r.UnityEngine_Vector3_Impl(Il2Cpp.Api.RaycastHit._get_point(this.handle));
  }
  get_normal() {
    return new r.UnityEngine_Vector3_Impl(Il2Cpp.Api.RaycastHit._get_normal(this.handle));
  }
  get_distance() {
    return readSingle(Il2Cpp.Api.RaycastHit._get_distance(this.handle));
  }
  get_triangleIndex() {
    return Il2Cpp.Api.RaycastHit._get_triangleIndex(this.handle).toInt32();
  }
  get_transform() {
    return new n.UnityEngine_Transform_Impl(Il2Cpp.Api.RaycastHit._get_transform(this.handle));
  }
  get_rigidbody() {
    return new t.UnityEngine_Rigidbody_Impl(Il2Cpp.Api.RaycastHit._get_rigidbody(this.handle));
  }
}

exports.UnityEngine_RaycastHit_Impl = a, Il2Cpp.RaycastHit = a;

},{"../../Object/Component/Collider/class":247,"../../Object/Component/Rigidbody/class":263,"../../Object/Component/Transform/class":271,"../Vector2/class":439,"../Vector3/class":443,"../class":451}],420:[function(require,module,exports){
"use strict";

},{}],421:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":418,"./class":419,"./export":420}],422:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, c = arguments.length, a = c < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var s = e.length - 1; s >= 0; s--) (r = e[s]) && (a = (c < 3 ? r(a) : c > 3 ? r(t, n, a) : r(t, n)) || a);
  return c > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_gameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycastResult", "get_gameObject", 0, [], "pointer", [ "pointer" ]);
  }
  static get _set_gameObject() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycastResult", "set_gameObject", 1, [ "UnityEngine.GameObject" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_isValid() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycastResult", "get_isValid", 0, [], "pointer", [ "pointer" ]);
  }
  static get _Clear() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycastResult", "Clear", 0, [], "void", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.RaycastResult", "ToString", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_gameObject", null), e([ t.cache ], n, "_set_gameObject", null), 
e([ t.cache ], n, "_get_isValid", null), e([ t.cache ], n, "_Clear", null), e([ t.cache ], n, "_ToString", null), 
Il2Cpp.Api.RaycastResult = n;

},{"decorator-cache-getter":513}],423:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_EventSystems_RaycastResult_Impl = void 0;

const e = require("../../Object/GameObject/class"), t = require("../class"), s = require("../Vector2/class"), l = require("../Vector3/class");

class n extends t.System_ValueType_Impl {
  m_GameObject=new e.GameObjectImpl(lfv(this.handle, "m_GameObject"));
  module=lfv(this.handle, "module");
  distance=readSingle(lfv(this.handle, "distance"));
  index=readSingle(lfv(this.handle, "index"));
  depth=lfv(this.handle, "depth").toInt32();
  sortingLayer=lfv(this.handle, "sortingLayer").toInt32();
  sortingOrder=lfv(this.handle, "sortingOrder").toInt32();
  worldPosition=new l.UnityEngine_Vector3_Impl(lfv(this.handle, "worldPosition"));
  worldNormal=new l.UnityEngine_Vector3_Impl(lfv(this.handle, "worldNormal"));
  screenPosition=new s.UnityEngine_Vector2_Impl(lfv(this.handle, "screenPosition"));
  displayIndex=lfv(this.handle, "displayIndex").toInt32();
  constructor(e) {
    super(e);
  }
  get_gameObject() {
    return new e.GameObjectImpl(Il2Cpp.Api.RaycastResult._get_gameObject(this.handle));
  }
  set_gameObject(e) {
    return Il2Cpp.Api.RaycastResult._set_gameObject(this.handle, e.handle);
  }
  get_isValid() {
    return Il2Cpp.Api.RaycastResult._get_isValid(this.handle);
  }
  Clear() {
    return Il2Cpp.Api.RaycastResult._Clear(this.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.RaycastResult._ToString(this.handle));
  }
}

exports.UnityEngine_EventSystems_RaycastResult_Impl = n, Il2Cpp.RaycastResult = n;

},{"../../Object/GameObject/class":279,"../Vector2/class":439,"../Vector3/class":443,"../class":451}],424:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":422,"./class":423}],425:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (r = e[c]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_position_size() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 2, [ "UnityEngine.Vector2", "UnityEngine.Vector2" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_source() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 1, [ "UnityEngine.Rect" ], "void", [ "pointer", "pointer" ]);
  }
  static get _get_zero() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_zero", 0, "pointer", []);
  }
  static get _get_x() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_x", 0, "pointer", [ "pointer" ]);
  }
  static get _set_x() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_x", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_y() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_y", 0, "pointer", [ "pointer" ]);
  }
  static get _set_y() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_y", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_position() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_position", 0, "pointer", [ "pointer" ]);
  }
  static get _set_position() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_position", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_center() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_center", 0, "pointer", [ "pointer" ]);
  }
  static get _get_min() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_min", 0, "pointer", [ "pointer" ]);
  }
  static get _get_max() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_max", 0, "pointer", [ "pointer" ]);
  }
  static get _get_width() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_width", 0, "pointer", [ "pointer" ]);
  }
  static get _set_width() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_width", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_height() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_height", 0, "pointer", [ "pointer" ]);
  }
  static get _set_height() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_height", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_size() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_size", 0, "pointer", [ "pointer" ]);
  }
  static get _get_xMin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_xMin", 0, "pointer", [ "pointer" ]);
  }
  static get _set_xMin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_xMin", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_yMin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_yMin", 0, "pointer", [ "pointer" ]);
  }
  static get _set_yMin() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_yMin", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_xMax() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_xMax", 0, "pointer", [ "pointer" ]);
  }
  static get _set_xMax() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_xMax", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _get_yMax() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_yMax", 0, "pointer", [ "pointer" ]);
  }
  static get _set_yMax() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_yMax", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Contains() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Contains", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Contains_point() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Contains", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _OrderMinMax() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "OrderMinMax", 1, "pointer", [ "pointer" ]);
  }
  static get _Overlaps() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Overlaps", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Overlaps_other_allowInverse() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Overlaps", 2, [ "UnityEngine.Rect", "System.Boolean" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "op_Inequality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Equals", 1, [ "UnityEngine.Rect" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "__ctor_position_size", null), 
e([ t.cache ], n, "__ctor_source", null), e([ t.cache ], n, "_get_zero", null), 
e([ t.cache ], n, "_get_x", null), e([ t.cache ], n, "_set_x", null), e([ t.cache ], n, "_get_y", null), 
e([ t.cache ], n, "_set_y", null), e([ t.cache ], n, "_get_position", null), e([ t.cache ], n, "_set_position", null), 
e([ t.cache ], n, "_get_center", null), e([ t.cache ], n, "_get_min", null), e([ t.cache ], n, "_get_max", null), 
e([ t.cache ], n, "_get_width", null), e([ t.cache ], n, "_set_width", null), e([ t.cache ], n, "_get_height", null), 
e([ t.cache ], n, "_set_height", null), e([ t.cache ], n, "_get_size", null), e([ t.cache ], n, "_get_xMin", null), 
e([ t.cache ], n, "_set_xMin", null), e([ t.cache ], n, "_get_yMin", null), e([ t.cache ], n, "_set_yMin", null), 
e([ t.cache ], n, "_get_xMax", null), e([ t.cache ], n, "_set_xMax", null), e([ t.cache ], n, "_get_yMax", null), 
e([ t.cache ], n, "_set_yMax", null), e([ t.cache ], n, "_Contains", null), e([ t.cache ], n, "_Contains_point", null), 
e([ t.cache ], n, "_OrderMinMax", null), e([ t.cache ], n, "_Overlaps", null), e([ t.cache ], n, "_Overlaps_other_allowInverse", null), 
e([ t.cache ], n, "_op_Inequality", null), e([ t.cache ], n, "_op_Equality", null), 
e([ t.cache ], n, "_GetHashCode", null), e([ t.cache ], n, "_Equals", null), e([ t.cache ], n, "_Equals_other", null), 
e([ t.cache ], n, "_ToString", null), e([ t.cache ], n, "_ToString_format_formatProvider", null), 
Il2Cpp.Api.Rect = n;

},{"decorator-cache-getter":513}],426:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Rect = void 0;

const e = require("../Vector2/class"), t = require("../class");

class n extends t.System_ValueType_Impl {
  m_XMin=readSingle(lfv(this.handle, "m_XMin"));
  m_YMin=readSingle(lfv(this.handle, "m_YMin"));
  m_Width=readSingle(lfv(this.handle, "m_Width"));
  m_Height=readSingle(lfv(this.handle, "m_Height"));
  constructor(e) {
    super(e);
  }
  _ctor_Rect(e, t, n, i) {
    return Il2Cpp.Api.Rect.__ctor(this.handle, e, t, n, i);
  }
  _ctor_Rect_2(e, t) {
    return Il2Cpp.Api.Rect.__ctor(this.handle, e, t);
  }
  static get_zero() {
    return new n(Il2Cpp.Api.Rect._get_zero());
  }
  get_x() {
    return readSingle(Il2Cpp.Api.Rect._get_x(this.handle));
  }
  set_x(e) {
    return Il2Cpp.Api.Rect._set_x(this.handle, e);
  }
  get_y() {
    return readSingle(Il2Cpp.Api.Rect._get_y(this.handle));
  }
  set_y(e) {
    return Il2Cpp.Api.Rect._set_y(this.handle, e);
  }
  get_position() {
    return new e.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_position(this.handle));
  }
  set_position(e) {
    return Il2Cpp.Api.Rect._set_position(this.handle, e.handle);
  }
  get_center() {
    return new e.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_center(this.handle));
  }
  get_min() {
    return new e.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_min(this.handle));
  }
  get_max() {
    return new e.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_max(this.handle));
  }
  get_width() {
    return readSingle(Il2Cpp.Api.Rect._get_width(this.handle));
  }
  set_width(e) {
    return Il2Cpp.Api.Rect._set_width(this.handle, e);
  }
  get_height() {
    return readSingle(Il2Cpp.Api.Rect._get_height(this.handle));
  }
  set_height(e) {
    return Il2Cpp.Api.Rect._set_height(this.handle, e);
  }
  get_size() {
    return new e.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_size(this.handle));
  }
  get_xMin() {
    return readSingle(Il2Cpp.Api.Rect._get_xMin(this.handle));
  }
  set_xMin(e) {
    return Il2Cpp.Api.Rect._set_xMin(this.handle, e);
  }
  get_yMin() {
    return readSingle(Il2Cpp.Api.Rect._get_yMin(this.handle));
  }
  set_yMin(e) {
    return Il2Cpp.Api.Rect._set_yMin(this.handle, e);
  }
  get_xMax() {
    return readSingle(Il2Cpp.Api.Rect._get_xMax(this.handle));
  }
  set_xMax(e) {
    return Il2Cpp.Api.Rect._set_xMax(this.handle, e);
  }
  get_yMax() {
    return readSingle(Il2Cpp.Api.Rect._get_yMax(this.handle));
  }
  set_yMax(e) {
    Il2Cpp.Api.Rect._set_yMax(this.handle, e);
  }
  Contains(e) {
    return readBoolean(Il2Cpp.Api.Rect._Contains(this.handle, e.handle));
  }
  Contains_1(e) {
    return readBoolean(Il2Cpp.Api.Rect._Contains(this.handle, e.handle));
  }
  static OrderMinMax(e) {
    return new n(Il2Cpp.Api.Rect._OrderMinMax(e.handle));
  }
  Overlaps(e) {
    return readBoolean(Il2Cpp.Api.Rect._Overlaps(this.handle, e.handle));
  }
  Overlaps_2(e, t) {
    return readBoolean(Il2Cpp.Api.Rect._Overlaps(this.handle, e.handle, t));
  }
  static op_Inequality(e, t) {
    return readBoolean(Il2Cpp.Api.Rect._op_Inequality(e.handle, t.handle));
  }
  static op_Equality(e, t) {
    return readBoolean(Il2Cpp.Api.Rect._op_Equality(e.handle, t.handle));
  }
  GetHashCode() {
    return Il2Cpp.Api.Rect._GetHashCode(this.handle);
  }
  Equals(e) {
    return readBoolean(Il2Cpp.Api.Rect._Equals(this.handle, e));
  }
  Equals_1(e) {
    return readBoolean(Il2Cpp.Api.Rect._Equals(this.handle, e.handle));
  }
  ToString() {
    return readU16(Il2Cpp.Api.Rect._ToString(this.handle));
  }
  ToString_2(e, t) {
    return readU16(Il2Cpp.Api.Rect._ToString(this.handle, allocUStr(e), t));
  }
}

exports.UnityEngine_Rect = n, Il2Cpp.Rect = n;

},{"../Vector2/class":439,"../class":451}],427:[function(require,module,exports){
"use strict";

var e, n;

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0, 
function(e) {
  e[e.None = 0] = "None", e[e.Physics2D = 1] = "Physics2D", e[e.Physics3D = 2] = "Physics3D";
}(e = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {})), 
function(e) {
  e[e.Single = 0] = "Single", e[e.Additive = 1] = "Additive";
}(n = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));

},{}],428:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./enum");

},{"./api":425,"./class":426,"./enum":427}],429:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, n, t, i) {
  var a, o = arguments.length, r = o < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, t) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, n, t, i); else for (var l = e.length - 1; l >= 0; l--) (a = e[l]) && (r = (o < 3 ? a(r) : o > 3 ? a(n, t, r) : a(n, t)) || r);
  return o > 3 && r && Object.defineProperty(n, t, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter");

class t {
  static get _GetPathInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetPathInternal", 1, "pointer", [ "int32" ]);
  }
  static get _GetNameInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetNameInternal", 1, "pointer", [ "int32" ]);
  }
  static get _GetBuildIndexInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetBuildIndexInternal", 1, "pointer", [ "int32" ]);
  }
  static get _get_handle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_handle", 0, "pointer", [ "pointer" ]);
  }
  static get _get_path() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_path", 0, "pointer", [ "pointer" ]);
  }
  static get _get_name() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_name", 0, "pointer", [ "pointer" ]);
  }
  static get _get_buildIndex() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_buildIndex", 0, "pointer", [ "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _IsValidInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "IsValidInternal", 1, "pointer", [ "pointer" ]);
  }
  static get _GetIsLoadedInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetIsLoadedInternal", 1, "pointer", [ "pointer" ]);
  }
  static get _GetRootCountInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootCountInternal", 1, "pointer", [ "pointer" ]);
  }
  static get _GetRootGameObjectsInternal() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjectsInternal", 2, "void", [ "pointer", "pointer" ]);
  }
  static get _IsValid() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "IsValid", 0, "pointer", [ "pointer" ]);
  }
  static get _get_isLoaded() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_isLoaded", 0, "pointer", [ "pointer" ]);
  }
  static get _get_rootCount() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_rootCount", 0, "pointer", [ "pointer" ]);
  }
  static get _GetRootGameObjects() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjects", 0, "pointer", [ "pointer" ]);
  }
  static get _GetRootGameObjects_rootGameObjects() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjects", 1, [ "System.Collections.Generic.List<UnityEngine.GameObject>" ], "void", [ "pointer", "pointer" ]);
  }
}

e([ n.cache ], t, "_GetPathInternal", null), e([ n.cache ], t, "_GetNameInternal", null), 
e([ n.cache ], t, "_GetBuildIndexInternal", null), e([ n.cache ], t, "_get_handle", null), 
e([ n.cache ], t, "_get_path", null), e([ n.cache ], t, "_get_name", null), e([ n.cache ], t, "_get_buildIndex", null), 
e([ n.cache ], t, "_GetHashCode", null), e([ n.cache ], t, "_Equals", null), e([ n.cache ], t, "_IsValidInternal", null), 
e([ n.cache ], t, "_GetIsLoadedInternal", null), e([ n.cache ], t, "_GetRootCountInternal", null), 
e([ n.cache ], t, "_GetRootGameObjectsInternal", null), e([ n.cache ], t, "_IsValid", null), 
e([ n.cache ], t, "_get_isLoaded", null), e([ n.cache ], t, "_get_rootCount", null), 
e([ n.cache ], t, "_GetRootGameObjects", null), e([ n.cache ], t, "_GetRootGameObjects_rootGameObjects", null), 
Il2Cpp.Api.Scene = t;

},{"decorator-cache-getter":513}],430:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_SceneManagement_Scene_Impl = void 0;

const e = require("../class");

class t extends e.System_ValueType_Impl {
  m_Handle;
  constructor(e) {
    super(alloc(8)), this.m_Handle = Number(e);
  }
  static GetPathInternal(e) {
    return readU16(Il2Cpp.Api.Scene._GetPathInternal(e));
  }
  static GetNameInternal(e) {
    return readU16(Il2Cpp.Api.Scene._GetNameInternal(e));
  }
  static GetBuildIndexInternal(e) {
    return Il2Cpp.Api.Scene._GetBuildIndexInternal(e);
  }
  get_handle() {
    return this.m_Handle;
  }
  get_path() {
    try {
      return t.GetPathInternal(this.m_Handle);
    } catch {
      return "";
    }
  }
  get_name() {
    try {
      return t.GetNameInternal(this.m_Handle);
    } catch {
      return "";
    }
  }
  get_buildIndex() {
    try {
      return t.GetBuildIndexInternal(this.m_Handle);
    } catch {
      return -1;
    }
  }
  GetHashCode() {
    return Il2Cpp.Api.Scene._GetHashCode(this.handle);
  }
  Equals(e) {
    return Il2Cpp.Api.Scene._Equals(this.handle, e);
  }
  toString() {
    return `\n${`Scene:\t${this.get_name()}`} ( ${`(buildIndex: ${this.get_buildIndex()}) `} )\n${`Path:\t${this.get_path()}`}\n${`Handle:\t${ptr(this.get_handle())}`}\n`;
  }
  static IsValidInternal(e) {
    return Il2Cpp.Api.Scene._IsValidInternal(e);
  }
  static GetIsLoadedInternal(e) {
    return Il2Cpp.Api.Scene._GetIsLoadedInternal(e);
  }
  static GetRootCountInternal(e) {
    return Il2Cpp.Api.Scene._GetRootCountInternal(e);
  }
  static GetRootGameObjectsInternal(e, t) {
    return Il2Cpp.Api.Scene._GetRootGameObjectsInternal(e, t);
  }
  IsValid() {
    return Il2Cpp.Api.Scene._IsValid(this.handle);
  }
  get_isLoaded() {
    return Il2Cpp.Api.Scene._get_isLoaded(this.handle);
  }
  get_rootCount() {
    return Il2Cpp.Api.Scene._get_rootCount(this.handle);
  }
  GetRootGameObjects() {
    return Il2Cpp.Api.Scene._GetRootGameObjects(this.handle);
  }
  GetRootGameObjects_1(e) {
    return Il2Cpp.Api.Scene._GetRootGameObjects(this.handle, e);
  }
}

exports.UnityEngine_SceneManagement_Scene_Impl = t, Il2Cpp.Scene = t;

},{"../class":451}],431:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => LOGD(Il2Cpp.SceneManager.GetActiveScene.toString());

globalThis.currentScene = e;

},{}],432:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":429,"./class":430,"./export":431}],433:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, p = arguments.length, r = p < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, n, i); else for (var c = e.length - 1; c >= 0; c--) (o = e[c]) && (r = (p < 3 ? o(r) : p > 3 ? o(t, n, r) : o(t, n)) || r);
  return p > 3 && r && Object.defineProperty(t, n, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_fingerId() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_fingerId", 0, "pointer", [ "pointer" ]);
  }
  static get _get_position() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_position", 0, "pointer", [ "pointer" ]);
  }
  static get _get_deltaPosition() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_deltaPosition", 0, "pointer", [ "pointer" ]);
  }
  static get _get_phase() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_phase", 0, "pointer", [ "pointer" ]);
  }
  static get _get_type() {
    return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_type", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_fingerId", null), e([ t.cache ], n, "_get_position", null), 
e([ t.cache ], n, "_get_deltaPosition", null), e([ t.cache ], n, "_get_phase", null), 
e([ t.cache ], n, "_get_type", null), Il2Cpp.Api.Touch = n;

},{"decorator-cache-getter":513}],434:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Touch_Impl = void 0;

const e = require("../class");

class t extends e.System_ValueType_Impl {
  m_FingerId=lfv(this.handle, "m_FingerId");
  m_Position=lfv(this.handle, "m_Position");
  m_RawPosition=lfv(this.handle, "m_RawPosition");
  m_PositionDelta=lfv(this.handle, "m_PositionDelta");
  m_TimeDelta=lfv(this.handle, "m_TimeDelta");
  m_TapCount=lfv(this.handle, "m_TapCount");
  m_Phase=lfv(this.handle, "m_Phase");
  m_Type=lfv(this.handle, "m_Type");
  m_Pressure=lfv(this.handle, "m_Pressure");
  m_maximumPossiblePressure=lfv(this.handle, "m_maximumPossiblePressure");
  m_Radius=lfv(this.handle, "m_Radius");
  m_RadiusVariance=lfv(this.handle, "m_RadiusVariance");
  m_AltitudeAngle=lfv(this.handle, "m_AltitudeAngle");
  m_AzimuthAngle=lfv(this.handle, "m_AzimuthAngle");
  constructor(e) {
    super(e);
  }
  get_fingerId() {
    return Il2Cpp.Api.Touch._get_fingerId(this.handle);
  }
  get_position() {
    return Il2Cpp.Api.Touch._get_position(this.handle);
  }
  get_deltaPosition() {
    return Il2Cpp.Api.Touch._get_deltaPosition(this.handle);
  }
  get_phase() {
    return Il2Cpp.Api.Touch._get_phase(this.handle);
  }
  get_type() {
    return Il2Cpp.Api.Touch._get_type(this.handle);
  }
}

exports.UnityEngine_Touch_Impl = t, Il2Cpp.Touch = t;

},{"../class":451}],435:[function(require,module,exports){
"use strict";

var e, n;

!function(e) {
  e[e.Direct = 0] = "Direct", e[e.Indirect = 1] = "Indirect", e[e.Stylus = 2] = "Stylus";
}(e || (e = {})), function(e) {
  e[e.Began = 0] = "Began", e[e.Canceled = 4] = "Canceled", e[e.Ended = 3] = "Ended", 
  e[e.Moved = 1] = "Moved", e[e.Stationary = 2] = "Stationary";
}(n || (n = {}));

},{}],436:[function(require,module,exports){
"use strict";

},{}],437:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./enum");

},{"./api":433,"./class":434,"./enum":435,"./export":436}],438:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var o, r = arguments.length, p = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, n, i); else for (var l = t.length - 1; l >= 0; l--) (o = t[l]) && (p = (r < 3 ? o(p) : r > 3 ? o(e, n, p) : o(e, n)) || p);
  return r > 3 && p && Object.defineProperty(e, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _get_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_Item", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "set_Item", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", ".ctor", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Lerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Scale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Scale", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Normalize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Normalize", 0, "void", [ "pointer" ]);
  }
  static get _get_normalized() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_normalized", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "Equals", 1, [ "UnityEngine.Vector2" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Dot() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Dot", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_magnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_magnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _get_sqrMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_sqrMagnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _Angle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Angle", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Distance() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Distance", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ClampMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "ClampMagnitude", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _SqrMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "SqrMagnitude", 1, "pointer", [ "pointer" ]);
  }
  static get _Min() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Min", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Max() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Max", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Addition() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Addition", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Subtraction", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Division() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Division", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_UnaryNegation() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_UnaryNegation", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Multiply_a_d() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Multiply", 2, [ "UnityEngine.Vector2", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Division_a_d() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Division", 2, [ "UnityEngine.Vector2", "System.Single" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Inequality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Implicit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Implicit", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Implicit_v() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Implicit", 1, [ "UnityEngine.Vector2" ], "pointer", [ "pointer" ]);
  }
  static get _get_zero() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_zero", 0, "pointer", []);
  }
  static get _get_one() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_one", 0, "pointer", []);
  }
  static get _get_up() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_up", 0, "pointer", []);
  }
  static get _get_right() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_right", 0, "pointer", []);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", ".cctor", 0, "void", []);
  }
}

t([ e.cache ], n, "_get_Item", null), t([ e.cache ], n, "_set_Item", null), t([ e.cache ], n, "__ctor", null), 
t([ e.cache ], n, "_Lerp", null), t([ e.cache ], n, "_Scale", null), t([ e.cache ], n, "_Normalize", null), 
t([ e.cache ], n, "_get_normalized", null), t([ e.cache ], n, "_ToString", null), 
t([ e.cache ], n, "_ToString_format_formatProvider", null), t([ e.cache ], n, "_GetHashCode", null), 
t([ e.cache ], n, "_Equals", null), t([ e.cache ], n, "_Equals_other", null), t([ e.cache ], n, "_Dot", null), 
t([ e.cache ], n, "_get_magnitude", null), t([ e.cache ], n, "_get_sqrMagnitude", null), 
t([ e.cache ], n, "_Angle", null), t([ e.cache ], n, "_Distance", null), t([ e.cache ], n, "_ClampMagnitude", null), 
t([ e.cache ], n, "_SqrMagnitude", null), t([ e.cache ], n, "_Min", null), t([ e.cache ], n, "_Max", null), 
t([ e.cache ], n, "_op_Addition", null), t([ e.cache ], n, "_op_Subtraction", null), 
t([ e.cache ], n, "_op_Multiply", null), t([ e.cache ], n, "_op_Division", null), 
t([ e.cache ], n, "_op_UnaryNegation", null), t([ e.cache ], n, "_op_Multiply_a_d", null), 
t([ e.cache ], n, "_op_Division_a_d", null), t([ e.cache ], n, "_op_Equality", null), 
t([ e.cache ], n, "_op_Inequality", null), t([ e.cache ], n, "_op_Implicit", null), 
t([ e.cache ], n, "_op_Implicit_v", null), t([ e.cache ], n, "_get_zero", null), 
t([ e.cache ], n, "_get_one", null), t([ e.cache ], n, "_get_up", null), t([ e.cache ], n, "_get_right", null), 
t([ e.cache ], n, "__cctor", null), Il2Cpp.Api.Vector2 = n;

},{"decorator-cache-getter":513}],439:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Vector2_Impl = void 0;

const t = require("../class");

class e extends t.System_ValueType_Impl {
  x=lfv(this.handle, "x");
  y=lfv(this.handle, "y");
  zeroVector=lfv(this.handle, "zeroVector");
  oneVector=lfv(this.handle, "oneVector");
  upVector=lfv(this.handle, "upVector");
  downVector=lfv(this.handle, "downVector");
  leftVector=lfv(this.handle, "leftVector");
  rightVector=lfv(this.handle, "rightVector");
  positiveInfinityVector=lfv(this.handle, "positiveInfinityVector");
  negativeInfinityVector=lfv(this.handle, "negativeInfinityVector");
  kEpsilon=lfv(this.handle, "kEpsilon");
  kEpsilonNormalSqrt=lfv(this.handle, "kEpsilonNormalSqrt");
  constructor(t) {
    super(t);
  }
  get_Item(t) {
    return Il2Cpp.Api.Vector2._get_Item(this.handle, t);
  }
  set_Item(t, e) {
    return Il2Cpp.Api.Vector2._set_Item(this.handle, t, e);
  }
  _ctor_2(t, e) {
    return Il2Cpp.Api.Vector2.__ctor(this.handle, t, e);
  }
  Lerp(t, e, r) {
    return Il2Cpp.Api.Vector2._Lerp(t, e, r);
  }
  Scale(t, e) {
    return Il2Cpp.Api.Vector2._Scale(t, e);
  }
  Normalize() {
    return Il2Cpp.Api.Vector2._Normalize(this.handle);
  }
  get_normalized() {
    return Il2Cpp.Api.Vector2._get_normalized(this.handle);
  }
  ToString() {
    return readU16(Il2Cpp.Api.Vector2._ToString(this.handle));
  }
  ToString_2(t, e) {
    return readU16(Il2Cpp.Api.Vector2._ToString(this.handle, t, e));
  }
  GetHashCode() {
    return Il2Cpp.Api.Vector2._GetHashCode(this.handle);
  }
  Equals_obj(t) {
    return Il2Cpp.Api.Vector2._Equals(this.handle, t);
  }
  Equals_vector(t) {
    return Il2Cpp.Api.Vector2._Equals(this.handle, t);
  }
  Dot(t, e) {
    return Il2Cpp.Api.Vector2._Dot(t, e);
  }
  get_magnitude() {
    return Il2Cpp.Api.Vector2._get_magnitude(this.handle);
  }
  get_sqrMagnitude() {
    return Il2Cpp.Api.Vector2._get_sqrMagnitude(this.handle);
  }
  Angle(t, e) {
    return Il2Cpp.Api.Vector2._Angle(t, e);
  }
  Distance(t, e) {
    return Il2Cpp.Api.Vector2._Distance(t, e);
  }
  ClampMagnitude(t, e) {
    return Il2Cpp.Api.Vector2._ClampMagnitude(t, e);
  }
  SqrMagnitude(t) {
    return Il2Cpp.Api.Vector2._SqrMagnitude(t);
  }
  Min(t, e) {
    return Il2Cpp.Api.Vector2._Min(t, e);
  }
  Max(t, e) {
    return Il2Cpp.Api.Vector2._Max(t, e);
  }
  op_Addition(t, e) {
    return Il2Cpp.Api.Vector2._op_Addition(t, e);
  }
  op_Subtraction(t, e) {
    return Il2Cpp.Api.Vector2._op_Subtraction(t, e);
  }
  op_Multiply(t, e) {
    return Il2Cpp.Api.Vector2._op_Multiply(t, e);
  }
  op_Division(t, e) {
    return Il2Cpp.Api.Vector2._op_Division(t, e);
  }
  op_UnaryNegation(t) {
    return Il2Cpp.Api.Vector2._op_UnaryNegation(t);
  }
  op_Multiply_2(t, e) {
    return Il2Cpp.Api.Vector2._op_Multiply(t, e);
  }
  op_Division_2(t, e) {
    return Il2Cpp.Api.Vector2._op_Division(t, e);
  }
  op_Equality(t, e) {
    return Il2Cpp.Api.Vector2._op_Equality(t, e);
  }
  op_Inequality(t, e) {
    return Il2Cpp.Api.Vector2._op_Inequality(t, e);
  }
  op_Implicit(t) {
    return Il2Cpp.Api.Vector2._op_Implicit(t);
  }
  op_Implicit_v2(t) {
    return Il2Cpp.Api.Vector2._op_Implicit(t);
  }
  get_zero() {
    return Il2Cpp.Api.Vector2._get_zero();
  }
  get_one() {
    return Il2Cpp.Api.Vector2._get_one();
  }
  get_up() {
    return Il2Cpp.Api.Vector2._get_up();
  }
  get_right() {
    return Il2Cpp.Api.Vector2._get_right();
  }
  _cctor() {
    return Il2Cpp.Api.Vector2.__cctor();
  }
}

exports.UnityEngine_Vector2_Impl = e, Il2Cpp.Vector2 = e;

},{"../class":451}],440:[function(require,module,exports){
"use strict";

},{}],441:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":438,"./class":439,"./export":440}],442:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, p = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (r = e[l]) && (p = (o < 3 ? r(p) : o > 3 ? r(t, n, p) : r(t, n)) || p);
  return o > 3 && p && Object.defineProperty(t, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _Slerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Slerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Lerp", 3, "pointer", [ "pointer", "pointer", "float" ]);
  }
  static get _LerpUnclamped() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "LerpUnclamped", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _MoveTowards() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "MoveTowards", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _SmoothDamp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SmoothDamp", 4, "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _SmoothDamp_current_target_currentVelocity_smoothTime_maxSpeed_deltaTime() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "SmoothDamp", 6, [ "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Vector3&", "System.Single", "System.Single", "System.Single" ], "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_Item", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "set_Item", 2, "void", [ "pointer", "pointer", "float" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", ".ctor", 3, "void", [ "pointer", "float", "float", "float" ]);
  }
  static get __ctor_x_y() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", ".ctor", 2, [ "System.Single", "System.Single" ], "void", [ "pointer", "float", "float" ]);
  }
  static get _Scale() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Scale", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Cross() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Cross", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "Equals", 1, [ "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Reflect() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Reflect", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Normalize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Normalize", 1, "pointer", [ "pointer" ]);
  }
  static get _Normalize_() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "Normalize", 0, [], "void", [ "pointer" ]);
  }
  static get _get_normalized() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_normalized", 0, "pointer", [ "pointer" ]);
  }
  static get _Dot() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Dot", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Project() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Project", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ProjectOnPlane() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ProjectOnPlane", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Angle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Angle", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _SignedAngle() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SignedAngle", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _Distance() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Distance", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ClampMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ClampMagnitude", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Magnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Magnitude", 1, "pointer", [ "pointer" ]);
  }
  static get _get_magnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_magnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _SqrMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SqrMagnitude", 1, "pointer", [ "pointer" ]);
  }
  static get _get_sqrMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_sqrMagnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _Min() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Min", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Max() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Max", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _get_zero() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_zero", 0, "pointer", [ "pointer" ]);
  }
  static get _get_one() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_one", 0, "pointer", [ "pointer" ]);
  }
  static get _get_forward() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_forward", 0, "pointer", [ "pointer" ]);
  }
  static get _get_back() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_back", 0, "pointer", [ "pointer" ]);
  }
  static get _get_up() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_up", 0, "pointer", [ "pointer" ]);
  }
  static get _get_down() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_down", 0, "pointer", [ "pointer" ]);
  }
  static get _get_left() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_left", 0, "pointer", [ "pointer" ]);
  }
  static get _get_right() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_right", 0, "pointer", [ "pointer" ]);
  }
  static get _op_Addition() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Addition", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Subtraction", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_UnaryNegation() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_UnaryNegation", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply_d_a() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Multiply", 2, [ "System.Single", "UnityEngine.Vector3" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Division() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Division", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Inequality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", ".cctor", 0, "void", []);
  }
  static get _Slerp_Injected() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Slerp_Injected", 4, "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], n, "_Slerp", null), e([ t.cache ], n, "_Lerp", null), e([ t.cache ], n, "_LerpUnclamped", null), 
e([ t.cache ], n, "_MoveTowards", null), e([ t.cache ], n, "_SmoothDamp", null), 
e([ t.cache ], n, "_SmoothDamp_current_target_currentVelocity_smoothTime_maxSpeed_deltaTime", null), 
e([ t.cache ], n, "_get_Item", null), e([ t.cache ], n, "_set_Item", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "__ctor_x_y", null), e([ t.cache ], n, "_Scale", null), e([ t.cache ], n, "_Cross", null), 
e([ t.cache ], n, "_GetHashCode", null), e([ t.cache ], n, "_Equals", null), e([ t.cache ], n, "_Equals_other", null), 
e([ t.cache ], n, "_Reflect", null), e([ t.cache ], n, "_Normalize", null), e([ t.cache ], n, "_Normalize_", null), 
e([ t.cache ], n, "_get_normalized", null), e([ t.cache ], n, "_Dot", null), e([ t.cache ], n, "_Project", null), 
e([ t.cache ], n, "_ProjectOnPlane", null), e([ t.cache ], n, "_Angle", null), e([ t.cache ], n, "_SignedAngle", null), 
e([ t.cache ], n, "_Distance", null), e([ t.cache ], n, "_ClampMagnitude", null), 
e([ t.cache ], n, "_Magnitude", null), e([ t.cache ], n, "_get_magnitude", null), 
e([ t.cache ], n, "_SqrMagnitude", null), e([ t.cache ], n, "_get_sqrMagnitude", null), 
e([ t.cache ], n, "_Min", null), e([ t.cache ], n, "_Max", null), e([ t.cache ], n, "_get_zero", null), 
e([ t.cache ], n, "_get_one", null), e([ t.cache ], n, "_get_forward", null), e([ t.cache ], n, "_get_back", null), 
e([ t.cache ], n, "_get_up", null), e([ t.cache ], n, "_get_down", null), e([ t.cache ], n, "_get_left", null), 
e([ t.cache ], n, "_get_right", null), e([ t.cache ], n, "_op_Addition", null), 
e([ t.cache ], n, "_op_Subtraction", null), e([ t.cache ], n, "_op_UnaryNegation", null), 
e([ t.cache ], n, "_op_Multiply", null), e([ t.cache ], n, "_op_Multiply_d_a", null), 
e([ t.cache ], n, "_op_Division", null), e([ t.cache ], n, "_op_Equality", null), 
e([ t.cache ], n, "_op_Inequality", null), e([ t.cache ], n, "_ToString", null), 
e([ t.cache ], n, "_ToString_format_formatProvider", null), e([ t.cache ], n, "__cctor", null), 
e([ t.cache ], n, "_Slerp_Injected", null), Il2Cpp.Api.Vector3 = n;

},{"decorator-cache-getter":513}],443:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Vector3_Impl = void 0;

const e = require("../../../../../bridge/fix/offsetManager"), t = require("../class");

class r extends t.System_ValueType_Impl {
  x=readSingle(lfv(this.handle, "x", findClass("Vector3")));
  y=readSingle(lfv(this.handle, "y", findClass("Vector3")));
  z=readSingle(lfv(this.handle, "z", findClass("Vector3")));
  static cache=new Array;
  constructor(e) {
    super(e);
  }
  static Lerp(e, t, n) {
    return new r(Il2Cpp.Api.Vector3._Lerp(e.handle, t.handle, n));
  }
  get_Item(e) {
    return readSingle(Il2Cpp.Api.Vector3._get_Item(this.handle, e));
  }
  set_Item(e, t) {
    return Il2Cpp.Api.Vector3._set_Item(this.handle, e, t);
  }
  __ctor(e, t, r) {
    let n = alloc(6);
    return Il2Cpp.Api.Vector3.__ctor(n, e, t, r);
  }
  _ctor_2(e, t) {
    return Il2Cpp.Api.Vector3.__ctor(this.handle, e, t);
  }
  static Cross(e, t) {
    return new r(Il2Cpp.Api.Vector3._Cross(e.handle, t.handle));
  }
  GetHashCode() {
    return Il2Cpp.Api.Vector3._GetHashCode(this.handle);
  }
  Equals(e) {
    return !Il2Cpp.Api.Vector3._Equals(this.handle, e.handle).isNull();
  }
  Equals_1(e) {
    return !Il2Cpp.Api.Vector3._Equals(this.handle, e.handle).isNull();
  }
  static Normalize(e) {
    return Il2Cpp.Api.Vector3._Normalize(e.handle);
  }
  Normalize_0() {
    return Il2Cpp.Api.Vector3._Normalize(this.handle);
  }
  get_normalized() {
    return new r(Il2Cpp.Api.Vector3._get_normalized(this.handle));
  }
  static Dot(e, t) {
    return readSingle(Il2Cpp.Api.Vector3._Dot(e.handle, t.handle));
  }
  static ProjectOnPlane(e, t) {
    return Il2Cpp.Api.Vector3._ProjectOnPlane(e, t);
  }
  static Distance(e, t) {
    return readSingle(Il2Cpp.Api.Vector3._Distance(e.handle, t.handle));
  }
  static ClampMagnitude(e, t) {
    return new r(Il2Cpp.Api.Vector3._ClampMagnitude(e.handle, t));
  }
  static Magnitude(e) {
    return readSingle(Il2Cpp.Api.Vector3._Magnitude(e.handle));
  }
  get_magnitude() {
    return Il2Cpp.Api.Vector3._get_magnitude(this.handle);
  }
  static SqrMagnitude(e) {
    return readSingle(Il2Cpp.Api.Vector3._SqrMagnitude(e.handle));
  }
  get_sqrMagnitude() {
    return readSingle(Il2Cpp.Api.Vector3._get_sqrMagnitude(this.handle));
  }
  static Min(e, t) {
    return new r(Il2Cpp.Api.Vector3._Min(e, t));
  }
  static Max(e, t) {
    return new r(Il2Cpp.Api.Vector3._Max(e, t));
  }
  static get get_zero() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_zero(alloc(t)), r.cache.push(a), new r(a);
  }
  static get get_one() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_one(a.add(t)), r.cache.push(a), new r(a);
  }
  static get get_forward() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_forward(alloc(t)), r.cache.push(a), new r(a);
  }
  static get get_back() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_back(alloc(t)), r.cache.push(a), new r(a);
  }
  static get get_up() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_up(alloc(t)), new r(a);
  }
  static get get_down() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_down(alloc(t)), new r(a);
  }
  static get get_left() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_left(alloc(t)), new r(a);
  }
  static get get_right() {
    let t = e.OffsetManager.getInstance().getOffset("Vector3", "x"), n = e.OffsetManager.getInstance().getOffset("Vector3", "z"), a = alloc(n);
    return Il2Cpp.Api.Vector3._get_right(alloc(t)), new r(a);
  }
  static op_Addition(e, t) {
    return Il2Cpp.Api.Vector3._op_Addition(e, t);
  }
  static op_Subtraction(e, t) {
    return Il2Cpp.Api.Vector3._op_Subtraction(e, t);
  }
  static op_UnaryNegation(e) {
    return Il2Cpp.Api.Vector3._op_UnaryNegation(e);
  }
  static op_Multiply(e, t) {
    return Il2Cpp.Api.Vector3._op_Multiply(e, t);
  }
  static op_Multiply_2(e, t) {
    return Il2Cpp.Api.Vector3._op_Multiply(e, t);
  }
  static op_Division(e, t) {
    return Il2Cpp.Api.Vector3._op_Division(e, t);
  }
  static op_Equality(e, t) {
    return Il2Cpp.Api.Vector3._op_Equality(e, t);
  }
  static op_Inequality(e, t) {
    return Il2Cpp.Api.Vector3._op_Inequality(e, t);
  }
  ToString() {
    return readU16(Il2Cpp.Api.Vector3._ToString(this.handle));
  }
  ToString_2(e, t) {
    return readU16(Il2Cpp.Api.Vector3._ToString(this.handle, allocUStr(e), t));
  }
  toString() {
    return `${this.x}, ${this.y}, ${this.z}`;
  }
  static get _cctor() {
    return Il2Cpp.Api.Vector3.__cctor();
  }
}

exports.UnityEngine_Vector3_Impl = r, Il2Cpp.Vector3 = r;

},{"../../../../../bridge/fix/offsetManager":25,"../class":451}],444:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), globalThis.v3_one = () => Il2Cpp.Vector3.get_one, globalThis.v3_zero = () => Il2Cpp.Vector3.get_zero, 
globalThis.v3_forward = () => Il2Cpp.Vector3.get_forward, globalThis.v3_back = () => Il2Cpp.Vector3.get_back, 
globalThis.v3_up = () => Il2Cpp.Vector3.get_up, globalThis.v3_down = () => Il2Cpp.Vector3.get_down, 
globalThis.v3_left = () => Il2Cpp.Vector3.get_left, globalThis.v3_right = () => Il2Cpp.Vector3.get_right;

},{}],445:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":442,"./class":443,"./export":444}],446:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var o, r = arguments.length, p = r < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) p = Reflect.decorate(t, e, n, i); else for (var l = t.length - 1; l >= 0; l--) (o = t[l]) && (p = (r < 3 ? o(p) : r > 3 ? o(e, n, p) : o(e, n)) || p);
  return r > 3 && p && Object.defineProperty(e, n, p), p;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class n {
  static get _get_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_Item", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _set_Item() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "set_Item", 2, "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", ".ctor", 4, "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get __ctor_x_y_z() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", ".ctor", 3, [ "System.Single", "System.Single", "System.Single" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _Lerp() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Lerp", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_other() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "Equals", 1, [ "UnityEngine.Vector4" ], "pointer", [ "pointer", "pointer" ]);
  }
  static get _Normalize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Normalize", 1, "pointer", [ "pointer" ]);
  }
  static get _get_normalized() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_normalized", 0, "pointer", [ "pointer" ]);
  }
  static get _Dot() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Dot", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Magnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Magnitude", 1, "pointer", [ "pointer" ]);
  }
  static get _get_magnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_magnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _get_sqrMagnitude() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_sqrMagnitude", 0, "pointer", [ "pointer" ]);
  }
  static get _get_zero() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_zero", 0, "pointer", []);
  }
  static get _op_Addition() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Addition", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Subtraction() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Subtraction", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Multiply() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Multiply", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Division() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Division", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Equality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Equality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Inequality() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Inequality", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _op_Implicit() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Implicit", 1, "pointer", [ "pointer" ]);
  }
  static get _op_Implicit_v() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Implicit", 1, [ "UnityEngine.Vector4" ], "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString_format_formatProvider() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "ToString", 2, [ "System.String", "System.IFormatProvider" ], "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get __cctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", ".cctor", 0, "void", []);
  }
}

t([ e.cache ], n, "_get_Item", null), t([ e.cache ], n, "_set_Item", null), t([ e.cache ], n, "__ctor", null), 
t([ e.cache ], n, "__ctor_x_y_z", null), t([ e.cache ], n, "_Lerp", null), t([ e.cache ], n, "_GetHashCode", null), 
t([ e.cache ], n, "_Equals", null), t([ e.cache ], n, "_Equals_other", null), t([ e.cache ], n, "_Normalize", null), 
t([ e.cache ], n, "_get_normalized", null), t([ e.cache ], n, "_Dot", null), t([ e.cache ], n, "_Magnitude", null), 
t([ e.cache ], n, "_get_magnitude", null), t([ e.cache ], n, "_get_sqrMagnitude", null), 
t([ e.cache ], n, "_get_zero", null), t([ e.cache ], n, "_op_Addition", null), t([ e.cache ], n, "_op_Subtraction", null), 
t([ e.cache ], n, "_op_Multiply", null), t([ e.cache ], n, "_op_Division", null), 
t([ e.cache ], n, "_op_Equality", null), t([ e.cache ], n, "_op_Inequality", null), 
t([ e.cache ], n, "_op_Implicit", null), t([ e.cache ], n, "_op_Implicit_v", null), 
t([ e.cache ], n, "_ToString", null), t([ e.cache ], n, "_ToString_format_formatProvider", null), 
t([ e.cache ], n, "__cctor", null), Il2Cpp.Api.Vector4 = n;

},{"decorator-cache-getter":513}],447:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Vector4_Impl = void 0;

const t = require("../class");

class e extends t.System_ValueType_Impl {
  kEpsilon=lfv(this.handle, "kEpsilon");
  x=lfv(this.handle, "x");
  y=lfv(this.handle, "y");
  z=lfv(this.handle, "z");
  w=lfv(this.handle, "w");
  zeroVector=lfv(this.handle, "zeroVector");
  oneVector=lfv(this.handle, "oneVector");
  positiveInfinityVector=lfv(this.handle, "positiveInfinityVector");
  negativeInfinityVector=lfv(this.handle, "negativeInfinityVector");
  constructor(t) {
    super(t);
  }
  get_Item(t) {
    return Il2Cpp.Api.Vector4._get_Item(this.handle, t);
  }
  set_Item(t, e) {
    return Il2Cpp.Api.Vector4._set_Item(this.handle, t, e);
  }
  _ctor_xyzw(t, e, r, p) {
    return Il2Cpp.Api.Vector4.__ctor(this.handle, t, e, r, p);
  }
  _ctor_xyz(t, e, r) {
    return Il2Cpp.Api.Vector4.__ctor(this.handle, t, e, r);
  }
  Lerp(t, e, r) {
    return Il2Cpp.Api.Vector4._Lerp(t, e, r);
  }
  GetHashCode() {
    return Il2Cpp.Api.Vector4._GetHashCode(this.handle);
  }
  Equals_obj(t) {
    return Il2Cpp.Api.Vector4._Equals(this.handle, t);
  }
  Equals_v4(t) {
    return Il2Cpp.Api.Vector4._Equals(this.handle, t);
  }
  Normalize(t) {
    return Il2Cpp.Api.Vector4._Normalize(t);
  }
  get_normalized() {
    return Il2Cpp.Api.Vector4._get_normalized(this.handle);
  }
  Dot(t, e) {
    return Il2Cpp.Api.Vector4._Dot(t, e);
  }
  Magnitude(t) {
    return Il2Cpp.Api.Vector4._Magnitude(t);
  }
  get_magnitude() {
    return Il2Cpp.Api.Vector4._get_magnitude(this.handle);
  }
  get_sqrMagnitude() {
    return Il2Cpp.Api.Vector4._get_sqrMagnitude(this.handle);
  }
  get_zero() {
    return Il2Cpp.Api.Vector4._get_zero();
  }
  op_Addition(t, e) {
    return Il2Cpp.Api.Vector4._op_Addition(t, e);
  }
  op_Subtraction(t, e) {
    return Il2Cpp.Api.Vector4._op_Subtraction(t, e);
  }
  op_Multiply(t, e) {
    return Il2Cpp.Api.Vector4._op_Multiply(t, e);
  }
  op_Division(t, e) {
    return Il2Cpp.Api.Vector4._op_Division(t, e);
  }
  op_Equality(t, e) {
    return Il2Cpp.Api.Vector4._op_Equality(t, e);
  }
  op_Inequality(t, e) {
    return Il2Cpp.Api.Vector4._op_Inequality(t, e);
  }
  op_Implicit_v3(t) {
    return Il2Cpp.Api.Vector4._op_Implicit(t);
  }
  op_Implicit_v4(t) {
    return Il2Cpp.Api.Vector4._op_Implicit(t);
  }
  ToString() {
    return readU16(Il2Cpp.Api.Vector4._ToString(this.handle));
  }
  ToString_2(t, e) {
    return readU16(Il2Cpp.Api.Vector4._ToString(this.handle, t, e));
  }
  _cctor() {
    return Il2Cpp.Api.Vector4.__cctor();
  }
}

exports.UnityEngine_Vector4_Impl = e, Il2Cpp.Vector4 = e;

},{"../class":451}],448:[function(require,module,exports){
"use strict";

},{}],449:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":446,"./class":447,"./export":448}],450:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, l) {
  var n, o = arguments.length, a = o < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, r) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, l); else for (var i = e.length - 1; i >= 0; i--) (n = e[i]) && (a = (o < 3 ? n(a) : o > 3 ? n(t, r, a) : n(t, r)) || a);
  return o > 3 && a && Object.defineProperty(t, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", ".ctor", 0, "void", [ "pointer" ]);
  }
  static get _InternalEquals() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "InternalEquals", 3, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _DefaultEquals() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "DefaultEquals", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "Equals", 1, "pointer", [ "pointer", "pointer" ]);
  }
  static get _InternalGetHashCode() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "InternalGetHashCode", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _GetHashCode() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "GetHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _ToString() {
    return Il2Cpp.Api.t("mscorlib", "System.ValueType", "ToString", 0, "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], r, "__ctor", null), e([ t.cache ], r, "_InternalEquals", null), e([ t.cache ], r, "_DefaultEquals", null), 
e([ t.cache ], r, "_Equals", null), e([ t.cache ], r, "_InternalGetHashCode", null), 
e([ t.cache ], r, "_GetHashCode", null), e([ t.cache ], r, "_ToString", null), mscorlib.Api.ValueType = r;

},{"decorator-cache-getter":513}],451:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.System_ValueType_Impl = void 0;

const e = require("../class");

class l extends e.mscorlib_System_Object_impl {
  constructor(e) {
    super(e);
  }
  _ctor() {
    return mscorlib.Api.ValueType.__ctor(this.handle);
  }
  InternalEquals(e, l, r) {
    return mscorlib.Api.ValueType._InternalEquals(e.handle, l.handle, r);
  }
  DefaultEquals(e, l) {
    return mscorlib.Api.ValueType._DefaultEquals(e.handle, l.handle);
  }
  Equals(e) {
    return mscorlib.Api.ValueType._Equals(this.handle, e.handle);
  }
  InternalGetHashCode(e, l) {
    return mscorlib.Api.ValueType._InternalGetHashCode(e, l);
  }
  GetHashCode() {
    return mscorlib.Api.ValueType._GetHashCode(this.handle);
  }
  ToString() {
    return readU16(mscorlib.Api.ValueType._ToString(this.handle));
  }
}

exports.System_ValueType_Impl = l;

},{"../class":468}],452:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.checkExtends = exports.getTypeName = void 0;

const e = require("../class"), t = t => new e.mscorlib_System_Object_impl(checkCmdInput(t)).getType(), n = e => t(e).name;

exports.getTypeName = n;

const o = e => {
  const t = getType(checkCmdInput(e)).caseToRuntimeType;
  lfs(t.get_Module().handle, findClass("Module"));
}, l = e => {
  const t = new mscorlib.Type(checkCmdInput(e)).caseToRuntimeType;
  LOGJSON(t.get_Module());
}, s = (e, t = !1) => {
  let n = [], o = getType(e).caseToRuntimeType;
  for (let e = 0; e < 20; ++e) {
    let t = l(o, e);
    if (t.handle.isNull()) break;
    n.push(t);
  }
  if (t) return n;
  function l(t, n = 0) {
    if (null == e || null == e) throw new Error("current mPtr can't be null");
    for (let e = 0; e < n; ++e) t = t.caseToRuntimeType.get_BaseType();
    return t;
  }
  newLine(), LOGD(n.map((e => `${e.name}(${e.handle})`)).join(" <--- ")), newLine();
};

function p(e, t = "Component") {
  return e instanceof Il2Cpp.Object && (e = e.handle), getTypeParent(e).map((e => e.name)).some((e => e == t));
}

exports.checkExtends = p, globalThis.getType = t, globalThis.getTypeName = n, globalThis.showTypeParent = e => s(e, !1), 
globalThis.getTypeParent = e => s(e, !0), globalThis.showTypeModuleByType = l, globalThis.showTypeModuleByIns = o;

},{"../class":468}],453:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./exports"), require("./Boolean/include"), 
require("./Color/include"), require("./Color32/include"), require("./EmitParams/include"), 
require("./LoadSceneParameters/include"), require("./MainModule/include"), require("./Matrix4x4/include"), 
require("./Quaternion/include"), require("./Rect/include"), require("./Scene/include"), 
require("./Touch/include"), require("./Vector2/include"), require("./Vector3/include"), 
require("./Vector4/include"), require("./Ray/include"), require("./RaycastHit/include"), 
require("./RaycastResult/include"), require("./Int32/include"), require("./IntPtr/include"), 
require("./DateTime/include"), require("./DictionaryEntry/include");

},{"./Boolean/include":373,"./Color/include":381,"./Color32/include":377,"./DateTime/include":385,"./DictionaryEntry/include":388,"./EmitParams/include":392,"./Int32/include":395,"./IntPtr/include":398,"./LoadSceneParameters/include":402,"./MainModule/include":406,"./Matrix4x4/include":410,"./Quaternion/include":414,"./Ray/include":417,"./RaycastHit/include":421,"./RaycastResult/include":424,"./Rect/include":428,"./Scene/include":432,"./Touch/include":437,"./Vector2/include":441,"./Vector3/include":445,"./Vector4/include":449,"./api":450,"./class":451,"./exports":452}],454:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, o = arguments.length, a = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, i); else for (var d = e.length - 1; d >= 0; d--) (r = e[d]) && (a = (o < 3 ? r(a) : o > 3 ? r(t, n, a) : r(t, n)) || a);
  return o > 3 && a && Object.defineProperty(t, n, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _get_DefaultEncoding() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "get_DefaultEncoding", 0, [], "pointer", []);
  }
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _AddField() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "AddField", 2, [ "System.String", "System.String" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddField_fieldName_value_e() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "AddField", 3, [ "System.String", "System.String", "System.Text.Encoding" ], "void", [ "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _AddBinaryData() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "AddBinaryData", 2, [ "System.String", "System.Byte[]" ], "void", [ "pointer", "pointer", "pointer" ]);
  }
  static get _AddBinaryData_fieldName_contents_fileName_mimeType() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "AddBinaryData", 4, [ "System.String", "System.Byte[]", "System.String", "System.String" ], "void", [ "pointer", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _get_headers() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "get_headers", 0, [], "pointer", [ "pointer" ]);
  }
  static get _get_data() {
    return Il2Cpp.Api.o("UnityEngine.UnityWebRequestModule", "UnityEngine.WWWForm", "get_data", 0, [], "pointer", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_get_DefaultEncoding", null), e([ t.cache ], n, "__ctor", null), 
e([ t.cache ], n, "_AddField", null), e([ t.cache ], n, "_AddField_fieldName_value_e", null), 
e([ t.cache ], n, "_AddBinaryData", null), e([ t.cache ], n, "_AddBinaryData_fieldName_contents_fileName_mimeType", null), 
e([ t.cache ], n, "_get_headers", null), e([ t.cache ], n, "_get_data", null), Il2Cpp.Api.WWWForm = n;

},{"decorator-cache-getter":513}],455:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_WWWForm_Impl = void 0;

const e = require("../class");

class t extends e.mscorlib_System_Object_impl {
  formData=lfv(this.handle, "formData");
  fieldNames=lfv(this.handle, "fieldNames");
  fileNames=lfv(this.handle, "fileNames");
  types=lfv(this.handle, "types");
  boundary=lfv(this.handle, "boundary");
  containsFiles=lfv(this.handle, "containsFiles");
  constructor(e) {
    super(e);
  }
  static get_DefaultEncoding() {
    return Il2Cpp.Api.WWWForm._get_DefaultEncoding();
  }
  _ctor() {
    return Il2Cpp.Api.WWWForm.__ctor(this.handle);
  }
  AddField(e, t) {
    return Il2Cpp.Api.WWWForm._AddField(this.handle, e, t);
  }
  AddField_3(e, t, l) {
    return Il2Cpp.Api.WWWForm._AddField(this.handle, e, t, l);
  }
  get_headers() {
    return Il2Cpp.Api.WWWForm._get_headers(this.handle);
  }
  get_data() {
    return Il2Cpp.Api.WWWForm._get_data(this.handle);
  }
}

exports.UnityEngine_WWWForm_Impl = t, Il2Cpp.WWWForm = t;

},{"../class":468}],456:[function(require,module,exports){
"use strict";

},{}],457:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export");

},{"./api":454,"./class":455,"./export":456}],458:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var o, r = arguments.length, c = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, i); else for (var l = e.length - 1; l >= 0; l--) (o = e[l]) && (c = (r < 3 ? o(c) : r > 3 ? o(t, n, c) : o(t, n)) || c);
  return r > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get _InternalDestroy() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "InternalDestroy", 1, "void", [ "pointer" ]);
  }
  static get _get_isDone() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "get_isDone", 0, "pointer", [ "pointer" ]);
  }
  static get _get_progress() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "get_progress", 0, "pointer", [ "pointer" ]);
  }
  static get _set_allowSceneActivation() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "set_allowSceneActivation", 1, "void", [ "pointer", "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "Finalize", 0, "void", [ "pointer" ]);
  }
  static get _InvokeCompletionEvent() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "InvokeCompletionEvent", 0, "void", [ "pointer" ]);
  }
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", ".ctor", 0, "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "_InternalDestroy", null), e([ t.cache ], n, "_get_isDone", null), 
e([ t.cache ], n, "_get_progress", null), e([ t.cache ], n, "_set_allowSceneActivation", null), 
e([ t.cache ], n, "_Finalize", null), e([ t.cache ], n, "_InvokeCompletionEvent", null), 
e([ t.cache ], n, "__ctor", null), Il2Cpp.Api.AsyncOperation = n;

},{"decorator-cache-getter":513}],459:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_AsyncOperation_Impl = void 0;

const e = require("../class");

class n extends e.UnityEngine_YieldInstruction_Impl {
  m_Ptr=lfv(this.handle, "m_Ptr");
  m_completeCallback=lfv(this.handle, "m_completeCallback");
  constructor(e) {
    super(e);
  }
  static InternalDestroy(e) {
    return Il2Cpp.Api.AsyncOperation._InternalDestroy(e);
  }
  get_isDone() {
    return Il2Cpp.Api.AsyncOperation._get_isDone(this.handle);
  }
  get_progress() {
    return Il2Cpp.Api.AsyncOperation._get_progress(this.handle);
  }
  set_allowSceneActivation(e) {
    return Il2Cpp.Api.AsyncOperation._set_allowSceneActivation(this.handle, e);
  }
  Finalize() {
    return Il2Cpp.Api.AsyncOperation._Finalize(this.handle);
  }
  InvokeCompletionEvent() {
    return Il2Cpp.Api.AsyncOperation._InvokeCompletionEvent(this.handle);
  }
  _ctor() {
    return Il2Cpp.Api.AsyncOperation.__ctor(this.handle);
  }
}

exports.UnityEngine_AsyncOperation_Impl = n, Il2Cpp.AsyncOperation = n;

},{"../class":465}],460:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":458,"./class":459}],461:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, n, o) {
  var i, r = arguments.length, c = r < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, n) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, o); else for (var l = e.length - 1; l >= 0; l--) (i = e[l]) && (c = (r < 3 ? i(c) : r > 3 ? i(t, n, c) : i(t, n)) || c);
  return r > 3 && c && Object.defineProperty(t, n, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class n {
  static get __ctor() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Coroutine", ".ctor", 0, [], "void", [ "pointer" ]);
  }
  static get _Finalize() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Coroutine", "Finalize", 0, [], "void", [ "pointer" ]);
  }
  static get _ReleaseCoroutine() {
    return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Coroutine", "ReleaseCoroutine", 1, [ "System.IntPtr" ], "void", [ "pointer" ]);
  }
}

e([ t.cache ], n, "__ctor", null), e([ t.cache ], n, "_Finalize", null), e([ t.cache ], n, "_ReleaseCoroutine", null), 
Il2Cpp.Api.Coroutine = n;

},{"decorator-cache-getter":513}],462:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_Coroutine_Impl = void 0;

const e = require("../class");

class t extends e.UnityEngine_YieldInstruction_Impl {
  m_Ptr=lfv(this.handle, "m_Ptr");
  constructor(e) {
    super(e);
  }
  _ctor() {
    return Il2Cpp.Api.Coroutine.__ctor(this.handle);
  }
  Finalize() {
    return Il2Cpp.Api.Coroutine._Finalize(this.handle);
  }
  static ReleaseCoroutine(e) {
    return Il2Cpp.Api.Coroutine._ReleaseCoroutine(e);
  }
  toFieldsString() {
    return `${this.handle} | ${lfss(this.handle)}`;
  }
}

exports.UnityEngine_Coroutine_Impl = t, Il2Cpp.Coroutine = t;

},{"../class":465}],463:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class");

},{"./api":461,"./class":462}],464:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, c) {
  var o, n = arguments.length, i = n < 3 ? t : null === c ? c = Object.getOwnPropertyDescriptor(t, r) : c;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, c); else for (var l = e.length - 1; l >= 0; l--) (o = e[l]) && (i = (n < 3 ? o(i) : n > 3 ? o(t, r, i) : o(t, r)) || i);
  return n > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get __ctor() {
    return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.YieldInstruction", ".ctor", 0, "void", [ "pointer" ]);
  }
}

e([ t.cache ], r, "__ctor", null), Il2Cpp.Api.YieldInstruction = r;

},{"decorator-cache-getter":513}],465:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.UnityEngine_YieldInstruction_Impl = void 0;

const t = require("../class");

class e extends t.mscorlib_System_Object_impl {
  constructor(t) {
    super(t);
  }
  _ctor() {
    return Il2Cpp.Api.YieldInstruction.__ctor(this.handle);
  }
}

exports.UnityEngine_YieldInstruction_Impl = e, Il2Cpp.YieldInstruction = e;

},{"../class":468}],466:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./AsyncOperation/include"), require("./Coroutine/include");

},{"./AsyncOperation/include":460,"./Coroutine/include":463,"./api":464,"./class":465}],467:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, c) {
  var i, l = arguments.length, o = l < 3 ? t : null === c ? c = Object.getOwnPropertyDescriptor(t, r) : c;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, c); else for (var s = e.length - 1; s >= 0; s--) (i = e[s]) && (o = (l < 3 ? i(o) : l > 3 ? i(t, r, o) : i(t, r)) || o);
  return l > 3 && o && Object.defineProperty(t, r, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter");

class r {
  static get _ctor_0() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", ".ctor", 0, "pointer", [ "pointer" ]);
  }
  static get _toString() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "ToString", 0, "pointer", [ "pointer" ]);
  }
  static get _getType() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "GetType", 0, "pointer", [ "pointer" ]);
  }
  static get _finalize() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "finalize", 0, "pointer", [ "pointer" ]);
  }
  static get _getHashCode() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "getHashCode", 0, "pointer", [ "pointer" ]);
  }
  static get _Equals_1() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "Equals", 2, "pointer", [ "pointer", "pointer" ]);
  }
  static get _Equals_2() {
    return Il2Cpp.Api.t("mscorlib", "System.Object", "Equals", 2, "pointer", [ "pointer", "pointer", "pointer" ]);
  }
}

e([ t.cache ], r, "_ctor_0", null), e([ t.cache ], r, "_toString", null), e([ t.cache ], r, "_getType", null), 
e([ t.cache ], r, "_finalize", null), e([ t.cache ], r, "_getHashCode", null), e([ t.cache ], r, "_Equals_1", null), 
e([ t.cache ], r, "_Equals_2", null), Reflect.set(globalThis, "mscorlib", class {}), 
Reflect.set(mscorlib, "Api", class {}), mscorlib.Api.mscorlibObj = r;

},{"decorator-cache-getter":513}],468:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.mscorlib_System_Object_impl = void 0;

class e {
  handle;
  constructor(e) {
    this.handle = e;
  }
  ctor_mscorlib_System_Object() {
    return mscorlib.Api.mscorlibObj._ctor_0(allocP(1));
  }
  toString() {
    return readU16(mscorlib.Api.mscorlibObj._toString(this.handle));
  }
  memberwiseClone() {
    throw new Error("Not implemented");
  }
  getType() {
    return new mscorlib.Type(mscorlib.Api.mscorlibObj._getType(this.handle));
  }
  finalize() {
    return mscorlib.Api.mscorlibObj._finalize(this.handle);
  }
  getHashCode() {
    return mscorlib.Api.mscorlibObj._getHashCode(this.handle);
  }
  caseTo() {}
}

exports.mscorlib_System_Object_impl = e, mscorlib.Object = e;

},{}],469:[function(require,module,exports){
"use strict";

},{}],470:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./api"), require("./class"), require("./export"), require("./interface"), 
require("./Application/include"), require("./AndroidJavaObject/include"), require("./AndroidJNI/include"), 
require("./AndroidJNIHelper/include"), require("./AndroidJNISafe/include"), require("./GUI/include"), 
require("./Object/include"), require("./Input/include"), require("./Delegate/include"), 
require("./DownloadHandler/include"), require("./Module/include"), require("./Physics/include"), 
require("./SystemInfo/include"), require("./Exception/include"), require("./PlayerPrefs/include"), 
require("./RaycasterManager/include"), require("./Resources/include"), require("./ResourcesAPI/include"), 
require("./ResourcesRequest/include"), require("./Times/include"), require("./FontData/include"), 
require("./Type/include"), require("./RuntimeType/include"), require("./RuntimeTypeHandle/include"), 
require("./SceneManager/include"), require("./Environment/include"), require("./Screen/include"), 
require("./AbstractEventData/include"), require("./Debug/include"), require("./Logger/include"), 
require("./YieldInstruction/include"), require("./ValueType/include"), require("./UnityEventBase/include"), 
require("./UnityWebRequest/include"), require("./WWWForm/include"), require("./InvokableCallList/include"), 
require("./GlobalJavaObjectRef/include"), require("./CustomYieldInstruction/include"), 
require("./ImageConversion/include");

},{"./AbstractEventData/include":45,"./AndroidJNI/include":58,"./AndroidJNIHelper/include":50,"./AndroidJNISafe/include":54,"./AndroidJavaObject/include":65,"./Application/include":70,"./CustomYieldInstruction/include":78,"./Debug/include":82,"./Delegate/include":91,"./DownloadHandler/include":112,"./Environment/include":116,"./Exception/include":120,"./FontData/include":124,"./GUI/include":128,"./GlobalJavaObjectRef/include":131,"./ImageConversion/include":135,"./Input/include":140,"./InvokableCallList/include":144,"./Logger/include":149,"./Module/include":152,"./Object/include":305,"./Physics/include":310,"./PlayerPrefs/include":314,"./RaycasterManager/include":318,"./Resources/include":330,"./ResourcesAPI/include":322,"./ResourcesRequest/include":326,"./RuntimeType/include":337,"./RuntimeTypeHandle/include":333,"./SceneManager/include":341,"./Screen/include":345,"./SystemInfo/include":350,"./Times/include":354,"./Type/include":357,"./UnityEventBase/include":365,"./UnityWebRequest/include":370,"./ValueType/include":453,"./WWWForm/include":457,"./YieldInstruction/include":466,"./api":467,"./class":468,"./export":469,"./interface":471}],471:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

},{}],472:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./thread");

},{"./thread":473}],473:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => {
  Il2Cpp.Api._threadCurrent().isNull() && Il2Cpp.Domain.attach();
}, t = () => {
  let e = Il2Cpp.Api._threadCurrent();
  e.isNull() || new Il2Cpp.Thread(e).detach();
};

globalThis.attachCurrentThread = e, globalThis.detachCurrentThread = t;

},{}],474:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./TypeExtends/include");

},{"./TypeExtends/include":34}],475:[function(require,module,exports){
"use strict";

},{}],476:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("frida-il2cpp-bridge"), require("./api/include"), require("./expand/include"), 
require("./base/include"), require("./bridge/include"), require("./java/include"), 
require("./utils/include"), require("./plugin/include"), require("./globel");

},{"./api/include":1,"./base/include":10,"./bridge/include":31,"./expand/include":474,"./globel":475,"./java/include":488,"./plugin/include":493,"./utils/include":506,"frida-il2cpp-bridge":541}],477:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./include"), setImmediate((() => e()));

const e = () => {
  s(), t();
}, t = () => {
  Il2Cpp.perform((() => {
    Interceptor.attach(soAddr.add(11219352), {
      onEnter: function(e) {
        PrintStackTraceN(this.context);
      },
      onLeave: function(e) {}
    });
  }));
};

class r {
  static savedPauseCode=ptr(0);
  static Pause() {
    Il2Cpp.perform((() => {
      Memory.patchCode(r.getPauseAddress(), 4, (e => {
        var t;
        r.savedPauseCode = e.readPointer(), (t = "arm64" == Process.arch ? new Arm64Writer(e) : new ArmWriter(e)).putLabel("loop"), 
        t.putBLabel("loop"), t.flush();
      }));
    }));
  }
  static Resume() {
    Il2Cpp.perform((() => {
      Memory.patchCode(r.getPauseAddress(), 4, (e => {
        e.writePointer(r.savedPauseCode);
      }));
    }));
  }
  static getPauseAddress=() => {
    let e = Il2Cpp.Domain.assembly("UnityEngine.UI").image.tryClass("UnityEngine.EventSystems.EventSystem");
    if (null != e) {
      let t = e.tryMethod("Update");
      if (null != t) return t.virtualAddress;
    }
    let t = Il2Cpp.Domain.assembly("UnityEngine.UI").image.tryClass("UnityEngine.UI.Image");
    if (null != t) {
      let e = t.tryMethod("UpdateMaterial");
      if (null != e) return e.virtualAddress;
    }
    return Il2Cpp.Api.GameObject._SetActive;
  };
}

class i {
  static savedCode=new Map;
  static setException=e => {
    Process.setExceptionHandler((t => {
      if (!this.savedCode.keys.toString().includes(t.address.toString())) return !1;
      if (e) e(t); else if (LOGD(`\nCalled => ${t.type} : ${t.address}`), "arm64" == Process.arch) {
        let e = t.context;
        LOGZ(`x0: ${e.x0} x1: ${e.x1} x2: ${e.x2} x3: ${e.x3} pc: ${e.pc} sp: ${e.sp} fp: ${e.fp} lr: ${e.lr}`);
      } else if ("arm" == Process.arch) {
        let e = t.context;
        LOGZ(`r0: ${e.r0} r1: ${e.r1} r2: ${e.r2} r3: ${e.r3} pc: ${e.pc} sp: ${e.sp} fp: ${e.r11} ip: ${e.r12} lr: ${e.lr}`);
      }
      let r = t.context.pc, n = ptr(i.savedCode.get(r.toString())), s = Memory.alloc(256);
      Memory.protect(s, 256, "rwx"), Memory.protect(r, 4, "rwx"), r.writePointer(n);
      let a = s.add(240);
      var o;
      if (a.writePointer(r.add(4)), "arm64" == Process.arch) {
        o = new Arm64Writer(s);
        let e = new Arm64Relocator(r, o);
        e.readOne(), e.writeOne(), o.putLdrRegU64Ptr("x16", a), o.putBrReg("x16");
      } else {
        if ("arm" != Process.arch) throw new Error("Not support arch");
        {
          o = new ArmWriter(s);
          let e = new ArmRelocator(r, o);
          e.readOne(), e.writeOne(), o.putLdrRegU32("r12", a.readU32()), o.putBlxReg("r12");
        }
      }
      return o.putNop(), o.flush(), seeHexA(s), t.context.pc = s, i.writeBP(r), !0;
    }));
  };
  static writeBP=e => {
    "arm" == Process.arch && LOGE("Not test arm32"), e = checkPointer(e);
    try {
      Instruction.parse(e);
    } catch (t) {
      throw new Error(`AddBP ${e} ${t}`);
    }
    if (i.savedCode.keys.toString().includes(e.toString())) throw new Error(`AddBP ${e} already exists`);
    i.savedCode.set(e.toString(), e.readPointer().toString()), Memory.patchCode(e, 4, (e => {
      var t;
      (t = "arm64" == Process.arch ? new Arm64Writer(e) : new ArmWriter(e)).putBytes([ 0, 0, 0, 0 ]), 
      t.flush();
    }));
  };
  static removeBP=e => {
    i.savedCode.keys.toString().includes(e.toString()) && i.savedCode.delete(e.toString());
  };
  static is_pc_relative(e) {
    let t = e;
    return !!t.regsRead.toString().includes("pc") || (!!t.regsWritten.toString().includes("pc") || !!t.opStr.includes("pc"));
  }
}

const n = () => {
  Java.perform((function() {
    Java.use("android.app.Activity").finish.overload().implementation = function() {
      console.log("called android.app.Activity.Finish"), PrintStackTrace();
    }, Java.use("java.lang.System").exit.implementation = function(e) {
      console.log("called java.lang.System.exit(" + e + ")"), PrintStackTrace();
    };
  })), Il2Cpp.perform((() => {
    R(Il2Cpp.Domain.assembly("UnityEngine.CoreModule").image.class("UnityEngine.Application").method("Quit", 1).virtualAddress, ((e, t) => (LOGE("called UnityEngine.Application.Quit(" + t.toInt32() + ")"), 
    ptr(0)))), R(Il2Cpp.Domain.assembly("UnityEngine.CoreModule").image.class("UnityEngine.Application").method("Quit").virtualAddress, (e => (LOGE("called UnityEngine.Application.Quit()"), 
    ptr(0))));
  }));
};

function s() {
  Il2Cpp.perform((() => {
    Il2Cpp.Api._resolveInternalCall(allocCStr("UnityEngine.Application::get_unityVersion")).isNull() && (Reflect.has(Il2Cpp, "unityVersion") && (Reflect.deleteProperty(Il2Cpp, "unityVersion"), 
    Reflect.defineProperty(Il2Cpp, "unityVersion", {
      value: "2020.3.0f1c1"
    })), Reflect.has(Il2Cpp, "unityVersionIsBelow201830") && (Reflect.deleteProperty(Il2Cpp, "unityVersionIsBelow201830"), 
    Reflect.defineProperty(Il2Cpp, "unityVersionIsBelow201830", {
      value: !1
    })));
  }));
}

globalThis.pause = r.Pause, globalThis.resume = r.Resume, globalThis.setException = i.setException, 
globalThis.addBP = i.writeBP, globalThis.removeBP = i.removeBP, globalThis.HookExit = n;

}).call(this)}).call(this,require("timers").setImmediate)

},{"./include":476,"timers":547}],478:[function(require,module,exports){
"use strict";

},{}],479:[function(require,module,exports){
"use strict";

},{}],480:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./ads"), require("./unity"), require("./max");

},{"./ads":479,"./max":481,"./unity":482}],481:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

let e = new Map, a = new Map;

const l = (l = !0) => {
  let t = find_method("MaxSdk.Scripts", "MaxSdkCallbacks", "ForwardEvent", 1);
  t.isNull() || A(t, (t => {
    let s = readU16(t[1]), n = JSON.parse(s), o = l ? n : s;
    try {
      n.waterfallInfo.networkResponses = n.waterfallInfo.networkResponses.splice(0, 1);
    } catch {}
    e.set(n.name, n), a.set(n.name, s), LOGE(`\n[*] MaxSdkCallbacks.ForwardEvent('${t[0]}','${o}')\n`), 
    l && LOGJSON(o);
  }));
  let s = find_method("MaxSdk.Scripts", "MaxSdkCallbacks", "InvokeEvent", 2);
  s.isNull() || A(s, (e => {
    let a = l ? JSON.parse(readU16(e[1])) : readU16(e[1]);
    LOGE(`\n[*] MaxSdkCallbacks.InvokeEvent('${e[0]}','${a}')`), l && LOGJSON(a);
  }));
}, t = (l = !1) => {
  0 == e.size && LOGE("Noting to show ...");
  for (let [t, s] of e) {
    let e = JSON.parse(a.get(t)), n = "";
    try {
      l ? (LOGE(`\n[*] ${t} ↓`), LOGD(`SendUnityMessage("MaxSdkCallbacks", "ForwardEvent", "${a.get(t).replace(/"/g, '\\"')})");`)) : (n = "{ " + e.waterfallInfo.networkResponses.length + " -> 1 }", 
      LOGE(`\n[*] ${t} ${n} ↓`), LOGJSON(s));
    } catch {}
  }
  newLine();
};

globalThis.HookMaxCallBack = l, globalThis.listMaxCallBack = t;

},{}],482:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.MaxUnityAdManager_impl = exports.Utils_Impl = void 0;

class e {
  static retrieveSdkKey() {
    let e = "";
    return Java.perform((() => {
      let a = Java.use("com.applovin.mediation.unity.Utils");
      e = a.retrieveSdkKey();
    })), e;
  }
  static Hook_retrieveSdkKey() {
    Java.perform((() => {
      Java.use("com.applovin.mediation.unity.Utils").retrieveSdkKey.implementation = function() {
        let e = this.retrieveSdkKey();
        return LOGD(`Called retrieveSdkKey: ret => ${e}`), e;
      };
    }));
  }
  static getCurrentActivity() {
    let e = NULL;
    return Java.perform((() => {
      let a = Java.use("com.applovin.mediation.unity.Utils");
      e = a.getCurrentActivity();
    })), e;
  }
}

exports.Utils_Impl = e;

class a {
  static get SDK_TAG() {
    let e = "";
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").SDK_TAG.value;
    })), e;
  }
  static get TAG() {
    let e = "";
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").TAG.value;
    })), e;
  }
  static get VERSION() {
    let e = "";
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").VERSION.value;
    })), e;
  }
  static get backgroundCallback() {
    let e = NULL;
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").backgroundCallback.value;
    })), e;
  }
  static get currentActivity() {
    let e = NULL;
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").currentActivity.value;
    })), e;
  }
  static get instance() {
    let e = {
      mAdInfoMap: {}
    };
    return Java.perform((() => {
      e = Java.use("com.applovin.mediation.unity.MaxUnityAdManager").instance.value;
    })), e;
  }
  static get mAdInfoMap() {
    let e = NULL;
    return Java.perform((() => {
      let t = a.instance;
      null != t && (e = t.mAdInfoMap.value);
    })), e;
  }
}

exports.MaxUnityAdManager_impl = a, Reflect.set(globalThis, "JavaAds", {}), globalThis.JavaAds.Utils = e, 
globalThis.JavaAds.MaxUnityAdManager = a;

},{}],483:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = () => {
  D(), BF("showInterstitial"), BF("ShowRewardedInterstitialAd"), BF("showRewardedAd"), 
  BF("ShowBannerAd"), BF("Banner"), BF("AppOpenAd"), BF("CrossPromoAd"), BF("ShowRV");
}, o = () => {
  BF("LogPurchase"), BF("LogAppEvent");
};

globalThis.B_ShowAD = e, globalThis.B_LOGS = o;

},{}],484:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./admob/include"), require("./applovin/include"), require("./export");

},{"./admob/include":478,"./applovin/include":480,"./export":483}],485:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.iterClassLoader = exports.listClassLoader = void 0;

const a = require("../utils/formart");

class s {
  static iterClassLoader=(a, s = !1) => {
    function e(a, s) {
      Java.classFactory.loader = a, s(a);
    }
    Java.perform((() => {
      Java.enumerateClassLoaders({
        onMatch: function(t) {
          s && LOGD("classLoader" + t.toString()), t.toString().indexOf("dalvik.system.DexClassLoader"), 
          null != a && e(t, a);
        },
        onComplete: function() {}
      });
    }));
  };
  static loaders=new Array;
  static listClassLoader=(e = !0, t = !0) => {
    if (t || 0 !== s.loaders.length) if (e) {
      l(), [ "java.lang.BootClassLoader", "dalvik.system.DexClassLoader", "dalvik.system.PathClassLoader", "dalvik.system.InMemoryDexClassLoader" ].forEach((e => {
        a.formartClass.printTitile(e), this.loaders.forEach((a => {
          a.toString().indexOf(e) > -1 && LOGD("  [" + s.loaders.indexOf(a) + "] " + a.toString());
        }));
      }));
    } else Java.perform((() => s.iterClassLoader((() => {}), !0))); else l();
    function l() {
      0 === s.loaders.length && Java.perform((() => s.iterClassLoader((a => {
        s.loaders.includes(a) || s.loaders.push(a);
      }), !1)));
    }
  };
  static getClassLoaderByDescriptor=a => {
    let e = null;
    return s.loaders.forEach((s => {
      s.toString().indexOf(a) > -1 && (e = s);
    })), e;
  };
  static getClassLoaderByIndex=a => s.loaders[a];
  static HookClassLoader() {
    Java.perform((function() {
      let a = Java.use("dalvik.system.BaseDexClassLoader"), s = Java.use("java.lang.Class");
      null != a && (a.$init.overload("java.lang.String", "java.io.File", "java.lang.String", "java.lang.ClassLoader").implementation = function(a, e, t, l) {
        let o = this.$init(a, e, t, l), r = Java.cast(this.getClass(), s);
        return LOG("[I] " + r.getName()), o;
      }, a.loadClass.overload("java.lang.String", "boolean").implementation = function(a) {
        let e = Java.cast(this.getClass(), s);
        return LOGD("[L] " + e.getName() + " load  ---\x3e  " + a), this.loadClass(a, !1);
      }, a.findClass.implementation = function(a) {
        let e = this.findClass(a), t = Java.cast(this.getClass(), s);
        return LOGD("[F] " + t.getName() + " find  ---\x3e  " + a), e;
      });
    }));
  }
}

const e = s.listClassLoader;

exports.listClassLoader = e;

const t = s.iterClassLoader;

exports.iterClassLoader = t, globalThis.listClassLoader = s.listClassLoader, globalThis.iterClassLoader = s.iterClassLoader, 
globalThis.getClassLoaderByDescriptor = s.getClassLoaderByDescriptor, globalThis.getClassLoaderByIndex = s.getClassLoaderByIndex, 
globalThis.HookClassLoader = s.HookClassLoader;

},{"../utils/formart":505}],486:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const a = require("./classLoader"), e = (e = "com.unity3d.player.UnityPlayerActivity") => {
  let t = !0;
  Java.perform((() => {
    (0, a.iterClassLoader)((function(a) {
      if (a) try {
        a.loadClass(e) && (t = !1), Java.choose(e, {
          onMatch: function(e) {
            LOGD("[*] onMatch : \n\t" + e.toString() + " at " + a.toString());
          },
          onComplete: function() {}
        });
      } catch {}
    }), !1);
  }));
}, t = () => {
  Java.perform((function() {
    Java.enumerateLoadedClasses({
      onMatch: function(a) {
        LOG("[*] Class Name: " + a);
        var e = Java.use(a).class.getMethods();
        for (var t in e) LOG("\t" + e[t]);
      },
      onComplete: function() {}
    });
  }));
}, o = () => {
  Java.perform((function() {
    Java.enumerateLoadedClasses({
      onMatch: function(a) {
        LOG(a);
      },
      onComplete: function() {}
    });
  }));
}, n = () => {
  Java.perform((function() {
    var a = "android.security.keystore.KeyGenParameterSpec$Builder", e = Java.use(a).class.getMethods();
    for (var t in LOG("[*] Class Name: " + a), LOG("[*] Method Names:"), e) LOG(e[t]);
  }));
};

globalThis.findJavaClass = e;

},{"./classLoader":485}],487:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.setClick = exports.HookMotionEvent = void 0;

const o = () => {
  Java.perform((() => {
    Java.use("android.view.View").onTouchEvent.implementation = function(o) {
      let e = this.onTouchEvent(o);
      return LOG("\n" + getLine(25) + " onTouchEvent " + getLine(25), LogColor.YELLOW), 
      LOG(e + "\t" + o, LogColor.C36), e;
    }, Java.use("android.app.Activity").dispatchTouchEvent.implementation = function(o) {
      let e = this.dispatchTouchEvent(o);
      return LOG("\n" + getLine(25) + " dispatchTouchEvent " + getLine(25), LogColor.YELLOW), 
      LOG(e + "\t" + o, LogColor.C36), e;
    };
  }));
};

exports.HookMotionEvent = o;

const e = (o, e) => {
  null != o && null != e && Java.perform((() => {
    let t = Java.use("android.app.Instrumentation"), n = Java.use("android.os.SystemClock"), i = Java.use("android.view.MotionEvent"), a = t.$new(), s = n.uptimeMillis(), r = i.obtain(s, s, 0, o, e, 0), l = n.uptimeMillis(), u = i.obtain(l, l, 1, o, e, 0);
    a.sendPointerSync(r), a.sendPointerSync(u);
  }));
};

exports.setClick = e, globalThis.HookMotionEvent = o, globalThis.setClick = e;

},{}],488:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./click"), require("./info"), require("./others"), require("./logcat"), 
require("./classUtils"), require("./classLoader"), require("./unity"), require("./ADS/include");

},{"./ADS/include":484,"./classLoader":485,"./classUtils":486,"./click":487,"./info":489,"./logcat":490,"./others":491,"./unity":492}],489:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.findClasses = exports.cacheMethods = exports.launchApp = exports.getApkInfo = void 0;

const e = require("../expand/TypeExtends/mscorlibObj/Application/export"), t = require("../expand/TypeExtends/mscorlibObj/Environment/export"), a = require("../expand/TypeExtends/mscorlibObj/SystemInfo/export"), s = require("../bridge/fix/il2cppM"), n = require("../expand/TypeExtends/mscorlibObj/Times/export"), r = require("../utils/formart"), o = require("fastest-levenshtein"), l = require("../base/base"), i = require("../base/breaker"), c = () => {
  function e(e) {
    let t = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext(), a = t.getPackageManager().getApplicationInfo(t.getPackageName(), 128).metaData.value;
    return null != a ? a.getString(e) : "...";
  }
  function t(e, t) {
    const a = [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 ];
    let s = Java.use("java.security.MessageDigest").getInstance(t);
    s.update(e);
    let n = s.digest(), r = [];
    for (let e = 0, s = 0; ;e++, s++) {
      if (e >= ("MD5" == t ? 16 : "SHA-1" == t ? 20 : 32)) return Java.use("java.lang.String").$new(r);
      let o = n[e];
      r[s] = a[15 & o >>> 4], r[++s] = a[15 & o];
    }
  }
  Java.perform((() => {
    LOGO(getLine(100));
    let a = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext(), s = a.getPackageManager().getPackageInfo(a.getPackageName(), 0), n = s.applicationInfo.value, r = -1, o = "Error Reading Name";
    try {
      r = n.labelRes.value, o = a.getResources().getString(r);
    } catch {}
    LOGD("[*]AppName\t\t" + o + " (UID:" + n.uid.value + ")\t ID:0x" + n.labelRes.value.toString(16));
    let l = n.flags.value;
    LOGZ("\t\t\tBackupable -> " + (0 != (32768 & l)) + "\tDebugable -> " + (0 != (2 & l)));
    let i = a.getPackageName();
    LOGD("\n[*]PkgName\t\t" + i);
    let c = s.versionName.value, d = s.versionCode.value, u = s.applicationInfo.value.targetSdkVersion.value;
    LOGD("\n[*]Verison\t\t{ " + c + " / " + d + " }\t(targetSdkVersion:" + u + ")");
    let g = Java.use("java.io.File").$new(n.sourceDir.value).length();
    LOGD("\n[*]AppSize\t\t" + g + "\t(" + (g / 1024 / 1024).toFixed(2) + " MB)"), LOGD("\n[*]Time\t\t\tInstallTime\t" + new Date(s.firstInstallTime.value).toLocaleString()), 
    LOGD("\t\t\tUpdateTime\t" + new Date(s.lastUpdateTime.value).toLocaleString());
    let p = n.sourceDir.value, h = n.dataDir.value;
    LOGD("\n[*]Location\t\t" + p + "\n\t\t\t" + function(e) {
      let t = "";
      return Java.perform((() => {
        let a = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext().getApplicationInfo().nativeLibraryDir.value;
        t = a + "/" + (null == e ? "" : e);
      })), t;
    }() + "\n\t\t\t" + h);
    let f = a.getPackageManager().getPackageInfo(i, 64).signatures.value[0].toByteArray();
    LOGD("\n[*]Signatures\t\tMD5\t " + t(f, "MD5") + "\n\t\t\tSHA-1\t " + t(f, "SHA-1") + "\n\t\t\tSHA-256\t " + t(f, "SHA-256"));
    let m = e("unity.build-id");
    try {
      0 != m.length && LOGD("\n[*]unity.build-id\t" + e("unity.build-id"));
    } catch {}
    LOGO(getLine(100));
  }));
};

function d() {
  (0, e.Application)(), (0, a.SystemInfo)(), (0, t.Environment)(), (0, n.Time)();
}

exports.getApkInfo = c;

let u = new Array;

const g = (e = !0) => {
  if (u.length > 0) return;
  e && LOGZ("Caching methods ...");
  let t = Date.now();
  Il2Cpp.Domain.assemblies.forEach((e => {
    e.image.classes.forEach((e => {
      e.methods.forEach((e => u.push(e)));
    }));
  })), e && LOGZ(`Caching methods done. ${u.length} Methods . cost ${Date.now() - t} ms\n`);
};

exports.cacheMethods = g;

const p = e => {
  let t = 0;
  const a = l.HookerBase._list_classes.filter((t => t.name.toLocaleLowerCase().includes(e.toLocaleLowerCase())));
  let s = a.reduce(((e, t) => e > t.name.length ? e : t.name.length), 0) + 1;
  s = (s > 30 ? 30 : s) - 1, a.sort(((e, t) => (t.isAbstract ? -1 : 1) - (e.isAbstract ? -1 : 1))).sort(((e, t) => (t.isEnum ? 1 : -1) - (e.isEnum ? 1 : -1))).forEach((e => {
    0 == t && newLine(1);
    let a = r.formartClass.alignStr(`M:${e.methods.length}`, 6), n = r.formartClass.alignStr(`F:${e.fields.length}`, 6), o = r.formartClass.alignStr(`E:${e.isEnum}`, 8), l = r.formartClass.alignStr(`A:${e.isAbstract}`, 8), i = `${TFM(r.formartClass.alignStr(e.name, s), LogColor.C93)} ${TFM(`< ${e.assemblyName} -> ${0 == e.namespace.length ? "NULL" : e.namespace} >`, LogColor.C33)}`;
    LOG(`${r.formartClass.alignStr(`[${++t}]`, 6)}${e.handle}  ===>  { ${a}| ${n}| ${o}| ${l} } ${i}`, e.isAbstract || e.isEnum ? LogColor.C90 : LogColor.C36);
  })), newLine(1);
};

exports.findClasses = p;

const h = (e = "", t = !0, a = -1, n = !1) => {
  let l = -1, i = new Array, c = new Array, d = new Array, p = Date.now();
  try {
    findExport("il2cpp_", "libil2cpp.so", (t => {
      "function" == t.type && t.name.toLocaleLowerCase().includes(e.toLowerCase()) && h(t);
    })), findExport("", "libunity.so", (t => {
      "function" == t.type && t.name.toLocaleLowerCase().includes(e.toLowerCase()) && h(t);
    }));
  } catch (e) {
    LOGE(e);
  }
  if (t) 0 == u.length && g(), u.filter((t => t.name.toLocaleLowerCase().includes(e.toLowerCase()))).forEach(f); else {
    new Il2Cpp.Class(findClass("Transform")).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("GameObject")).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("Application")).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("Input")).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("PlayerPrefs")).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("Object", [ "UnityEngine.CoreModule" ], !1)).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    })), new Il2Cpp.Class(findClass("Object", [ "mscorlib" ], !1)).methods.forEach((t => {
      t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
    }));
    try {
      new Il2Cpp.Class(findClass("Text")).methods.forEach((t => {
        t.name.toLocaleLowerCase().includes(e.toLowerCase()) && f(t);
      }));
    } catch (e) {}
  }
  if (n) return d;
  function h(e) {
    if (n) return;
    let t = `${r.formartClass.alignStr(`[${++l}]`, 6)} ${r.formartClass.alignStr(e.address, 4 * p_size)}  ---\x3e   ${e.address.sub(soAddr)}\t${e.name}`;
    -1 != a && a > 10 && (t = r.formartClass.alignStr(t, a)), i.push(t);
  }
  function f(e) {
    if (n) return void d.push(e);
    let t = `${r.formartClass.alignStr(`[${++l}]`, 6)} ${r.formartClass.alignStr(e.handle, 3 * p_size) + (e.virtualAddress.isNull() ? "" : ` ---\x3e  ${r.formartClass.alignStr(e.relativeVirtualAddress, 12)}`)}  |  ${r.formartClass.alignStr(e.class.name, 20)} @ ${e.class.handle} |  ${(0, 
    s.getMethodDesFromMethodInfo)(e)}`;
    -1 != a && a > 10 && (t = r.formartClass.alignStr(t, a)), e.virtualAddress.isNull() ? c.push(t) : i.push(t);
  }
  newLine(), i.sort(o.distance).forEach(LOGD), newLine(), c.sort(o.distance).forEach(LOGZ), 
  LOGZ(`\nTake ${Date.now() - p}ms to find ${i.length} ${i.length <= 1 ? "result" : "results"}`), 
  -1 != a && a < 100 && LOGZ(`\n${a} lines of results are shown recommended to be greater than 100`), 
  newLine();
}, f = (e, t = !0) => {
  0 == u.length && g(t), "string" == typeof e && String(e).startsWith("0x") && (e = ptr(e)), 
  "number" == typeof e && (e = ptr(e));
  let a = u.find((t => t.virtualAddress.equals(e) || t.relativeVirtualAddress.equals(e)));
  if (a) return a;
  throw new Error(`Can't find method by address ${e}`);
}, m = (e, t = !1) => {
  try {
    return f(e, t);
  } catch {
    return null;
  }
}, C = (e, t = !0) => {
  if (t) return l.HookerBase.MethodToShow(f(e));
  let a = f(e), n = a.class.image.name, o = a.class.namespace, i = a.class.name, c = Math.max(n.length, o.length, i.length) + 1;
  n = r.formartClass.alignStr(n, c), o = r.formartClass.alignStr(o, c), i = r.formartClass.alignStr(i, c);
  let d = `image\t\t${n} @ ${a.class.image.handle}`, u = `namespace\t${0 == o.trim().length ? r.formartClass.centerStr("---", c) : o} @ ${a.class.handle}`, g = `class\t\t${i} @ ${a.class.handle}`, p = `methodInfo\t${a.handle} -> ${a.virtualAddress} -> ${a.relativeVirtualAddress}`, h = `methodName\t${(0, 
  s.getMethodDesFromMethodInfo)(a)}`, m = Math.max(d.length, u.length, g.length, p.length, h.length) + 4;
  LOGW(getLine(m)), LOGD(`${d}\n${u}\n${g}\n${p}\n${h}`), LOGW(getLine(m));
}, L = (e = 0) => showMethodInfo(f(checkCmdInput(e)).handle), w = e => Java.perform((() => {
  let t = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext();
  t.startActivity(Java.use("android.content.Intent").$new(t.getPackageManager().getLaunchIntentForPackage(e)));
}));

exports.launchApp = w, globalThis.bp = (e, t = !1) => {
  h(e, !0, -1, !0).forEach((e => {
    e.virtualAddress.isNull() || (t ? b(e.handle) : i.Breaker.attachMethod(e));
  }));
}, globalThis.getApkInfo = c, Reflect.set(globalThis, "launchApp", w), Reflect.set(globalThis, "findMethods", h), 
Reflect.set(globalThis, "findClasses", p), Reflect.set(globalThis, "getUnityInfo", d), 
Reflect.set(globalThis, "AddressToMethod", f), Reflect.set(globalThis, "AddressToMethodToString", C), 
Reflect.set(globalThis, "AddressToMethodNoException", m), Reflect.set(globalThis, "showAddressInfo", L);

},{"../base/base":4,"../base/breaker":5,"../bridge/fix/il2cppM":21,"../expand/TypeExtends/mscorlibObj/Application/export":69,"../expand/TypeExtends/mscorlibObj/Environment/export":115,"../expand/TypeExtends/mscorlibObj/SystemInfo/export":349,"../expand/TypeExtends/mscorlibObj/Times/export":353,"../utils/formart":505,"fastest-levenshtein":514}],490:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookJavaLog = void 0;

const t = require("../utils/formart"), a = () => {
  Java.perform((() => {
    var a = Java.use("android.util.Log");
    a.d.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " DEBUG (d):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.d(arguments);
    }, a.e.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " ERROR (e):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.e(arguments);
    }, a.e.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function(a, r, n) {
      return LOGD("[*] " + t.formartClass.getTime() + " ERROR (e):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), LOGD("\targ3 : " + n.toString()), this.e(arguments);
    }, a.i.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " INFO (i):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.i(arguments);
    }, a.i.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function(a, r, n) {
      return LOGD("[*] " + t.formartClass.getTime() + " INFO (i):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), LOGD("\targ3 : " + n.toString()), this.i(arguments);
    }, a.v.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " VERBOSE (v):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.v(arguments);
    }, a.v.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function(a, r, n) {
      return LOGD("[*] " + t.formartClass.getTime() + " VERBOSE (v):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), LOGD("\targ3 : " + n.toString()), this.v(arguments);
    }, a.w.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " WARNING (w):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.w(arguments);
    }, a.w.overload("java.lang.String", "java.lang.Throwable").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " WARNING (w):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.w(arguments);
    }, a.w.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function(a, r, n) {
      return LOGD("[*] " + t.formartClass.getTime() + " WARNING (w):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), LOGD("\targ3 : " + n.toString()), this.w(arguments);
    }, a.wtf.overload("java.lang.String", "java.lang.String").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " WTF (wtf):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.wtf(arguments);
    }, a.wtf.overload("java.lang.String", "java.lang.Throwable").implementation = function(a, r) {
      return LOGD("[*] " + t.formartClass.getTime() + " WTF (wtf):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), this.wtf(arguments);
    }, a.wtf.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function(a, r, n) {
      return LOGD("[*] " + t.formartClass.getTime() + " WTF (wtf):"), LOGD("\targ1 : " + a.toString()), 
      LOGD("\targ2 : " + r.toString()), LOGD("\targ3 : " + n.toString()), this.wtf(arguments);
    };
  }));
};

exports.HookJavaLog = a, globalThis.HookJavaLog = a;

},{"../utils/formart":505}],491:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Toast = void 0;

var a = a => {
  Java.scheduleOnMainThread((() => {
    let e = Java.use("android.app.ActivityThread").currentApplication().getApplicationContext();
    Java.use("android.widget.Toast").makeText(e, Java.use("java.lang.String").$new(a), 1).show();
  }));
};

exports.Toast = a, globalThis.Toast = a;

},{}],492:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.HookCallstatic = void 0;

const t = () => {
  Il2Cpp.perform((() => {
    let t = Il2Cpp.Domain.assembly("UnityEngine.AndroidJNIModule").image.class("UnityEngine.AndroidJavaObject").method("_CallStatic").virtualAddress;
    if (t.isNull()) throw new Error("CallStatic is null");
    function e(t) {
      return `${Java.cast(t, Java.use("java.lang.Object"))} @ ${t}`;
    }
    A(t, (t => {
      let l = new Il2Cpp.AndroidJavaObject(t[0]), a = new Il2Cpp.String(t[1]).toString(), n = new Il2Cpp.Array(t[2]);
      LOGD(`\n[+] CallStatic: ${e(l.m_jclass.m_jobject)} -> ${a} argsCount:${n.length}`);
      for (let t = 0; t < n.length; t++) {
        let l = n.get(t);
        l.toString().includes("AndroidJavaObject") ? LOGO(`\t[-] ${l.handle} -> ${l.toString()} { ${e(new Il2Cpp.AndroidJavaObject(l.handle).m_jclass.m_jobject)} }`) : LOGO(`\t[-] ${l.handle} -> ${l.toString()}`);
      }
    }), (t => {}));
  }));
};

exports.HookCallstatic = t, globalThis.HookCallstatic = exports.HookCallstatic;

},{}],493:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./std/_include");

},{"./std/_include":494}],494:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./std_deque"), require("./std_string"), require("./std_vector");

},{"./std_deque":495,"./std_string":496,"./std_vector":497}],495:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e {
  constructor(e, t, r) {
    this.addr = e, this.valueSize = t, this.introspectElement = r;
  }
  get DEQUESIZ() {
    return this.valueSize <= 1 ? 16 : this.valueSize <= 2 ? 8 : this.valueSize <= 4 ? 4 : this.valueSize <= 8 ? 2 : 1;
  }
  get containerProxy() {
    return this.addr.readPointer();
  }
  get map() {
    return this.addr.add(Process.pointerSize).readPointer();
  }
  get mapsize() {
    return this.addr.add(2 * Process.pointerSize).readPointer();
  }
  get myoff() {
    return this.addr.add(3 * Process.pointerSize).readPointer();
  }
  get mysize() {
    return this.addr.add(4 * Process.pointerSize).readPointer();
  }
  get contents() {
    const e = [], t = this.DEQUESIZ, r = this.map, i = this.mapsize, s = this.myoff.toInt32(), o = this.mysize.toInt32();
    for (let n = s; n < s + o; n++) {
      const s = n % i, o = Math.floor(s / t), a = s % t, d = r.add(Process.pointerSize * o).readPointer().add(this.valueSize * a);
      let h;
      h = this.introspectElement ? this.introspectElement(d) : d.readByteArray(this.valueSize), 
      e.push(h);
    }
    return e;
  }
  toString() {
    return "deque@" + this.addr + "{ map=" + this.map + ", offset=" + this.myoff + ", size=" + this.mysize + ", contents: " + this.contents + "}";
  }
}

exports.default = e;

},{}],496:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = 16;

class r {
  constructor(e) {
    this.addr = e;
  }
  get bufAddr() {
    return this.reservedSize.compare(16) > 0 ? this.addr.readPointer() : this.addr;
  }
  get size() {
    return this.addr.add(e).readPointer();
  }
  get reservedSize() {
    return this.addr.add(e).add(Process.pointerSize).readPointer();
  }
  toString() {
    const e = this.size;
    return e.isNull() ? "<EMPTY std::string>" : Memory.readCString(this.bufAddr, e.toInt32());
  }
}

exports.default = r;

},{}],497:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class t {
  constructor(t, e) {
    this.addr = t, this.elementSize = e.elementSize ? e.elementSize : Process.pointerSize, 
    this.introspectElement = e.introspectElement;
  }
  get myfirst() {
    return this.addr.readPointer();
  }
  get mylast() {
    return this.addr.add(Process.pointerSize).readPointer();
  }
  get myend() {
    return this.addr.add(2 * Process.pointerSize).readPointer();
  }
  countBetween(t, e) {
    if (t.isNull()) return 0;
    return e.sub(t).toInt32() / this.elementSize;
  }
  get size() {
    return this.countBetween(this.myfirst, this.mylast);
  }
  get capacity() {
    return this.countBetween(this.myfirst, this.myend);
  }
  toString() {
    let t = "std::vector(" + this.myfirst + ", " + this.mylast + ", " + this.myend + ")";
    if (t += "{ size: " + this.size + ", capacity: " + this.capacity, this.introspectElement) {
      t += ", content: [";
      const e = this.myfirst;
      if (!e.isNull()) {
        const i = this.mylast;
        for (let s = e; s.compare(i) < 0; s = s.add(this.elementSize)) s.compare(e) > 0 && (t += ", "), 
        t += this.introspectElement(s);
      }
      t += "]";
    }
    return t += " }", t;
  }
}

exports.default = t;

},{}],498:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.allocVector = exports.allocUStr = exports.allocCStr = exports.allocP = exports.alloc = void 0;

const l = require("../base/enum"), o = (o, e = l.TYPE_STR.C_STR) => e == l.TYPE_STR.C_STR ? Memory.allocUtf8String(o) : Il2Cpp.Api._stringNew(Memory.allocUtf8String(o)), e = e => o(e, l.TYPE_STR.C_STR);

exports.allocCStr = e;

const t = e => o(e, l.TYPE_STR.U_STR);

exports.allocUStr = t;

const r = (l = Process.pointerSize) => Memory.alloc(l);

exports.allocP = r;

const s = (l = 1) => r(l * p_size);

function c(l = 0, o = 0, e = 0, t) {
  let r = arguments.length;
  r = 0 == r ? 3 : r;
  let c = s(r + 1);
  for (let l = 0; l < r; ++l) c.add(Process.pointerSize * l).writeFloat(null == arguments[l] ? 0 : arguments[l]);
  return c.add(Process.pointerSize * r).writeInt(0), c;
}

exports.alloc = s, exports.allocVector = c, globalThis.allocCStr = e, globalThis.allocUStr = t, 
globalThis.allocVector = c, globalThis.alloc = s, globalThis.allocP = r;

},{"../base/enum":7}],499:[function(require,module,exports){
"use strict";

function e(e) {
  const t = new Map;
  return new Proxy(e, {
    construct(e, n) {
      const o = n[0].toUInt32();
      return t.has(o) || t.set(o, new e(n[0])), t.get(o);
    }
  });
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.runOnce = exports.cacheInstances = void 0, exports.cacheInstances = e;

const t = new Map;

function n(e) {
  return function(n, o, s) {
    const c = s.value;
    return t.has(c) || "function" == typeof c && (s.value = function(...n) {
      console.log("Logged at:", (new Date).toLocaleString());
      const o = c.apply(this, n);
      return console.log(`Result from ${e}: ${o}`), t.set(c, o), o;
    }), t.get(c);
  };
}

exports.runOnce = n;

},{}],500:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.callFunctionRA = exports.callFunctionRCS = exports.callFunctionRUS = exports.callFunctionRF = exports.callFunctionRS = exports.callFunctionRI = exports.callFunctionRB = exports.callFunction = void 0;

const t = require("./checkP"), n = require("./reader");

function l(t, ...n) {
  try {
    for (let t = 1; t <= (arguments.length < 5 ? 5 : arguments.length) - 1; t++) arguments[t] = null == arguments[t] ? ptr(0) : ptr(String(arguments[t]));
    return new NativeFunction(t, "pointer", [ "pointer", "pointer", "pointer", "pointer" ])(arguments[1], arguments[2], arguments[3], arguments[4]);
  } catch (t) {
    return LOG(t, LogColor.C95), ptr(0);
  }
}

function e(n, ...l) {
  try {
    if (null == n) return ptr(0);
    let e = ptr(0);
    if (l.length > 4) throw new Error("callFunction: args.length > 4 \n please modify the `callFunction`");
    {
      let t = ptr(0);
      if (n instanceof Array) {
        if (4 == n.length && (t = n[1].includes(".") ? findMethod(n[0], n[1], n[2], n[3])?.relativeVirtualAddress : find_method(n[0], n[1], n[2], n[3])), 
        2 == n.length && (t = Module.findExportByName(n[0], n[1])), 1 == n.length && (t = Module.findExportByName(null, n[1])), 
        null == t || t.isNull()) return ptr(0);
        e = t;
      } else if (n instanceof String) {
        if (1 == n.length && (t = Module.findExportByName(null, n[1])), null == t || t.isNull()) return ptr(0);
        e = t;
      } else e = n instanceof NativePointer ? n : ptr(n);
    }
    for (let t = 1; t <= (arguments.length < 6 ? 6 : arguments.length) - 1; t++) arguments[t] = null == arguments[t] ? ptr(0) : ptr(String(arguments[t]));
    let r = (0, t.checkPointer)(e, !0);
    return new NativeFunction(r, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer" ])(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
  } catch (t) {
    return LOG(t, LogColor.C95), ptr(0);
  }
}

function r(n, ...l) {
  try {
    if (null == n) return ptr(0);
    let e = ptr(0);
    if (l.length > 8) throw new Error("callFunction: args.length > 6 \n please modify the `callFunction`");
    {
      let t = ptr(0);
      if (n instanceof Array) {
        if (4 == n.length && (t = n[1].includes(".") ? findMethod(n[0], n[1], n[2], n[3])?.relativeVirtualAddress : find_method(n[0], n[1], n[2], n[3])), 
        2 == n.length && (t = Module.findExportByName(n[0], n[1])), 1 == n.length && (t = Module.findExportByName(null, n[1])), 
        null == t || t.isNull()) return ptr(0);
        e = t;
      } else if (n instanceof String) {
        if (1 == n.length && (t = Module.findExportByName(null, n[1])), null == t || t.isNull()) return ptr(0);
        e = t;
      } else e = n instanceof NativePointer ? n : ptr(n);
    }
    for (let t = 1; t <= (arguments.length < 10 ? 10 : arguments.length) - 1; t++) arguments[t] = null == arguments[t] ? ptr(0) : ptr(String(arguments[t]));
    let r = (0, t.checkPointer)(e, !0);
    return new NativeFunction(r, "pointer", [ "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer" ])(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
  } catch (t) {
    return LOG(t, LogColor.C95), ptr(0);
  }
}

function o(n, ...l) {
  try {
    if (null == n) return ptr(0);
    for (let t = 1; t <= (arguments.length < 5 ? 5 : arguments.length) - 1; t++) arguments[t] = null == arguments[t] ? ptr(0) : ptr(String(arguments[t]));
    return new NativeFunction((0, t.checkPointer)(n, !0), "pointer", [ "pointer", "pointer", "pointer", "pointer" ])(arguments[1], arguments[2], arguments[3], arguments[4]);
  } catch (t) {
    return ptr(0);
  }
}

exports.callFunction = e;

const i = (t, ...n) => 1 == c(t, ...n);

exports.callFunctionRB = i;

const c = (t, ...n) => o(t, ...n).toInt32();

exports.callFunctionRI = c;

const u = (t, ...l) => (0, n.readSingle)(o(t, ...l));

exports.callFunctionRS = u;

const a = (t, ...n) => allocP(2).writePointer(o(t, ...n)).readFloat();

exports.callFunctionRF = a;

const p = (t, ...l) => (0, n.readU16)(e(t, ...l));

exports.callFunctionRUS = p;

const s = (t, ...n) => {
  let l = e(t, ...n).readCString();
  return null == l ? "" : l;
};

exports.callFunctionRCS = s;

const h = (t, ...l) => (0, n.showArray)(o(t, ...l));

exports.callFunctionRA = h, globalThis.callNp = l, globalThis.callFunction = e, 
globalThis.callFunctionLong = r, globalThis.callFunctionRB = i, globalThis.callFunctionRI = c, 
globalThis.callFunctionRS = u, globalThis.callFunctionRF = a, globalThis.callFunctionRUS = p, 
globalThis.callFunctionRCS = s, globalThis.callFunctionRA = h, globalThis.callFunctionWithOutError = o;

},{"./checkP":501,"./reader":509}],501:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";
<<<<<<< HEAD

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.checkCmdInput = exports.checkPointer = void 0;

var e = ptr(0);

setImmediate((() => {
  let r = 0, t = setInterval((() => {
    try {
      e = Process.findModuleByName("libil2cpp.so").base;
    } catch {
      ++r;
=======
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkCmdInput = exports.checkPointer = void 0;
var baseAddress = ptr(0);
setImmediate(() => {
    Il2Cpp.perform(() => {
        let errorTimes = 0;
        let task = setInterval(() => {
            try {
                baseAddress = Process.findModuleByName("libil2cpp.so").base;
            }
            catch {
                ++errorTimes;
            }
            if (!baseAddress.isNull() || errorTimes > 10)
                clearInterval(task);
        }, 200);
    });
});
let checkPointer = (value, throwErr = false, _showLog = false) => {
    if (baseAddress.isNull())
        baseAddress = Il2Cpp.module.base;
    if (baseAddress.isNull())
        throw new Error("checkPointer: libil2cpp.so not found ! \n please call setBaseAddress first");
    function innerCall(value, throwErr, _showLog) {
        if (Process.arch == 'arm64' && typeof value === "string" && value.trim().startsWith('0x'))
            value = Number(value);
        switch (typeof value) {
            case 'number':
                return calPointer(ptr(value));
            case 'string':
                return Module.findExportByName(null, value);
            case 'function':
                return value;
            case 'object':
                if (value instanceof NativePointer) {
                    return calPointer(value);
                }
                else if (value instanceof (Array)) {
                    if (!checkValue(value)) {
                        if (throwErr)
                            throw new Error("checkPointer: checkValue Error");
                        else
                            return ptr(0);
                    }
                    switch (value.length) {
                        case 1:
                            return Module.findExportByName(null, value[0]);
                        case 2:
                            return Module.findExportByName(value[0], value[1]);
                        case 3:
                            return find_method(value[0], value[1], value[2], value[3]);
                        default:
                            if (throwErr)
                                throw new Error("checkPointer:UnKnow value length \nArray<> length must be 1,2,3");
                            else
                                return ptr(0);
                    }
                }
                else {
                    if (throwErr)
                        throw new Error("checkPointer: Error type");
                    else
                        return ptr(0);
                }
            default:
                throw new Error("checkPointer: Error type");
        }
>>>>>>> d1ef37d66ae7c7bbfba31d3dd6147d99681b2209
    }
    (!e.isNull() || r > 10) && clearInterval(t);
  }), 200);
}));

const r = (r, t = !1, n = !1) => {
  if (e.isNull() && (e = Il2Cpp.module.base), e) throw new Error("checkPointer: libil2cpp.so not found ! \n please call setBaseAddress first");
  switch ("arm64" == Process.arch && "string" == typeof r && r.trim().startsWith("0x") && (r = Number(r)), 
  typeof r) {
   case "number":
    return s(ptr(r));

   case "string":
    return Module.findExportByName(null, r);

   case "function":
    return r;

   case "object":
    if (r instanceof NativePointer) return s(r);
    if (!(r instanceof Array)) {
      if (t) throw new Error("checkPointer: Error type");
      return ptr(0);
    }
    if (!function(e) {
      if (3 == e.length) {
        if ("string" != typeof e[0]) return !1;
        if ("string" != typeof e[1]) return !1;
        if ("number" != typeof e[2]) return !1;
      }
      for (let r = 0; r < e.length; r++) if (3 != e.length && "string" != typeof e[r]) return !1;
      return !0;
    }(r)) {
      if (t) throw new Error("checkPointer: checkValue Error");
      return ptr(0);
    }
<<<<<<< HEAD
    switch (r.length) {
     case 1:
      return Module.findExportByName(null, r[0]);

     case 2:
      return Module.findExportByName(r[0], r[1]);

     case 3:
      return find_method(r[0], r[1], r[2], r[3]);

     default:
      if (t) throw new Error("checkPointer:UnKnow value length \nArray<> length must be 1,2,3");
      return ptr(0);
    }

   default:
    throw new Error("checkPointer: Error type");
  }
  function s(e) {
    if (e.isNull() || !e.compare(soAddr)) return e;
    try {
      if (null === Process.findModuleByAddress(e)) {
        soAddr;
        let r = Il2Cpp.module.base.add(e);
        if (null === Process.findModuleByAddress(r)) {
          if (t) throw new Error("checkPointer: can't find module");
          return ptr(0);
        }
        return r;
      }
      return e;
    } catch (e) {
      if (t) throw e;
      return ptr(0);
    }
  }
=======
    const ret = innerCall(value, throwErr, _showLog);
    exports.checkPointer = innerCall;
    return ret;
>>>>>>> d1ef37d66ae7c7bbfba31d3dd6147d99681b2209
};

exports.checkPointer = r, globalThis.checkPointer = exports.checkPointer;

const t = e => {
  if (null == e || e instanceof NativePointer && e.isNull()) throw new Error("checkCmdInput: null pointer");
  if (e instanceof NativePointer) return e;
  switch (typeof e) {
   case "number":
    return ptr(e);

   case "string":
    if (e.startsWith("0x") || e.startsWith("0X")) return ptr(e);

   case "function":
    return ptr(e);

   default:
    throw new Error("checkCmdInput: Error type");
  }
};

exports.checkCmdInput = t;

const n = (e = "libil2cpp.so") => {
  let r = Process.findModuleByName("libil2cpp.so");
  switch (typeof e) {
   case "number":
    try {
      r = Process.getModuleByAddress(e);
    } catch {
      r = Process.findModuleByName(e);
    }
    break;

   case "string":
    try {
      r = Process.findModuleByName(e);
    } catch (e) {
      throw e;
    }
    break;

   default:
    e = ptr(e);
  }
  if (null == r) throw new Error("getSubBasePtr: can't find module");
  return r;
};

globalThis.getSubBasePtr = e => e.sub(n(e).base), globalThis.getSubBaseDes = e => {
  let r = n(e);
  return `${e.sub(r.base)} <--- ${e} @ ${r.name} (${r.base})`;
}, globalThis.setBaseAddress = r => {
  e = (0, exports.checkCmdInput)(r);
}, globalThis.getBaseAddress = () => e, globalThis.checkCmdInput = exports.checkCmdInput;

}).call(this)}).call(this,require("timers").setImmediate)

},{"timers":547}],502:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getJclassName = exports.mapValueToArray = exports.PTR2NativePtr = exports.filterDuplicateOBJ = exports.checkCtx = exports.cancelAllNopedFunction = exports.cancelNop = exports.nopFunction = exports.replaceFunction = exports.detachAll = exports.attachNative = exports.TIME_SIMPLE = exports.SeeTypeToString = exports.getFunctionAddrFromCls = void 0;

const e = require("../base/enum"), n = require("../base/globle");

function t(e) {
  return null == e ? ptr(0) : ("number" == typeof e && (e = ptr(e)), e);
}

var r;

exports.PTR2NativePtr = t, function(e) {
  e.org = "org", e.src = "src", e.enter = "enter", e.leave = "leave", e.time = "time";
}(r || (r = {}));

let a = (0, n.GET_MAP)(e.MapKAY.map_attach_listener);

const d = (e, n, t, d = !0) => {
  if ("number" == typeof e && (e = ptr(e)), e instanceof NativePointer && e.isNull()) return;
  var o = new Map;
  o.set(r.org, e), o.set(r.src, e), o.set(r.enter, n), o.set(r.leave, t), o.set(r.time, new Date), 
  e = checkPointer(e);
  let i = Interceptor.attach(e, {
    onEnter: function(e) {
      null != n && n(e, this.context, o);
    },
    onLeave: function(e) {
      null != t && t(e, this.context, o);
    }
  });
  d && a.set(String(e), i);
};

exports.attachNative = d;

let o = new Array;

var i = e => {
  "number" == typeof e && (e = ptr(e)), null != e && p(e, (() => ptr(0)), !0);
};

exports.nopFunction = i;

var l = e => {
  if ("number" == typeof e && (e = ptr(e)), e != ptr(0)) {
    e = checkPointer(e), Interceptor.revert(e);
    for (let n = 0; n < o.length; n++) String(o[n]) == String(e) && (o = o.splice(o[n], 1));
  }
};

exports.cancelNop = l;

var c = () => o.forEach((e => Interceptor.revert(e)));

exports.cancelAllNopedFunction = c;

const s = t => {
  let r = (0, n.GET_MAP)(e.MapKAY.map_attach_listener);
  if ("number" == typeof t && (t = ptr(t)), null == t) r.clear(), Interceptor.detachAll(); else {
    let e = String(checkPointer(t)), n = r.get(e);
    null != n && (n.detach(), r.delete(e));
  }
};

function p(e, n, t = !0) {
  "number" == typeof e && (e = ptr(e));
  let r = e;
  e = checkPointer(e), -1 == String(o).indexOf(String(e)) ? o.push(String(e)) : Interceptor.revert(e);
  let a = new NativeFunction(e, "pointer", [ "pointer", "pointer", "pointer", "pointer" ]);
  Interceptor.replace(e, new NativeCallback(((d, o, i, l) => {
    LOGW("\nCalled " + (t ? "Replaced" : "Nop") + " function ---\x3e " + e + " (" + r.sub(Il2Cpp.module.base) + ")");
    let c = n(a, d, o, i, l);
    return null == c ? ptr(0) : c;
  }), "pointer", [ "pointer", "pointer", "pointer", "pointer" ]));
}

exports.detachAll = s, exports.replaceFunction = p;

const u = (e, n) => {
  "string" == typeof e && (e = findClass(e)), "number" == typeof e && (e = ptr(e));
  let t = new Il2Cpp.Class(e).methods;
  for (let e = 0; e < t.length; e++) if (-1 != t[e].name.indexOf(n)) return t[e].relativeVirtualAddress;
  return -1;
};

exports.getFunctionAddrFromCls = u;

const m = (e, n) => {
  if ("number" == typeof e && (e = ptr(e)), null == e || e == ptr(0)) return;
  let t = callFunction(find_method("UnityEngine.CoreModule", "Object", "ToString", 0), e);
  if (null != n) return readU16(t);
  LOG(readU16(t));
};

exports.SeeTypeToString = m;

const w = (t, r) => {
  let a = callFunction((0, n.GET_F)(e.EpFunc.DecodeJObject), (0, n.GET_F)(e.EpFunc.ArtCurrent), t), d = callFunction((0, 
  n.GET_F)(e.EpFunc.GetDescriptor), a, allocP());
  if (r) return String(d.readCString());
  LOG("\n" + String(d.readCString()) + "\n", e.LogColor.C36);
};

function b(e, n = "LR") {
  let t = getPlatformCtx(e), r = t.lr, a = t.pc, d = Process.findModuleByAddress(r);
  if ("LR" == n && null != d) return r.sub(d.base) + `|${d.name}`;
  let o = Process.findModuleByAddress(a);
  return "PC" == n && null != o ? a.sub(o.base) + `|${o.name}` : "SP" == n ? String(t.sp).toString() : JSON.stringify(e);
}

exports.getJclassName = w, exports.checkCtx = b;

const v = e => {
  var n = [];
  for (var t in e) n.push([ t, e.get(t) ]);
  return n;
};

exports.mapValueToArray = v;

var R = (e, n) => {
  null != n && ("function" == typeof e && (n = e, e = getEventUpdate(!1)), A(e, (() => {
    if (null != n && null != n) {
      try {
        n();
      } catch (e) {
        LOGE(e);
      }
      n = () => {};
    }
  })));
};

const S = e => {
  if (null == e) return ptr(0);
  let n = new NativeCallback((function(n, t, r, a) {
    return e.apply(null, arguments), ptr(0);
  }), "pointer", [ "pointer", "pointer", "pointer", "pointer" ]), t = Memory.alloc(p_size);
  return new NativeFunction(Module.findExportByName(null, "pthread_create"), "pointer", [ "pointer", "int", "pointer", "int" ])(t, 0, n, 0), 
  t;
}, E = (e, n, t = "") => {
  Java.perform((() => Java.use("com.unity3d.player.UnityPlayer").UnitySendMessage(e, n, t)));
}, f = (e = "ALL") => {
  switch (e) {
   case "IronSource":
    n();
    break;

   case "MaxSdkCallbacks":
    t();
    break;

   case "MoPubManager":
    r();
    break;

   case "TPluginsGameObject":
    a();
    break;

   case "ALL":
    n(), t(), r(), a();

   default:
    !function(e = "OmEvents") {
      E(e, "OnRewardedVideoAdLoaded", ""), E(e, "OnRewardedVideoAdOpened", ""), E(e, "onRewardedVideoShowed", ""), 
      E(e, "onRewardedVideoStarted", ""), E(e, "onRewardedVideoEnded", ""), E(e, "onRewardedVideoRewarded", "{'placement_reward_name':'Virtual Item','placement_name':'rewardedVideo','placement_reward_amount':'1','placement_id':'2'}"), 
      E(e, "OnRewardedVideoAdClosed", ""), E(e, "onRewardedVideoAvailabilityChanged", "true");
    }(e);
  }
  function n() {
    E("IronSourceEvents", "onRewardedVideoAvailabilityChanged", "true"), E("IronSourceEvents", "onRewardedVideoAdShowFailedDemandOnly", "true"), 
    E("IronSourceEvents", "onInterstitialAdReady", ""), E("IronSourceEvents", "onRewardedVideoAdOpened", ""), 
    E("IronSourceEvents", "onRewardedVideoAdStarted", ""), E("IronSourceEvents", "onRewardedVideoAdEnded", ""), 
    E("IronSourceEvents", "onRewardedVideoAdRewarded", "{'placement_reward_name':'Virtual Item','placement_name':'rewardedVideo','placement_reward_amount':'1','placement_id':'2'}"), 
    E("IronSourceEvents", "onRewardedVideoAdClosed", ""), E("IronSourceRewardedVideoAndroid", "onRewardedVideoAvailabilityChanged", "true"), 
    E("IronSourceRewardedVideoAndroid", "onRewardedVideoAdShowFailedDemandOnly", "true"), 
    E("IronSourceRewardedVideoAndroid", "onInterstitialAdReady", ""), E("IronSourceRewardedVideoAndroid", "onRewardedVideoAdOpened", ""), 
    E("IronSourceRewardedVideoAndroid", "onRewardedVideoAdStarted", ""), E("IronSourceRewardedVideoAndroid", "onRewardedVideoAdEnded", ""), 
    E("IronSourceRewardedVideoAndroid", "OnRewardedVideoAdRewarded", "{'placement_reward_name':'Virtual Item','placement_name':'rewardedVideo','placement_reward_amount':'1','placement_id':'2'}"), 
    E("IronSourceRewardedVideoAndroid", "onRewardedVideoAdClosed", "");
  }
  function t() {
    E("MaxSdkCallbacks", "ForwardEvent", "networkName=AppLovin\nname=OnRewardedAdRevenuePaidEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n"), 
    E("MaxSdkCallbacks", "ForwardEvent", "networkName=AppLovin\nname=OnRewardedAdDisplayedEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n"), 
    E("MaxSdkCallbacks", "ForwardEvent", "revenue=0.014579974174499511\nnetworkName=AppLovin\nname=OnRewardedAdReceivedRewardEvent\nplacement=\nrewardAmount=0\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\nrewardLabel=\n"), 
    E("MaxSdkCallbacks", "ForwardEvent", "networkName=AppLovin\nname=OnRewardedAdHiddenEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n"), 
    E("MaxSdkCallbacks", "OnRollicAdsRewardedVideoClickedEvent", "name=OnSdkInitializedEvent\nconsentDialogState=2\ncountryCode=SG\n"), 
    E("MaxSdkCallbacks", "OnRollicAdsRewardedVideoClosedEvent", "name=OnRewardedAdDisplayedEvent\nadUnitId=ec1a772e0459f45b"), 
    E("MaxSdkCallbacks", "OnRollicAdsRewardedVideoReceivedRewardEvent", "name=OnRewardedAdReceivedRewardEvent\nrewardAmount=0\nadUnitId=ec1a772e0459f45b\nrewardLabel="), 
    E("MaxSdkCallbacks", "OnRollicAdsRewardedVideoShownEvent", "name=OnRewardedAdHiddenEvent\nadUnitId=ec1a772e0459f45b"), 
    E("MaxSdkCallbacks", "OnRollicAdsRewardedVideoLoadedEvent", "name=OnRewardedAdLoadedEvent\nadUnitId=ec1a772e0459f45b");
  }
  function r() {
    E("UnityFacebookSDKPlugin", "UnityFacebookSDKPlugin", '{"key_hash":"NgS2u0aEWjJAWRbMgtyAolzO6s8=\\n"}'), 
    E("MoPubManager", "EmitSdkInitializedEvent", '["0fe07d2ca88549ff9598aed6c45f0773","70"]'), 
    E("MoPubManager", "EmitInterstitialLoadedEvent", '["a44632b619174dfa98c46420592a3756"]'), 
    E("MoPubManager", "EmitAdLoadedEvent", '["f7a8241fad1041bda59f303eae75be2d","320","50"]'), 
    E("MoPubManager", "EmitRewardedVideoLoadedEvent", '["a44632b619174dfa98c46420592a3756"]'), 
    E("MoPubManager", "EmitRewardedVideoShownEvent", '["a44632b619174dfa98c46420592a3756"]'), 
    E("MoPubManager", "EmitRewardedVideoReceivedRewardEvent", '["a44632b619174dfa98c46420592a3756","","0"]'), 
    E("MoPubManager", "EmitRewardedVideoClosedEvent", '["a44632b619174dfa98c46420592a3756"]');
  }
  function a() {
    E("TTPluginsGameObject", "OnRewardedAdsShown", ""), E("TTPluginsGameObject", "OnRewardedAdsClosed", '{"shouldReward":true,"network":"admob-unityads","revenue":0.00138,"currency":"USD","precision":"ESTIMATED"}'), 
    E("TTPluginsGameObject", "OnRewardedAdsReady", '{"loaded":true}');
  }
  E("GameAnalytics", "OnCommandCenterUpdated", ""), E("GameAnalytics", "OnRemoteConfigsUpdated", ""), 
  E("UnityFacebookSDKPlugin", "OnInitComplete", '{"key_hash":"0eWmEB4CY7TpepNbZdxCOaz2Crs=\n"}');
};

globalThis.HookForwardEvent = () => {
  Il2Cpp.perform((() => {
    let e = Il2Cpp.Domain.tryAssembly("MaxSdk.Scripts");
    if (!e) throw new Error("MaxSdk.Scripts not found");
    e.image.class("MaxSdkCallbacks").method("ForwardEvent").implementation = function(e, n) {
      return LOGD(`ForwardEvent: ${e}  ${readU16(n)}`), this.method("ForwardEvent").invoke(...arguments);
    };
  }));
};

const g = () => (new Date).toLocaleTimeString().split(" ")[0];

exports.TIME_SIMPLE = g;

const h = (t, r = 10) => {
  if (!(0, n.GET_MAP)(e.MapKAY.outFilterMap).has(t)) return (0, n.SET_MAP_VALUE)(e.MapKAY.outFilterMap, t, 0), 
  0;
  let a = Number((0, n.GET_MAP_VALUE)(e.MapKAY.outFilterMap, t)) + 1;
  return (0, n.SET_MAP_VALUE)(e.MapKAY.outFilterMap, t, a), a >= r ? -1 : a;
};

exports.filterDuplicateOBJ = h, Number.prototype.add = e => Number(this) + Number(e), 
globalThis.d = s, globalThis.A = d, globalThis.n = i, globalThis.nn = l, globalThis.nnn = c, 
globalThis.R = p, globalThis.getJclassName = w, globalThis.checkCtx = b, globalThis.runOnMain = R, 
globalThis.runOnNewThread = S, globalThis.SendMessage = E, globalThis.SendMessageImpl = f;

},{"../base/enum":7,"../base/globle":9}],503:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.printCtx = void 0;

const e = require("../base/enum");

var t = (t, r = 5, o = 0, l = e.LogColor.WHITE, s = 0) => {
  if ("arm" == Process.arch && !(t = checkPointer(t)).isNull()) if (0 != o) for (let e = 0; e < r; e++) i(t, e); else {
    let e = null == r ? 5 : (r % 2 == 1 ? r + 1 : r) / 2;
    for (let o = null == r ? -4 : e - r; o < e; o++) i(t, o);
  }
  function i(e, t) {
    let r = e.add(p_size * t), i = String(r.readPointer());
    "arm" == Process.arch && 10 != i.length && (i = i.replace("000", "0000"));
    let n = Array.from(i.toUpperCase()), a = 10 == n.length ? i : "";
    1 == o ? a = n[2] + n[3] + " " + n[4] + n[5] + " " + n[6] + n[7] + " " + n[8] + n[9] : 2 == o && (a = n[8] + n[9] + " " + n[6] + n[7] + " " + n[4] + n[5] + " " + n[2] + n[3]);
    try {
      LOG(getLine(s, "\t") + r + "\t" + a + "\t" + Instruction.parse(r), l);
    } catch (e) {}
  }
};

exports.printCtx = t, globalThis.printCtx = t;

},{"../base/enum":7}],504:[function(require,module,exports){
"use strict";

function e(e = "libil2cpp.so") {
  const i = Process.getModuleByName(e);
  LOGE(getLine(30)), LOGW("[name]:" + i.name), LOGW("[base]:" + i.base), LOGW("[size]:" + i.size), 
  LOGW("[path]:" + i.path), LOGE(getLine(30));
  const n = `${i.name}_${i.base}_${ptr(i.size)}.so`;
  t(i.base, i.size, n);
}

function t(e, t, i) {
  if (e = checkCmdInput(e), t <= 0) return;
  let n = "";
  Java.perform((function() {
    let e = Java.use("android.app.ActivityThread").currentApplication();
    n = e.getApplicationContext().getFilesDir().getPath();
  })), n += null == i ? `/${e}_${t}.bin` : i;
  const a = new File(n, "wb");
  if (a && null != a) {
    Memory.protect(e, t, "rwx");
    let i = e.readByteArray(t);
    a.write(i), a.flush(), a.close(), LOGZ(`\nDump ${t} bytes from ${e} to ${e.add(t)}`), 
    LOGD(`Saved to -> ${n}\n`);
  }
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), globalThis.dumpSo = e, globalThis.dumpMem = t;

},{}],505:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.formartClass = void 0;

const t = require("../base/enum");

class e {
  static printTitileA=(r, i = t.LogColor.C33) => e.printTitile(r, i, i, i);
  static printTitile=(e, r = t.LogColor.C33, i = t.LogColor.C33, n = t.LogColor.C33) => {
    let s = e.length + 2;
    return LOG(` ${getLine(s)} `, r), LOG(`| ${e} |`, i), LOG(` ${getLine(s)} `, n), 
    s;
  };
  static linesMap=new Map;
  static getLine=(t, r = "-") => {
    let i = t + "|" + r;
    if (null != e.linesMap.get(i)) return e.linesMap.get(i);
    for (var n = 0, s = ""; n < t; n++) s += r;
    return e.linesMap.set(i, s), s;
  };
  static alignStr(t, e = 2 * p_size + 3, r = ".") {
    let i = (t = String(t)).length;
    if (i >= e) t = t.substring(0, e - 1), t += r; else for (let r = e - i; r > 0; r--) t += " ";
    return t;
  }
  static getTime=() => {
    let t = new Date;
    return t.getHours() + ":" + t.getMinutes() + ":" + t.getSeconds();
  };
  static insertStr(t, e, r) {
    return t.length < e ? t + "" + r : `${t.substring(0, e)}${r}${t.substring(e, t.length)}`;
  }
  static getPtrFormart=(t, e = String(Il2Cpp.module.base).length) => {
    let r = t.toString(16);
    if (r.length > e) return r.substring(0, e - 1) + ".";
    for (let t = e - r.length; t > 0; t--) r += " ";
    return `0x${r}`;
  };
  static centerStr=(t = "...", e = Process.pointerSize + 2) => {
    if (e <= t.length) return t;
    let r = (e - t.length) / 2;
    return `${getLine(r, " ")}${t}${getLine(r, " ")}`;
  };
}

exports.formartClass = e, globalThis.insertStr = e.insertStr;

},{"../base/enum":7}],506:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./alloc"), require("./cache"), require("./caller"), require("./checkP"), 
require("./common"), require("./formart"), require("./logger"), require("./math"), 
require("./reader"), require("./stack"), require("./context"), require("./stdString"), 
require("./dumper"), require("./system");

},{"./alloc":498,"./cache":499,"./caller":500,"./checkP":501,"./common":502,"./context":503,"./dumper":504,"./formart":505,"./logger":507,"./math":508,"./reader":509,"./stack":510,"./stdString":511,"./system":512}],507:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Logger = void 0;

const o = require("../base/enum"), t = require("../base/globle"), l = require("./formart");

class e {
  static linesMap=new Map;
  static colorEndDes="[0m";
  static colorStartDes=o => `[${o}m`;
  static logL=console.log;
  static setNeedLog=l => (0, t.SET_G)(o.GKEY.LogFlag, l);
  static getNeedLog=() => (0, t.GET_GT)(o.GKEY.LogFlag);
  static LOGW=t => LOG(t, o.LogColor.YELLOW);
  static LOGE=t => LOG(t, o.LogColor.RED);
  static LOGG=t => LOG(t, o.LogColor.C32);
  static LOGD=t => LOG(t, o.LogColor.C36);
  static LOGO=t => LOG(t, o.LogColor.C33);
  static LOGP=t => LOG(t, o.LogColor.C34);
  static LOGM=t => LOG(t, o.LogColor.C92);
  static LOGH=t => LOG(t, o.LogColor.C96);
  static LOGZ=t => LOG(t, o.LogColor.C90);
  static LOGJSON=(t, l = o.LogColor.C36, e = 1) => LOG(JSON.stringify(t, null, e), l);
  static LOG=(t, l = o.LogColor.WHITE) => {
    switch (l) {
     case o.LogColor.WHITE:
      e.logL(t);
      break;

     case o.LogColor.RED:
      console.error(t);
      break;

     case o.LogColor.YELLOW:
      console.warn(t);
      break;

     default:
      e.logL("[" + l + "m" + t + "[0m");
    }
  };
  static LOGS=(t, L = [ [ 0, t.length, o.LogColor.RED ] ]) => {
    let r = t;
    for (let o = 0; o < L.length; o++) {
      const [t, s, g] = L[o];
      let a = e.colorStartDes(g);
      r = l.formartClass.insertStr(r, t, a), r = l.formartClass.insertStr(r, s + a.length, e.colorEndDes);
    }
    e.logL(r);
  };
  static printLogColors=() => {
    let o = "123456789";
    e.logL(`\n${getLine(16)}  listLogColors  ${getLine(16)}`);
    for (let t = 30; t <= 37; t++) e.logL(`\t\t${e.colorStartDes(t)} C${t}\t${o} ${e.colorEndDes}`);
    e.logL(getLine(50));
    for (let t = 40; t <= 47; t++) e.logL(`\t\t${e.colorStartDes(t)} C${t}\t${o} ${e.colorEndDes}`);
    e.logL(getLine(50));
    for (let t = 90; t <= 97; t++) e.logL(`\t\t${e.colorStartDes(t)} C${t}\t${o} ${e.colorEndDes}`);
    e.logL(getLine(50));
    for (let t = 100; t <= 107; t++) e.logL(`\t\t${e.colorStartDes(t)} C${t}\t${o} ${e.colorEndDes}`);
    e.logL(getLine(50));
  };
  static getLine=(o, t = "-") => {
    if (0 == o) return "";
    let l = o + "|" + t;
    if (null != e.linesMap.get(l)) return e.linesMap.get(l);
    for (var L = 0, r = ""; L < o; L++) r += t;
    return e.linesMap.set(l, r), r;
  };
  static getTextFormart=(t, l = o.LogColor.WHITE, L = " ", r = -1, s = !1) => {
    null == t && (t = ""), -1 == r && (r = t.length);
    let g = e.colorStartDes(l), a = r - t.length;
    if (a > 0) {
      let o = Math.floor(a / 2), l = a - o;
      s && (o = l), g += getLine(o, L) + t + getLine(l, L);
    } else g += t;
    return g += e.colorEndDes, g;
  };
  static callOnce(o) {
    let t = !1;
    return (...l) => {
      if (!t) return t = !0, o(...l);
    };
  }
}

exports.Logger = e, globalThis.LOG = e.LOG, globalThis.LOGW = e.LOGW, globalThis.LOGE = e.LOGE, 
globalThis.LOGG = e.LOGG, globalThis.LOGD = e.LOGD, globalThis.LOGO = e.LOGO, globalThis.LOGP = e.LOGP, 
globalThis.LOGH = e.LOGH, globalThis.LOGM = e.LOGM, globalThis.LOGZ = e.LOGZ, globalThis.LOGJSON = e.LOGJSON, 
globalThis.getLine = e.getLine, globalThis.printLogColors = e.printLogColors, globalThis.newLine = (o = 1) => e.LOG(getLine(o, "\n")), 
globalThis.callOnce = e.callOnce, globalThis.TFM = e.getTextFormart, globalThis.LogColor = o.LogColor;

},{"../base/enum":7,"../base/globle":9,"./formart":505}],508:[function(require,module,exports){
"use strict";

function e() {
  return Math.floor(Math.random() * 2 ** 31);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.Random = exports.randomSeed = void 0, exports.randomSeed = e;

class t {
  seed;
  constructor(e) {
    this.seed = e;
  }
  next=() => this.seed ? (2 ** 31 - 1 & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31 : Math.random();
  nextInt=(e, t) => Math.floor(this.next() * (t - e + 1) + e);
}

exports.Random = t;

},{}],509:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.getFloat = exports.seeHexA = exports.seeHexR = exports.showArray = exports.readU16 = exports.readInt64 = exports.readUInt64 = exports.readUInt = exports.readInt = exports.readBoolean = exports.readSingle = void 0;

const e = require("../base/enum"), t = require("./common"), r = e => allocP().writePointer(e).readFloat();

exports.readSingle = r;

const o = e => 1 == alloc(1).writePointer(e).readU8();

exports.readBoolean = o;

const n = e => allocP().writePointer(e).readInt();

exports.readInt = n;

const a = e => allocP().writePointer(e).readUInt();

exports.readUInt = a;

const i = e => allocP(2).writePointer(e).readS64();

exports.readInt64 = i;

const l = e => allocP(2).writePointer(e).readU64();

exports.readUInt64 = l;

const s = e => {
  if ("number" == typeof e && (e = ptr(e)), "string" == typeof e && (String(e).startsWith("0x") || String(e).startsWith("0X")) && (e = ptr(e)), 
  NativePointer, null == e || 0 == e) return "";
  try {
    return e.add(2 * p_size + 4).readUtf16String();
  } catch {
    return "";
  }
};

exports.readU16 = s;

const d = (t, r) => {
  if ("number" == typeof t && (t = ptr(t)), null == t || t == ptr(0)) return;
  let o = t, n = o.add(3 * p_size).readUInt();
  if (LOGD(`\n[*] Array length : ${n}  |  RET => ${o}\n`), !(0 == n || n >= 20)) {
    x(o.add(4 * p_size), (n > 32 ? 32 : n) * p_size, !1, e.LogColor.C33), newLine();
    for (let t = 0; t < n; ++t) {
      let n = ptr(o).add(p_size * (4 + t));
      try {
        var a = n.readPointer();
      } catch {
        return LOGE("Not support type"), void newLine();
      }
      let i = "";
      try {
        i = `${getType(a).toString()} | ${new Il2Cpp.Object(a).toString()}`;
      } catch {
        i = new Il2Cpp.Object(a).toString();
      }
      i.indexOf("String") && (i += `\t|${s(a)}|`), i.indexOf("Text") && (i += `\t${callFunctionRUS([ "UnityEngine.UI", "Text", "get_fontSize", 0 ])} ${a}`), 
      (i.indexOf("TermData") || i.indexOf("LanguageData")) && (i += `\t | ${s(n.readPointer().add(8).readPointer())}| `), 
      LOGD(String("[" + t + "]").padEnd(5, " ") + " " + n + " ---\x3e " + a + "  |  " + i), 
      null != r && "function" == typeof r && LOG("\t" + r(a, i), e.LogColor.C90);
    }
    newLine();
  }
};

exports.showArray = d;

var p = (r, o = 64, n) => {
  r = (0, t.PTR2NativePtr)(r), LOG(hexdump(r.readPointer(), {
    length: o
  }), null == n ? e.LogColor.WHITE : n);
};

exports.seeHexR = p;

var x = (r, o = 64, n = !0, a) => {
  r = (0, t.PTR2NativePtr)(r), LOG(hexdump(r, {
    length: o,
    header: n
  }), null == a ? e.LogColor.WHITE : a);
};

exports.seeHexA = x;

const g = e => alloc(1).writeFloat(e).readPointer();

exports.getFloat = g, globalThis.readSingle = r, globalThis.readBoolean = o, globalThis.readInt = n, 
globalThis.readUInt = a, globalThis.readInt64 = i, globalThis.readUInt64 = l, globalThis.readU16 = s, 
globalThis.showArray = d, globalThis.seeHexR = p, globalThis.seeHexA = x;

},{"../base/enum":7,"./common":502}],510:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.GetStackTraceN = exports.GetStackTrace = exports.PrintStackTraceN = exports.PrintStackTrace = void 0;

const a = () => LOG(Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Throwable").$new()), LogColor.C36);

exports.PrintStackTrace = a;

const e = (a, e = !1, r = 6, t = !1) => {
  let c = "";
  return c = t ? Thread.backtrace(a, Backtracer.FUZZY).slice(0, r).reverse().map(DebugSymbol.fromAddress).join("\n") : Thread.backtrace(a, Backtracer.FUZZY).slice(0, r).map(DebugSymbol.fromAddress).join("\n"), 
  e ? c : LOGD(c);
};

exports.PrintStackTraceN = e;

var r = () => Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Throwable").$new());

exports.GetStackTrace = r;

var t = (a, e = 6) => Thread.backtrace(a, Backtracer.FUZZY).slice(0, e).map((a => DebugSymbol.fromAddress(a))).join("\n");

exports.GetStackTraceN = t, globalThis.PrintStackTrace = a, globalThis.PrintStackTraceN = e, 
globalThis.GetStackTrace = r, globalThis.GetStackTraceN = t;

},{}],511:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.get_PrettyMethod = exports.readStdString = void 0;

const e = () => {
  let e = Module.findExportByName("libart.so", "_ZN3art9ArtMethod12PrettyMethodEb");
  if (null != e) return LOGD(`PrettyMethod_ptr => ${e}`), new NativeFunction(e, [ "pointer", "pointer", "pointer" ], [ "pointer", "bool" ]);
  LOGD("libart.so PrettyMethod_ptr is null");
};

exports.get_PrettyMethod = e, globalThis.readStdString = e => {
  let t = Memory.alloc(3 * Process.pointerSize);
  return t.writePointer(e[0]), t.add(1 * Process.pointerSize).writePointer(e[1]), 
  t.add(2 * Process.pointerSize).writePointer(e[2]), 0 == (1 & t.readU8()) ? t.add(1).readUtf8String() : t.add(2 * Process.pointerSize).readPointer().readUtf8String();
};

},{}],512:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.systemCommandSU = exports.systemCommand = void 0;

const s = s => new NativeFunction(Module.findExportByName("libc.so", "system"), "pointer", [ "pointer" ])(Memory.allocUtf8String(s));

exports.systemCommand = s;

const e = s => (0, exports.systemCommand)(`su -c '${s}'`);

exports.systemCommandSU = e, globalThis.system = exports.systemCommand, globalThis.systemSU = exports.systemCommandSU;

},{}],513:[function(require,module,exports){
"use strict";

function e(e, r, t) {
  var o = t.get;
  if (!o) throw new TypeError("Getter property descriptor expected");
  t.get = function() {
    var e = o.call(this);
    return Object.defineProperty(this, r, {
      configurable: t.configurable,
      enumerable: t.enumerable,
      writable: !1,
      value: e
    }), e;
  };
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.cache = e;

},{}],514:[function(require,module,exports){
"use strict";

exports.__esModule = !0, exports.distance = exports.closest = void 0;

var r = new Uint32Array(65536), t = function(t, e) {
  for (var o = t.length, a = e.length, n = 1 << o - 1, h = -1, c = 0, f = o, l = o; l--; ) r[t.charCodeAt(l)] |= 1 << l;
  for (l = 0; l < a; l++) {
    var v = r[e.charCodeAt(l)], i = v | c;
    (c |= ~((v |= (v & h) + h ^ h) | h)) & n && f++, (h &= v) & n && f--, h = h << 1 | ~(i | (c = c << 1 | 1)), 
    c &= i;
  }
  for (l = o; l--; ) r[t.charCodeAt(l)] = 0;
  return f;
}, e = function(t, e) {
  for (var o = e.length, a = t.length, n = [], h = [], c = Math.ceil(o / 32), f = Math.ceil(a / 32), l = 0; l < c; l++) h[l] = -1, 
  n[l] = 0;
  for (var v = 0; v < f - 1; v++) {
    for (var i = 0, s = -1, d = 32 * v, g = Math.min(32, a) + d, u = d; u < g; u++) r[t.charCodeAt(u)] |= 1 << u;
    for (l = 0; l < o; l++) {
      var A = r[e.charCodeAt(l)], C = h[l / 32 | 0] >>> l & 1, p = A | i, x = s & (b = ((A | (U = n[l / 32 | 0] >>> l & 1)) & s) + s ^ s | A | U);
      (j = i | ~(b | s)) >>> 31 ^ C && (h[l / 32 | 0] ^= 1 << l), x >>> 31 ^ U && (n[l / 32 | 0] ^= 1 << l), 
      s = (x = x << 1 | U) | ~(p | (j = j << 1 | C)), i = j & p;
    }
    for (u = d; u < g; u++) r[t.charCodeAt(u)] = 0;
  }
  var M = 0, m = -1, _ = 32 * v, w = Math.min(32, a - _) + _;
  for (u = _; u < w; u++) r[t.charCodeAt(u)] |= 1 << u;
  var y = a;
  for (l = 0; l < o; l++) {
    var U, b, j;
    A = r[e.charCodeAt(l)], C = h[l / 32 | 0] >>> l & 1, p = A | M;
    y += (j = M | ~((b = ((A | (U = n[l / 32 | 0] >>> l & 1)) & m) + m ^ m | A | U) | m)) >>> a - 1 & 1, 
    y -= (x = m & b) >>> a - 1 & 1, j >>> 31 ^ C && (h[l / 32 | 0] ^= 1 << l), x >>> 31 ^ U && (n[l / 32 | 0] ^= 1 << l), 
    m = (x = x << 1 | U) | ~(p | (j = j << 1 | C)), M = j & p;
  }
  for (u = _; u < w; u++) r[t.charCodeAt(u)] = 0;
  return y;
}, o = function(r, o) {
  if (r.length < o.length) {
    var a = o;
    o = r, r = a;
  }
  return 0 === o.length ? r.length : r.length <= 32 ? t(r, o) : e(r, o);
};

exports.distance = o;

var a = function(r, t) {
  for (var e = 1 / 0, a = 0, n = 0; n < t.length; n++) {
    var h = o(r, t[n]);
    h < e && (e = h, a = n);
  }
  return t[a];
};

exports.closest = a;

},{}],515:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, n, i) {
  var r, _ = arguments.length, s = _ < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, n, i); else for (var a = t.length - 1; a >= 0; a--) (r = t[a]) && (s = (_ < 3 ? r(s) : _ > 3 ? r(e, n, s) : r(e, n)) || s);
  return _ > 3 && s && Object.defineProperty(e, n, s), s;
}, e = this && this.__importDefault || function(t) {
  return t && t.__esModule ? t : {
    default: t
  };
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter"), i = e(require("versioning")), r = require("../utils/console");

class _ {
  constructor() {}
  static get _alloc() {
    return this.r("il2cpp_alloc", "pointer", [ "size_t" ]);
  }
  static get _arrayGetElements() {
    return this.r("il2cpp_array_get_elements", "pointer", [ "pointer" ]);
  }
  static get _arrayGetLength() {
    return this.r("il2cpp_array_length", "uint32", [ "pointer" ]);
  }
  static get _arrayNew() {
    return this.r("il2cpp_array_new", "pointer", [ "pointer", "uint32" ]);
  }
  static get _assemblyGetImage() {
    return this.r("il2cpp_assembly_get_image", "pointer", [ "pointer" ]);
  }
  static get _classForEach() {
    return this.r("il2cpp_class_for_each", "void", [ "pointer", "pointer" ]);
  }
  static get _classFromName() {
    return this.r("il2cpp_class_from_name", "pointer", [ "pointer", "pointer", "pointer" ]);
  }
  static get _classFromSystemType() {
    return this.r("il2cpp_class_from_system_type", "pointer", [ "pointer" ]);
  }
  static get _classFromType() {
    return this.r("il2cpp_class_from_type", "pointer", [ "pointer" ]);
  }
  static get _classGetActualInstanceSize() {
    return this.r("il2cpp_class_get_actual_instance_size", "int32", [ "pointer" ]);
  }
  static get _classGetArrayClass() {
    return this.r("il2cpp_array_class_get", "pointer", [ "pointer", "uint32" ]);
  }
  static get _classGetArrayElementSize() {
    return this.r("il2cpp_class_array_element_size", "int", [ "pointer" ]);
  }
  static get _classGetAssemblyName() {
    return this.r("il2cpp_class_get_assemblyname", "pointer", [ "pointer" ]);
  }
  static get _classGetBaseType() {
    return this.r("il2cpp_class_enum_basetype", "pointer", [ "pointer" ]);
  }
  static get _classGetDeclaringType() {
    return this.r("il2cpp_class_get_declaring_type", "pointer", [ "pointer" ]);
  }
  static get _classGetElementClass() {
    return this.r("il2cpp_class_get_element_class", "pointer", [ "pointer" ]);
  }
  static get _classGetFieldFromName() {
    return this.r("il2cpp_class_get_field_from_name", "pointer", [ "pointer", "pointer" ]);
  }
  static get _classGetFields() {
    return this.r("il2cpp_class_get_fields", "pointer", [ "pointer", "pointer" ]);
  }
  static get _classGetFlags() {
    return this.r("il2cpp_class_get_flags", "int", [ "pointer" ]);
  }
  static get _classGetImage() {
    return this.r("il2cpp_class_get_image", "pointer", [ "pointer" ]);
  }
  static get _classGetInstanceSize() {
    return this.r("il2cpp_class_instance_size", "int32", [ "pointer" ]);
  }
  static get _classGetInterfaces() {
    return this.r("il2cpp_class_get_interfaces", "pointer", [ "pointer", "pointer" ]);
  }
  static get _classGetMethodFromName() {
    return this.r("il2cpp_class_get_method_from_name", "pointer", [ "pointer", "pointer", "int" ]);
  }
  static get _classGetMethods() {
    return this.r("il2cpp_class_get_methods", "pointer", [ "pointer", "pointer" ]);
  }
  static get _classGetName() {
    return this.r("il2cpp_class_get_name", "pointer", [ "pointer" ]);
  }
  static get _classGetNamespace() {
    return this.r("il2cpp_class_get_namespace", "pointer", [ "pointer" ]);
  }
  static get _classGetNestedClasses() {
    return this.r("il2cpp_class_get_nested_types", "pointer", [ "pointer", "pointer" ]);
  }
  static get _classGetParent() {
    return this.r("il2cpp_class_get_parent", "pointer", [ "pointer" ]);
  }
  static get _classGetRank() {
    return this.r("il2cpp_class_get_rank", "int", [ "pointer" ]);
  }
  static get _classGetStaticFieldData() {
    return this.r("il2cpp_class_get_static_field_data", "pointer", [ "pointer" ]);
  }
  static get _classGetValueSize() {
    return this.r("il2cpp_class_value_size", "int32", [ "pointer", "pointer" ]);
  }
  static get _classGetType() {
    return this.r("il2cpp_class_get_type", "pointer", [ "pointer" ]);
  }
  static get _classHasReferences() {
    return this.r("il2cpp_class_has_references", "bool", [ "pointer" ]);
  }
  static get _classInit() {
    return this.r("il2cpp_runtime_class_init", "void", [ "pointer" ]);
  }
  static get _classIsAbstract() {
    return this.r("il2cpp_class_is_abstract", "bool", [ "pointer" ]);
  }
  static get _classIsAssignableFrom() {
    return this.r("il2cpp_class_is_assignable_from", "bool", [ "pointer", "pointer" ]);
  }
  static get _classIsBlittable() {
    return this.r("il2cpp_class_is_blittable", "bool", [ "pointer" ]);
  }
  static get _classIsEnum() {
    return this.r("il2cpp_class_is_enum", "bool", [ "pointer" ]);
  }
  static get _classIsGeneric() {
    return this.r("il2cpp_class_is_generic", "bool", [ "pointer" ]);
  }
  static get _classIsInflated() {
    return this.r("il2cpp_class_is_inflated", "bool", [ "pointer" ]);
  }
  static get _classIsInterface() {
    return this.r("il2cpp_class_is_interface", "bool", [ "pointer" ]);
  }
  static get _classIsSubclassOf() {
    return this.r("il2cpp_class_is_subclass_of", "bool", [ "pointer", "pointer", "bool" ]);
  }
  static get _classIsValueType() {
    return this.r("il2cpp_class_is_valuetype", "bool", [ "pointer" ]);
  }
  static get _domainAssemblyOpen() {
    return this.r("il2cpp_domain_assembly_open", "pointer", [ "pointer", "pointer" ]);
  }
  static get _domainGet() {
    return this.r("il2cpp_domain_get", "pointer", []);
  }
  static get _domainGetAssemblies() {
    return this.r("il2cpp_domain_get_assemblies", "pointer", [ "pointer", "pointer" ]);
  }
  static get _fieldGetModifier() {
    return this.r("il2cpp_field_get_modifier", "pointer", [ "pointer" ]);
  }
  static get _fieldGetClass() {
    return this.r("il2cpp_field_get_parent", "pointer", [ "pointer" ]);
  }
  static get _fieldGetFlags() {
    return this.r("il2cpp_field_get_flags", "int", [ "pointer" ]);
  }
  static get _fieldGetName() {
    return this.r("il2cpp_field_get_name", "pointer", [ "pointer" ]);
  }
  static get _fieldGetOffset() {
    return this.r("il2cpp_field_get_offset", "int32", [ "pointer" ]);
  }
  static get _fieldGetStaticValue() {
    return this.r("il2cpp_field_static_get_value", "void", [ "pointer", "pointer" ]);
  }
  static get _fieldGetType() {
    return this.r("il2cpp_field_get_type", "pointer", [ "pointer" ]);
  }
  static get _fieldIsLiteral() {
    return this.r("il2cpp_field_is_literal", "bool", [ "pointer" ]);
  }
  static get _fieldIsStatic() {
    return this.r("il2cpp_field_is_static", "bool", [ "pointer" ]);
  }
  static get _fieldIsThreadStatic() {
    return this.r("il2cpp_field_is_thread_static", "bool", [ "pointer" ]);
  }
  static get _fieldSetStaticValue() {
    return this.r("il2cpp_field_static_set_value", "void", [ "pointer", "pointer" ]);
  }
  static get _free() {
    return this.r("il2cpp_free", "void", [ "pointer" ]);
  }
  static get _gcCollect() {
    return this.r("il2cpp_gc_collect", "void", [ "int" ]);
  }
  static get _gcCollectALittle() {
    return this.r("il2cpp_gc_collect_a_little", "void", []);
  }
  static get _gcDisable() {
    return this.r("il2cpp_gc_disable", "void", []);
  }
  static get _gcEnable() {
    return this.r("il2cpp_gc_enable", "void", []);
  }
  static get _gcGetHeapSize() {
    return this.r("il2cpp_gc_get_heap_size", "int64", []);
  }
  static get _gcGetMaxTimeSlice() {
    return this.r("il2cpp_gc_get_max_time_slice_ns", "int64", []);
  }
  static get _gcGetUsedSize() {
    return this.r("il2cpp_gc_get_used_size", "int64", []);
  }
  static get _gcHandleGetTarget() {
    return this.r("il2cpp_gchandle_get_target", "pointer", [ "uint32" ]);
  }
  static get _gcHandleFree() {
    return this.r("il2cpp_gchandle_free", "void", [ "uint32" ]);
  }
  static get _gcHandleNew() {
    return this.r("il2cpp_gchandle_new", "uint32", [ "pointer", "bool" ]);
  }
  static get _gcHandleNewWeakRef() {
    return this.r("il2cpp_gchandle_new_weakref", "uint32", [ "pointer", "bool" ]);
  }
  static get _gcIsDisabled() {
    return this.r("il2cpp_gc_is_disabled", "bool", []);
  }
  static get _gcIsIncremental() {
    return this.r("il2cpp_gc_is_incremental", "bool", []);
  }
  static get _gcSetMaxTimeSlice() {
    return this.r("il2cpp_gc_set_max_time_slice_ns", "void", [ "int64" ]);
  }
  static get _gcStartIncrementalCollection() {
    return this.r("il2cpp_gc_start_incremental_collection", "void", []);
  }
  static get _gcStartWorld() {
    return this.r("il2cpp_start_gc_world", "void", []);
  }
  static get _gcStopWorld() {
    return this.r("il2cpp_stop_gc_world", "void", []);
  }
  static get _getCorlib() {
    return this.r("il2cpp_get_corlib", "pointer", []);
  }
  static get _imageGetAssembly() {
    return this.r("il2cpp_image_get_assembly", "pointer", [ "pointer" ]);
  }
  static get _imageGetClass() {
    return this.r("il2cpp_image_get_class", "pointer", [ "pointer", "uint" ]);
  }
  static get _imageGetClassCount() {
    return this.r("il2cpp_image_get_class_count", "uint32", [ "pointer" ]);
  }
  static get _imageGetName() {
    return this.r("il2cpp_image_get_name", "pointer", [ "pointer" ]);
  }
  static get _init() {
    return this.r("il2cpp_init", "void", []);
  }
  static get _livenessAllocateStruct() {
    return this.r("il2cpp_unity_liveness_allocate_struct", "pointer", [ "pointer", "int", "pointer", "pointer", "pointer" ]);
  }
  static get _livenessCalculationBegin() {
    return this.r("il2cpp_unity_liveness_calculation_begin", "pointer", [ "pointer", "int", "pointer", "pointer", "pointer", "pointer" ]);
  }
  static get _livenessCalculationEnd() {
    return this.r("il2cpp_unity_liveness_calculation_end", "void", [ "pointer" ]);
  }
  static get _livenessCalculationFromStatics() {
    return this.r("il2cpp_unity_liveness_calculation_from_statics", "void", [ "pointer" ]);
  }
  static get _livenessFinalize() {
    return this.r("il2cpp_unity_liveness_finalize", "void", [ "pointer" ]);
  }
  static get _livenessFreeStruct() {
    return this.r("il2cpp_unity_liveness_free_struct", "void", [ "pointer" ]);
  }
  static get _memorySnapshotCapture() {
    return this.r("il2cpp_capture_memory_snapshot", "pointer", []);
  }
  static get _memorySnapshotFree() {
    return this.r("il2cpp_free_captured_memory_snapshot", "void", [ "pointer" ]);
  }
  static get _memorySnapshotGetClasses() {
    return this.r("il2cpp_memory_snapshot_get_classes", "pointer", [ "pointer", "pointer" ]);
  }
  static get _memorySnapshotGetGCHandles() {
    return this.r("il2cpp_memory_snapshot_get_gc_handles", [ "uint32", "pointer" ], [ "pointer" ]);
  }
  static get _memorySnapshotGetRuntimeInformation() {
    return this.r("il2cpp_memory_snapshot_get_information", [ "uint32", "uint32", "uint32", "uint32", "uint32", "uint32" ], [ "pointer" ]);
  }
  static get _methodGetModifier() {
    return this.r("il2cpp_method_get_modifier", "pointer", [ "pointer" ]);
  }
  static get _methodGetClass() {
    return this.r("il2cpp_method_get_class", "pointer", [ "pointer" ]);
  }
  static get _methodGetFlags() {
    return this.r("il2cpp_method_get_flags", "uint32", [ "pointer", "pointer" ]);
  }
  static get _methodGetFromReflection() {
    return this.r("il2cpp_method_get_from_reflection", "pointer", [ "pointer" ]);
  }
  static get _methodGetName() {
    return this.r("il2cpp_method_get_name", "pointer", [ "pointer" ]);
  }
  static get _methodGetObject() {
    return this.r("il2cpp_method_get_object", "pointer", [ "pointer", "pointer" ]);
  }
  static get _methodGetParameterCount() {
    return this.r("il2cpp_method_get_param_count", "uint8", [ "pointer" ]);
  }
  static get _methodGetParameterName() {
    return this.r("il2cpp_method_get_param_name", "pointer", [ "pointer", "uint32" ]);
  }
  static get _methodGetParameters() {
    return this.r("il2cpp_method_get_parameters", "pointer", [ "pointer", "pointer" ]);
  }
  static get _methodGetParameterType() {
    return this.r("il2cpp_method_get_param", "pointer", [ "pointer", "uint32" ]);
  }
  static get _methodGetPointer() {
    return this.r("il2cpp_method_get_pointer", "pointer", [ "pointer" ]);
  }
  static get _methodGetReturnType() {
    return this.r("il2cpp_method_get_return_type", "pointer", [ "pointer" ]);
  }
  static get _methodIsExternal() {
    return this.r("il2cpp_method_is_external", "bool", [ "pointer" ]);
  }
  static get _methodIsGeneric() {
    return this.r("il2cpp_method_is_generic", "bool", [ "pointer" ]);
  }
  static get _methodIsInflated() {
    return this.r("il2cpp_method_is_inflated", "bool", [ "pointer" ]);
  }
  static get _methodIsInstance() {
    return this.r("il2cpp_method_is_instance", "bool", [ "pointer" ]);
  }
  static get _methodIsSynchronized() {
    return this.r("il2cpp_method_is_synchronized", "bool", [ "pointer" ]);
  }
  static get _monitorEnter() {
    return this.r("il2cpp_monitor_enter", "void", [ "pointer" ]);
  }
  static get _monitorExit() {
    return this.r("il2cpp_monitor_exit", "void", [ "pointer" ]);
  }
  static get _monitorPulse() {
    return this.r("il2cpp_monitor_pulse", "void", [ "pointer" ]);
  }
  static get _monitorPulseAll() {
    return this.r("il2cpp_monitor_pulse_all", "void", [ "pointer" ]);
  }
  static get _monitorTryEnter() {
    return this.r("il2cpp_monitor_try_enter", "bool", [ "pointer", "uint32" ]);
  }
  static get _monitorTryWait() {
    return this.r("il2cpp_monitor_try_wait", "bool", [ "pointer", "uint32" ]);
  }
  static get _monitorWait() {
    return this.r("il2cpp_monitor_wait", "void", [ "pointer" ]);
  }
  static get _objectGetClass() {
    return this.r("il2cpp_object_get_class", "pointer", [ "pointer" ]);
  }
  static get _objectGetVirtualMethod() {
    return this.r("il2cpp_object_get_virtual_method", "pointer", [ "pointer", "pointer" ]);
  }
  static get _objectInit() {
    return this.r("il2cpp_runtime_object_init_exception", "void", [ "pointer", "pointer" ]);
  }
  static get _objectNew() {
    return this.r("il2cpp_object_new", "pointer", [ "pointer" ]);
  }
  static get _objectGetSize() {
    return this.r("il2cpp_object_get_size", "uint32", [ "pointer" ]);
  }
  static get _objectUnbox() {
    return this.r("il2cpp_object_unbox", "pointer", [ "pointer" ]);
  }
  static get _resolveInternalCall() {
    return this.r("il2cpp_resolve_icall", "pointer", [ "pointer" ]);
  }
  static get _stringChars() {
    return this.r("il2cpp_string_chars", "pointer", [ "pointer" ]);
  }
  static get _stringLength() {
    return this.r("il2cpp_string_length", "int32", [ "pointer" ]);
  }
  static get _stringNew() {
    return this.r("il2cpp_string_new", "pointer", [ "pointer" ]);
  }
  static get _stringSetLength() {
    return this.r("il2cpp_string_set_length", "void", [ "pointer", "int32" ]);
  }
  static get _valueBox() {
    return this.r("il2cpp_value_box", "pointer", [ "pointer", "pointer" ]);
  }
  static get _threadAttach() {
    return this.r("il2cpp_thread_attach", "pointer", [ "pointer" ]);
  }
  static get _threadCurrent() {
    return this.r("il2cpp_thread_current", "pointer", []);
  }
  static get _threadGetAllAttachedThreads() {
    return this.r("il2cpp_thread_get_all_attached_threads", "pointer", [ "pointer" ]);
  }
  static get _threadIsVm() {
    return this.r("il2cpp_is_vm_thread", "bool", [ "pointer" ]);
  }
  static get _threadDetach() {
    return this.r("il2cpp_thread_detach", "void", [ "pointer" ]);
  }
  static get _typeGetName() {
    return this.r("il2cpp_type_get_name", "pointer", [ "pointer" ]);
  }
  static get _typeGetObject() {
    return this.r("il2cpp_type_get_object", "pointer", [ "pointer" ]);
  }
  static get _typeGetTypeEnum() {
    return this.r("il2cpp_type_get_type", "int", [ "pointer" ]);
  }
  static get _typeIsByReference() {
    return this.r("il2cpp_type_is_byref", "bool", [ "pointer" ]);
  }
  static get _typeIsPrimitive() {
    return this.r("il2cpp_type_is_primitive", "bool", [ "pointer" ]);
  }
  static get cModule() {
    (i.default.lt(Il2Cpp.unityVersion, "5.3.0") || i.default.gte(Il2Cpp.unityVersion, "2022.2.0")) && (0, 
    r.warn)(`current Unity version ${Il2Cpp.unityVersion} is not supported, expect breakage`);
    const t = new CModule("#include <stdint.h>\n\n#define OFFSET_OF(name, type)     int16_t name (char * p,                  type e)    {        for (int16_t i = 0; i < 512; i++) if (* ((type *) p + i) == e) return i;        return -1;    }\n\nOFFSET_OF (offset_of_int32, int32_t)\nOFFSET_OF (offset_of_pointer, void *)\n            "), e = new NativeFunction(t.offset_of_int32, "int16", [ "pointer", "int32" ]), n = new NativeFunction(t.offset_of_pointer, "int16", [ "pointer", "pointer" ]), _ = Il2Cpp.Image.corlib.class("System.String"), s = Il2Cpp.Image.corlib.class("System.DateTime"), a = Il2Cpp.Image.corlib.class("System.Reflection.Module");
    s.initialize(), a.initialize();
    const l = (s.tryField("daysmonth") ?? s.tryField("DaysToMonth365") ?? s.field("s_daysToMonth365")).value, c = a.field("FilterTypeName").value, p = c.field("method_ptr").value, o = c.field("method").value, u = `#include <stdint.h>\n#include <string.h>\n\n\ntypedef struct _Il2CppObject Il2CppObject;\ntypedef enum _Il2CppTypeEnum Il2CppTypeEnum;\ntypedef struct _Il2CppReflectionMethod Il2CppReflectionMethod;\ntypedef struct _Il2CppManagedMemorySnapshot Il2CppManagedMemorySnapshot;\ntypedef struct _Il2CppMetadataType Il2CppMetadataType;\n\n\nstruct _Il2CppObject\n{\n    void * class;\n    void * monitor;\n};\n\nenum _Il2CppTypeEnum\n{\n    IL2CPP_TYPE_END = 0x00,\n    IL2CPP_TYPE_VOID = 0x01,\n    IL2CPP_TYPE_BOOLEAN = 0x02,\n    IL2CPP_TYPE_CHAR = 0x03,\n    IL2CPP_TYPE_I1 = 0x04,\n    IL2CPP_TYPE_U1 = 0x05,\n    IL2CPP_TYPE_I2 = 0x06,\n    IL2CPP_TYPE_U2 = 0x07,\n    IL2CPP_TYPE_I4 = 0x08,\n    IL2CPP_TYPE_U4 = 0x09,\n    IL2CPP_TYPE_I8 = 0x0a,\n    IL2CPP_TYPE_U8 = 0x0b,\n    IL2CPP_TYPE_R4 = 0x0c,\n    IL2CPP_TYPE_R8 = 0x0d,\n    IL2CPP_TYPE_STRING = 0x0e,\n    IL2CPP_TYPE_PTR = 0x0f,\n    IL2CPP_TYPE_BYREF = 0x10,\n    IL2CPP_TYPE_VALUETYPE = 0x11,\n    IL2CPP_TYPE_CLASS = 0x12,\n    IL2CPP_TYPE_VAR = 0x13,\n    IL2CPP_TYPE_ARRAY = 0x14,\n    IL2CPP_TYPE_GENERICINST = 0x15,\n    IL2CPP_TYPE_TYPEDBYREF = 0x16,\n    IL2CPP_TYPE_I = 0x18,\n    IL2CPP_TYPE_U = 0x19,\n    IL2CPP_TYPE_FNPTR = 0x1b,\n    IL2CPP_TYPE_OBJECT = 0x1c,\n    IL2CPP_TYPE_SZARRAY = 0x1d,\n    IL2CPP_TYPE_MVAR = 0x1e,\n    IL2CPP_TYPE_CMOD_REQD = 0x1f,\n    IL2CPP_TYPE_CMOD_OPT = 0x20,\n    IL2CPP_TYPE_INTERNAL = 0x21,\n    IL2CPP_TYPE_MODIFIER = 0x40,\n    IL2CPP_TYPE_SENTINEL = 0x41,\n    IL2CPP_TYPE_PINNED = 0x45,\n    IL2CPP_TYPE_ENUM = 0x55\n};\n\nstruct _Il2CppReflectionMethod\n{\n    Il2CppObject object;\n    void * method;\n    void * name;\n    void * reftype;\n};\n\nstruct _Il2CppManagedMemorySnapshot\n{\n    struct Il2CppManagedHeap\n    {\n        uint32_t section_count;\n        void * sections;\n    } heap;\n    struct Il2CppStacks\n    {\n        uint32_t stack_count;\n        void * stacks;\n    } stacks;\n    struct Il2CppMetadataSnapshot\n    {\n        uint32_t type_count;\n        Il2CppMetadataType * types;\n    } metadata_snapshot;\n    struct Il2CppGCHandles\n    {\n        uint32_t tracked_object_count;\n        Il2CppObject ** pointers_to_objects;\n    } gc_handles;\n    struct Il2CppRuntimeInformation\n    {\n        uint32_t pointer_size;\n        uint32_t object_header_size;\n        uint32_t array_header_size;\n        uint32_t array_bounds_offset_in_header;\n        uint32_t array_size_offset_in_header;\n        uint32_t allocation_granularity;\n    } runtime_information;\n    void * additional_user_information;\n};\n\nstruct _Il2CppMetadataType\n{\n    uint32_t flags;\n    void * fields;\n    uint32_t field_count;\n    uint32_t statics_size;\n    uint8_t * statics;\n    uint32_t base_or_element_type_index;\n    char * name;\n    const char * assembly_name;\n    uint64_t type_info_address;\n    uint32_t size;\n};\n\n\n#define THREAD_STATIC_FIELD_OFFSET -1;\n\n#define FIELD_ATTRIBUTE_FIELD_ACCESS_MASK 0x0007\n#define FIELD_ATTRIBUTE_COMPILER_CONTROLLED 0x0000\n#define FIELD_ATTRIBUTE_PRIVATE 0x0001\n#define FIELD_ATTRIBUTE_FAM_AND_ASSEM 0x0002\n#define FIELD_ATTRIBUTE_ASSEMBLY 0x0003\n#define FIELD_ATTRIBUTE_FAMILY 0x0004\n#define FIELD_ATTRIBUTE_FAM_OR_ASSEM 0x0005\n#define FIELD_ATTRIBUTE_PUBLIC 0x0006\n\n#define FIELD_ATTRIBUTE_STATIC 0x0010\n#define FIELD_ATTRIBUTE_LITERAL 0x0040\n\n#define METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK 0x0007\n#define METHOD_ATTRIBUTE_COMPILER_CONTROLLED 0x0000\n#define METHOD_ATTRIBUTE_PRIVATE 0x0001\n#define METHOD_ATTRIBUTE_FAM_AND_ASSEM 0x0002\n#define METHOD_ATTRIBUTE_ASSEMBLY 0x0003\n#define METHOD_ATTRIBUTE_FAMILY 0x0004\n#define METHOD_ATTRIBUTE_FAM_OR_ASSEM 0x0005\n#define METHOD_ATTRIBUTE_PUBLIC 0x0006\n\n#define METHOD_ATTRIBUTE_STATIC 0x0010\n#define METHOD_IMPL_ATTRIBUTE_INTERNAL_CALL 0x1000\n#define METHOD_IMPL_ATTRIBUTE_SYNCHRONIZED 0x0020\n\n\nstatic const char * (*il2cpp_class_get_name) (void *) = (void *) ${this._classGetName};\nstatic int (*il2cpp_field_get_flags) (void *) = (void *) ${this._fieldGetFlags};\nstatic size_t (*il2cpp_field_get_offset) (void *) = (void *) ${this._fieldGetOffset};\nstatic uint32_t (*il2cpp_method_get_flags) (void *, uint32_t *) = (void *) ${this._methodGetFlags};\nstatic char * (*il2cpp_type_get_name) (void *) = (void *) ${this._typeGetName};\nstatic Il2CppTypeEnum (*il2cpp_type_get_type_enum) (void *) = (void *) ${this._typeGetTypeEnum};\nstatic void (*il2cpp_free) (void * pointer) = (void *) ${this._free};\n\n\nvoid\nil2cpp_string_set_length (int32_t * string,\n                          int32_t length)\n{\n    *(string + ${e(Il2Cpp.String.from("vfsfitvnm"), 9)}) = length;\n}\n\nvoid *\nil2cpp_array_get_elements (int32_t * array)\n{ \n    return array + ${e(l, 31) - 1};\n}\n\nuint8_t\nil2cpp_type_is_byref (void * type)\n{   \n    char * name;\n    char last_char;\n\n    name = il2cpp_type_get_name (type);\n    last_char = name[strlen (name) - 1];\n\n    il2cpp_free (name);\n    return last_char == '&';\n}\n\nuint8_t\nil2cpp_type_is_primitive (void * type)\n{\n    Il2CppTypeEnum type_enum;\n\n    type_enum = il2cpp_type_get_type_enum (type);\n\n    return ((type_enum >= IL2CPP_TYPE_BOOLEAN && \n        type_enum <= IL2CPP_TYPE_R8) || \n        type_enum == IL2CPP_TYPE_I || \n        type_enum == IL2CPP_TYPE_U\n    );\n}\n\nint32_t\nil2cpp_class_get_actual_instance_size (int32_t * class)\n{\n    return *(class + ${e(_, _.instanceSize - 2)});\n}\n\nuint8_t\nil2cpp_class_get_rank (void * class)\n{\n    uint8_t rank;\n    const char * name;\n    \n    rank = 0;\n    name = il2cpp_class_get_name (class);\n\n    for (uint16_t i = strlen (name) - 1; i > 0; i--)\n    {\n        char c = name[i];\n\n        if (c == ']') rank++;\n        else if (c == '[' || rank == 0) break;\n        else if (c == ',') rank++;\n        else break;\n    }\n\n    return rank;\n}\n\nconst char *\nil2cpp_field_get_modifier (void * field)\n{   \n    int flags;\n\n    flags = il2cpp_field_get_flags (field);\n\n    switch (flags & FIELD_ATTRIBUTE_FIELD_ACCESS_MASK) {\n        case FIELD_ATTRIBUTE_PRIVATE:\n            return "private";\n        case FIELD_ATTRIBUTE_FAM_AND_ASSEM:\n            return "private protected";\n        case FIELD_ATTRIBUTE_ASSEMBLY:\n            return "internal";\n        case FIELD_ATTRIBUTE_FAMILY:\n            return "protected";\n        case FIELD_ATTRIBUTE_FAM_OR_ASSEM:\n            return "protected internal";\n        case FIELD_ATTRIBUTE_PUBLIC:\n            return "public";\n    }\n\n    return "";\n}\n\nuint8_t\nil2cpp_field_is_literal (void * field)\n{\n    return (il2cpp_field_get_flags (field) & FIELD_ATTRIBUTE_LITERAL) != 0;\n}\n\nuint8_t\nil2cpp_field_is_static (void * field)\n{\n    return (il2cpp_field_get_flags (field) & FIELD_ATTRIBUTE_STATIC) != 0;\n}\n\nuint8_t\nil2cpp_field_is_thread_static (void * field)\n{\n    return il2cpp_field_get_offset (field) == THREAD_STATIC_FIELD_OFFSET;\n}\n\nconst char *\nil2cpp_method_get_modifier (void * method)\n{\n    uint32_t flags;\n\n    flags = il2cpp_method_get_flags (method, NULL);\n\n    switch (flags & METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK) {\n        case METHOD_ATTRIBUTE_PRIVATE:\n            return "private";\n        case METHOD_ATTRIBUTE_FAM_AND_ASSEM:\n            return "private protected";\n        case METHOD_ATTRIBUTE_ASSEMBLY:\n            return "internal";\n        case METHOD_ATTRIBUTE_FAMILY:\n            return "protected";\n        case METHOD_ATTRIBUTE_FAM_OR_ASSEM:\n            return "protected internal";\n        case METHOD_ATTRIBUTE_PUBLIC:\n            return "public";\n    }\n\n    return "";\n}\n\nvoid *\nil2cpp_method_get_from_reflection (const Il2CppReflectionMethod * method)\n{\n    return method->method;\n}\n\nvoid *\nil2cpp_method_get_pointer (void ** method)\n{\n    return * (method + ${n(o, p)});\n}\n\nuint8_t\nil2cpp_method_is_external (void * method)\n{\n    uint32_t implementation_flags;\n\n    il2cpp_method_get_flags (method, &implementation_flags);\n\n    return (implementation_flags & METHOD_IMPL_ATTRIBUTE_INTERNAL_CALL) != 0;\n}\n\nuint8_t\nil2cpp_method_is_synchronized (void * method)\n{\n    uint32_t implementation_flags;\n\n    il2cpp_method_get_flags (method, &implementation_flags);\n\n    return (implementation_flags & METHOD_IMPL_ATTRIBUTE_SYNCHRONIZED) != 0;\n}\n\nuintptr_t\nil2cpp_memory_snapshot_get_classes (const Il2CppManagedMemorySnapshot * snapshot,\n                                    Il2CppMetadataType ** iter)\n{\n    const int zero;\n    const void * null;\n\n    if (iter != NULL && snapshot->metadata_snapshot.type_count > zero)\n    {\n        if (*iter == null)\n        {\n            *iter = snapshot->metadata_snapshot.types;\n            return (uintptr_t) (*iter)->type_info_address;\n        }\n        else\n        {\n            Il2CppMetadataType * metadata_type = *iter + 1;\n\n            if (metadata_type < snapshot->metadata_snapshot.types + snapshot->metadata_snapshot.type_count)\n            {\n                *iter = metadata_type;\n                return (uintptr_t) (*iter)->type_info_address;\n            }\n        }\n    }\n    return 0;\n}\n\nstruct Il2CppGCHandles\nil2cpp_memory_snapshot_get_gc_handles (const Il2CppManagedMemorySnapshot * snapshot)\n{\n    return snapshot->gc_handles;\n}\n\nstruct Il2CppRuntimeInformation\nil2cpp_memory_snapshot_get_information (const Il2CppManagedMemorySnapshot * snapshot)\n{\n    return snapshot->runtime_information;\n}\n        `;
    return t.dispose(), new CModule(u);
  }
  static r(t, e, n) {
    const i = Il2Cpp.module.findExportByName(t) ?? this.cModule[t];
    return null == i && (0, r.raise)(`cannot resolve export ${t}`), new NativeFunction(i, e, n);
  }
}

t([ n.cache ], _, "_alloc", null), t([ n.cache ], _, "_arrayGetElements", null), 
t([ n.cache ], _, "_arrayGetLength", null), t([ n.cache ], _, "_arrayNew", null), 
t([ n.cache ], _, "_assemblyGetImage", null), t([ n.cache ], _, "_classForEach", null), 
t([ n.cache ], _, "_classFromName", null), t([ n.cache ], _, "_classFromSystemType", null), 
t([ n.cache ], _, "_classFromType", null), t([ n.cache ], _, "_classGetActualInstanceSize", null), 
t([ n.cache ], _, "_classGetArrayClass", null), t([ n.cache ], _, "_classGetArrayElementSize", null), 
t([ n.cache ], _, "_classGetAssemblyName", null), t([ n.cache ], _, "_classGetBaseType", null), 
t([ n.cache ], _, "_classGetDeclaringType", null), t([ n.cache ], _, "_classGetElementClass", null), 
t([ n.cache ], _, "_classGetFieldFromName", null), t([ n.cache ], _, "_classGetFields", null), 
t([ n.cache ], _, "_classGetFlags", null), t([ n.cache ], _, "_classGetImage", null), 
t([ n.cache ], _, "_classGetInstanceSize", null), t([ n.cache ], _, "_classGetInterfaces", null), 
t([ n.cache ], _, "_classGetMethodFromName", null), t([ n.cache ], _, "_classGetMethods", null), 
t([ n.cache ], _, "_classGetName", null), t([ n.cache ], _, "_classGetNamespace", null), 
t([ n.cache ], _, "_classGetNestedClasses", null), t([ n.cache ], _, "_classGetParent", null), 
t([ n.cache ], _, "_classGetRank", null), t([ n.cache ], _, "_classGetStaticFieldData", null), 
t([ n.cache ], _, "_classGetValueSize", null), t([ n.cache ], _, "_classGetType", null), 
t([ n.cache ], _, "_classHasReferences", null), t([ n.cache ], _, "_classInit", null), 
t([ n.cache ], _, "_classIsAbstract", null), t([ n.cache ], _, "_classIsAssignableFrom", null), 
t([ n.cache ], _, "_classIsBlittable", null), t([ n.cache ], _, "_classIsEnum", null), 
t([ n.cache ], _, "_classIsGeneric", null), t([ n.cache ], _, "_classIsInflated", null), 
t([ n.cache ], _, "_classIsInterface", null), t([ n.cache ], _, "_classIsSubclassOf", null), 
t([ n.cache ], _, "_classIsValueType", null), t([ n.cache ], _, "_domainAssemblyOpen", null), 
t([ n.cache ], _, "_domainGet", null), t([ n.cache ], _, "_domainGetAssemblies", null), 
t([ n.cache ], _, "_fieldGetModifier", null), t([ n.cache ], _, "_fieldGetClass", null), 
t([ n.cache ], _, "_fieldGetFlags", null), t([ n.cache ], _, "_fieldGetName", null), 
t([ n.cache ], _, "_fieldGetOffset", null), t([ n.cache ], _, "_fieldGetStaticValue", null), 
t([ n.cache ], _, "_fieldGetType", null), t([ n.cache ], _, "_fieldIsLiteral", null), 
t([ n.cache ], _, "_fieldIsStatic", null), t([ n.cache ], _, "_fieldIsThreadStatic", null), 
t([ n.cache ], _, "_fieldSetStaticValue", null), t([ n.cache ], _, "_free", null), 
t([ n.cache ], _, "_gcCollect", null), t([ n.cache ], _, "_gcCollectALittle", null), 
t([ n.cache ], _, "_gcDisable", null), t([ n.cache ], _, "_gcEnable", null), t([ n.cache ], _, "_gcGetHeapSize", null), 
t([ n.cache ], _, "_gcGetMaxTimeSlice", null), t([ n.cache ], _, "_gcGetUsedSize", null), 
t([ n.cache ], _, "_gcHandleGetTarget", null), t([ n.cache ], _, "_gcHandleFree", null), 
t([ n.cache ], _, "_gcHandleNew", null), t([ n.cache ], _, "_gcHandleNewWeakRef", null), 
t([ n.cache ], _, "_gcIsDisabled", null), t([ n.cache ], _, "_gcIsIncremental", null), 
t([ n.cache ], _, "_gcSetMaxTimeSlice", null), t([ n.cache ], _, "_gcStartIncrementalCollection", null), 
t([ n.cache ], _, "_gcStartWorld", null), t([ n.cache ], _, "_gcStopWorld", null), 
t([ n.cache ], _, "_getCorlib", null), t([ n.cache ], _, "_imageGetAssembly", null), 
t([ n.cache ], _, "_imageGetClass", null), t([ n.cache ], _, "_imageGetClassCount", null), 
t([ n.cache ], _, "_imageGetName", null), t([ n.cache ], _, "_init", null), t([ n.cache ], _, "_livenessAllocateStruct", null), 
t([ n.cache ], _, "_livenessCalculationBegin", null), t([ n.cache ], _, "_livenessCalculationEnd", null), 
t([ n.cache ], _, "_livenessCalculationFromStatics", null), t([ n.cache ], _, "_livenessFinalize", null), 
t([ n.cache ], _, "_livenessFreeStruct", null), t([ n.cache ], _, "_memorySnapshotCapture", null), 
t([ n.cache ], _, "_memorySnapshotFree", null), t([ n.cache ], _, "_memorySnapshotGetClasses", null), 
t([ n.cache ], _, "_memorySnapshotGetGCHandles", null), t([ n.cache ], _, "_memorySnapshotGetRuntimeInformation", null), 
t([ n.cache ], _, "_methodGetModifier", null), t([ n.cache ], _, "_methodGetClass", null), 
t([ n.cache ], _, "_methodGetFlags", null), t([ n.cache ], _, "_methodGetFromReflection", null), 
t([ n.cache ], _, "_methodGetName", null), t([ n.cache ], _, "_methodGetObject", null), 
t([ n.cache ], _, "_methodGetParameterCount", null), t([ n.cache ], _, "_methodGetParameterName", null), 
t([ n.cache ], _, "_methodGetParameters", null), t([ n.cache ], _, "_methodGetParameterType", null), 
t([ n.cache ], _, "_methodGetPointer", null), t([ n.cache ], _, "_methodGetReturnType", null), 
t([ n.cache ], _, "_methodIsExternal", null), t([ n.cache ], _, "_methodIsGeneric", null), 
t([ n.cache ], _, "_methodIsInflated", null), t([ n.cache ], _, "_methodIsInstance", null), 
t([ n.cache ], _, "_methodIsSynchronized", null), t([ n.cache ], _, "_monitorEnter", null), 
t([ n.cache ], _, "_monitorExit", null), t([ n.cache ], _, "_monitorPulse", null), 
t([ n.cache ], _, "_monitorPulseAll", null), t([ n.cache ], _, "_monitorTryEnter", null), 
t([ n.cache ], _, "_monitorTryWait", null), t([ n.cache ], _, "_monitorWait", null), 
t([ n.cache ], _, "_objectGetClass", null), t([ n.cache ], _, "_objectGetVirtualMethod", null), 
t([ n.cache ], _, "_objectInit", null), t([ n.cache ], _, "_objectNew", null), t([ n.cache ], _, "_objectGetSize", null), 
t([ n.cache ], _, "_objectUnbox", null), t([ n.cache ], _, "_resolveInternalCall", null), 
t([ n.cache ], _, "_stringChars", null), t([ n.cache ], _, "_stringLength", null), 
t([ n.cache ], _, "_stringNew", null), t([ n.cache ], _, "_stringSetLength", null), 
t([ n.cache ], _, "_valueBox", null), t([ n.cache ], _, "_threadAttach", null), 
t([ n.cache ], _, "_threadCurrent", null), t([ n.cache ], _, "_threadGetAllAttachedThreads", null), 
t([ n.cache ], _, "_threadIsVm", null), t([ n.cache ], _, "_threadDetach", null), 
t([ n.cache ], _, "_typeGetName", null), t([ n.cache ], _, "_typeGetObject", null), 
t([ n.cache ], _, "_typeGetTypeEnum", null), t([ n.cache ], _, "_typeIsByReference", null), 
t([ n.cache ], _, "_typeIsPrimitive", null), t([ n.cache ], _, "cModule", null), 
Il2Cpp.Api = _;

},{"../utils/console":542,"decorator-cache-getter":513,"versioning":548}],516:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";

var e = this && this.__decorate || function(e, t, n, i) {
  var r, a = arguments.length, l = a < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, n, i); else for (var o = e.length - 1; o >= 0; o--) (r = e[o]) && (l = (a < 3 ? r(l) : a > 3 ? r(t, n, l) : r(t, n)) || l);
  return a > 3 && l && Object.defineProperty(t, n, l), l;
}, t = this && this.__importDefault || function(e) {
  return e && e.__esModule ? e : {
    default: e
  };
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const n = require("decorator-cache-getter"), i = t(require("versioning")), r = require("../utils/console"), a = require("../utils/native-wait");

class l {
  constructor() {}
  static get moduleName() {
    switch (Process.platform) {
     case "linux":
      try {
        Java.androidVersion;
        return "libil2cpp.so";
      } catch (e) {
        return "GameAssembly.so";
      }

     case "windows":
      return "GameAssembly.dll";

     case "darwin":
      try {
        return "UnityFramework";
      } catch (e) {
        return "GameAssembly.dylib";
      }
    }
    (0, r.raise)(`${Process.platform} is not supported yet`);
  }
  static get applicationDataPath() {
    const e = this.internalCall("UnityEngine.Application::get_persistentDataPath", "pointer", []);
    return new Il2Cpp.String(e()).content;
  }
  static get applicationIdentifier() {
    const e = this.internalCall("UnityEngine.Application::get_identifier", "pointer", []) ?? this.internalCall("UnityEngine.Application::get_bundleIdentifier", "pointer", []);
    return e ? new Il2Cpp.String(e()).content : null;
  }
  static get applicationVersion() {
    const e = this.internalCall("UnityEngine.Application::get_version", "pointer", []);
    return e ? new Il2Cpp.String(e()).content : null;
  }
  static get attachedThreads() {
    null == Il2Cpp.currentThread && (0, r.raise)("only Il2Cpp threads can invoke Il2Cpp.attachedThreads");
    const e = [], t = Memory.alloc(Process.pointerSize), n = Il2Cpp.Api._threadGetAllAttachedThreads(t), i = t.readInt();
    for (let t = 0; t < i; t++) e.push(new Il2Cpp.Thread(n.add(t * Process.pointerSize).readPointer()));
    return e;
  }
  static get currentThread() {
    const e = Il2Cpp.Api._threadCurrent();
    return e.isNull() ? null : new Il2Cpp.Thread(e);
  }
  static get module() {
    return Process.getModuleByName(this.moduleName);
  }
  static get unityVersion() {
    const e = this.internalCall("UnityEngine.Application::get_unityVersion", "pointer", []);
    return null == e && (0, r.raise)("couldn't determine the Unity version, please specify it manually"), 
    new Il2Cpp.String(e()).content;
  }
  static get unityVersionIsBelow201830() {
    return i.default.lt(this.unityVersion, "2018.3.0");
  }
  static alloc(e = Process.pointerSize) {
    return Il2Cpp.Api._alloc(e);
  }
  static dump(e, t) {
    e = e ?? `${Il2Cpp.applicationIdentifier ?? "unknown"}_${Il2Cpp.applicationVersion ?? "unknown"}.cs`;
    const n = `${t ?? Il2Cpp.applicationDataPath}/${e}`, i = new File(n, "w");
    for (const e of Il2Cpp.Domain.assemblies) {
      (0, r.inform)(`dumping ${e.name}...`);
      for (const t of e.image.classes) i.write(`${t}\n\n`);
    }
    i.flush(), i.close(), (0, r.ok)(`dump saved to ${n}`);
  }
  static free(e) {
    return Il2Cpp.Api._free(e);
  }
  static async initialize() {
    if ("darwin" == Process.platform) {
      let e = Process.findModuleByAddress(Module.findExportByName(null, "il2cpp_init") ?? NULL)?.name;
      null == e && (e = await (0, a.forModule)("UnityFramework", "GameAssembly.dylib")), 
      Reflect.defineProperty(Il2Cpp, "moduleName", {
        value: e
      });
    } else await (0, a.forModule)(this.moduleName);
    Il2Cpp.Api._getCorlib().isNull() && await new Promise((e => {
      const t = Interceptor.attach(Il2Cpp.Api._init, {
        onLeave() {
          t.detach(), setImmediate(e);
        }
      });
    }));
  }
  static installExceptionListener(e = "current") {
    const t = Process.getCurrentThreadId();
    return Interceptor.attach(Il2Cpp.module.getExportByName("__cxa_throw"), (function(n) {
      "current" == e && this.threadId != t || (0, r.inform)(new Il2Cpp.Object(n[0].readPointer()));
    }));
  }
  static internalCall(e, t, n) {
    const i = Il2Cpp.Api._resolveInternalCall(Memory.allocUtf8String(e));
    return i.isNull() ? null : new NativeFunction(i, t, n);
  }
  static scheduleOnInitializerThread(e) {
    return new Promise((t => {
      const n = Interceptor.attach(Il2Cpp.Api._threadCurrent, (() => {
        const i = Il2Cpp.currentThread?.id;
        if (null != i && i == Il2Cpp.attachedThreads[0].id) {
          n.detach();
          const i = e();
          setImmediate((() => t(i)));
        }
      }));
    }));
  }
  static async perform(e) {
    await this.initialize();
    let t = this.currentThread;
    const n = null == t;
    null == t && (t = Il2Cpp.Domain.attach());
    try {
      const t = e();
      return t instanceof Promise ? await t : t;
    } catch (e) {
      throw globalThis.console.log(e), e;
    } finally {
      n && t.detach();
    }
  }
  static trace() {
    return new Il2Cpp.Tracer;
  }
}

e([ n.cache ], l, "applicationDataPath", null), e([ n.cache ], l, "applicationIdentifier", null), 
e([ n.cache ], l, "applicationVersion", null), e([ n.cache ], l, "module", null), 
e([ n.cache ], l, "unityVersion", null), e([ n.cache ], l, "unityVersionIsBelow201830", null), 
Reflect.set(globalThis, "Il2Cpp", l);

}).call(this)}).call(this,require("timers").setImmediate)

},{"../utils/console":542,"../utils/native-wait":544,"decorator-cache-getter":513,"timers":547,"versioning":548}],517:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class s {
  constructor() {}
  static Is(s) {
    return e => e instanceof Il2Cpp.Class ? s.isAssignableFrom(e) : s.isAssignableFrom(e.class);
  }
  static IsExactly(s) {
    return e => e instanceof Il2Cpp.Class ? e.equals(s) : e.class.equals(s);
  }
}

Il2Cpp.Filtering = s;

},{}],518:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./base"), require("./api"), require("./filtering"), require("./runtime"), 
require("./tracer"), require("./structs/array"), require("./structs/assembly"), 
require("./structs/class"), require("./structs/domain"), require("./structs/field"), 
require("./structs/gc"), require("./structs/gc-handle"), require("./structs/image"), 
require("./structs/memory-snapshot"), require("./structs/method"), require("./structs/object"), 
require("./structs/parameter"), require("./structs/pointer"), require("./structs/reference"), 
require("./structs/string"), require("./structs/thread"), require("./structs/type"), 
require("./structs/type-enum"), require("./structs/value-type");

},{"./api":515,"./base":516,"./filtering":517,"./runtime":519,"./structs/array":520,"./structs/assembly":521,"./structs/class":522,"./structs/domain":523,"./structs/field":524,"./structs/gc":526,"./structs/gc-handle":525,"./structs/image":527,"./structs/memory-snapshot":528,"./structs/method":529,"./structs/object":530,"./structs/parameter":531,"./structs/pointer":532,"./structs/reference":533,"./structs/string":534,"./structs/thread":535,"./structs/type":537,"./structs/type-enum":536,"./structs/value-type":538,"./tracer":539}],519:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, r, o) {
  var i, n = arguments.length, a = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e, r, o); else for (var c = t.length - 1; c >= 0; c--) (i = t[c]) && (a = (n < 3 ? i(a) : n > 3 ? i(e, r, a) : i(e, r)) || a);
  return n > 3 && a && Object.defineProperty(e, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter");

class r {
  constructor() {}
  static get allocationGranularity() {
    return this.information[5];
  }
  static get arrayHeaderSize() {
    return this.information[2];
  }
  static get information() {
    const t = Il2Cpp.MemorySnapshot.capture();
    try {
      return Il2Cpp.Api._memorySnapshotGetRuntimeInformation(t);
    } finally {
      Il2Cpp.Api._memorySnapshotFree(t);
    }
  }
  static get pointerSize() {
    return this.information[0];
  }
  static get objectHeaderSize() {
    return this.information[1];
  }
}

t([ e.cache ], r, "information", null), Il2Cpp.Runtime = r;

},{"decorator-cache-getter":513}],520:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, n) {
  var l, s = arguments.length, i = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, n); else for (var a = e.length - 1; a >= 0; a--) (l = e[a]) && (i = (s < 3 ? l(i) : s > 3 ? l(t, r, i) : l(t, r)) || i);
  return s > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), r = require("../../utils/console"), n = require("../../utils/native-struct");

class l extends n.NativeStruct {
  static from(e, t) {
    const r = "number" == typeof t ? t : t.length, n = new Il2Cpp.Array(Il2Cpp.Api._arrayNew(e, r));
    return Array.isArray(t) && n.elements.write(t), n;
  }
  get elements() {
    return new Il2Cpp.Pointer(Il2Cpp.Api._arrayGetElements(this), this.elementType);
  }
  get elementSize() {
    return this.elementType.class.arrayElementSize;
  }
  get elementType() {
    return this.object.class.type.class.baseType;
  }
  get length() {
    return Il2Cpp.Api._arrayGetLength(this);
  }
  get object() {
    return new Il2Cpp.Object(this);
  }
  get(e) {
    return (e < 0 || e >= this.length) && (0, r.raise)(`cannot get element at index ${e}: array length is ${this.length}`), 
    this.elements.get(e);
  }
  set(e, t) {
    (e < 0 || e >= this.length) && (0, r.raise)(`cannot get element at index ${e}: array length is ${this.length}`), 
    this.elements.set(e, t);
  }
  toString() {
    return this.isNull() ? "null" : `[${this.elements.read(this.length, 0)}]`;
  }
  * [Symbol.iterator]() {
    for (let e = 0; e < this.length; e++) yield this.elements.get(e);
  }
}

e([ t.cache ], l.prototype, "elements", null), e([ t.cache ], l.prototype, "elementSize", null), 
e([ t.cache ], l.prototype, "elementType", null), e([ t.cache ], l.prototype, "length", null), 
e([ t.cache ], l.prototype, "object", null), Il2Cpp.Array = l;

},{"../../utils/console":542,"../../utils/native-struct":543,"decorator-cache-getter":513}],521:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, l) {
  var c, o = arguments.length, a = o < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, r) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, l); else for (var n = e.length - 1; n >= 0; n--) (c = e[n]) && (a = (o < 3 ? c(a) : o > 3 ? c(t, r, a) : c(t, r)) || a);
  return o > 3 && a && Object.defineProperty(t, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), r = require("../../utils/native-struct"), l = require("../../utils/utils");

let c = class extends r.NonNullNativeStruct {
  get image() {
    return new Il2Cpp.Image(Il2Cpp.Api._assemblyGetImage(this));
  }
  get name() {
    return this.image.name.replace(".dll", "");
  }
  get object() {
    return Il2Cpp.Image.corlib.class("System.Reflection.Assembly").method("Load").invoke(Il2Cpp.String.from(this.name));
  }
};

e([ t.cache ], c.prototype, "image", null), e([ t.cache ], c.prototype, "name", null), 
e([ t.cache ], c.prototype, "object", null), c = e([ l.cacheInstances ], c), Il2Cpp.Assembly = c;

},{"../../utils/native-struct":543,"../../utils/utils":545,"decorator-cache-getter":513}],522:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, s, l) {
  var r, a = arguments.length, n = a < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, s) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(e, t, s, l); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (n = (a < 3 ? r(n) : a > 3 ? r(t, s, n) : r(t, s)) || n);
  return a > 3 && n && Object.defineProperty(t, s, n), n;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), s = require("../../utils/console"), l = require("../../utils/native-struct"), r = require("../../utils/utils");

let a = class extends l.NonNullNativeStruct {
  get actualInstanceSize() {
    return Il2Cpp.Api._classGetActualInstanceSize(this);
  }
  get arrayClass() {
    return new Il2Cpp.Class(Il2Cpp.Api._classGetArrayClass(this, 1));
  }
  get arrayElementSize() {
    return Il2Cpp.Api._classGetArrayElementSize(this);
  }
  get assemblyName() {
    return Il2Cpp.Api._classGetAssemblyName(this).readUtf8String();
  }
  get declaringClass() {
    const e = Il2Cpp.Api._classGetDeclaringType(this);
    return e.isNull() ? null : new Il2Cpp.Class(e);
  }
  get baseType() {
    const e = Il2Cpp.Api._classGetBaseType(this);
    return e.isNull() ? null : new Il2Cpp.Type(e);
  }
  get elementClass() {
    const e = Il2Cpp.Api._classGetElementClass(this);
    return e.isNull() ? null : new Il2Cpp.Class(e);
  }
  get fields() {
    return Array.from((0, r.nativeIterator)(this, Il2Cpp.Api._classGetFields, Il2Cpp.Field));
  }
  get flags() {
    return Il2Cpp.Api._classGetFlags(this);
  }
  get genericParameterCount() {
    return this.isGeneric ? this.type.object.method("GetGenericArguments").invoke().length : 0;
  }
  get hasReferences() {
    return !!Il2Cpp.Api._classHasReferences(this);
  }
  get hasStaticConstructor() {
    const e = this.tryMethod(".cctor");
    return null != e && !e.virtualAddress.isNull();
  }
  get image() {
    return new Il2Cpp.Image(Il2Cpp.Api._classGetImage(this));
  }
  get instanceSize() {
    return Il2Cpp.Api._classGetInstanceSize(this);
  }
  get isAbstract() {
    return !!Il2Cpp.Api._classIsAbstract(this);
  }
  get isBlittable() {
    return !!Il2Cpp.Api._classIsBlittable(this);
  }
  get isEnum() {
    return !!Il2Cpp.Api._classIsEnum(this);
  }
  get isGeneric() {
    return !!Il2Cpp.Api._classIsGeneric(this);
  }
  get isInflated() {
    return !!Il2Cpp.Api._classIsInflated(this);
  }
  get isInterface() {
    return !!Il2Cpp.Api._classIsInterface(this);
  }
  get isValueType() {
    return !!Il2Cpp.Api._classIsValueType(this);
  }
  get interfaces() {
    return Array.from((0, r.nativeIterator)(this, Il2Cpp.Api._classGetInterfaces, Il2Cpp.Class));
  }
  get methods() {
    return Array.from((0, r.nativeIterator)(this, Il2Cpp.Api._classGetMethods, Il2Cpp.Method));
  }
  get name() {
    return Il2Cpp.Api._classGetName(this).readUtf8String();
  }
  get namespace() {
    return Il2Cpp.Api._classGetNamespace(this).readUtf8String();
  }
  get nestedClasses() {
    return Array.from((0, r.nativeIterator)(this, Il2Cpp.Api._classGetNestedClasses, Il2Cpp.Class));
  }
  get parent() {
    const e = Il2Cpp.Api._classGetParent(this);
    return e.isNull() ? null : new Il2Cpp.Class(e);
  }
  get rank() {
    return Il2Cpp.Api._classGetRank(this);
  }
  get staticFieldsData() {
    return Il2Cpp.Api._classGetStaticFieldData(this);
  }
  get valueSize() {
    return Il2Cpp.Api._classGetValueSize(this, NULL);
  }
  get type() {
    return new Il2Cpp.Type(Il2Cpp.Api._classGetType(this));
  }
  alloc() {
    return new Il2Cpp.Object(Il2Cpp.Api._objectNew(this));
  }
  field(e) {
    return this.tryField(e);
  }
  inflate(...e) {
    this.isGeneric || (0, s.raise)(`cannot inflate class ${this.type.name}: it has no generic parameters`), 
    this.genericParameterCount != e.length && (0, s.raise)(`cannot inflate class ${this.type.name}: it needs ${this.genericParameterCount} generic parameter(s), not ${e.length}`);
    const t = e.map((e => e.type.object)), l = Il2Cpp.Array.from(Il2Cpp.Image.corlib.class("System.Type"), t), r = this.type.object.method("MakeGenericType", 1).invoke(l);
    return new Il2Cpp.Class(Il2Cpp.Api._classFromSystemType(r));
  }
  initialize() {
    Il2Cpp.Api._classInit(this);
  }
  isAssignableFrom(e) {
    return !!Il2Cpp.Api._classIsAssignableFrom(this, e);
  }
  isSubclassOf(e, t) {
    return !!Il2Cpp.Api._classIsSubclassOf(this, e, +t);
  }
  method(e, t = -1) {
    return this.tryMethod(e, t);
  }
  nested(e) {
    return this.tryNested(e);
  }
  new() {
    const e = this.alloc(), t = Memory.alloc(Process.pointerSize);
    Il2Cpp.Api._objectInit(e, t);
    const l = t.readPointer();
    return l.isNull() || (0, s.raise)(new Il2Cpp.Object(l).toString()), e;
  }
  tryField(e) {
    const t = Il2Cpp.Api._classGetFieldFromName(this, Memory.allocUtf8String(e));
    return t.isNull() ? null : new Il2Cpp.Field(t);
  }
  tryMethod(e, t = -1) {
    const s = Il2Cpp.Api._classGetMethodFromName(this, Memory.allocUtf8String(e), t);
    return s.isNull() ? null : new Il2Cpp.Method(s);
  }
  tryNested(e) {
    return this.nestedClasses.find((t => t.name == e));
  }
  toString() {
    const e = [ this.parent ].concat(this.interfaces);
    return `// ${this.assemblyName}\n${this.isEnum ? "enum" : this.isValueType ? "struct" : this.isInterface ? "interface" : "class"} ${this.type.name}${e ? ` : ${e.map((e => e?.type.name)).join(", ")}` : ""}\n{\n    ${this.fields.join("\n    ")}\n    ${this.methods.join("\n    ")}\n}`;
  }
  static enumerate(e) {
    const t = new NativeCallback((function(t, s) {
      e(new Il2Cpp.Class(t));
    }), "void", [ "pointer", "pointer" ]);
    return Il2Cpp.Api._classForEach(t, NULL);
  }
};

e([ t.cache ], a.prototype, "actualInstanceSize", null), e([ t.cache ], a.prototype, "arrayClass", null), 
e([ t.cache ], a.prototype, "arrayElementSize", null), e([ t.cache ], a.prototype, "assemblyName", null), 
e([ t.cache ], a.prototype, "declaringClass", null), e([ t.cache ], a.prototype, "baseType", null), 
e([ t.cache ], a.prototype, "elementClass", null), e([ t.cache ], a.prototype, "fields", null), 
e([ t.cache ], a.prototype, "flags", null), e([ t.cache ], a.prototype, "genericParameterCount", null), 
e([ t.cache ], a.prototype, "hasReferences", null), e([ t.cache ], a.prototype, "hasStaticConstructor", null), 
e([ t.cache ], a.prototype, "image", null), e([ t.cache ], a.prototype, "instanceSize", null), 
e([ t.cache ], a.prototype, "isAbstract", null), e([ t.cache ], a.prototype, "isBlittable", null), 
e([ t.cache ], a.prototype, "isEnum", null), e([ t.cache ], a.prototype, "isGeneric", null), 
e([ t.cache ], a.prototype, "isInflated", null), e([ t.cache ], a.prototype, "isInterface", null), 
e([ t.cache ], a.prototype, "isValueType", null), e([ t.cache ], a.prototype, "interfaces", null), 
e([ t.cache ], a.prototype, "methods", null), e([ t.cache ], a.prototype, "name", null), 
e([ t.cache ], a.prototype, "namespace", null), e([ t.cache ], a.prototype, "nestedClasses", null), 
e([ t.cache ], a.prototype, "parent", null), e([ t.cache ], a.prototype, "rank", null), 
e([ t.cache ], a.prototype, "staticFieldsData", null), e([ t.cache ], a.prototype, "valueSize", null), 
e([ t.cache ], a.prototype, "type", null), e([ (0, r.levenshtein)("fields") ], a.prototype, "field", null), 
e([ (0, r.levenshtein)("methods") ], a.prototype, "method", null), e([ (0, r.levenshtein)("nestedClasses") ], a.prototype, "nested", null), 
a = e([ r.cacheInstances ], a), Il2Cpp.Class = a;

},{"../../utils/console":542,"../../utils/native-struct":543,"../../utils/utils":545,"decorator-cache-getter":513}],523:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, s, r) {
  var l, n = arguments.length, o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, s) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, s, r); else for (var i = e.length - 1; i >= 0; i--) (l = e[i]) && (o = (n < 3 ? l(o) : n > 3 ? l(t, s, o) : l(t, s)) || o);
  return n > 3 && o && Object.defineProperty(t, s, o), o;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), s = require("../../utils/utils");

class r {
  constructor() {}
  static get assemblies() {
    const e = Memory.alloc(Process.pointerSize), t = Il2Cpp.Api._domainGetAssemblies(this, e), s = e.readInt(), r = new Array(s);
    for (let e = 0; e < s; e++) r[e] = new Il2Cpp.Assembly(t.add(e * Process.pointerSize).readPointer());
    if (0 == s) for (const e of this.object.method("GetAssemblies").overload().invoke()) {
      const t = e.method("GetSimpleName").invoke().content;
      null != t && r.push(this.assembly(t));
    }
    return r;
  }
  static get handle() {
    return Il2Cpp.Api._domainGet();
  }
  static get object() {
    return Il2Cpp.Image.corlib.class("System.AppDomain").method("get_CurrentDomain").invoke();
  }
  static assembly(e) {
    return this.tryAssembly(e);
  }
  static attach() {
    return new Il2Cpp.Thread(Il2Cpp.Api._threadAttach(this));
  }
  static tryAssembly(e) {
    const t = Il2Cpp.Api._domainAssemblyOpen(this, Memory.allocUtf8String(e));
    return t.isNull() ? null : new Il2Cpp.Assembly(t);
  }
}

e([ t.cache ], r, "assemblies", null), e([ t.cache ], r, "handle", null), e([ t.cache ], r, "object", null), 
e([ (0, s.levenshtein)("assemblies") ], r, "assembly", null), Il2Cpp.Domain = r;

},{"../../utils/utils":545,"decorator-cache-getter":513}],524:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, i, r) {
  var l, s = arguments.length, a = s < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, r); else for (var p = e.length - 1; p >= 0; p--) (l = e[p]) && (a = (s < 3 ? l(a) : s > 3 ? l(t, i, a) : l(t, i)) || a);
  return s > 3 && a && Object.defineProperty(t, i, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), i = require("../../utils/console"), r = require("../../utils/native-struct"), l = require("../utils");

class s extends r.NonNullNativeStruct {
  get class() {
    return new Il2Cpp.Class(Il2Cpp.Api._fieldGetClass(this));
  }
  get flags() {
    return Il2Cpp.Api._fieldGetFlags(this);
  }
  get isLiteral() {
    return !!Il2Cpp.Api._fieldIsLiteral(this);
  }
  get isStatic() {
    return !!Il2Cpp.Api._fieldIsStatic(this);
  }
  get isThreadStatic() {
    return !!Il2Cpp.Api._fieldIsThreadStatic(this);
  }
  get modifier() {
    return Il2Cpp.Api._fieldGetModifier(this).readUtf8String();
  }
  get name() {
    return Il2Cpp.Api._fieldGetName(this).readUtf8String();
  }
  get offset() {
    return Il2Cpp.Api._fieldGetOffset(this);
  }
  get type() {
    return new Il2Cpp.Type(Il2Cpp.Api._fieldGetType(this));
  }
  get value() {
    const e = Memory.alloc(Process.pointerSize);
    return Il2Cpp.Api._fieldGetStaticValue(this.handle, e), (0, l.read)(e, this.type);
  }
  set value(e) {
    (this.isThreadStatic || this.isLiteral) && (0, i.raise)(`cannot modify the value of field ${this.name}: is thread static or literal`);
    const t = Memory.alloc(Process.pointerSize);
    (0, l.write)(t, e, this.type), Il2Cpp.Api._fieldSetStaticValue(this.handle, t);
  }
  toString() {
    return `${this.isThreadStatic ? "[ThreadStatic] " : ""}${this.isStatic ? "static " : ""}${this.type.name} ${this.name}${this.isLiteral ? ` = ${this.type.class.isEnum ? (0, 
    l.read)(this.value.handle, this.type.class.baseType) : this.value}` : ""};${this.isThreadStatic || this.isLiteral ? "" : ` // 0x${this.offset.toString(16)}`}`;
  }
  withHolder(e) {
    let t = e.handle.add(this.offset);
    return e instanceof Il2Cpp.ValueType && (t = t.sub(Il2Cpp.Runtime.objectHeaderSize)), 
    new Proxy(this, {
      get: (e, i) => "value" == i ? (0, l.read)(t, e.type) : Reflect.get(e, i),
      set: (e, i, r) => "value" == i ? ((0, l.write)(t, r, e.type), !0) : Reflect.set(e, i, r)
    });
  }
}

e([ t.cache ], s.prototype, "class", null), e([ t.cache ], s.prototype, "flags", null), 
e([ t.cache ], s.prototype, "isLiteral", null), e([ t.cache ], s.prototype, "isStatic", null), 
e([ t.cache ], s.prototype, "isThreadStatic", null), e([ t.cache ], s.prototype, "name", null), 
e([ t.cache ], s.prototype, "offset", null), e([ t.cache ], s.prototype, "type", null), 
Reflect.set(Il2Cpp, "Field", s);

},{"../../utils/console":542,"../../utils/native-struct":543,"../utils":540,"decorator-cache-getter":513}],525:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class e {
  handle;
  constructor(e) {
    this.handle = e;
  }
  get target() {
    const e = Il2Cpp.Api._gcHandleGetTarget(this.handle);
    return e.isNull() ? null : new Il2Cpp.Object(e);
  }
  free() {
    return Il2Cpp.Api._gcHandleFree(this.handle);
  }
}

Il2Cpp.GC.Handle = e;

},{}],526:[function(require,module,exports){
"use strict";

var e = this && this.__importDefault || function(e) {
  return e && e.__esModule ? e : {
    default: e
  };
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = e(require("versioning"));

class i {
  constructor() {}
  static get heapSize() {
    return Il2Cpp.Api._gcGetHeapSize();
  }
  static get isEnabled() {
    return !Il2Cpp.Api._gcIsDisabled();
  }
  static get isIncremental() {
    return !!Il2Cpp.Api._gcIsIncremental();
  }
  static get maxTimeSlice() {
    return Il2Cpp.Api._gcGetMaxTimeSlice();
  }
  static get usedHeapSize() {
    return Il2Cpp.Api._gcGetUsedSize();
  }
  static set isEnabled(e) {
    e ? Il2Cpp.Api._gcEnable() : Il2Cpp.Api._gcDisable();
  }
  static set maxTimeSlice(e) {
    Il2Cpp.Api._gcSetMaxTimeSlice(e);
  }
  static choose(e) {
    const i = [], l = new NativeCallback(((e, t, l) => {
      for (let l = 0; l < t; l++) i.push(new Il2Cpp.Object(e.add(l * Process.pointerSize).readPointer()));
    }), "void", [ "pointer", "int", "pointer" ]);
    if (t.default.gte(Il2Cpp.unityVersion, "2021.2.0")) {
      const t = new NativeCallback(((e, t) => e.isNull() || 0 != t.compare(0) ? Il2Cpp.alloc(t) : (Il2Cpp.free(e), 
      NULL)), "pointer", [ "pointer", "size_t", "pointer" ]), i = Il2Cpp.Api._livenessAllocateStruct(e.handle, 0, l, NULL, t);
      Il2Cpp.Api._livenessCalculationFromStatics(i), Il2Cpp.Api._livenessFinalize(i), 
      Il2Cpp.Api._livenessFreeStruct(i);
    } else {
      const t = new NativeCallback((() => {}), "void", []), i = Il2Cpp.Api._livenessCalculationBegin(e.handle, 0, l, NULL, t, t);
      Il2Cpp.Api._livenessCalculationFromStatics(i), Il2Cpp.Api._livenessCalculationEnd(i);
    }
    return i;
  }
  static collect(e) {
    Il2Cpp.Api._gcCollect(e < 0 ? 0 : e > 2 ? 2 : e);
  }
  static collectALittle() {
    Il2Cpp.Api._gcCollectALittle();
  }
  static startWorld() {
    return Il2Cpp.Api._gcStartWorld();
  }
  static startIncrementalCollection() {
    return Il2Cpp.Api._gcStartIncrementalCollection();
  }
  static stopWorld() {
    return Il2Cpp.Api._gcStopWorld();
  }
}

Reflect.set(Il2Cpp, "GC", i);

},{"versioning":548}],527:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, s, l) {
  var r, a = arguments.length, n = a < 3 ? t : null === l ? l = Object.getOwnPropertyDescriptor(t, s) : l;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(e, t, s, l); else for (var p = e.length - 1; p >= 0; p--) (r = e[p]) && (n = (a < 3 ? r(n) : a > 3 ? r(t, s, n) : r(t, s)) || n);
  return a > 3 && n && Object.defineProperty(t, s, n), n;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), s = require("../../utils/native-struct"), l = require("../../utils/utils");

let r = class extends s.NonNullNativeStruct {
  static get corlib() {
    return new Il2Cpp.Image(Il2Cpp.Api._getCorlib());
  }
  get assembly() {
    return new Il2Cpp.Assembly(Il2Cpp.Api._imageGetAssembly(this));
  }
  get classCount() {
    return Il2Cpp.Api._imageGetClassCount(this);
  }
  get classes() {
    if (Il2Cpp.unityVersionIsBelow201830) {
      const e = this.assembly.object.method("GetTypes").invoke(!1);
      return Array.from(e).map((e => new Il2Cpp.Class(Il2Cpp.Api._classFromSystemType(e))));
    }
    return Array.from(Array(this.classCount), ((e, t) => new Il2Cpp.Class(Il2Cpp.Api._imageGetClass(this, t))));
  }
  get name() {
    return Il2Cpp.Api._imageGetName(this).readUtf8String();
  }
  class(e) {
    return this.tryClass(e);
  }
  tryClass(e) {
    const t = e.lastIndexOf("."), s = Memory.allocUtf8String(-1 == t ? "" : e.slice(0, t)), l = Memory.allocUtf8String(e.slice(t + 1)), r = Il2Cpp.Api._classFromName(this, s, l);
    return r.isNull() ? null : new Il2Cpp.Class(r);
  }
};

e([ t.cache ], r.prototype, "assembly", null), e([ t.cache ], r.prototype, "classCount", null), 
e([ t.cache ], r.prototype, "classes", null), e([ t.cache ], r.prototype, "name", null), 
e([ (0, l.levenshtein)("classes", (e => e.namespace ? `${e.namespace}.${e.name}` : e.name)) ], r.prototype, "class", null), 
e([ t.cache ], r, "corlib", null), r = e([ l.cacheInstances ], r), Il2Cpp.Image = r;

},{"../../utils/native-struct":543,"../../utils/utils":545,"decorator-cache-getter":513}],528:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, o) {
  var s, p = arguments.length, c = p < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, r) : o;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, r, o); else for (var l = e.length - 1; l >= 0; l--) (s = e[l]) && (c = (p < 3 ? s(c) : p > 3 ? s(t, r, c) : s(t, r)) || c);
  return p > 3 && c && Object.defineProperty(t, r, c), c;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), r = require("../../utils/native-struct"), o = require("../../utils/utils");

class s extends r.NonNullNativeStruct {
  static capture() {
    return new Il2Cpp.MemorySnapshot;
  }
  constructor(e = Il2Cpp.Api._memorySnapshotCapture()) {
    super(e);
  }
  get classes() {
    return Array.from((0, o.nativeIterator)(this, Il2Cpp.Api._memorySnapshotGetClasses, Il2Cpp.Class));
  }
  get objects() {
    const e = [], [t, r] = Il2Cpp.Api._memorySnapshotGetGCHandles(this);
    for (let o = 0; o < t; o++) e.push(new Il2Cpp.Object(r.add(o * Process.pointerSize).readPointer()));
    return e;
  }
  free() {
    Il2Cpp.Api._memorySnapshotFree(this);
  }
}

e([ t.cache ], s.prototype, "classes", null), e([ t.cache ], s.prototype, "objects", null), 
Il2Cpp.MemorySnapshot = s;

},{"../../utils/native-struct":543,"../../utils/utils":545,"decorator-cache-getter":513}],529:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, a) {
  var i, n = arguments.length, s = n < 3 ? t : null === a ? a = Object.getOwnPropertyDescriptor(t, r) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, a); else for (var o = e.length - 1; o >= 0; o--) (i = e[o]) && (s = (n < 3 ? i(s) : n > 3 ? i(t, r, s) : i(t, r)) || s);
  return n > 3 && s && Object.defineProperty(t, r, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), r = require("../../utils/console"), a = require("../../utils/native-struct"), i = require("../../utils/utils"), n = require("../utils");

class s extends a.NonNullNativeStruct {
  get class() {
    return new Il2Cpp.Class(Il2Cpp.Api._methodGetClass(this));
  }
  get flags() {
    return Il2Cpp.Api._methodGetFlags(this, NULL);
  }
  get implementationFlags() {
    const e = Memory.alloc(Process.pointerSize);
    return Il2Cpp.Api._methodGetFlags(this, e), e.readU32();
  }
  get fridaSignature() {
    const e = [];
    for (const t of this.parameters) e.push(t.type.fridaAlias);
    return this.isStatic && !Il2Cpp.unityVersionIsBelow201830 || e.unshift("pointer"), 
    this.isInflated && e.push("pointer"), e;
  }
  get genericParameterCount() {
    return this.isGeneric ? this.object.method("GetGenericArguments").invoke().length : 0;
  }
  get isExternal() {
    return !!Il2Cpp.Api._methodIsExternal(this);
  }
  get isGeneric() {
    return !!Il2Cpp.Api._methodIsGeneric(this);
  }
  get isInflated() {
    return !!Il2Cpp.Api._methodIsInflated(this);
  }
  get isStatic() {
    return !Il2Cpp.Api._methodIsInstance(this);
  }
  get isSynchronized() {
    return !!Il2Cpp.Api._methodIsSynchronized(this);
  }
  get modifier() {
    return Il2Cpp.Api._methodGetModifier(this).readUtf8String();
  }
  get name() {
    return Il2Cpp.Api._methodGetName(this).readUtf8String();
  }
  get nativeFunction() {
    return new NativeFunction(this.virtualAddress, this.returnType.fridaAlias, this.fridaSignature);
  }
  get object() {
    return new Il2Cpp.Object(Il2Cpp.Api._methodGetObject(this, NULL));
  }
  get parameterCount() {
    return Il2Cpp.Api._methodGetParameterCount(this);
  }
  get parameters() {
    return Array.from(Array(this.parameterCount), ((e, t) => {
      const r = Il2Cpp.Api._methodGetParameterName(this, t).readUtf8String(), a = Il2Cpp.Api._methodGetParameterType(this, t);
      return new Il2Cpp.Parameter(r, t, new Il2Cpp.Type(a));
    }));
  }
  get relativeVirtualAddress() {
    return this.virtualAddress.sub(Il2Cpp.module.base);
  }
  get returnType() {
    return new Il2Cpp.Type(Il2Cpp.Api._methodGetReturnType(this));
  }
  get virtualAddress() {
    return Il2Cpp.Api._methodGetPointer(this);
  }
  set implementation(e) {
    const t = +!this.isStatic | +Il2Cpp.unityVersionIsBelow201830, a = (...r) => {
      const a = this.parameters.map(((e, a) => (0, n.fromFridaValue)(r[a + t], e.type)));
      return (0, n.toFridaValue)(e.call(this.isStatic ? this.class : new Il2Cpp.Object(r[0]), ...a));
    };
    try {
      Interceptor.replace(this.virtualAddress, new NativeCallback(a, this.returnType.fridaAlias, this.fridaSignature));
    } catch (e) {
      switch (e.message) {
       case "access violation accessing 0x0":
        (0, r.raise)(`cannot implement method ${this.name}: it has a NULL virtual address`);

       case `unable to intercept function at ${this.virtualAddress}; please file a bug`:
        (0, r.warn)(`cannot implement method ${this.name}: it may be a thunk`);
        break;

       case "already replaced this function":
        (0, r.warn)(`cannot implement method ${this.name}: already replaced by a thunk`);
        break;

       default:
        throw e;
      }
    }
  }
  inflate(...e) {
    this.isGeneric || (0, r.raise)(`cannot inflate method ${this.name}: it has no generic parameters`), 
    this.genericParameterCount != e.length && (0, r.raise)(`cannot inflate method ${this.name}: it needs ${this.genericParameterCount} generic parameter(s), not ${e.length}`);
    const t = e.map((e => e.type.object)), a = Il2Cpp.Array.from(Il2Cpp.Image.corlib.class("System.Type"), t), i = this.object.method("MakeGenericMethod", 1).invoke(a);
    return new Il2Cpp.Method(Il2Cpp.Api._methodGetFromReflection(i));
  }
  invoke(...e) {
    return this.isStatic || (0, r.raise)(`cannot invoke a non-static method ${this.name}: must be invoked throught a Il2Cpp.Object, not a Il2Cpp.Class`), 
    this.invokeRaw(NULL, ...e);
  }
  invokeRaw(e, ...t) {
    const a = t.map(n.toFridaValue);
    this.isStatic && !Il2Cpp.unityVersionIsBelow201830 || a.unshift(e), this.isInflated && a.push(this.handle);
    try {
      const e = this.nativeFunction(...a);
      return (0, n.fromFridaValue)(e, this.returnType);
    } catch (e) {
      switch (null == e && (0, r.raise)("an unexpected native function exception occurred, this is due to parameter types mismatch"), 
      e.message) {
       case "bad argument count":
        (0, r.raise)(`cannot invoke method ${this.name}: it needs ${this.parameterCount} parameter(s), not ${t.length}`);

       case "expected a pointer":
       case "expected number":
       case "expected array with fields":
        (0, r.raise)(`cannot invoke method ${this.name}: parameter types mismatch`);
      }
      throw e;
    }
  }
  overload(...e) {
    const t = this.tryOverload(...e);
    if (null != t) return t;
    (0, r.raise)(`cannot find overloaded method ${this.name}(${e})`);
  }
  parameter(e) {
    return this.tryParameter(e);
  }
  revert() {
    Interceptor.revert(this.virtualAddress), Interceptor.flush();
  }
  tryOverload(...e) {
    return this.class.methods.find((t => t.name == this.name && t.parameterCount == e.length && t.parameters.every(((t, r) => t.type.name == e[r]))));
  }
  tryParameter(e) {
    return this.parameters.find((t => t.name == e));
  }
  toString() {
    return `${this.isStatic ? "static " : ""}${this.returnType.name} ${this.name}(${this.parameters.join(", ")});${this.virtualAddress.isNull() ? "" : ` // 0x${this.relativeVirtualAddress.toString(16).padStart(8, "0")}`}`;
  }
  withHolder(e) {
    return new Proxy(this, {
      get(t, r) {
        switch (r) {
         case "invoke":
          return t.invokeRaw.bind(t, e.handle);

         case "inflate":
         case "overload":
         case "tryOverload":
          return function(...a) {
            return t[r](...a)?.withHolder(e);
          };
        }
        return Reflect.get(t, r);
      }
    });
  }
}

e([ t.cache ], s.prototype, "class", null), e([ t.cache ], s.prototype, "flags", null), 
e([ t.cache ], s.prototype, "implementationFlags", null), e([ t.cache ], s.prototype, "fridaSignature", null), 
e([ t.cache ], s.prototype, "genericParameterCount", null), e([ t.cache ], s.prototype, "isExternal", null), 
e([ t.cache ], s.prototype, "isGeneric", null), e([ t.cache ], s.prototype, "isInflated", null), 
e([ t.cache ], s.prototype, "isStatic", null), e([ t.cache ], s.prototype, "isSynchronized", null), 
e([ t.cache ], s.prototype, "name", null), e([ t.cache ], s.prototype, "nativeFunction", null), 
e([ t.cache ], s.prototype, "object", null), e([ t.cache ], s.prototype, "parameterCount", null), 
e([ t.cache ], s.prototype, "parameters", null), e([ t.cache ], s.prototype, "relativeVirtualAddress", null), 
e([ t.cache ], s.prototype, "returnType", null), e([ t.cache ], s.prototype, "virtualAddress", null), 
e([ (0, i.levenshtein)("parameters") ], s.prototype, "parameter", null), Reflect.set(Il2Cpp, "Method", s);

},{"../../utils/console":542,"../../utils/native-struct":543,"../../utils/utils":545,"../utils":540,"decorator-cache-getter":513}],530:[function(require,module,exports){
"use strict";

var t = this && this.__decorate || function(t, e, r, i) {
  var l, p = arguments.length, s = p < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, r, i); else for (var n = t.length - 1; n >= 0; n--) (l = t[n]) && (s = (p < 3 ? l(s) : p > 3 ? l(e, r, s) : l(e, r)) || s);
  return p > 3 && s && Object.defineProperty(e, r, s), s;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter"), r = require("../../utils/native-struct");

class i extends r.NativeStruct {
  get class() {
    return new Il2Cpp.Class(Il2Cpp.Api._objectGetClass(this));
  }
  get size() {
    return Il2Cpp.Api._objectGetSize(this);
  }
  enter() {
    return Il2Cpp.Api._monitorEnter(this);
  }
  exit() {
    return Il2Cpp.Api._monitorExit(this);
  }
  field(t) {
    return this.class.field(t).withHolder(this);
  }
  method(t, e = -1) {
    return this.class.method(t, e).withHolder(this);
  }
  pulse() {
    return Il2Cpp.Api._monitorPulse(this);
  }
  pulseAll() {
    return Il2Cpp.Api._monitorPulseAll(this);
  }
  ref(t) {
    return new Il2Cpp.GC.Handle(Il2Cpp.Api._gcHandleNew(this, +t));
  }
  virtualMethod(t) {
    return new Il2Cpp.Method(Il2Cpp.Api._objectGetVirtualMethod(this, t)).withHolder(this);
  }
  tryEnter(t) {
    return !!Il2Cpp.Api._monitorTryEnter(this, t);
  }
  tryField(t) {
    return this.class.tryField(t)?.withHolder(this);
  }
  tryMethod(t, e = -1) {
    return this.class.tryMethod(t, e)?.withHolder(this);
  }
  tryWait(t) {
    return !!Il2Cpp.Api._monitorTryWait(this, t);
  }
  toString() {
    return this.isNull() ? "null" : this.method("ToString").invoke().content ?? "null";
  }
  unbox() {
    return new Il2Cpp.ValueType(Il2Cpp.Api._objectUnbox(this), this.class.type);
  }
  wait() {
    return Il2Cpp.Api._monitorWait(this);
  }
  weakRef(t) {
    return new Il2Cpp.GC.Handle(Il2Cpp.Api._gcHandleNewWeakRef(this, +t));
  }
}

t([ e.cache ], i.prototype, "class", null), t([ e.cache ], i.prototype, "size", null), 
Il2Cpp.Object = i;

},{"../../utils/native-struct":543,"decorator-cache-getter":513}],531:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

class t {
  name;
  position;
  type;
  constructor(t, e, s) {
    this.name = t, this.position = e, this.type = s;
  }
  toString() {
    return `${this.type.name} ${this.name}`;
  }
}

Il2Cpp.Parameter = t;

},{}],532:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../utils"), e = require("../../utils/native-struct");

class r extends e.NativeStruct {
  type;
  constructor(t, e) {
    super(t), this.type = e;
  }
  get(e) {
    return (0, t.read)(this.handle.add(e * this.type.class.arrayElementSize), this.type);
  }
  read(t, e = 0) {
    const r = new Array(t);
    for (let s = 0; s < t; s++) r[s] = this.get(s + e);
    return r;
  }
  set(e, r) {
    (0, t.write)(this.handle.add(e * this.type.class.arrayElementSize), r, this.type);
  }
  toString() {
    return this.handle.toString();
  }
  write(t, e = 0) {
    for (let r = 0; r < t.length; r++) this.set(r + e, t[r]);
  }
}

Il2Cpp.Pointer = r;

},{"../../utils/native-struct":543,"../utils":540}],533:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("../utils"), t = require("../../utils/native-struct"), r = require("../../utils/console");

class n extends t.NativeStruct {
  type;
  constructor(e, t) {
    super(e), this.type = t;
  }
  get value() {
    return (0, e.read)(this.handle, this.type);
  }
  set value(t) {
    (0, e.write)(this.handle, t, this.type);
  }
  toString() {
    return this.isNull() ? "null" : `->${this.value}`;
  }
  static to(e, t) {
    const n = Memory.alloc(Process.pointerSize);
    switch (typeof e) {
     case "boolean":
      return new Il2Cpp.Reference(n.writeS8(+e), Il2Cpp.Image.corlib.class("System.Boolean").type);

     case "number":
      switch (t?.typeEnum) {
       case 5:
        return new Il2Cpp.Reference(n.writeU8(e), t);

       case 4:
        return new Il2Cpp.Reference(n.writeS8(e), t);

       case 3:
       case 7:
        return new Il2Cpp.Reference(n.writeU16(e), t);

       case 6:
        return new Il2Cpp.Reference(n.writeS16(e), t);

       case 9:
        return new Il2Cpp.Reference(n.writeU32(e), t);

       case 8:
        return new Il2Cpp.Reference(n.writeS32(e), t);

       case 11:
        return new Il2Cpp.Reference(n.writeU64(e), t);

       case 10:
        return new Il2Cpp.Reference(n.writeS64(e), t);

       case 12:
        return new Il2Cpp.Reference(n.writeFloat(e), t);

       case 13:
        return new Il2Cpp.Reference(n.writeDouble(e), t);
      }

     case "object":
      if (e instanceof Il2Cpp.ValueType || e instanceof Il2Cpp.Pointer) return new Il2Cpp.Reference(n.writePointer(e), e.type);
      if (e instanceof Il2Cpp.Object) return new Il2Cpp.Reference(n.writePointer(e), e.class.type);
      if (e instanceof Il2Cpp.String || e instanceof Il2Cpp.Array) return new Il2Cpp.Reference(n.writePointer(e), e.object.class.type);
      if (e instanceof NativePointer) switch (t?.typeEnum) {
       case 25:
       case 24:
        return new Il2Cpp.Reference(n.writePointer(e), t);
      } else {
        if (e instanceof Int64) return new Il2Cpp.Reference(n.writeS64(e), Il2Cpp.Image.corlib.class("System.Int64").type);
        if (e instanceof UInt64) return new Il2Cpp.Reference(n.writeU64(e), Il2Cpp.Image.corlib.class("System.UInt64").type);
      }

     default:
      (0, r.raise)(`don't know how to create a reference to ${e} using type ${t?.name}`);
    }
  }
}

Il2Cpp.Reference = n;

},{"../../utils/console":542,"../../utils/native-struct":543,"../utils":540}],534:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../utils/native-struct");

class e extends t.NativeStruct {
  get content() {
    return Il2Cpp.Api._stringChars(this).readUtf16String(this.length);
  }
  set content(t) {
    Il2Cpp.Api._stringChars(this).writeUtf16String(t ?? ""), Il2Cpp.Api._stringSetLength(this, t?.length ?? 0);
  }
  get length() {
    return Il2Cpp.Api._stringLength(this);
  }
  get object() {
    return new Il2Cpp.Object(this);
  }
  toString() {
    return this.isNull() ? "null" : `"${this.content}"`;
  }
  static from(t) {
    return new Il2Cpp.String(Il2Cpp.Api._stringNew(Memory.allocUtf8String(t || "")));
  }
}

Il2Cpp.String = e;

},{"../../utils/native-struct":543}],535:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";

var t = this && this.__decorate || function(t, e, r, n) {
  var i, o = arguments.length, a = o < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e, r, n); else for (var c = t.length - 1; c >= 0; c--) (i = t[c]) && (a = (o < 3 ? i(a) : o > 3 ? i(e, r, a) : i(e, r)) || a);
  return o > 3 && a && Object.defineProperty(e, r, a), a;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const e = require("decorator-cache-getter"), r = require("../../utils/console"), n = require("../../utils/native-struct");

class i extends n.NativeStruct {
  static get idOffset() {
    const t = ptr(Il2Cpp.currentThread.internal.field("thread_id").value.toString()), e = Process.getCurrentThreadId();
    for (let r = 0; r < 1024; r++) {
      if (t.add(r).readS32() == e) return r;
    }
    (0, r.raise)("couldn't determine the offset for a native thread id value");
  }
  get id() {
    return ptr(this.internal.field("thread_id").value.toString()).add(Il2Cpp.Thread.idOffset).readS32();
  }
  get internal() {
    const t = this.object.tryField("internal_thread")?.value;
    return t || this.object;
  }
  get isFinalizer() {
    return !Il2Cpp.Api._threadIsVm(this);
  }
  get object() {
    return new Il2Cpp.Object(this);
  }
  get staticData() {
    return this.internal.field("static_data").value;
  }
  get synchronizationContext() {
    const t = this.object.tryMethod("GetMutableExecutionContext") || this.object.method("get_ExecutionContext");
    let e = t.invoke().tryMethod("get_SynchronizationContext")?.invoke();
    if (null == e) {
      const t = Il2Cpp.Image.corlib.class("System.Threading.SynchronizationContext");
      for (let r = 0; r < 16; r++) try {
        const n = new Il2Cpp.Object(this.staticData.add(Process.pointerSize * r).readPointer().readPointer());
        if (n.class.isSubclassOf(t, !1)) {
          e = n;
          break;
        }
      } catch (t) {}
    }
    return null == e && (0, r.raise)("couldn't retrieve the SynchronizationContext for this thread."), 
    e;
  }
  detach() {
    return Il2Cpp.Api._threadDetach(this);
  }
  schedule(t, e = 0) {
    const r = this.id, n = Il2Cpp.Image.corlib.class("Mono.Runtime").method("GetDisplayName"), i = Il2Cpp.Image.corlib.class("System.Threading.SendOrPostCallback").alloc();
    i.method(".ctor").invoke(NULL, n.handle);
    const o = this.synchronizationContext.method("Post");
    return new Promise((a => {
      const c = Interceptor.attach(n.virtualAddress, (function() {
        if (this.threadId == r) {
          c.detach();
          const e = t();
          setImmediate((() => a(e)));
        }
      }));
      setTimeout((() => o.invoke(i, NULL)), e);
    }));
  }
}

t([ e.cache ], i.prototype, "internal", null), t([ e.cache ], i.prototype, "object", null), 
t([ e.cache ], i.prototype, "staticData", null), t([ e.cache ], i.prototype, "synchronizationContext", null), 
t([ e.cache ], i, "idOffset", null), Il2Cpp.Thread = i;

}).call(this)}).call(this,require("timers").setImmediate)

},{"../../utils/console":542,"../../utils/native-struct":543,"decorator-cache-getter":513,"timers":547}],536:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

},{}],537:[function(require,module,exports){
"use strict";

var e = this && this.__decorate || function(e, t, r, c) {
  var n, s = arguments.length, i = s < 3 ? t : null === c ? c = Object.getOwnPropertyDescriptor(t, r) : c;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, c); else for (var a = e.length - 1; a >= 0; a--) (n = e[a]) && (i = (s < 3 ? n(i) : s > 3 ? n(t, r, i) : n(t, r)) || i);
  return s > 3 && i && Object.defineProperty(t, r, i), i;
};

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("decorator-cache-getter"), r = require("../../utils/native-struct");

class c extends r.NonNullNativeStruct {
  get class() {
    return new Il2Cpp.Class(Il2Cpp.Api._classFromType(this));
  }
  get fridaAlias() {
    if (this.isByReference) return "pointer";
    switch (this.typeEnum) {
     case 1:
      return "void";

     case 2:
      return "bool";

     case 3:
      return "uchar";

     case 4:
      return "int8";

     case 5:
      return "uint8";

     case 6:
      return "int16";

     case 7:
      return "uint16";

     case 8:
      return "int32";

     case 9:
      return "uint32";

     case 10:
      return "int64";

     case 11:
      return "uint64";

     case 12:
      return "float";

     case 13:
      return "double";

     case 17:
      return n(this);

     case 24:
     case 25:
     case 15:
     case 14:
     case 29:
     case 20:
     default:
      return "pointer";

     case 18:
     case 28:
     case 21:
      return this.class.isValueType ? n(this) : "pointer";
    }
  }
  get isByReference() {
    return !!Il2Cpp.Api._typeIsByReference(this);
  }
  get isPrimitive() {
    return !!Il2Cpp.Api._typeIsPrimitive(this);
  }
  get name() {
    const e = Il2Cpp.Api._typeGetName(this);
    try {
      return e.readUtf8String();
    } finally {
      Il2Cpp.free(e);
    }
  }
  get object() {
    return new Il2Cpp.Object(Il2Cpp.Api._typeGetObject(this));
  }
  get typeEnum() {
    return Il2Cpp.Api._typeGetTypeEnum(this);
  }
  toString() {
    return this.name;
  }
}

function n(e) {
  const t = e.class.fields.filter((e => !e.isStatic));
  return 0 == t.length ? [ "char" ] : t.map((e => e.type.fridaAlias));
}

e([ t.cache ], c.prototype, "class", null), e([ t.cache ], c.prototype, "fridaAlias", null), 
e([ t.cache ], c.prototype, "isByReference", null), e([ t.cache ], c.prototype, "isPrimitive", null), 
e([ t.cache ], c.prototype, "name", null), e([ t.cache ], c.prototype, "object", null), 
e([ t.cache ], c.prototype, "typeEnum", null), Reflect.set(Il2Cpp, "Type", c);

},{"../../utils/native-struct":543,"decorator-cache-getter":513}],538:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const t = require("../../utils/native-struct");

class e extends t.NativeStruct {
  type;
  constructor(t, e) {
    super(t), this.type = e;
  }
  box() {
    return new Il2Cpp.Object(Il2Cpp.Api._valueBox(this.type.class, this));
  }
  field(t) {
    return this.type.class.field(t).withHolder(this);
  }
  toString() {
    return this.isNull() ? "null" : this.box().toString();
  }
}

Il2Cpp.ValueType = e;

},{"../../utils/native-struct":543}],539:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

const s = require("../utils/console"), e = require("./utils");

class t {
  targets=[];
  #s;
  #e;
  #t;
  #i;
  #r;
  #a;
  #l;
  domain() {
    return this;
  }
  assemblies(...s) {
    return this.#s = s, this;
  }
  classes(...s) {
    return this.#e = s, this;
  }
  methods(...s) {
    return this.#t = s, this;
  }
  filterAssemblies(s) {
    return this.#i = s, this;
  }
  filterClasses(s) {
    return this.#r = s, this;
  }
  filterMethods(s) {
    return this.#a = s, this;
  }
  filterParameters(s) {
    return this.#l = s, this;
  }
  and() {
    const s = s => {
      if (null != this.#l) {
        for (const e of s.parameters) if (this.#l(e)) {
          this.targets.push(s);
          break;
        }
      } else this.targets.push(s);
    }, e = e => {
      for (const t of e) s(t);
    }, t = t => {
      if (null != this.#a) for (const e of t.methods) this.#a(e) && s(e); else e(t.methods);
    }, i = s => {
      for (const e of s) t(e);
    }, r = s => {
      if (null != this.#r) for (const e of s.image.classes) this.#r(e) && t(e); else i(s.image.classes);
    }, a = s => {
      for (const e of s) r(e);
    };
    return this.#t ? e(this.#t) : this.#e ? i(this.#e) : this.#s ? a(this.#s) : (s => {
      if (null != this.#i) for (const e of s.assemblies) this.#i(e) && r(e); else a(s.assemblies);
    })(Il2Cpp.Domain), this.#s = void 0, this.#e = void 0, this.#t = void 0, this.#i = void 0, 
    this.#r = void 0, this.#a = void 0, this.#l = void 0, this;
  }
  attach(t = "full") {
    let i = 0;
    for (const r of this.targets) {
      if (r.virtualAddress.isNull()) continue;
      const a = `[2m0x${r.relativeVirtualAddress.toString(16).padStart(8, "0")}[0m`, l = `${r.class.type.name}.[1m${r.name}[0m`;
      if ("detailed" == t) {
        const t = +!r.isStatic | +Il2Cpp.unityVersionIsBelow201830, o = (...o) => {
          const m = r.isStatic ? void 0 : new Il2Cpp.Parameter("this", -1, r.class.type), n = m ? [ m ].concat(r.parameters) : r.parameters;
          (0, s.inform)(`${a} ${"│ ".repeat(i++)}┌─[35m${l}[0m(${n.map((s => `[32m${s.name}[0m = [31m${(0, 
          e.fromFridaValue)(o[s.position + t], s.type)}[0m`)).join(", ")});`);
          const h = r.nativeFunction(...o);
          return (0, s.inform)(`${a} ${"│ ".repeat(--i)}└─[33m${l}[0m${null == h ? "" : ` = [36m${(0, 
          e.fromFridaValue)(h, r.returnType)}`}[0m;`), h;
        };
        try {
          r.revert();
          const s = new NativeCallback(o, r.returnType.fridaAlias, r.fridaSignature);
          Interceptor.replace(r.virtualAddress, s);
        } catch (s) {}
      } else try {
        Interceptor.attach(r.virtualAddress, {
          onEnter: () => (0, s.inform)(`${a} ${"│ ".repeat(i++)}┌─[35m${l}[0m`),
          onLeave: () => (0, s.inform)(`${a} ${"│ ".repeat(--i)}└─[33m${l}[0m${0 == i ? "\n" : ""}`)
        });
      } catch (s) {}
    }
  }
}

Il2Cpp.Tracer = t;

},{"../utils/console":542,"./utils":540}],540:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.toFridaValue = exports.fromFridaValue = exports.write = exports.read = void 0;

const e = require("../utils/console"), r = require("../utils/native-struct");

function a(r, a) {
  switch (a.typeEnum) {
   case 2:
    return !!r.readS8();

   case 4:
    return r.readS8();

   case 5:
    return r.readU8();

   case 6:
    return r.readS16();

   case 7:
   case 3:
    return r.readU16();

   case 8:
    return r.readS32();

   case 9:
    return r.readU32();

   case 10:
    return r.readS64();

   case 11:
    return r.readU64();

   case 12:
    return r.readFloat();

   case 13:
    return r.readDouble();

   case 24:
   case 25:
    return r.readPointer();

   case 15:
    return new Il2Cpp.Pointer(r.readPointer(), a.class.baseType);

   case 17:
    return new Il2Cpp.ValueType(r, a);

   case 28:
   case 18:
    return new Il2Cpp.Object(r.readPointer());

   case 21:
    return a.class.isValueType ? new Il2Cpp.ValueType(r, a) : new Il2Cpp.Object(r.readPointer());

   case 14:
    return new Il2Cpp.String(r.readPointer());

   case 29:
   case 20:
    return new Il2Cpp.Array(r.readPointer());
  }
  (0, e.raise)(`read: "${a.name}" (${a.typeEnum}) has not been handled yet. Please file an issue!`);
}

function t(r, a, t) {
  switch (t.typeEnum) {
   case 2:
    return r.writeS8(+a);

   case 4:
    return r.writeS8(a);

   case 5:
    return r.writeU8(a);

   case 6:
    return r.writeS16(a);

   case 7:
   case 3:
    return r.writeU16(a);

   case 8:
    return r.writeS32(a);

   case 9:
    return r.writeU32(a);

   case 10:
    return r.writeS64(a);

   case 11:
    return r.writeU64(a);

   case 12:
    return r.writeFloat(a);

   case 13:
    return r.writeDouble(a);

   case 24:
   case 25:
   case 15:
   case 17:
   case 14:
   case 28:
   case 18:
   case 29:
   case 20:
   case 21:
    return a instanceof Il2Cpp.ValueType ? (Memory.copy(r, a.handle, t.class.valueSize), 
    r) : r.writePointer(a);
  }
  (0, e.raise)(`write: "${t.name}" (${t.typeEnum}) has not been handled yet. Please file an issue!`);
}

function s(e, r) {
  if (Array.isArray(e)) return i(r, e);
  if (!(e instanceof NativePointer)) return 2 == r.typeEnum ? !!e : e;
  if (r.isByReference) return new Il2Cpp.Reference(e, r);
  switch (r.typeEnum) {
   case 15:
    return new Il2Cpp.Pointer(e, r.class.baseType);

   case 14:
    return new Il2Cpp.String(e);

   case 18:
   case 21:
   case 28:
    return new Il2Cpp.Object(e);

   case 29:
   case 20:
    return new Il2Cpp.Array(e);

   default:
    return e;
  }
}

function n(e) {
  return "boolean" == typeof e ? +e : e instanceof Il2Cpp.ValueType ? c(e) : e;
}

function c(e) {
  const a = e.type.class.fields.filter((e => !e.isStatic));
  return 0 == a.length ? [ e.handle.readU8() ] : a.map((r => r.withHolder(e).value)).map((e => e instanceof Il2Cpp.ValueType ? c(e) : e instanceof r.NativeStruct ? e.handle : "boolean" == typeof e ? +e : e));
}

function i(r, a) {
  const t = Memory.alloc(r.class.valueSize);
  a = a.flat(1 / 0);
  const s = function e(r, a = 0) {
    const t = [];
    for (const s of r.class.fields) if (!s.isStatic) {
      const r = a + s.offset - Il2Cpp.Runtime.objectHeaderSize;
      17 == s.type.typeEnum || 21 == s.type.typeEnum && s.type.class.isValueType ? t.push(...e(s.type, r)) : t.push([ s.type.typeEnum, r ]);
    }
    return 0 == t.length && t.push([ 5, 0 ]), t;
  }(r);
  for (let r = 0; r < a.length; r++) {
    const n = a[r], [c, i] = s[r], u = t.add(i);
    switch (c) {
     case 2:
     case 4:
      u.writeS8(n);
      break;

     case 5:
      u.writeU8(n);
      break;

     case 6:
      u.writeS16(n);
      break;

     case 7:
     case 3:
      u.writeU16(n);
      break;

     case 8:
      u.writeS32(n);
      break;

     case 9:
      u.writeU32(n);
      break;

     case 10:
      u.writeS64(n);
      break;

     case 11:
      u.writeU64(n);
      break;

     case 12:
      u.writeFloat(n);
      break;

     case 13:
      u.writeDouble(n);
      break;

     case 24:
     case 25:
     case 15:
     case 29:
     case 20:
     case 14:
     case 28:
     case 18:
     case 21:
      u.writePointer(n);
      break;

     default:
      (0, e.warn)(`arrayToValueType: defaulting ${c} to pointer`), u.writePointer(n);
    }
  }
  return new Il2Cpp.ValueType(t, r);
}

exports.read = a, exports.write = t, exports.fromFridaValue = s, exports.toFridaValue = n;

},{"../utils/console":542,"../utils/native-struct":543}],541:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), require("./il2cpp");

},{"./il2cpp":518}],542:[function(require,module,exports){
"use strict";

function o(o) {
  throw `[0m[38;5;9mil2cpp[0m: ${o}`;
}

function e(o) {
  globalThis.console.log(`[38;5;11mil2cpp[0m: ${o}`);
}

function s(o) {
  globalThis.console.log(`[38;5;10mil2cpp[0m: ${o}`);
}

function r(o) {
  globalThis.console.log(`[38;5;12mil2cpp[0m: ${o}`);
}

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.inform = exports.ok = exports.warn = exports.raise = void 0, exports.raise = o, 
exports.warn = e, exports.ok = s, exports.inform = r;

},{}],543:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.NonNullNativeStruct = exports.NativeStruct = void 0;

class t {
  handle;
  constructor(t) {
    t instanceof NativePointer ? this.handle = t : this.handle = t.handle;
  }
  equals(t) {
    return this.handle.equals(t.handle);
  }
  isNull() {
    return this.handle.isNull();
  }
}

exports.NativeStruct = t;

class e extends t {
  constructor(t) {
    if (super(t), t.isNull()) throw new Error(`Handle for "${this.constructor.name}" cannot be NULL.`);
  }
}

exports.NonNullNativeStruct = e;

},{}],544:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";

var e = this && this.__decorate || function(e, t, r, n) {
  var o, s = arguments.length, i = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i = Reflect.decorate(e, t, r, n); else for (var a = e.length - 1; a >= 0; a--) (o = e[a]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, r, i) : o(t, r)) || i);
  return s > 3 && i && Object.defineProperty(t, r, i), i;
}, t = this && this.__importDefault || function(e) {
  return e && e.__esModule ? e : {
    default: e
  };
};

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.forModule = void 0;

const r = require("decorator-cache-getter"), n = t(require("versioning"));

class o {
  stringEncoding;
  address;
  constructor(e, t, r) {
    this.stringEncoding = r, this.address = Module.findExportByName(e, t) ?? NULL;
  }
  static get targets() {
    const [e, ...t] = function() {
      switch (Process.platform) {
       case "linux":
        try {
          return n.default.gte(Java.androidVersion, "12") ? [ null, [ "__loader_dlopen", "utf8" ] ] : [ "libdl.so", [ "dlopen", "utf8" ], [ "android_dlopen_ext", "utf8" ] ];
        } catch (e) {
          return [ null, [ "dlopen", "utf8" ] ];
        }

       case "darwin":
        return [ "libdyld.dylib", [ "dlopen", "utf8" ] ];

       case "windows":
        const e = "LoadLibrary";
        return [ "kernel32.dll", [ `${e}W`, "utf16" ], [ `${e}ExW`, "utf16" ], [ `${e}A`, "ansi" ], [ `${e}ExA`, "ansi" ] ];
      }
    }();
    return t.map((([t, r]) => new o(e, t, r))).filter((e => !e.address.isNull()));
  }
  readString(e) {
    switch (this.stringEncoding) {
     case "utf8":
      return e.readUtf8String();

     case "utf16":
      return e.readUtf16String();

     case "ansi":
      return e.readAnsiString();
    }
  }
}

function s(...e) {
  return new Promise((t => {
    for (const r of e) {
      if (null != Process.findModuleByName(r)) return void t(r);
    }
    const r = o.targets.map((n => Interceptor.attach(n.address, {
      onEnter(e) {
        this.modulePath = n.readString(e[0]) ?? "";
      },
      onLeave(n) {
        if (!n.isNull()) for (const n of e) this.modulePath.endsWith(n) && (setImmediate((() => r.forEach((e => e.detach())))), 
        t(n));
      }
    })));
  }));
}

e([ r.cache ], o, "targets", null), exports.forModule = s;

}).call(this)}).call(this,require("timers").setImmediate)

},{"decorator-cache-getter":513,"timers":547,"versioning":548}],545:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
}), exports.levenshtein = exports.cacheInstances = exports.nativeIterator = void 0;

const e = require("fastest-levenshtein"), t = require("./console");

function* n(e, t, n) {
  const s = Memory.alloc(Process.pointerSize);
  let o;
  for (;!(o = t(e, s)).isNull(); ) yield new n(o);
}

function s(e) {
  const t = new Map;
  return new Proxy(e, {
    construct(e, n) {
      const s = n[0].toUInt32();
      return t.has(s) || t.set(s, new e(n[0])), t.get(s);
    }
  });
}

function o(n, s = (e => e.name)) {
  return function(o, r, c) {
    const i = c.value;
    c.value = function(o, ...c) {
      const a = i.call(this, o, ...c);
      if (null != a) return a;
      const u = (0, e.closest)(o, this[n].map(s));
      (0, t.raise)(`couldn't find ${r} ${o} in ${this.name}${u ? `, did you mean ${u}?` : ""}`);
    };
  };
}

exports.nativeIterator = n, exports.cacheInstances = s, exports.levenshtein = o;

},{"./console":542,"fastest-levenshtein":514}],546:[function(require,module,exports){
var t, e, n = module.exports = {};

function r() {
  throw new Error("setTimeout has not been defined");
}

function o() {
  throw new Error("clearTimeout has not been defined");
}

function i(e) {
  if (t === setTimeout) return setTimeout(e, 0);
  if ((t === r || !t) && setTimeout) return t = setTimeout, setTimeout(e, 0);
  try {
    return t(e, 0);
  } catch (n) {
    try {
      return t.call(null, e, 0);
    } catch (n) {
      return t.call(this, e, 0);
    }
  }
}

function u(t) {
  if (e === clearTimeout) return clearTimeout(t);
  if ((e === o || !e) && clearTimeout) return e = clearTimeout, clearTimeout(t);
  try {
    return e(t);
  } catch (n) {
    try {
      return e.call(null, t);
    } catch (n) {
      return e.call(this, t);
    }
  }
}

!function() {
  try {
    t = "function" == typeof setTimeout ? setTimeout : r;
  } catch (e) {
    t = r;
  }
  try {
    e = "function" == typeof clearTimeout ? clearTimeout : o;
  } catch (t) {
    e = o;
  }
}();

var c, s = [], l = !1, a = -1;

function f() {
  l && c && (l = !1, c.length ? s = c.concat(s) : a = -1, s.length && h());
}

function h() {
  if (!l) {
    var t = i(f);
    l = !0;
    for (var e = s.length; e; ) {
      for (c = s, s = []; ++a < e; ) c && c[a].run();
      a = -1, e = s.length;
    }
    c = null, l = !1, u(t);
  }
}

function m(t, e) {
  this.fun = t, this.array = e;
}

function p() {}

n.nextTick = function(t) {
  var e = new Array(arguments.length - 1);
  if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
  s.push(new m(t, e)), 1 !== s.length || l || i(h);
}, m.prototype.run = function() {
  this.fun.apply(null, this.array);
}, n.title = "browser", n.browser = !0, n.env = {}, n.argv = [], n.version = "", 
n.versions = {}, n.on = p, n.addListener = p, n.once = p, n.off = p, n.removeListener = p, 
n.removeAllListeners = p, n.emit = p, n.prependListener = p, n.prependOnceListener = p, 
n.listeners = function(t) {
  return [];
}, n.binding = function(t) {
  throw new Error("process.binding is not supported");
}, n.cwd = function() {
  return "/";
}, n.chdir = function(t) {
  throw new Error("process.chdir is not supported");
}, n.umask = function() {
  return 0;
};

},{}],547:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var e = require("process/browser.js").nextTick, t = Function.prototype.apply, o = Array.prototype.slice, i = {}, n = 0;

function r(e, t) {
  this._id = e, this._clearFn = t;
}

exports.setTimeout = function() {
  return new r(t.call(setTimeout, window, arguments), clearTimeout);
}, exports.setInterval = function() {
  return new r(t.call(setInterval, window, arguments), clearInterval);
}, exports.clearTimeout = exports.clearInterval = function(e) {
  e.close();
}, r.prototype.unref = r.prototype.ref = function() {}, r.prototype.close = function() {
  this._clearFn.call(window, this._id);
}, exports.enroll = function(e, t) {
  clearTimeout(e._idleTimeoutId), e._idleTimeout = t;
}, exports.unenroll = function(e) {
  clearTimeout(e._idleTimeoutId), e._idleTimeout = -1;
}, exports._unrefActive = exports.active = function(e) {
  clearTimeout(e._idleTimeoutId);
  var t = e._idleTimeout;
  t >= 0 && (e._idleTimeoutId = setTimeout((function() {
    e._onTimeout && e._onTimeout();
  }), t));
}, exports.setImmediate = "function" == typeof setImmediate ? setImmediate : function(t) {
  var r = n++, l = !(arguments.length < 2) && o.call(arguments, 1);
  return i[r] = !0, e((function() {
    i[r] && (l ? t.apply(null, l) : t.call(null), exports.clearImmediate(r));
  })), r;
}, exports.clearImmediate = "function" == typeof clearImmediate ? clearImmediate : function(e) {
  delete i[e];
};

}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)

},{"process/browser.js":546,"timers":547}],548:[function(require,module,exports){
var t = ".", n = function(t) {
  this._version = String(t);
};

function r(n, r, i) {
  if ((n = String(n)) === (r = String(r))) return 0;
  for (var e = n.split(t), o = r.split(t), u = Math[i ? "max" : "min"](e.length, o.length), s = 0; s < u; s++) {
    if (e[s] = void 0 === e[s] ? 0 : parseInt(e[s], 10), o[s] = void 0 === o[s] ? 0 : parseInt(o[s], 10), 
    e[s] > o[s]) return 1;
    if (e[s] < o[s]) return -1;
  }
  return 0;
}

n.compare = function(t, n) {
  return r(t, n, !0);
}, n.eq = function(t, n, i) {
  return 0 === r(t, n, i);
}, n.gt = function(t, n) {
  return r(t, n, !0) > 0;
}, n.gte = function(t, n) {
  return r(t, n, !0) >= 0;
}, n.lt = function(t, n) {
  return r(t, n, !0) < 0;
}, n.lte = function(t, n) {
  return r(t, n, !0) <= 0;
}, n.prototype = {
  eq: function(t) {
    return n.eq(this._version, t);
  },
  gt: function(t) {
    return n.gt(this._version, t);
  },
  gte: function(t) {
    return n.gte(this._version, t);
  },
  lt: function(t) {
    return n.lt(this._version, t);
  },
  lte: function(t) {
    return n.lte(this._version, t);
  },
  valueOf: function() {
    return parseFloat(this._version.split(t).slice(0, 2).join(t), 10);
  },
  toString: function(n) {
    return void 0 === n ? this._version : this._version.split(t).slice(0, n).join(t);
  }
}, module.exports = n;

},{}]},{},[477])
<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
=======
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
>>>>>>> d1ef37d66ae7c7bbfba31d3dd6147d99681b2209
